// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_guild_events.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dota_shared_enums.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[24]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(int index);
class CMsgAccountGuildEventData;
struct CMsgAccountGuildEventDataDefaultTypeInternal;
extern CMsgAccountGuildEventDataDefaultTypeInternal _CMsgAccountGuildEventData_default_instance_;
class CMsgClientToGCClaimLeaderboardRewards;
struct CMsgClientToGCClaimLeaderboardRewardsDefaultTypeInternal;
extern CMsgClientToGCClaimLeaderboardRewardsDefaultTypeInternal _CMsgClientToGCClaimLeaderboardRewards_default_instance_;
class CMsgClientToGCClaimLeaderboardRewardsResponse;
struct CMsgClientToGCClaimLeaderboardRewardsResponseDefaultTypeInternal;
extern CMsgClientToGCClaimLeaderboardRewardsResponseDefaultTypeInternal _CMsgClientToGCClaimLeaderboardRewardsResponse_default_instance_;
class CMsgClientToGCRequestAccountGuildEventData;
struct CMsgClientToGCRequestAccountGuildEventDataDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildEventDataDefaultTypeInternal _CMsgClientToGCRequestAccountGuildEventData_default_instance_;
class CMsgClientToGCRequestAccountGuildEventDataResponse;
struct CMsgClientToGCRequestAccountGuildEventDataResponseDefaultTypeInternal;
extern CMsgClientToGCRequestAccountGuildEventDataResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildEventDataResponse_default_instance_;
class CMsgClientToGCRequestActiveGuildChallenge;
struct CMsgClientToGCRequestActiveGuildChallengeDefaultTypeInternal;
extern CMsgClientToGCRequestActiveGuildChallengeDefaultTypeInternal _CMsgClientToGCRequestActiveGuildChallenge_default_instance_;
class CMsgClientToGCRequestActiveGuildChallengeResponse;
struct CMsgClientToGCRequestActiveGuildChallengeResponseDefaultTypeInternal;
extern CMsgClientToGCRequestActiveGuildChallengeResponseDefaultTypeInternal _CMsgClientToGCRequestActiveGuildChallengeResponse_default_instance_;
class CMsgClientToGCRequestActiveGuildContracts;
struct CMsgClientToGCRequestActiveGuildContractsDefaultTypeInternal;
extern CMsgClientToGCRequestActiveGuildContractsDefaultTypeInternal _CMsgClientToGCRequestActiveGuildContracts_default_instance_;
class CMsgClientToGCRequestActiveGuildContractsResponse;
struct CMsgClientToGCRequestActiveGuildContractsResponseDefaultTypeInternal;
extern CMsgClientToGCRequestActiveGuildContractsResponseDefaultTypeInternal _CMsgClientToGCRequestActiveGuildContractsResponse_default_instance_;
class CMsgClientToGCRequestGuildEventMembers;
struct CMsgClientToGCRequestGuildEventMembersDefaultTypeInternal;
extern CMsgClientToGCRequestGuildEventMembersDefaultTypeInternal _CMsgClientToGCRequestGuildEventMembers_default_instance_;
class CMsgClientToGCRequestGuildEventMembersResponse;
struct CMsgClientToGCRequestGuildEventMembersResponseDefaultTypeInternal;
extern CMsgClientToGCRequestGuildEventMembersResponseDefaultTypeInternal _CMsgClientToGCRequestGuildEventMembersResponse_default_instance_;
class CMsgClientToGCSelectGuildContract;
struct CMsgClientToGCSelectGuildContractDefaultTypeInternal;
extern CMsgClientToGCSelectGuildContractDefaultTypeInternal _CMsgClientToGCSelectGuildContract_default_instance_;
class CMsgClientToGCSelectGuildContractResponse;
struct CMsgClientToGCSelectGuildContractResponseDefaultTypeInternal;
extern CMsgClientToGCSelectGuildContractResponseDefaultTypeInternal _CMsgClientToGCSelectGuildContractResponse_default_instance_;
class CMsgGCToClientAccountGuildEventDataUpdated;
struct CMsgGCToClientAccountGuildEventDataUpdatedDefaultTypeInternal;
extern CMsgGCToClientAccountGuildEventDataUpdatedDefaultTypeInternal _CMsgGCToClientAccountGuildEventDataUpdated_default_instance_;
class CMsgGCToClientActiveGuildChallengeUpdated;
struct CMsgGCToClientActiveGuildChallengeUpdatedDefaultTypeInternal;
extern CMsgGCToClientActiveGuildChallengeUpdatedDefaultTypeInternal _CMsgGCToClientActiveGuildChallengeUpdated_default_instance_;
class CMsgGCToClientActiveGuildContractsUpdated;
struct CMsgGCToClientActiveGuildContractsUpdatedDefaultTypeInternal;
extern CMsgGCToClientActiveGuildContractsUpdatedDefaultTypeInternal _CMsgGCToClientActiveGuildContractsUpdated_default_instance_;
class CMsgGuildActiveContracts;
struct CMsgGuildActiveContractsDefaultTypeInternal;
extern CMsgGuildActiveContractsDefaultTypeInternal _CMsgGuildActiveContracts_default_instance_;
class CMsgGuildChallenge;
struct CMsgGuildChallengeDefaultTypeInternal;
extern CMsgGuildChallengeDefaultTypeInternal _CMsgGuildChallenge_default_instance_;
class CMsgGuildContract;
struct CMsgGuildContractDefaultTypeInternal;
extern CMsgGuildContractDefaultTypeInternal _CMsgGuildContract_default_instance_;
class CMsgGuildContractSlot;
struct CMsgGuildContractSlotDefaultTypeInternal;
extern CMsgGuildContractSlotDefaultTypeInternal _CMsgGuildContractSlot_default_instance_;
class CMsgGuildEventMember;
struct CMsgGuildEventMemberDefaultTypeInternal;
extern CMsgGuildEventMemberDefaultTypeInternal _CMsgGuildEventMember_default_instance_;
class CMsgGuildLeaderboardCombinedResponse;
struct CMsgGuildLeaderboardCombinedResponseDefaultTypeInternal;
extern CMsgGuildLeaderboardCombinedResponseDefaultTypeInternal _CMsgGuildLeaderboardCombinedResponse_default_instance_;
class CMsgGuildLeaderboardCombinedResponseV2;
struct CMsgGuildLeaderboardCombinedResponseV2DefaultTypeInternal;
extern CMsgGuildLeaderboardCombinedResponseV2DefaultTypeInternal _CMsgGuildLeaderboardCombinedResponseV2_default_instance_;
class CMsgGuildLeaderboardCombinedResponse_Entry;
struct CMsgGuildLeaderboardCombinedResponse_EntryDefaultTypeInternal;
extern CMsgGuildLeaderboardCombinedResponse_EntryDefaultTypeInternal _CMsgGuildLeaderboardCombinedResponse_Entry_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgAccountGuildEventData* Arena::CreateMaybeMessage<::CMsgAccountGuildEventData>(Arena*);
template<> ::CMsgClientToGCClaimLeaderboardRewards* Arena::CreateMaybeMessage<::CMsgClientToGCClaimLeaderboardRewards>(Arena*);
template<> ::CMsgClientToGCClaimLeaderboardRewardsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCClaimLeaderboardRewardsResponse>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildEventData* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildEventData>(Arena*);
template<> ::CMsgClientToGCRequestAccountGuildEventDataResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestAccountGuildEventDataResponse>(Arena*);
template<> ::CMsgClientToGCRequestActiveGuildChallenge* Arena::CreateMaybeMessage<::CMsgClientToGCRequestActiveGuildChallenge>(Arena*);
template<> ::CMsgClientToGCRequestActiveGuildChallengeResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestActiveGuildChallengeResponse>(Arena*);
template<> ::CMsgClientToGCRequestActiveGuildContracts* Arena::CreateMaybeMessage<::CMsgClientToGCRequestActiveGuildContracts>(Arena*);
template<> ::CMsgClientToGCRequestActiveGuildContractsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestActiveGuildContractsResponse>(Arena*);
template<> ::CMsgClientToGCRequestGuildEventMembers* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildEventMembers>(Arena*);
template<> ::CMsgClientToGCRequestGuildEventMembersResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestGuildEventMembersResponse>(Arena*);
template<> ::CMsgClientToGCSelectGuildContract* Arena::CreateMaybeMessage<::CMsgClientToGCSelectGuildContract>(Arena*);
template<> ::CMsgClientToGCSelectGuildContractResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSelectGuildContractResponse>(Arena*);
template<> ::CMsgGCToClientAccountGuildEventDataUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientAccountGuildEventDataUpdated>(Arena*);
template<> ::CMsgGCToClientActiveGuildChallengeUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientActiveGuildChallengeUpdated>(Arena*);
template<> ::CMsgGCToClientActiveGuildContractsUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientActiveGuildContractsUpdated>(Arena*);
template<> ::CMsgGuildActiveContracts* Arena::CreateMaybeMessage<::CMsgGuildActiveContracts>(Arena*);
template<> ::CMsgGuildChallenge* Arena::CreateMaybeMessage<::CMsgGuildChallenge>(Arena*);
template<> ::CMsgGuildContract* Arena::CreateMaybeMessage<::CMsgGuildContract>(Arena*);
template<> ::CMsgGuildContractSlot* Arena::CreateMaybeMessage<::CMsgGuildContractSlot>(Arena*);
template<> ::CMsgGuildEventMember* Arena::CreateMaybeMessage<::CMsgGuildEventMember>(Arena*);
template<> ::CMsgGuildLeaderboardCombinedResponse* Arena::CreateMaybeMessage<::CMsgGuildLeaderboardCombinedResponse>(Arena*);
template<> ::CMsgGuildLeaderboardCombinedResponseV2* Arena::CreateMaybeMessage<::CMsgGuildLeaderboardCombinedResponseV2>(Arena*);
template<> ::CMsgGuildLeaderboardCombinedResponse_Entry* Arena::CreateMaybeMessage<::CMsgGuildLeaderboardCombinedResponse_Entry>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse : int {
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidGuildEvent = 8
};
bool CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidGuildEvent;
constexpr int CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse>(
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestActiveGuildContractsResponse_EResponse : int {
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidGuildEvent = 8
};
bool CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestActiveGuildContractsResponse_EResponse CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestActiveGuildContractsResponse_EResponse CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidGuildEvent;
constexpr int CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestActiveGuildContractsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestActiveGuildContractsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestActiveGuildContractsResponse_EResponse>(
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSelectGuildContractResponse_EResponse : int {
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidGuildEvent = 8,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidContractID = 9,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eAlreadyAssigned = 10,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidContractSlot = 11,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotLocked = 12,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotCooldown = 13,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractDuplicate = 14,
  CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotTimeError = 15
};
bool CMsgClientToGCSelectGuildContractResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSelectGuildContractResponse_EResponse CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_MIN = CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSelectGuildContractResponse_EResponse CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_MAX = CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotTimeError;
constexpr int CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSelectGuildContractResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSelectGuildContractResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSelectGuildContractResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSelectGuildContractResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSelectGuildContractResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSelectGuildContractResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSelectGuildContractResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSelectGuildContractResponse_EResponse>(
    CMsgClientToGCSelectGuildContractResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse : int {
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidGuildEvent = 8
};
bool CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidGuildEvent;
constexpr int CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse>(
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestGuildEventMembersResponse_EResponse : int {
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidGuildEvent = 8
};
bool CMsgClientToGCRequestGuildEventMembersResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestGuildEventMembersResponse_EResponse CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestGuildEventMembersResponse_EResponse CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidGuildEvent;
constexpr int CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildEventMembersResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestGuildEventMembersResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestGuildEventMembersResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestGuildEventMembersResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestGuildEventMembersResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestGuildEventMembersResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestGuildEventMembersResponse_EResponse>(
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse : int {
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidEvent = 5,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidGuild = 6,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eNotMember = 7,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidGuildEvent = 8,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eDoesNotQualify = 9,
  CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eAlreadyClaimed = 10
};
bool CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_MIN = CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_MAX = CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eAlreadyClaimed;
constexpr int CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse>(
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_descriptor(), name, value);
}
enum EGuildEventAuditAction : int {
  k_EGuildEventAuditAction_Invalid = 0,
  k_EGuildEventAuditAction_DevGrant = 1,
  k_EGuildEventAuditAction_CompleteContract = 2,
  k_EGuildEventAuditAction_CompleteChallenge = 3,
  k_EGuildEventAuditAction_CompleteMatch_Winner = 4,
  k_EGuildEventAuditAction_ChallengeProgress = 5,
  k_EGuildEventAuditAction_CompleteMatch_Loser = 6,
  k_EGuildEventAuditAction_WeeklyLeaderboard = 7,
  k_EGuildEventAuditAction_ManualGrant = 8
};
bool EGuildEventAuditAction_IsValid(int value);
constexpr EGuildEventAuditAction EGuildEventAuditAction_MIN = k_EGuildEventAuditAction_Invalid;
constexpr EGuildEventAuditAction EGuildEventAuditAction_MAX = k_EGuildEventAuditAction_ManualGrant;
constexpr int EGuildEventAuditAction_ARRAYSIZE = EGuildEventAuditAction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildEventAuditAction_descriptor();
template<typename T>
inline const std::string& EGuildEventAuditAction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EGuildEventAuditAction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EGuildEventAuditAction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EGuildEventAuditAction_descriptor(), enum_t_value);
}
inline bool EGuildEventAuditAction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EGuildEventAuditAction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EGuildEventAuditAction>(
    EGuildEventAuditAction_descriptor(), name, value);
}
// ===================================================================

class CMsgGuildContract PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildContract) */ {
 public:
  inline CMsgGuildContract() : CMsgGuildContract(nullptr) {}
  virtual ~CMsgGuildContract();
  explicit constexpr CMsgGuildContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildContract(const CMsgGuildContract& from);
  CMsgGuildContract(CMsgGuildContract&& from) noexcept
    : CMsgGuildContract() {
    *this = ::std::move(from);
  }

  inline CMsgGuildContract& operator=(const CMsgGuildContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildContract& operator=(CMsgGuildContract&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildContract* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildContract*>(
               &_CMsgGuildContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgGuildContract& a, CMsgGuildContract& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildContract* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildContract* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildContract* New() const final {
    return CreateMaybeMessage<CMsgGuildContract>(nullptr);
  }

  CMsgGuildContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildContract>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildContract& from);
  void MergeFrom(const CMsgGuildContract& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildContract* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildContract";
  }
  protected:
  explicit CMsgGuildContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractIdFieldNumber = 1,
    kChallengeInstanceIdFieldNumber = 2,
    kChallengeParameterFieldNumber = 3,
    kChallengeTimestampFieldNumber = 4,
    kAssignedAccountIdFieldNumber = 5,
    kContractFlagsFieldNumber = 6,
  };
  // optional uint64 contract_id = 1;
  bool has_contract_id() const;
  private:
  bool _internal_has_contract_id() const;
  public:
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 challenge_instance_id = 2;
  bool has_challenge_instance_id() const;
  private:
  bool _internal_has_challenge_instance_id() const;
  public:
  void clear_challenge_instance_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id() const;
  void set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_instance_id() const;
  void _internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_parameter = 3;
  bool has_challenge_parameter() const;
  private:
  bool _internal_has_challenge_parameter() const;
  public:
  void clear_challenge_parameter();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter() const;
  void set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_parameter() const;
  void _internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_timestamp = 4;
  bool has_challenge_timestamp() const;
  private:
  bool _internal_has_challenge_timestamp() const;
  public:
  void clear_challenge_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_timestamp() const;
  void set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_timestamp() const;
  void _internal_set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 assigned_account_id = 5;
  bool has_assigned_account_id() const;
  private:
  bool _internal_has_assigned_account_id() const;
  public:
  void clear_assigned_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 assigned_account_id() const;
  void set_assigned_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_assigned_account_id() const;
  void _internal_set_assigned_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 contract_flags = 6;
  bool has_contract_flags() const;
  private:
  bool _internal_has_contract_flags() const;
  public:
  void clear_contract_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_flags() const;
  void set_contract_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contract_flags() const;
  void _internal_set_contract_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 contract_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 assigned_account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_flags_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildContractSlot PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildContractSlot) */ {
 public:
  inline CMsgGuildContractSlot() : CMsgGuildContractSlot(nullptr) {}
  virtual ~CMsgGuildContractSlot();
  explicit constexpr CMsgGuildContractSlot(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildContractSlot(const CMsgGuildContractSlot& from);
  CMsgGuildContractSlot(CMsgGuildContractSlot&& from) noexcept
    : CMsgGuildContractSlot() {
    *this = ::std::move(from);
  }

  inline CMsgGuildContractSlot& operator=(const CMsgGuildContractSlot& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildContractSlot& operator=(CMsgGuildContractSlot&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildContractSlot& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildContractSlot* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildContractSlot*>(
               &_CMsgGuildContractSlot_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGuildContractSlot& a, CMsgGuildContractSlot& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildContractSlot* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildContractSlot* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildContractSlot* New() const final {
    return CreateMaybeMessage<CMsgGuildContractSlot>(nullptr);
  }

  CMsgGuildContractSlot* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildContractSlot>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildContractSlot& from);
  void MergeFrom(const CMsgGuildContractSlot& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildContractSlot* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildContractSlot";
  }
  protected:
  explicit CMsgGuildContractSlot(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractFieldNumber = 1,
  };
  // optional .CMsgGuildContract contract = 1;
  bool has_contract() const;
  private:
  bool _internal_has_contract() const;
  public:
  void clear_contract();
  const ::CMsgGuildContract& contract() const;
  ::CMsgGuildContract* release_contract();
  ::CMsgGuildContract* mutable_contract();
  void set_allocated_contract(::CMsgGuildContract* contract);
  private:
  const ::CMsgGuildContract& _internal_contract() const;
  ::CMsgGuildContract* _internal_mutable_contract();
  public:
  void unsafe_arena_set_allocated_contract(
      ::CMsgGuildContract* contract);
  ::CMsgGuildContract* unsafe_arena_release_contract();

  // @@protoc_insertion_point(class_scope:CMsgGuildContractSlot)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGuildContract* contract_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgAccountGuildEventData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAccountGuildEventData) */ {
 public:
  inline CMsgAccountGuildEventData() : CMsgAccountGuildEventData(nullptr) {}
  virtual ~CMsgAccountGuildEventData();
  explicit constexpr CMsgAccountGuildEventData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAccountGuildEventData(const CMsgAccountGuildEventData& from);
  CMsgAccountGuildEventData(CMsgAccountGuildEventData&& from) noexcept
    : CMsgAccountGuildEventData() {
    *this = ::std::move(from);
  }

  inline CMsgAccountGuildEventData& operator=(const CMsgAccountGuildEventData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAccountGuildEventData& operator=(CMsgAccountGuildEventData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAccountGuildEventData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAccountGuildEventData* internal_default_instance() {
    return reinterpret_cast<const CMsgAccountGuildEventData*>(
               &_CMsgAccountGuildEventData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgAccountGuildEventData& a, CMsgAccountGuildEventData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAccountGuildEventData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAccountGuildEventData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAccountGuildEventData* New() const final {
    return CreateMaybeMessage<CMsgAccountGuildEventData>(nullptr);
  }

  CMsgAccountGuildEventData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAccountGuildEventData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAccountGuildEventData& from);
  void MergeFrom(const CMsgAccountGuildEventData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAccountGuildEventData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAccountGuildEventData";
  }
  protected:
  explicit CMsgAccountGuildEventData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractSlotsFieldNumber = 3,
    kGuildPointsFieldNumber = 1,
    kContractsRefreshedTimestampFieldNumber = 2,
    kCompletedChallengeCountFieldNumber = 4,
    kChallengesRefreshTimestampFieldNumber = 5,
    kGuildWeeklyPercentileFieldNumber = 6,
    kGuildWeeklyLastTimestampFieldNumber = 7,
    kLastWeeklyClaimTimeFieldNumber = 8,
    kGuildCurrentPercentileFieldNumber = 9,
  };
  // repeated .CMsgGuildContractSlot contract_slots = 3;
  int contract_slots_size() const;
  private:
  int _internal_contract_slots_size() const;
  public:
  void clear_contract_slots();
  ::CMsgGuildContractSlot* mutable_contract_slots(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContractSlot >*
      mutable_contract_slots();
  private:
  const ::CMsgGuildContractSlot& _internal_contract_slots(int index) const;
  ::CMsgGuildContractSlot* _internal_add_contract_slots();
  public:
  const ::CMsgGuildContractSlot& contract_slots(int index) const;
  ::CMsgGuildContractSlot* add_contract_slots();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContractSlot >&
      contract_slots() const;

  // optional uint32 guild_points = 1;
  bool has_guild_points() const;
  private:
  bool _internal_has_guild_points() const;
  public:
  void clear_guild_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_points() const;
  void set_guild_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_points() const;
  void _internal_set_guild_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 contracts_refreshed_timestamp = 2;
  bool has_contracts_refreshed_timestamp() const;
  private:
  bool _internal_has_contracts_refreshed_timestamp() const;
  public:
  void clear_contracts_refreshed_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 contracts_refreshed_timestamp() const;
  void set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contracts_refreshed_timestamp() const;
  void _internal_set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 completed_challenge_count = 4;
  bool has_completed_challenge_count() const;
  private:
  bool _internal_has_completed_challenge_count() const;
  public:
  void clear_completed_challenge_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 completed_challenge_count() const;
  void set_completed_challenge_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_completed_challenge_count() const;
  void _internal_set_completed_challenge_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenges_refresh_timestamp = 5;
  bool has_challenges_refresh_timestamp() const;
  private:
  bool _internal_has_challenges_refresh_timestamp() const;
  public:
  void clear_challenges_refresh_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenges_refresh_timestamp() const;
  void set_challenges_refresh_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenges_refresh_timestamp() const;
  void _internal_set_challenges_refresh_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 guild_weekly_percentile = 6;
  bool has_guild_weekly_percentile() const;
  private:
  bool _internal_has_guild_weekly_percentile() const;
  public:
  void clear_guild_weekly_percentile();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_weekly_percentile() const;
  void set_guild_weekly_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_weekly_percentile() const;
  void _internal_set_guild_weekly_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 guild_weekly_last_timestamp = 7;
  bool has_guild_weekly_last_timestamp() const;
  private:
  bool _internal_has_guild_weekly_last_timestamp() const;
  public:
  void clear_guild_weekly_last_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_weekly_last_timestamp() const;
  void set_guild_weekly_last_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_weekly_last_timestamp() const;
  void _internal_set_guild_weekly_last_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_weekly_claim_time = 8;
  bool has_last_weekly_claim_time() const;
  private:
  bool _internal_has_last_weekly_claim_time() const;
  public:
  void clear_last_weekly_claim_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_weekly_claim_time() const;
  void set_last_weekly_claim_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_weekly_claim_time() const;
  void _internal_set_last_weekly_claim_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 guild_current_percentile = 9;
  bool has_guild_current_percentile() const;
  private:
  bool _internal_has_guild_current_percentile() const;
  public:
  void clear_guild_current_percentile();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_current_percentile() const;
  void set_guild_current_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_current_percentile() const;
  void _internal_set_guild_current_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAccountGuildEventData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContractSlot > contract_slots_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_points_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contracts_refreshed_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 completed_challenge_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenges_refresh_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_weekly_percentile_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_weekly_last_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_weekly_claim_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_current_percentile_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildActiveContracts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildActiveContracts) */ {
 public:
  inline CMsgGuildActiveContracts() : CMsgGuildActiveContracts(nullptr) {}
  virtual ~CMsgGuildActiveContracts();
  explicit constexpr CMsgGuildActiveContracts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildActiveContracts(const CMsgGuildActiveContracts& from);
  CMsgGuildActiveContracts(CMsgGuildActiveContracts&& from) noexcept
    : CMsgGuildActiveContracts() {
    *this = ::std::move(from);
  }

  inline CMsgGuildActiveContracts& operator=(const CMsgGuildActiveContracts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildActiveContracts& operator=(CMsgGuildActiveContracts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildActiveContracts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildActiveContracts* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildActiveContracts*>(
               &_CMsgGuildActiveContracts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgGuildActiveContracts& a, CMsgGuildActiveContracts& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildActiveContracts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildActiveContracts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildActiveContracts* New() const final {
    return CreateMaybeMessage<CMsgGuildActiveContracts>(nullptr);
  }

  CMsgGuildActiveContracts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildActiveContracts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildActiveContracts& from);
  void MergeFrom(const CMsgGuildActiveContracts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildActiveContracts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildActiveContracts";
  }
  protected:
  explicit CMsgGuildActiveContracts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractsFieldNumber = 2,
    kContractsRefreshedTimestampFieldNumber = 1,
  };
  // repeated .CMsgGuildContract contracts = 2;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;
  public:
  void clear_contracts();
  ::CMsgGuildContract* mutable_contracts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContract >*
      mutable_contracts();
  private:
  const ::CMsgGuildContract& _internal_contracts(int index) const;
  ::CMsgGuildContract* _internal_add_contracts();
  public:
  const ::CMsgGuildContract& contracts(int index) const;
  ::CMsgGuildContract* add_contracts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContract >&
      contracts() const;

  // optional uint32 contracts_refreshed_timestamp = 1;
  bool has_contracts_refreshed_timestamp() const;
  private:
  bool _internal_has_contracts_refreshed_timestamp() const;
  public:
  void clear_contracts_refreshed_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 contracts_refreshed_timestamp() const;
  void set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contracts_refreshed_timestamp() const;
  void _internal_set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildActiveContracts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContract > contracts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contracts_refreshed_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildChallenge PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildChallenge) */ {
 public:
  inline CMsgGuildChallenge() : CMsgGuildChallenge(nullptr) {}
  virtual ~CMsgGuildChallenge();
  explicit constexpr CMsgGuildChallenge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildChallenge(const CMsgGuildChallenge& from);
  CMsgGuildChallenge(CMsgGuildChallenge&& from) noexcept
    : CMsgGuildChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgGuildChallenge& operator=(const CMsgGuildChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildChallenge& operator=(CMsgGuildChallenge&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildChallenge& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildChallenge*>(
               &_CMsgGuildChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgGuildChallenge& a, CMsgGuildChallenge& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildChallenge* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildChallenge* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildChallenge* New() const final {
    return CreateMaybeMessage<CMsgGuildChallenge>(nullptr);
  }

  CMsgGuildChallenge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildChallenge>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildChallenge& from);
  void MergeFrom(const CMsgGuildChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildChallenge* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildChallenge";
  }
  protected:
  explicit CMsgGuildChallenge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChallengeInstanceIdFieldNumber = 1,
    kChallengeParameterFieldNumber = 2,
    kChallengeTimestampFieldNumber = 3,
    kChallengeProgressFieldNumber = 4,
    kChallengeFlagsFieldNumber = 5,
  };
  // optional uint32 challenge_instance_id = 1;
  bool has_challenge_instance_id() const;
  private:
  bool _internal_has_challenge_instance_id() const;
  public:
  void clear_challenge_instance_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id() const;
  void set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_instance_id() const;
  void _internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_parameter = 2;
  bool has_challenge_parameter() const;
  private:
  bool _internal_has_challenge_parameter() const;
  public:
  void clear_challenge_parameter();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter() const;
  void set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_parameter() const;
  void _internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_timestamp = 3;
  bool has_challenge_timestamp() const;
  private:
  bool _internal_has_challenge_timestamp() const;
  public:
  void clear_challenge_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_timestamp() const;
  void set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_timestamp() const;
  void _internal_set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_progress = 4;
  bool has_challenge_progress() const;
  private:
  bool _internal_has_challenge_progress() const;
  public:
  void clear_challenge_progress();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_progress() const;
  void set_challenge_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_progress() const;
  void _internal_set_challenge_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_flags = 5;
  bool has_challenge_flags() const;
  private:
  bool _internal_has_challenge_flags() const;
  public:
  void clear_challenge_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_flags() const;
  void set_challenge_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_flags() const;
  void _internal_set_challenge_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildChallenge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_progress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_flags_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildEventMember PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildEventMember) */ {
 public:
  inline CMsgGuildEventMember() : CMsgGuildEventMember(nullptr) {}
  virtual ~CMsgGuildEventMember();
  explicit constexpr CMsgGuildEventMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildEventMember(const CMsgGuildEventMember& from);
  CMsgGuildEventMember(CMsgGuildEventMember&& from) noexcept
    : CMsgGuildEventMember() {
    *this = ::std::move(from);
  }

  inline CMsgGuildEventMember& operator=(const CMsgGuildEventMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildEventMember& operator=(CMsgGuildEventMember&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildEventMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildEventMember* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildEventMember*>(
               &_CMsgGuildEventMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgGuildEventMember& a, CMsgGuildEventMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildEventMember* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildEventMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildEventMember* New() const final {
    return CreateMaybeMessage<CMsgGuildEventMember>(nullptr);
  }

  CMsgGuildEventMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildEventMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildEventMember& from);
  void MergeFrom(const CMsgGuildEventMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildEventMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildEventMember";
  }
  protected:
  explicit CMsgGuildEventMember(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kGuildPointsEarnedFieldNumber = 2,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 guild_points_earned = 2;
  bool has_guild_points_earned() const;
  private:
  bool _internal_has_guild_points_earned() const;
  public:
  void clear_guild_points_earned();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_points_earned() const;
  void set_guild_points_earned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_points_earned() const;
  void _internal_set_guild_points_earned(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildEventMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_points_earned_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildEventData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildEventData) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildEventData() : CMsgClientToGCRequestAccountGuildEventData(nullptr) {}
  virtual ~CMsgClientToGCRequestAccountGuildEventData();
  explicit constexpr CMsgClientToGCRequestAccountGuildEventData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildEventData(const CMsgClientToGCRequestAccountGuildEventData& from);
  CMsgClientToGCRequestAccountGuildEventData(CMsgClientToGCRequestAccountGuildEventData&& from) noexcept
    : CMsgClientToGCRequestAccountGuildEventData() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildEventData& operator=(const CMsgClientToGCRequestAccountGuildEventData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildEventData& operator=(CMsgClientToGCRequestAccountGuildEventData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildEventData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildEventData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildEventData*>(
               &_CMsgClientToGCRequestAccountGuildEventData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgClientToGCRequestAccountGuildEventData& a, CMsgClientToGCRequestAccountGuildEventData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildEventData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildEventData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestAccountGuildEventData* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildEventData>(nullptr);
  }

  CMsgClientToGCRequestAccountGuildEventData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildEventData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildEventData& from);
  void MergeFrom(const CMsgClientToGCRequestAccountGuildEventData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildEventData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildEventData";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildEventData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildEventData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestAccountGuildEventDataResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestAccountGuildEventDataResponse) */ {
 public:
  inline CMsgClientToGCRequestAccountGuildEventDataResponse() : CMsgClientToGCRequestAccountGuildEventDataResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestAccountGuildEventDataResponse();
  explicit constexpr CMsgClientToGCRequestAccountGuildEventDataResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestAccountGuildEventDataResponse(const CMsgClientToGCRequestAccountGuildEventDataResponse& from);
  CMsgClientToGCRequestAccountGuildEventDataResponse(CMsgClientToGCRequestAccountGuildEventDataResponse&& from) noexcept
    : CMsgClientToGCRequestAccountGuildEventDataResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestAccountGuildEventDataResponse& operator=(const CMsgClientToGCRequestAccountGuildEventDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestAccountGuildEventDataResponse& operator=(CMsgClientToGCRequestAccountGuildEventDataResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestAccountGuildEventDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestAccountGuildEventDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestAccountGuildEventDataResponse*>(
               &_CMsgClientToGCRequestAccountGuildEventDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientToGCRequestAccountGuildEventDataResponse& a, CMsgClientToGCRequestAccountGuildEventDataResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestAccountGuildEventDataResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestAccountGuildEventDataResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestAccountGuildEventDataResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildEventDataResponse>(nullptr);
  }

  CMsgClientToGCRequestAccountGuildEventDataResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestAccountGuildEventDataResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestAccountGuildEventDataResponse& from);
  void MergeFrom(const CMsgClientToGCRequestAccountGuildEventDataResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestAccountGuildEventDataResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestAccountGuildEventDataResponse";
  }
  protected:
  explicit CMsgClientToGCRequestAccountGuildEventDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_k_eInvalidGuildEvent;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kEventDataFieldNumber = 3,
    kResultFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional .CMsgAccountGuildEventData event_data = 3;
  bool has_event_data() const;
  private:
  bool _internal_has_event_data() const;
  public:
  void clear_event_data();
  const ::CMsgAccountGuildEventData& event_data() const;
  ::CMsgAccountGuildEventData* release_event_data();
  ::CMsgAccountGuildEventData* mutable_event_data();
  void set_allocated_event_data(::CMsgAccountGuildEventData* event_data);
  private:
  const ::CMsgAccountGuildEventData& _internal_event_data() const;
  ::CMsgAccountGuildEventData* _internal_mutable_event_data();
  public:
  void unsafe_arena_set_allocated_event_data(
      ::CMsgAccountGuildEventData* event_data);
  ::CMsgAccountGuildEventData* unsafe_arena_release_event_data();

  // optional .CMsgClientToGCRequestAccountGuildEventDataResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestAccountGuildEventDataResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgAccountGuildEventData* event_data_;
  int result_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientAccountGuildEventDataUpdated PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientAccountGuildEventDataUpdated) */ {
 public:
  inline CMsgGCToClientAccountGuildEventDataUpdated() : CMsgGCToClientAccountGuildEventDataUpdated(nullptr) {}
  virtual ~CMsgGCToClientAccountGuildEventDataUpdated();
  explicit constexpr CMsgGCToClientAccountGuildEventDataUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientAccountGuildEventDataUpdated(const CMsgGCToClientAccountGuildEventDataUpdated& from);
  CMsgGCToClientAccountGuildEventDataUpdated(CMsgGCToClientAccountGuildEventDataUpdated&& from) noexcept
    : CMsgGCToClientAccountGuildEventDataUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientAccountGuildEventDataUpdated& operator=(const CMsgGCToClientAccountGuildEventDataUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientAccountGuildEventDataUpdated& operator=(CMsgGCToClientAccountGuildEventDataUpdated&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientAccountGuildEventDataUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientAccountGuildEventDataUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientAccountGuildEventDataUpdated*>(
               &_CMsgGCToClientAccountGuildEventDataUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgGCToClientAccountGuildEventDataUpdated& a, CMsgGCToClientAccountGuildEventDataUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientAccountGuildEventDataUpdated* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientAccountGuildEventDataUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientAccountGuildEventDataUpdated* New() const final {
    return CreateMaybeMessage<CMsgGCToClientAccountGuildEventDataUpdated>(nullptr);
  }

  CMsgGCToClientAccountGuildEventDataUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientAccountGuildEventDataUpdated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientAccountGuildEventDataUpdated& from);
  void MergeFrom(const CMsgGCToClientAccountGuildEventDataUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientAccountGuildEventDataUpdated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientAccountGuildEventDataUpdated";
  }
  protected:
  explicit CMsgGCToClientAccountGuildEventDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildEventDataFieldNumber = 4,
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
    kUpdateFlagsFieldNumber = 3,
    kContractsUpdatedFieldNumber = 5,
  };
  // optional .CMsgAccountGuildEventData guild_event_data = 4;
  bool has_guild_event_data() const;
  private:
  bool _internal_has_guild_event_data() const;
  public:
  void clear_guild_event_data();
  const ::CMsgAccountGuildEventData& guild_event_data() const;
  ::CMsgAccountGuildEventData* release_guild_event_data();
  ::CMsgAccountGuildEventData* mutable_guild_event_data();
  void set_allocated_guild_event_data(::CMsgAccountGuildEventData* guild_event_data);
  private:
  const ::CMsgAccountGuildEventData& _internal_guild_event_data() const;
  ::CMsgAccountGuildEventData* _internal_mutable_guild_event_data();
  public:
  void unsafe_arena_set_allocated_guild_event_data(
      ::CMsgAccountGuildEventData* guild_event_data);
  ::CMsgAccountGuildEventData* unsafe_arena_release_guild_event_data();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // optional uint32 update_flags = 3;
  bool has_update_flags() const;
  private:
  bool _internal_has_update_flags() const;
  public:
  void clear_update_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 update_flags() const;
  void set_update_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_update_flags() const;
  void _internal_set_update_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool contracts_updated = 5;
  bool has_contracts_updated() const;
  private:
  bool _internal_has_contracts_updated() const;
  public:
  void clear_contracts_updated();
  bool contracts_updated() const;
  void set_contracts_updated(bool value);
  private:
  bool _internal_contracts_updated() const;
  void _internal_set_contracts_updated(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientAccountGuildEventDataUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgAccountGuildEventData* guild_event_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 update_flags_;
  bool contracts_updated_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestActiveGuildContracts PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestActiveGuildContracts) */ {
 public:
  inline CMsgClientToGCRequestActiveGuildContracts() : CMsgClientToGCRequestActiveGuildContracts(nullptr) {}
  virtual ~CMsgClientToGCRequestActiveGuildContracts();
  explicit constexpr CMsgClientToGCRequestActiveGuildContracts(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestActiveGuildContracts(const CMsgClientToGCRequestActiveGuildContracts& from);
  CMsgClientToGCRequestActiveGuildContracts(CMsgClientToGCRequestActiveGuildContracts&& from) noexcept
    : CMsgClientToGCRequestActiveGuildContracts() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestActiveGuildContracts& operator=(const CMsgClientToGCRequestActiveGuildContracts& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestActiveGuildContracts& operator=(CMsgClientToGCRequestActiveGuildContracts&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestActiveGuildContracts& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestActiveGuildContracts* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestActiveGuildContracts*>(
               &_CMsgClientToGCRequestActiveGuildContracts_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientToGCRequestActiveGuildContracts& a, CMsgClientToGCRequestActiveGuildContracts& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestActiveGuildContracts* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestActiveGuildContracts* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestActiveGuildContracts* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildContracts>(nullptr);
  }

  CMsgClientToGCRequestActiveGuildContracts* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildContracts>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestActiveGuildContracts& from);
  void MergeFrom(const CMsgClientToGCRequestActiveGuildContracts& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestActiveGuildContracts* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestActiveGuildContracts";
  }
  protected:
  explicit CMsgClientToGCRequestActiveGuildContracts(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestActiveGuildContracts)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestActiveGuildContractsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestActiveGuildContractsResponse) */ {
 public:
  inline CMsgClientToGCRequestActiveGuildContractsResponse() : CMsgClientToGCRequestActiveGuildContractsResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestActiveGuildContractsResponse();
  explicit constexpr CMsgClientToGCRequestActiveGuildContractsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestActiveGuildContractsResponse(const CMsgClientToGCRequestActiveGuildContractsResponse& from);
  CMsgClientToGCRequestActiveGuildContractsResponse(CMsgClientToGCRequestActiveGuildContractsResponse&& from) noexcept
    : CMsgClientToGCRequestActiveGuildContractsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestActiveGuildContractsResponse& operator=(const CMsgClientToGCRequestActiveGuildContractsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestActiveGuildContractsResponse& operator=(CMsgClientToGCRequestActiveGuildContractsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestActiveGuildContractsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestActiveGuildContractsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestActiveGuildContractsResponse*>(
               &_CMsgClientToGCRequestActiveGuildContractsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientToGCRequestActiveGuildContractsResponse& a, CMsgClientToGCRequestActiveGuildContractsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestActiveGuildContractsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestActiveGuildContractsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestActiveGuildContractsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildContractsResponse>(nullptr);
  }

  CMsgClientToGCRequestActiveGuildContractsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildContractsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestActiveGuildContractsResponse& from);
  void MergeFrom(const CMsgClientToGCRequestActiveGuildContractsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestActiveGuildContractsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestActiveGuildContractsResponse";
  }
  protected:
  explicit CMsgClientToGCRequestActiveGuildContractsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestActiveGuildContractsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_k_eInvalidGuildEvent;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kActiveContractsFieldNumber = 2,
    kActiveChallengesFieldNumber = 3,
    kResultFieldNumber = 1,
  };
  // optional .CMsgGuildActiveContracts active_contracts = 2;
  bool has_active_contracts() const;
  private:
  bool _internal_has_active_contracts() const;
  public:
  void clear_active_contracts();
  const ::CMsgGuildActiveContracts& active_contracts() const;
  ::CMsgGuildActiveContracts* release_active_contracts();
  ::CMsgGuildActiveContracts* mutable_active_contracts();
  void set_allocated_active_contracts(::CMsgGuildActiveContracts* active_contracts);
  private:
  const ::CMsgGuildActiveContracts& _internal_active_contracts() const;
  ::CMsgGuildActiveContracts* _internal_mutable_active_contracts();
  public:
  void unsafe_arena_set_allocated_active_contracts(
      ::CMsgGuildActiveContracts* active_contracts);
  ::CMsgGuildActiveContracts* unsafe_arena_release_active_contracts();

  // optional .CMsgGuildChallenge active_challenges = 3;
  bool has_active_challenges() const;
  private:
  bool _internal_has_active_challenges() const;
  public:
  void clear_active_challenges();
  const ::CMsgGuildChallenge& active_challenges() const;
  ::CMsgGuildChallenge* release_active_challenges();
  ::CMsgGuildChallenge* mutable_active_challenges();
  void set_allocated_active_challenges(::CMsgGuildChallenge* active_challenges);
  private:
  const ::CMsgGuildChallenge& _internal_active_challenges() const;
  ::CMsgGuildChallenge* _internal_mutable_active_challenges();
  public:
  void unsafe_arena_set_allocated_active_challenges(
      ::CMsgGuildChallenge* active_challenges);
  ::CMsgGuildChallenge* unsafe_arena_release_active_challenges();

  // optional .CMsgClientToGCRequestActiveGuildContractsResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestActiveGuildContractsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGuildActiveContracts* active_contracts_;
  ::CMsgGuildChallenge* active_challenges_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientActiveGuildContractsUpdated PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientActiveGuildContractsUpdated) */ {
 public:
  inline CMsgGCToClientActiveGuildContractsUpdated() : CMsgGCToClientActiveGuildContractsUpdated(nullptr) {}
  virtual ~CMsgGCToClientActiveGuildContractsUpdated();
  explicit constexpr CMsgGCToClientActiveGuildContractsUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientActiveGuildContractsUpdated(const CMsgGCToClientActiveGuildContractsUpdated& from);
  CMsgGCToClientActiveGuildContractsUpdated(CMsgGCToClientActiveGuildContractsUpdated&& from) noexcept
    : CMsgGCToClientActiveGuildContractsUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientActiveGuildContractsUpdated& operator=(const CMsgGCToClientActiveGuildContractsUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientActiveGuildContractsUpdated& operator=(CMsgGCToClientActiveGuildContractsUpdated&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientActiveGuildContractsUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientActiveGuildContractsUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientActiveGuildContractsUpdated*>(
               &_CMsgGCToClientActiveGuildContractsUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgGCToClientActiveGuildContractsUpdated& a, CMsgGCToClientActiveGuildContractsUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientActiveGuildContractsUpdated* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientActiveGuildContractsUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientActiveGuildContractsUpdated* New() const final {
    return CreateMaybeMessage<CMsgGCToClientActiveGuildContractsUpdated>(nullptr);
  }

  CMsgGCToClientActiveGuildContractsUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientActiveGuildContractsUpdated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientActiveGuildContractsUpdated& from);
  void MergeFrom(const CMsgGCToClientActiveGuildContractsUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientActiveGuildContractsUpdated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientActiveGuildContractsUpdated";
  }
  protected:
  explicit CMsgGCToClientActiveGuildContractsUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientActiveGuildContractsUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectGuildContract PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSelectGuildContract) */ {
 public:
  inline CMsgClientToGCSelectGuildContract() : CMsgClientToGCSelectGuildContract(nullptr) {}
  virtual ~CMsgClientToGCSelectGuildContract();
  explicit constexpr CMsgClientToGCSelectGuildContract(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSelectGuildContract(const CMsgClientToGCSelectGuildContract& from);
  CMsgClientToGCSelectGuildContract(CMsgClientToGCSelectGuildContract&& from) noexcept
    : CMsgClientToGCSelectGuildContract() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSelectGuildContract& operator=(const CMsgClientToGCSelectGuildContract& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSelectGuildContract& operator=(CMsgClientToGCSelectGuildContract&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSelectGuildContract& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSelectGuildContract* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectGuildContract*>(
               &_CMsgClientToGCSelectGuildContract_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientToGCSelectGuildContract& a, CMsgClientToGCSelectGuildContract& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSelectGuildContract* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSelectGuildContract* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectGuildContract* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSelectGuildContract>(nullptr);
  }

  CMsgClientToGCSelectGuildContract* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSelectGuildContract>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSelectGuildContract& from);
  void MergeFrom(const CMsgClientToGCSelectGuildContract& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSelectGuildContract* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSelectGuildContract";
  }
  protected:
  explicit CMsgClientToGCSelectGuildContract(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
    kContractIdFieldNumber = 3,
    kContractSlotFieldNumber = 4,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // optional uint64 contract_id = 3;
  bool has_contract_id() const;
  private:
  bool _internal_has_contract_id() const;
  public:
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 contract_slot = 4;
  bool has_contract_slot() const;
  private:
  bool _internal_has_contract_slot() const;
  public:
  void clear_contract_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_slot() const;
  void set_contract_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contract_slot() const;
  void _internal_set_contract_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSelectGuildContract)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 contract_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_slot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectGuildContractResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSelectGuildContractResponse) */ {
 public:
  inline CMsgClientToGCSelectGuildContractResponse() : CMsgClientToGCSelectGuildContractResponse(nullptr) {}
  virtual ~CMsgClientToGCSelectGuildContractResponse();
  explicit constexpr CMsgClientToGCSelectGuildContractResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSelectGuildContractResponse(const CMsgClientToGCSelectGuildContractResponse& from);
  CMsgClientToGCSelectGuildContractResponse(CMsgClientToGCSelectGuildContractResponse&& from) noexcept
    : CMsgClientToGCSelectGuildContractResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSelectGuildContractResponse& operator=(const CMsgClientToGCSelectGuildContractResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSelectGuildContractResponse& operator=(CMsgClientToGCSelectGuildContractResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSelectGuildContractResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSelectGuildContractResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectGuildContractResponse*>(
               &_CMsgClientToGCSelectGuildContractResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgClientToGCSelectGuildContractResponse& a, CMsgClientToGCSelectGuildContractResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSelectGuildContractResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSelectGuildContractResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectGuildContractResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSelectGuildContractResponse>(nullptr);
  }

  CMsgClientToGCSelectGuildContractResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSelectGuildContractResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSelectGuildContractResponse& from);
  void MergeFrom(const CMsgClientToGCSelectGuildContractResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSelectGuildContractResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSelectGuildContractResponse";
  }
  protected:
  explicit CMsgClientToGCSelectGuildContractResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectGuildContractResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidGuildEvent;
  static constexpr EResponse k_eInvalidContractID =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidContractID;
  static constexpr EResponse k_eAlreadyAssigned =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eAlreadyAssigned;
  static constexpr EResponse k_eInvalidContractSlot =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eInvalidContractSlot;
  static constexpr EResponse k_eContractSlotLocked =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotLocked;
  static constexpr EResponse k_eContractSlotCooldown =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotCooldown;
  static constexpr EResponse k_eContractDuplicate =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractDuplicate;
  static constexpr EResponse k_eContractSlotTimeError =
    CMsgClientToGCSelectGuildContractResponse_EResponse_k_eContractSlotTimeError;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSelectGuildContractResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSelectGuildContractResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSelectGuildContractResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSelectGuildContractResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSelectGuildContractResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSelectGuildContractResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSelectGuildContractResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSelectGuildContractResponse_EResponse value);
  private:
  ::CMsgClientToGCSelectGuildContractResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSelectGuildContractResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSelectGuildContractResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestActiveGuildChallenge PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestActiveGuildChallenge) */ {
 public:
  inline CMsgClientToGCRequestActiveGuildChallenge() : CMsgClientToGCRequestActiveGuildChallenge(nullptr) {}
  virtual ~CMsgClientToGCRequestActiveGuildChallenge();
  explicit constexpr CMsgClientToGCRequestActiveGuildChallenge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestActiveGuildChallenge(const CMsgClientToGCRequestActiveGuildChallenge& from);
  CMsgClientToGCRequestActiveGuildChallenge(CMsgClientToGCRequestActiveGuildChallenge&& from) noexcept
    : CMsgClientToGCRequestActiveGuildChallenge() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestActiveGuildChallenge& operator=(const CMsgClientToGCRequestActiveGuildChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestActiveGuildChallenge& operator=(CMsgClientToGCRequestActiveGuildChallenge&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestActiveGuildChallenge& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestActiveGuildChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestActiveGuildChallenge*>(
               &_CMsgClientToGCRequestActiveGuildChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgClientToGCRequestActiveGuildChallenge& a, CMsgClientToGCRequestActiveGuildChallenge& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestActiveGuildChallenge* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestActiveGuildChallenge* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestActiveGuildChallenge* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildChallenge>(nullptr);
  }

  CMsgClientToGCRequestActiveGuildChallenge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildChallenge>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestActiveGuildChallenge& from);
  void MergeFrom(const CMsgClientToGCRequestActiveGuildChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestActiveGuildChallenge* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestActiveGuildChallenge";
  }
  protected:
  explicit CMsgClientToGCRequestActiveGuildChallenge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestActiveGuildChallenge)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestActiveGuildChallengeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestActiveGuildChallengeResponse) */ {
 public:
  inline CMsgClientToGCRequestActiveGuildChallengeResponse() : CMsgClientToGCRequestActiveGuildChallengeResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestActiveGuildChallengeResponse();
  explicit constexpr CMsgClientToGCRequestActiveGuildChallengeResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestActiveGuildChallengeResponse(const CMsgClientToGCRequestActiveGuildChallengeResponse& from);
  CMsgClientToGCRequestActiveGuildChallengeResponse(CMsgClientToGCRequestActiveGuildChallengeResponse&& from) noexcept
    : CMsgClientToGCRequestActiveGuildChallengeResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestActiveGuildChallengeResponse& operator=(const CMsgClientToGCRequestActiveGuildChallengeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestActiveGuildChallengeResponse& operator=(CMsgClientToGCRequestActiveGuildChallengeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestActiveGuildChallengeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestActiveGuildChallengeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestActiveGuildChallengeResponse*>(
               &_CMsgClientToGCRequestActiveGuildChallengeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgClientToGCRequestActiveGuildChallengeResponse& a, CMsgClientToGCRequestActiveGuildChallengeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestActiveGuildChallengeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestActiveGuildChallengeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestActiveGuildChallengeResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildChallengeResponse>(nullptr);
  }

  CMsgClientToGCRequestActiveGuildChallengeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestActiveGuildChallengeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestActiveGuildChallengeResponse& from);
  void MergeFrom(const CMsgClientToGCRequestActiveGuildChallengeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestActiveGuildChallengeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestActiveGuildChallengeResponse";
  }
  protected:
  explicit CMsgClientToGCRequestActiveGuildChallengeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_k_eInvalidGuildEvent;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kActiveChallengeFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgGuildChallenge active_challenge = 2;
  bool has_active_challenge() const;
  private:
  bool _internal_has_active_challenge() const;
  public:
  void clear_active_challenge();
  const ::CMsgGuildChallenge& active_challenge() const;
  ::CMsgGuildChallenge* release_active_challenge();
  ::CMsgGuildChallenge* mutable_active_challenge();
  void set_allocated_active_challenge(::CMsgGuildChallenge* active_challenge);
  private:
  const ::CMsgGuildChallenge& _internal_active_challenge() const;
  ::CMsgGuildChallenge* _internal_mutable_active_challenge();
  public:
  void unsafe_arena_set_allocated_active_challenge(
      ::CMsgGuildChallenge* active_challenge);
  ::CMsgGuildChallenge* unsafe_arena_release_active_challenge();

  // optional .CMsgClientToGCRequestActiveGuildChallengeResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestActiveGuildChallengeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGuildChallenge* active_challenge_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientActiveGuildChallengeUpdated PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientActiveGuildChallengeUpdated) */ {
 public:
  inline CMsgGCToClientActiveGuildChallengeUpdated() : CMsgGCToClientActiveGuildChallengeUpdated(nullptr) {}
  virtual ~CMsgGCToClientActiveGuildChallengeUpdated();
  explicit constexpr CMsgGCToClientActiveGuildChallengeUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientActiveGuildChallengeUpdated(const CMsgGCToClientActiveGuildChallengeUpdated& from);
  CMsgGCToClientActiveGuildChallengeUpdated(CMsgGCToClientActiveGuildChallengeUpdated&& from) noexcept
    : CMsgGCToClientActiveGuildChallengeUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientActiveGuildChallengeUpdated& operator=(const CMsgGCToClientActiveGuildChallengeUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientActiveGuildChallengeUpdated& operator=(CMsgGCToClientActiveGuildChallengeUpdated&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientActiveGuildChallengeUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientActiveGuildChallengeUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientActiveGuildChallengeUpdated*>(
               &_CMsgGCToClientActiveGuildChallengeUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgGCToClientActiveGuildChallengeUpdated& a, CMsgGCToClientActiveGuildChallengeUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientActiveGuildChallengeUpdated* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientActiveGuildChallengeUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientActiveGuildChallengeUpdated* New() const final {
    return CreateMaybeMessage<CMsgGCToClientActiveGuildChallengeUpdated>(nullptr);
  }

  CMsgGCToClientActiveGuildChallengeUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientActiveGuildChallengeUpdated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientActiveGuildChallengeUpdated& from);
  void MergeFrom(const CMsgGCToClientActiveGuildChallengeUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientActiveGuildChallengeUpdated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientActiveGuildChallengeUpdated";
  }
  protected:
  explicit CMsgGCToClientActiveGuildChallengeUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActiveChallengeFieldNumber = 3,
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional .CMsgGuildChallenge active_challenge = 3;
  bool has_active_challenge() const;
  private:
  bool _internal_has_active_challenge() const;
  public:
  void clear_active_challenge();
  const ::CMsgGuildChallenge& active_challenge() const;
  ::CMsgGuildChallenge* release_active_challenge();
  ::CMsgGuildChallenge* mutable_active_challenge();
  void set_allocated_active_challenge(::CMsgGuildChallenge* active_challenge);
  private:
  const ::CMsgGuildChallenge& _internal_active_challenge() const;
  ::CMsgGuildChallenge* _internal_mutable_active_challenge();
  public:
  void unsafe_arena_set_allocated_active_challenge(
      ::CMsgGuildChallenge* active_challenge);
  ::CMsgGuildChallenge* unsafe_arena_release_active_challenge();

  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientActiveGuildChallengeUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGuildChallenge* active_challenge_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildEventMembers PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildEventMembers) */ {
 public:
  inline CMsgClientToGCRequestGuildEventMembers() : CMsgClientToGCRequestGuildEventMembers(nullptr) {}
  virtual ~CMsgClientToGCRequestGuildEventMembers();
  explicit constexpr CMsgClientToGCRequestGuildEventMembers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildEventMembers(const CMsgClientToGCRequestGuildEventMembers& from);
  CMsgClientToGCRequestGuildEventMembers(CMsgClientToGCRequestGuildEventMembers&& from) noexcept
    : CMsgClientToGCRequestGuildEventMembers() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildEventMembers& operator=(const CMsgClientToGCRequestGuildEventMembers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildEventMembers& operator=(CMsgClientToGCRequestGuildEventMembers&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestGuildEventMembers& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildEventMembers* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildEventMembers*>(
               &_CMsgClientToGCRequestGuildEventMembers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgClientToGCRequestGuildEventMembers& a, CMsgClientToGCRequestGuildEventMembers& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildEventMembers* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildEventMembers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestGuildEventMembers* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildEventMembers>(nullptr);
  }

  CMsgClientToGCRequestGuildEventMembers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildEventMembers>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestGuildEventMembers& from);
  void MergeFrom(const CMsgClientToGCRequestGuildEventMembers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildEventMembers* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildEventMembers";
  }
  protected:
  explicit CMsgClientToGCRequestGuildEventMembers(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildEventMembers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestGuildEventMembersResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestGuildEventMembersResponse) */ {
 public:
  inline CMsgClientToGCRequestGuildEventMembersResponse() : CMsgClientToGCRequestGuildEventMembersResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestGuildEventMembersResponse();
  explicit constexpr CMsgClientToGCRequestGuildEventMembersResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestGuildEventMembersResponse(const CMsgClientToGCRequestGuildEventMembersResponse& from);
  CMsgClientToGCRequestGuildEventMembersResponse(CMsgClientToGCRequestGuildEventMembersResponse&& from) noexcept
    : CMsgClientToGCRequestGuildEventMembersResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestGuildEventMembersResponse& operator=(const CMsgClientToGCRequestGuildEventMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestGuildEventMembersResponse& operator=(CMsgClientToGCRequestGuildEventMembersResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestGuildEventMembersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestGuildEventMembersResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestGuildEventMembersResponse*>(
               &_CMsgClientToGCRequestGuildEventMembersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgClientToGCRequestGuildEventMembersResponse& a, CMsgClientToGCRequestGuildEventMembersResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestGuildEventMembersResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestGuildEventMembersResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestGuildEventMembersResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildEventMembersResponse>(nullptr);
  }

  CMsgClientToGCRequestGuildEventMembersResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestGuildEventMembersResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestGuildEventMembersResponse& from);
  void MergeFrom(const CMsgClientToGCRequestGuildEventMembersResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestGuildEventMembersResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestGuildEventMembersResponse";
  }
  protected:
  explicit CMsgClientToGCRequestGuildEventMembersResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestGuildEventMembersResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_k_eInvalidGuildEvent;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestGuildEventMembersResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestGuildEventMembersResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestGuildEventMembersResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestGuildEventMembersResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestGuildEventMembersResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kMembersFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgGuildEventMember members = 2;
  int members_size() const;
  private:
  int _internal_members_size() const;
  public:
  void clear_members();
  ::CMsgGuildEventMember* mutable_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildEventMember >*
      mutable_members();
  private:
  const ::CMsgGuildEventMember& _internal_members(int index) const;
  ::CMsgGuildEventMember* _internal_add_members();
  public:
  const ::CMsgGuildEventMember& members(int index) const;
  ::CMsgGuildEventMember* add_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildEventMember >&
      members() const;

  // optional .CMsgClientToGCRequestGuildEventMembersResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestGuildEventMembersResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestGuildEventMembersResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestGuildEventMembersResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildEventMember > members_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildLeaderboardCombinedResponse_Entry PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildLeaderboardCombinedResponse.Entry) */ {
 public:
  inline CMsgGuildLeaderboardCombinedResponse_Entry() : CMsgGuildLeaderboardCombinedResponse_Entry(nullptr) {}
  virtual ~CMsgGuildLeaderboardCombinedResponse_Entry();
  explicit constexpr CMsgGuildLeaderboardCombinedResponse_Entry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildLeaderboardCombinedResponse_Entry(const CMsgGuildLeaderboardCombinedResponse_Entry& from);
  CMsgGuildLeaderboardCombinedResponse_Entry(CMsgGuildLeaderboardCombinedResponse_Entry&& from) noexcept
    : CMsgGuildLeaderboardCombinedResponse_Entry() {
    *this = ::std::move(from);
  }

  inline CMsgGuildLeaderboardCombinedResponse_Entry& operator=(const CMsgGuildLeaderboardCombinedResponse_Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildLeaderboardCombinedResponse_Entry& operator=(CMsgGuildLeaderboardCombinedResponse_Entry&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildLeaderboardCombinedResponse_Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildLeaderboardCombinedResponse_Entry* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildLeaderboardCombinedResponse_Entry*>(
               &_CMsgGuildLeaderboardCombinedResponse_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgGuildLeaderboardCombinedResponse_Entry& a, CMsgGuildLeaderboardCombinedResponse_Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildLeaderboardCombinedResponse_Entry* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildLeaderboardCombinedResponse_Entry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildLeaderboardCombinedResponse_Entry* New() const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponse_Entry>(nullptr);
  }

  CMsgGuildLeaderboardCombinedResponse_Entry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponse_Entry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildLeaderboardCombinedResponse_Entry& from);
  void MergeFrom(const CMsgGuildLeaderboardCombinedResponse_Entry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildLeaderboardCombinedResponse_Entry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildLeaderboardCombinedResponse.Entry";
  }
  protected:
  explicit CMsgGuildLeaderboardCombinedResponse_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kRFieldNumber = 2,
    kCFieldNumber = 3,
    kWFieldNumber = 4,
    kPFieldNumber = 5,
  };
  // optional uint32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 r = 2;
  bool has_r() const;
  private:
  bool _internal_has_r() const;
  public:
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::uint32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 c = 3;
  bool has_c() const;
  private:
  bool _internal_has_c() const;
  public:
  void clear_c();
  ::PROTOBUF_NAMESPACE_ID::uint32 c() const;
  void set_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_c() const;
  void _internal_set_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 w = 4;
  bool has_w() const;
  private:
  bool _internal_has_w() const;
  public:
  void clear_w();
  ::PROTOBUF_NAMESPACE_ID::uint32 w() const;
  void set_w(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_w() const;
  void _internal_set_w(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 p = 5;
  bool has_p() const;
  private:
  bool _internal_has_p() const;
  public:
  void clear_p();
  ::PROTOBUF_NAMESPACE_ID::uint32 p() const;
  void set_p(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_p() const;
  void _internal_set_p(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildLeaderboardCombinedResponse.Entry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 r_;
  ::PROTOBUF_NAMESPACE_ID::uint32 c_;
  ::PROTOBUF_NAMESPACE_ID::uint32 w_;
  ::PROTOBUF_NAMESPACE_ID::uint32 p_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildLeaderboardCombinedResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildLeaderboardCombinedResponse) */ {
 public:
  inline CMsgGuildLeaderboardCombinedResponse() : CMsgGuildLeaderboardCombinedResponse(nullptr) {}
  virtual ~CMsgGuildLeaderboardCombinedResponse();
  explicit constexpr CMsgGuildLeaderboardCombinedResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildLeaderboardCombinedResponse(const CMsgGuildLeaderboardCombinedResponse& from);
  CMsgGuildLeaderboardCombinedResponse(CMsgGuildLeaderboardCombinedResponse&& from) noexcept
    : CMsgGuildLeaderboardCombinedResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGuildLeaderboardCombinedResponse& operator=(const CMsgGuildLeaderboardCombinedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildLeaderboardCombinedResponse& operator=(CMsgGuildLeaderboardCombinedResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildLeaderboardCombinedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildLeaderboardCombinedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildLeaderboardCombinedResponse*>(
               &_CMsgGuildLeaderboardCombinedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgGuildLeaderboardCombinedResponse& a, CMsgGuildLeaderboardCombinedResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildLeaderboardCombinedResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildLeaderboardCombinedResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildLeaderboardCombinedResponse* New() const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponse>(nullptr);
  }

  CMsgGuildLeaderboardCombinedResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildLeaderboardCombinedResponse& from);
  void MergeFrom(const CMsgGuildLeaderboardCombinedResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildLeaderboardCombinedResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildLeaderboardCombinedResponse";
  }
  protected:
  explicit CMsgGuildLeaderboardCombinedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgGuildLeaderboardCombinedResponse_Entry Entry;

  // accessors -------------------------------------------------------

  enum : int {
    kEntriesFieldNumber = 4,
    kEventIdFieldNumber = 1,
    kRegionFieldNumber = 2,
    kLastUpdatedFieldNumber = 3,
  };
  // repeated .CMsgGuildLeaderboardCombinedResponse.Entry entries = 4;
  int entries_size() const;
  private:
  int _internal_entries_size() const;
  public:
  void clear_entries();
  ::CMsgGuildLeaderboardCombinedResponse_Entry* mutable_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildLeaderboardCombinedResponse_Entry >*
      mutable_entries();
  private:
  const ::CMsgGuildLeaderboardCombinedResponse_Entry& _internal_entries(int index) const;
  ::CMsgGuildLeaderboardCombinedResponse_Entry* _internal_add_entries();
  public:
  const ::CMsgGuildLeaderboardCombinedResponse_Entry& entries(int index) const;
  ::CMsgGuildLeaderboardCombinedResponse_Entry* add_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildLeaderboardCombinedResponse_Entry >&
      entries() const;

  // optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // optional uint32 region = 2;
  bool has_region() const;
  private:
  bool _internal_has_region() const;
  public:
  void clear_region();
  ::PROTOBUF_NAMESPACE_ID::uint32 region() const;
  void set_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_region() const;
  void _internal_set_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_updated = 3;
  bool has_last_updated() const;
  private:
  bool _internal_has_last_updated() const;
  public:
  void clear_last_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_updated() const;
  void set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_updated() const;
  void _internal_set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildLeaderboardCombinedResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildLeaderboardCombinedResponse_Entry > entries_;
  int event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 region_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_updated_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgGuildLeaderboardCombinedResponseV2 PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGuildLeaderboardCombinedResponseV2) */ {
 public:
  inline CMsgGuildLeaderboardCombinedResponseV2() : CMsgGuildLeaderboardCombinedResponseV2(nullptr) {}
  virtual ~CMsgGuildLeaderboardCombinedResponseV2();
  explicit constexpr CMsgGuildLeaderboardCombinedResponseV2(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGuildLeaderboardCombinedResponseV2(const CMsgGuildLeaderboardCombinedResponseV2& from);
  CMsgGuildLeaderboardCombinedResponseV2(CMsgGuildLeaderboardCombinedResponseV2&& from) noexcept
    : CMsgGuildLeaderboardCombinedResponseV2() {
    *this = ::std::move(from);
  }

  inline CMsgGuildLeaderboardCombinedResponseV2& operator=(const CMsgGuildLeaderboardCombinedResponseV2& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGuildLeaderboardCombinedResponseV2& operator=(CMsgGuildLeaderboardCombinedResponseV2&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGuildLeaderboardCombinedResponseV2& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGuildLeaderboardCombinedResponseV2* internal_default_instance() {
    return reinterpret_cast<const CMsgGuildLeaderboardCombinedResponseV2*>(
               &_CMsgGuildLeaderboardCombinedResponseV2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgGuildLeaderboardCombinedResponseV2& a, CMsgGuildLeaderboardCombinedResponseV2& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGuildLeaderboardCombinedResponseV2* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGuildLeaderboardCombinedResponseV2* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGuildLeaderboardCombinedResponseV2* New() const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponseV2>(nullptr);
  }

  CMsgGuildLeaderboardCombinedResponseV2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGuildLeaderboardCombinedResponseV2>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGuildLeaderboardCombinedResponseV2& from);
  void MergeFrom(const CMsgGuildLeaderboardCombinedResponseV2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGuildLeaderboardCombinedResponseV2* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGuildLeaderboardCombinedResponseV2";
  }
  protected:
  explicit CMsgGuildLeaderboardCombinedResponseV2(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 4,
    kRFieldNumber = 5,
    kCFieldNumber = 6,
    kWFieldNumber = 7,
    kPFieldNumber = 8,
    kEventIdFieldNumber = 1,
    kRegionFieldNumber = 2,
    kLastUpdatedFieldNumber = 3,
  };
  // repeated uint32 id = 4 [packed = true];
  int id_size() const;
  private:
  int _internal_id_size() const;
  public:
  void clear_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_id() const;
  void _internal_add_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 id(int index) const;
  void set_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_id();

  // repeated uint32 r = 5 [packed = true];
  int r_size() const;
  private:
  int _internal_r_size() const;
  public:
  void clear_r();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_r(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_r() const;
  void _internal_add_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_r();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 r(int index) const;
  void set_r(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_r(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      r() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_r();

  // repeated uint32 c = 6 [packed = true];
  int c_size() const;
  private:
  int _internal_c_size() const;
  public:
  void clear_c();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_c(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_c() const;
  void _internal_add_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_c();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 c(int index) const;
  void set_c(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_c(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      c() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_c();

  // repeated uint32 w = 7 [packed = true];
  int w_size() const;
  private:
  int _internal_w_size() const;
  public:
  void clear_w();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_w(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_w() const;
  void _internal_add_w(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_w();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 w(int index) const;
  void set_w(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_w(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      w() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_w();

  // repeated uint32 p = 8 [packed = true];
  int p_size() const;
  private:
  int _internal_p_size() const;
  public:
  void clear_p();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_p(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_p() const;
  void _internal_add_p(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_p();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 p(int index) const;
  void set_p(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_p(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      p() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_p();

  // optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // optional uint32 region = 2;
  bool has_region() const;
  private:
  bool _internal_has_region() const;
  public:
  void clear_region();
  ::PROTOBUF_NAMESPACE_ID::uint32 region() const;
  void set_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_region() const;
  void _internal_set_region(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_updated = 3;
  bool has_last_updated() const;
  private:
  bool _internal_has_last_updated() const;
  public:
  void clear_last_updated();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_updated() const;
  void set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_updated() const;
  void _internal_set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGuildLeaderboardCombinedResponseV2)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > id_;
  mutable std::atomic<int> _id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > r_;
  mutable std::atomic<int> _r_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > c_;
  mutable std::atomic<int> _c_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > w_;
  mutable std::atomic<int> _w_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > p_;
  mutable std::atomic<int> _p_cached_byte_size_;
  int event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 region_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_updated_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCClaimLeaderboardRewards PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCClaimLeaderboardRewards) */ {
 public:
  inline CMsgClientToGCClaimLeaderboardRewards() : CMsgClientToGCClaimLeaderboardRewards(nullptr) {}
  virtual ~CMsgClientToGCClaimLeaderboardRewards();
  explicit constexpr CMsgClientToGCClaimLeaderboardRewards(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCClaimLeaderboardRewards(const CMsgClientToGCClaimLeaderboardRewards& from);
  CMsgClientToGCClaimLeaderboardRewards(CMsgClientToGCClaimLeaderboardRewards&& from) noexcept
    : CMsgClientToGCClaimLeaderboardRewards() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCClaimLeaderboardRewards& operator=(const CMsgClientToGCClaimLeaderboardRewards& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCClaimLeaderboardRewards& operator=(CMsgClientToGCClaimLeaderboardRewards&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCClaimLeaderboardRewards& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCClaimLeaderboardRewards* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCClaimLeaderboardRewards*>(
               &_CMsgClientToGCClaimLeaderboardRewards_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgClientToGCClaimLeaderboardRewards& a, CMsgClientToGCClaimLeaderboardRewards& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCClaimLeaderboardRewards* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCClaimLeaderboardRewards* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCClaimLeaderboardRewards* New() const final {
    return CreateMaybeMessage<CMsgClientToGCClaimLeaderboardRewards>(nullptr);
  }

  CMsgClientToGCClaimLeaderboardRewards* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCClaimLeaderboardRewards>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCClaimLeaderboardRewards& from);
  void MergeFrom(const CMsgClientToGCClaimLeaderboardRewards& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCClaimLeaderboardRewards* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCClaimLeaderboardRewards";
  }
  protected:
  explicit CMsgClientToGCClaimLeaderboardRewards(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kEventIdFieldNumber = 2,
  };
  // optional uint32 guild_id = 1;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EEvent event_id() const;
  void set_event_id(::EEvent value);
  private:
  ::EEvent _internal_event_id() const;
  void _internal_set_event_id(::EEvent value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCClaimLeaderboardRewards)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  int event_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCClaimLeaderboardRewardsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCClaimLeaderboardRewardsResponse) */ {
 public:
  inline CMsgClientToGCClaimLeaderboardRewardsResponse() : CMsgClientToGCClaimLeaderboardRewardsResponse(nullptr) {}
  virtual ~CMsgClientToGCClaimLeaderboardRewardsResponse();
  explicit constexpr CMsgClientToGCClaimLeaderboardRewardsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCClaimLeaderboardRewardsResponse(const CMsgClientToGCClaimLeaderboardRewardsResponse& from);
  CMsgClientToGCClaimLeaderboardRewardsResponse(CMsgClientToGCClaimLeaderboardRewardsResponse&& from) noexcept
    : CMsgClientToGCClaimLeaderboardRewardsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCClaimLeaderboardRewardsResponse& operator=(const CMsgClientToGCClaimLeaderboardRewardsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCClaimLeaderboardRewardsResponse& operator=(CMsgClientToGCClaimLeaderboardRewardsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCClaimLeaderboardRewardsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCClaimLeaderboardRewardsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCClaimLeaderboardRewardsResponse*>(
               &_CMsgClientToGCClaimLeaderboardRewardsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientToGCClaimLeaderboardRewardsResponse& a, CMsgClientToGCClaimLeaderboardRewardsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCClaimLeaderboardRewardsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCClaimLeaderboardRewardsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCClaimLeaderboardRewardsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCClaimLeaderboardRewardsResponse>(nullptr);
  }

  CMsgClientToGCClaimLeaderboardRewardsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCClaimLeaderboardRewardsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCClaimLeaderboardRewardsResponse& from);
  void MergeFrom(const CMsgClientToGCClaimLeaderboardRewardsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCClaimLeaderboardRewardsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCClaimLeaderboardRewardsResponse";
  }
  protected:
  explicit CMsgClientToGCClaimLeaderboardRewardsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eInvalidEvent =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidEvent;
  static constexpr EResponse k_eInvalidGuild =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidGuild;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eInvalidGuildEvent =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eInvalidGuildEvent;
  static constexpr EResponse k_eDoesNotQualify =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eDoesNotQualify;
  static constexpr EResponse k_eAlreadyClaimed =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_k_eAlreadyClaimed;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
    kEventPointsFieldNumber = 2,
  };
  // optional .CMsgClientToGCClaimLeaderboardRewardsResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse result() const;
  void set_result(::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse value);
  private:
  ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse value);
  public:

  // optional uint32 event_points = 2;
  bool has_event_points() const;
  private:
  bool _internal_has_event_points() const;
  public:
  void clear_event_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_points() const;
  void set_event_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_points() const;
  void _internal_set_event_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCClaimLeaderboardRewardsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_points_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgGuildContract

// optional uint64 contract_id = 1;
inline bool CMsgGuildContract::_internal_has_contract_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_contract_id() const {
  return _internal_has_contract_id();
}
inline void CMsgGuildContract::clear_contract_id() {
  contract_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGuildContract::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGuildContract::contract_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.contract_id)
  return _internal_contract_id();
}
inline void CMsgGuildContract::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  contract_id_ = value;
}
inline void CMsgGuildContract::set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.contract_id)
}

// optional uint32 challenge_instance_id = 2;
inline bool CMsgGuildContract::_internal_has_challenge_instance_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_challenge_instance_id() const {
  return _internal_has_challenge_instance_id();
}
inline void CMsgGuildContract::clear_challenge_instance_id() {
  challenge_instance_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::_internal_challenge_instance_id() const {
  return challenge_instance_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::challenge_instance_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.challenge_instance_id)
  return _internal_challenge_instance_id();
}
inline void CMsgGuildContract::_internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  challenge_instance_id_ = value;
}
inline void CMsgGuildContract::set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_instance_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.challenge_instance_id)
}

// optional uint32 challenge_parameter = 3;
inline bool CMsgGuildContract::_internal_has_challenge_parameter() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_challenge_parameter() const {
  return _internal_has_challenge_parameter();
}
inline void CMsgGuildContract::clear_challenge_parameter() {
  challenge_parameter_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::_internal_challenge_parameter() const {
  return challenge_parameter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::challenge_parameter() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.challenge_parameter)
  return _internal_challenge_parameter();
}
inline void CMsgGuildContract::_internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  challenge_parameter_ = value;
}
inline void CMsgGuildContract::set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_parameter(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.challenge_parameter)
}

// optional uint32 challenge_timestamp = 4;
inline bool CMsgGuildContract::_internal_has_challenge_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_challenge_timestamp() const {
  return _internal_has_challenge_timestamp();
}
inline void CMsgGuildContract::clear_challenge_timestamp() {
  challenge_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::_internal_challenge_timestamp() const {
  return challenge_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::challenge_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.challenge_timestamp)
  return _internal_challenge_timestamp();
}
inline void CMsgGuildContract::_internal_set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  challenge_timestamp_ = value;
}
inline void CMsgGuildContract::set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.challenge_timestamp)
}

// optional uint32 assigned_account_id = 5;
inline bool CMsgGuildContract::_internal_has_assigned_account_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_assigned_account_id() const {
  return _internal_has_assigned_account_id();
}
inline void CMsgGuildContract::clear_assigned_account_id() {
  assigned_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::_internal_assigned_account_id() const {
  return assigned_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::assigned_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.assigned_account_id)
  return _internal_assigned_account_id();
}
inline void CMsgGuildContract::_internal_set_assigned_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  assigned_account_id_ = value;
}
inline void CMsgGuildContract::set_assigned_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_assigned_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.assigned_account_id)
}

// optional uint32 contract_flags = 6;
inline bool CMsgGuildContract::_internal_has_contract_flags() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgGuildContract::has_contract_flags() const {
  return _internal_has_contract_flags();
}
inline void CMsgGuildContract::clear_contract_flags() {
  contract_flags_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::_internal_contract_flags() const {
  return contract_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildContract::contract_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContract.contract_flags)
  return _internal_contract_flags();
}
inline void CMsgGuildContract::_internal_set_contract_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  contract_flags_ = value;
}
inline void CMsgGuildContract::set_contract_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contract_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGuildContract.contract_flags)
}

// -------------------------------------------------------------------

// CMsgGuildContractSlot

// optional .CMsgGuildContract contract = 1;
inline bool CMsgGuildContractSlot::_internal_has_contract() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || contract_ != nullptr);
  return value;
}
inline bool CMsgGuildContractSlot::has_contract() const {
  return _internal_has_contract();
}
inline void CMsgGuildContractSlot::clear_contract() {
  if (contract_ != nullptr) contract_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildContract& CMsgGuildContractSlot::_internal_contract() const {
  const ::CMsgGuildContract* p = contract_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildContract&>(
      ::_CMsgGuildContract_default_instance_);
}
inline const ::CMsgGuildContract& CMsgGuildContractSlot::contract() const {
  // @@protoc_insertion_point(field_get:CMsgGuildContractSlot.contract)
  return _internal_contract();
}
inline void CMsgGuildContractSlot::unsafe_arena_set_allocated_contract(
    ::CMsgGuildContract* contract) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  contract_ = contract;
  if (contract) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGuildContractSlot.contract)
}
inline ::CMsgGuildContract* CMsgGuildContractSlot::release_contract() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildContract* temp = contract_;
  contract_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGuildContract* CMsgGuildContractSlot::unsafe_arena_release_contract() {
  // @@protoc_insertion_point(field_release:CMsgGuildContractSlot.contract)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildContract* temp = contract_;
  contract_ = nullptr;
  return temp;
}
inline ::CMsgGuildContract* CMsgGuildContractSlot::_internal_mutable_contract() {
  _has_bits_[0] |= 0x00000001u;
  if (contract_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildContract>(GetArena());
    contract_ = p;
  }
  return contract_;
}
inline ::CMsgGuildContract* CMsgGuildContractSlot::mutable_contract() {
  // @@protoc_insertion_point(field_mutable:CMsgGuildContractSlot.contract)
  return _internal_mutable_contract();
}
inline void CMsgGuildContractSlot::set_allocated_contract(::CMsgGuildContract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete contract_;
  }
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(contract);
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  contract_ = contract;
  // @@protoc_insertion_point(field_set_allocated:CMsgGuildContractSlot.contract)
}

// -------------------------------------------------------------------

// CMsgAccountGuildEventData

// optional uint32 guild_points = 1;
inline bool CMsgAccountGuildEventData::_internal_has_guild_points() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_guild_points() const {
  return _internal_has_guild_points();
}
inline void CMsgAccountGuildEventData::clear_guild_points() {
  guild_points_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_guild_points() const {
  return guild_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::guild_points() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.guild_points)
  return _internal_guild_points();
}
inline void CMsgAccountGuildEventData::_internal_set_guild_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_points_ = value;
}
inline void CMsgAccountGuildEventData::set_guild_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_points(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.guild_points)
}

// optional uint32 contracts_refreshed_timestamp = 2;
inline bool CMsgAccountGuildEventData::_internal_has_contracts_refreshed_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_contracts_refreshed_timestamp() const {
  return _internal_has_contracts_refreshed_timestamp();
}
inline void CMsgAccountGuildEventData::clear_contracts_refreshed_timestamp() {
  contracts_refreshed_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_contracts_refreshed_timestamp() const {
  return contracts_refreshed_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::contracts_refreshed_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.contracts_refreshed_timestamp)
  return _internal_contracts_refreshed_timestamp();
}
inline void CMsgAccountGuildEventData::_internal_set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  contracts_refreshed_timestamp_ = value;
}
inline void CMsgAccountGuildEventData::set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contracts_refreshed_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.contracts_refreshed_timestamp)
}

// repeated .CMsgGuildContractSlot contract_slots = 3;
inline int CMsgAccountGuildEventData::_internal_contract_slots_size() const {
  return contract_slots_.size();
}
inline int CMsgAccountGuildEventData::contract_slots_size() const {
  return _internal_contract_slots_size();
}
inline void CMsgAccountGuildEventData::clear_contract_slots() {
  contract_slots_.Clear();
}
inline ::CMsgGuildContractSlot* CMsgAccountGuildEventData::mutable_contract_slots(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAccountGuildEventData.contract_slots)
  return contract_slots_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContractSlot >*
CMsgAccountGuildEventData::mutable_contract_slots() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAccountGuildEventData.contract_slots)
  return &contract_slots_;
}
inline const ::CMsgGuildContractSlot& CMsgAccountGuildEventData::_internal_contract_slots(int index) const {
  return contract_slots_.Get(index);
}
inline const ::CMsgGuildContractSlot& CMsgAccountGuildEventData::contract_slots(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.contract_slots)
  return _internal_contract_slots(index);
}
inline ::CMsgGuildContractSlot* CMsgAccountGuildEventData::_internal_add_contract_slots() {
  return contract_slots_.Add();
}
inline ::CMsgGuildContractSlot* CMsgAccountGuildEventData::add_contract_slots() {
  // @@protoc_insertion_point(field_add:CMsgAccountGuildEventData.contract_slots)
  return _internal_add_contract_slots();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContractSlot >&
CMsgAccountGuildEventData::contract_slots() const {
  // @@protoc_insertion_point(field_list:CMsgAccountGuildEventData.contract_slots)
  return contract_slots_;
}

// optional uint32 completed_challenge_count = 4;
inline bool CMsgAccountGuildEventData::_internal_has_completed_challenge_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_completed_challenge_count() const {
  return _internal_has_completed_challenge_count();
}
inline void CMsgAccountGuildEventData::clear_completed_challenge_count() {
  completed_challenge_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_completed_challenge_count() const {
  return completed_challenge_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::completed_challenge_count() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.completed_challenge_count)
  return _internal_completed_challenge_count();
}
inline void CMsgAccountGuildEventData::_internal_set_completed_challenge_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  completed_challenge_count_ = value;
}
inline void CMsgAccountGuildEventData::set_completed_challenge_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_completed_challenge_count(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.completed_challenge_count)
}

// optional uint32 challenges_refresh_timestamp = 5;
inline bool CMsgAccountGuildEventData::_internal_has_challenges_refresh_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_challenges_refresh_timestamp() const {
  return _internal_has_challenges_refresh_timestamp();
}
inline void CMsgAccountGuildEventData::clear_challenges_refresh_timestamp() {
  challenges_refresh_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_challenges_refresh_timestamp() const {
  return challenges_refresh_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::challenges_refresh_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.challenges_refresh_timestamp)
  return _internal_challenges_refresh_timestamp();
}
inline void CMsgAccountGuildEventData::_internal_set_challenges_refresh_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  challenges_refresh_timestamp_ = value;
}
inline void CMsgAccountGuildEventData::set_challenges_refresh_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenges_refresh_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.challenges_refresh_timestamp)
}

// optional uint32 guild_weekly_percentile = 6;
inline bool CMsgAccountGuildEventData::_internal_has_guild_weekly_percentile() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_guild_weekly_percentile() const {
  return _internal_has_guild_weekly_percentile();
}
inline void CMsgAccountGuildEventData::clear_guild_weekly_percentile() {
  guild_weekly_percentile_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_guild_weekly_percentile() const {
  return guild_weekly_percentile_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::guild_weekly_percentile() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.guild_weekly_percentile)
  return _internal_guild_weekly_percentile();
}
inline void CMsgAccountGuildEventData::_internal_set_guild_weekly_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  guild_weekly_percentile_ = value;
}
inline void CMsgAccountGuildEventData::set_guild_weekly_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_weekly_percentile(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.guild_weekly_percentile)
}

// optional uint32 guild_weekly_last_timestamp = 7;
inline bool CMsgAccountGuildEventData::_internal_has_guild_weekly_last_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_guild_weekly_last_timestamp() const {
  return _internal_has_guild_weekly_last_timestamp();
}
inline void CMsgAccountGuildEventData::clear_guild_weekly_last_timestamp() {
  guild_weekly_last_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_guild_weekly_last_timestamp() const {
  return guild_weekly_last_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::guild_weekly_last_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.guild_weekly_last_timestamp)
  return _internal_guild_weekly_last_timestamp();
}
inline void CMsgAccountGuildEventData::_internal_set_guild_weekly_last_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  guild_weekly_last_timestamp_ = value;
}
inline void CMsgAccountGuildEventData::set_guild_weekly_last_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_weekly_last_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.guild_weekly_last_timestamp)
}

// optional uint32 last_weekly_claim_time = 8;
inline bool CMsgAccountGuildEventData::_internal_has_last_weekly_claim_time() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_last_weekly_claim_time() const {
  return _internal_has_last_weekly_claim_time();
}
inline void CMsgAccountGuildEventData::clear_last_weekly_claim_time() {
  last_weekly_claim_time_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_last_weekly_claim_time() const {
  return last_weekly_claim_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::last_weekly_claim_time() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.last_weekly_claim_time)
  return _internal_last_weekly_claim_time();
}
inline void CMsgAccountGuildEventData::_internal_set_last_weekly_claim_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  last_weekly_claim_time_ = value;
}
inline void CMsgAccountGuildEventData::set_last_weekly_claim_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_weekly_claim_time(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.last_weekly_claim_time)
}

// optional uint32 guild_current_percentile = 9;
inline bool CMsgAccountGuildEventData::_internal_has_guild_current_percentile() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgAccountGuildEventData::has_guild_current_percentile() const {
  return _internal_has_guild_current_percentile();
}
inline void CMsgAccountGuildEventData::clear_guild_current_percentile() {
  guild_current_percentile_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::_internal_guild_current_percentile() const {
  return guild_current_percentile_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAccountGuildEventData::guild_current_percentile() const {
  // @@protoc_insertion_point(field_get:CMsgAccountGuildEventData.guild_current_percentile)
  return _internal_guild_current_percentile();
}
inline void CMsgAccountGuildEventData::_internal_set_guild_current_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  guild_current_percentile_ = value;
}
inline void CMsgAccountGuildEventData::set_guild_current_percentile(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_current_percentile(value);
  // @@protoc_insertion_point(field_set:CMsgAccountGuildEventData.guild_current_percentile)
}

// -------------------------------------------------------------------

// CMsgGuildActiveContracts

// optional uint32 contracts_refreshed_timestamp = 1;
inline bool CMsgGuildActiveContracts::_internal_has_contracts_refreshed_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildActiveContracts::has_contracts_refreshed_timestamp() const {
  return _internal_has_contracts_refreshed_timestamp();
}
inline void CMsgGuildActiveContracts::clear_contracts_refreshed_timestamp() {
  contracts_refreshed_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildActiveContracts::_internal_contracts_refreshed_timestamp() const {
  return contracts_refreshed_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildActiveContracts::contracts_refreshed_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildActiveContracts.contracts_refreshed_timestamp)
  return _internal_contracts_refreshed_timestamp();
}
inline void CMsgGuildActiveContracts::_internal_set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  contracts_refreshed_timestamp_ = value;
}
inline void CMsgGuildActiveContracts::set_contracts_refreshed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contracts_refreshed_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildActiveContracts.contracts_refreshed_timestamp)
}

// repeated .CMsgGuildContract contracts = 2;
inline int CMsgGuildActiveContracts::_internal_contracts_size() const {
  return contracts_.size();
}
inline int CMsgGuildActiveContracts::contracts_size() const {
  return _internal_contracts_size();
}
inline void CMsgGuildActiveContracts::clear_contracts() {
  contracts_.Clear();
}
inline ::CMsgGuildContract* CMsgGuildActiveContracts::mutable_contracts(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildActiveContracts.contracts)
  return contracts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContract >*
CMsgGuildActiveContracts::mutable_contracts() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildActiveContracts.contracts)
  return &contracts_;
}
inline const ::CMsgGuildContract& CMsgGuildActiveContracts::_internal_contracts(int index) const {
  return contracts_.Get(index);
}
inline const ::CMsgGuildContract& CMsgGuildActiveContracts::contracts(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildActiveContracts.contracts)
  return _internal_contracts(index);
}
inline ::CMsgGuildContract* CMsgGuildActiveContracts::_internal_add_contracts() {
  return contracts_.Add();
}
inline ::CMsgGuildContract* CMsgGuildActiveContracts::add_contracts() {
  // @@protoc_insertion_point(field_add:CMsgGuildActiveContracts.contracts)
  return _internal_add_contracts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildContract >&
CMsgGuildActiveContracts::contracts() const {
  // @@protoc_insertion_point(field_list:CMsgGuildActiveContracts.contracts)
  return contracts_;
}

// -------------------------------------------------------------------

// CMsgGuildChallenge

// optional uint32 challenge_instance_id = 1;
inline bool CMsgGuildChallenge::_internal_has_challenge_instance_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildChallenge::has_challenge_instance_id() const {
  return _internal_has_challenge_instance_id();
}
inline void CMsgGuildChallenge::clear_challenge_instance_id() {
  challenge_instance_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::_internal_challenge_instance_id() const {
  return challenge_instance_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::challenge_instance_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildChallenge.challenge_instance_id)
  return _internal_challenge_instance_id();
}
inline void CMsgGuildChallenge::_internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  challenge_instance_id_ = value;
}
inline void CMsgGuildChallenge::set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_instance_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildChallenge.challenge_instance_id)
}

// optional uint32 challenge_parameter = 2;
inline bool CMsgGuildChallenge::_internal_has_challenge_parameter() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildChallenge::has_challenge_parameter() const {
  return _internal_has_challenge_parameter();
}
inline void CMsgGuildChallenge::clear_challenge_parameter() {
  challenge_parameter_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::_internal_challenge_parameter() const {
  return challenge_parameter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::challenge_parameter() const {
  // @@protoc_insertion_point(field_get:CMsgGuildChallenge.challenge_parameter)
  return _internal_challenge_parameter();
}
inline void CMsgGuildChallenge::_internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  challenge_parameter_ = value;
}
inline void CMsgGuildChallenge::set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_parameter(value);
  // @@protoc_insertion_point(field_set:CMsgGuildChallenge.challenge_parameter)
}

// optional uint32 challenge_timestamp = 3;
inline bool CMsgGuildChallenge::_internal_has_challenge_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildChallenge::has_challenge_timestamp() const {
  return _internal_has_challenge_timestamp();
}
inline void CMsgGuildChallenge::clear_challenge_timestamp() {
  challenge_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::_internal_challenge_timestamp() const {
  return challenge_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::challenge_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgGuildChallenge.challenge_timestamp)
  return _internal_challenge_timestamp();
}
inline void CMsgGuildChallenge::_internal_set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  challenge_timestamp_ = value;
}
inline void CMsgGuildChallenge::set_challenge_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgGuildChallenge.challenge_timestamp)
}

// optional uint32 challenge_progress = 4;
inline bool CMsgGuildChallenge::_internal_has_challenge_progress() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildChallenge::has_challenge_progress() const {
  return _internal_has_challenge_progress();
}
inline void CMsgGuildChallenge::clear_challenge_progress() {
  challenge_progress_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::_internal_challenge_progress() const {
  return challenge_progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::challenge_progress() const {
  // @@protoc_insertion_point(field_get:CMsgGuildChallenge.challenge_progress)
  return _internal_challenge_progress();
}
inline void CMsgGuildChallenge::_internal_set_challenge_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  challenge_progress_ = value;
}
inline void CMsgGuildChallenge::set_challenge_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_progress(value);
  // @@protoc_insertion_point(field_set:CMsgGuildChallenge.challenge_progress)
}

// optional uint32 challenge_flags = 5;
inline bool CMsgGuildChallenge::_internal_has_challenge_flags() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildChallenge::has_challenge_flags() const {
  return _internal_has_challenge_flags();
}
inline void CMsgGuildChallenge::clear_challenge_flags() {
  challenge_flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::_internal_challenge_flags() const {
  return challenge_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildChallenge::challenge_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGuildChallenge.challenge_flags)
  return _internal_challenge_flags();
}
inline void CMsgGuildChallenge::_internal_set_challenge_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  challenge_flags_ = value;
}
inline void CMsgGuildChallenge::set_challenge_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGuildChallenge.challenge_flags)
}

// -------------------------------------------------------------------

// CMsgGuildEventMember

// optional uint32 account_id = 1;
inline bool CMsgGuildEventMember::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildEventMember::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGuildEventMember::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildEventMember::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildEventMember::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildEventMember.account_id)
  return _internal_account_id();
}
inline void CMsgGuildEventMember::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CMsgGuildEventMember::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildEventMember.account_id)
}

// optional uint32 guild_points_earned = 2;
inline bool CMsgGuildEventMember::_internal_has_guild_points_earned() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildEventMember::has_guild_points_earned() const {
  return _internal_has_guild_points_earned();
}
inline void CMsgGuildEventMember::clear_guild_points_earned() {
  guild_points_earned_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildEventMember::_internal_guild_points_earned() const {
  return guild_points_earned_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildEventMember::guild_points_earned() const {
  // @@protoc_insertion_point(field_get:CMsgGuildEventMember.guild_points_earned)
  return _internal_guild_points_earned();
}
inline void CMsgGuildEventMember::_internal_set_guild_points_earned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  guild_points_earned_ = value;
}
inline void CMsgGuildEventMember::set_guild_points_earned(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_points_earned(value);
  // @@protoc_insertion_point(field_set:CMsgGuildEventMember.guild_points_earned)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildEventData

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRequestAccountGuildEventData::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildEventData::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestAccountGuildEventData::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestAccountGuildEventData::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestAccountGuildEventData::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildEventData.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestAccountGuildEventData::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCRequestAccountGuildEventData::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildEventData.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestAccountGuildEventData::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildEventData::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRequestAccountGuildEventData::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCRequestAccountGuildEventData::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCRequestAccountGuildEventData::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildEventData.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRequestAccountGuildEventData::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCRequestAccountGuildEventData::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildEventData.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestAccountGuildEventDataResponse

// optional .CMsgClientToGCRequestAccountGuildEventDataResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse CMsgClientToGCRequestAccountGuildEventDataResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildEventDataResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_set_result(::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse value) {
  assert(::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::set_result(::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildEventDataResponse.result)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EEvent CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCRequestAccountGuildEventDataResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildEventDataResponse.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestAccountGuildEventDataResponse.event_id)
}

// optional .CMsgAccountGuildEventData event_data = 3;
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_has_event_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || event_data_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestAccountGuildEventDataResponse::has_event_data() const {
  return _internal_has_event_data();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::clear_event_data() {
  if (event_data_ != nullptr) event_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountGuildEventData& CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_event_data() const {
  const ::CMsgAccountGuildEventData* p = event_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountGuildEventData&>(
      ::_CMsgAccountGuildEventData_default_instance_);
}
inline const ::CMsgAccountGuildEventData& CMsgClientToGCRequestAccountGuildEventDataResponse::event_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestAccountGuildEventDataResponse.event_data)
  return _internal_event_data();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::unsafe_arena_set_allocated_event_data(
    ::CMsgAccountGuildEventData* event_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(event_data_);
  }
  event_data_ = event_data;
  if (event_data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestAccountGuildEventDataResponse.event_data)
}
inline ::CMsgAccountGuildEventData* CMsgClientToGCRequestAccountGuildEventDataResponse::release_event_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildEventData* temp = event_data_;
  event_data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgAccountGuildEventData* CMsgClientToGCRequestAccountGuildEventDataResponse::unsafe_arena_release_event_data() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestAccountGuildEventDataResponse.event_data)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildEventData* temp = event_data_;
  event_data_ = nullptr;
  return temp;
}
inline ::CMsgAccountGuildEventData* CMsgClientToGCRequestAccountGuildEventDataResponse::_internal_mutable_event_data() {
  _has_bits_[0] |= 0x00000001u;
  if (event_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountGuildEventData>(GetArena());
    event_data_ = p;
  }
  return event_data_;
}
inline ::CMsgAccountGuildEventData* CMsgClientToGCRequestAccountGuildEventDataResponse::mutable_event_data() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestAccountGuildEventDataResponse.event_data)
  return _internal_mutable_event_data();
}
inline void CMsgClientToGCRequestAccountGuildEventDataResponse::set_allocated_event_data(::CMsgAccountGuildEventData* event_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete event_data_;
  }
  if (event_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(event_data);
    if (message_arena != submessage_arena) {
      event_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, event_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_data_ = event_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestAccountGuildEventDataResponse.event_data)
}

// -------------------------------------------------------------------

// CMsgGCToClientAccountGuildEventDataUpdated

// optional uint32 guild_id = 1;
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientAccountGuildEventDataUpdated::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientAccountGuildEventDataUpdated::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAccountGuildEventDataUpdated.guild_id)
  return _internal_guild_id();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  guild_id_ = value;
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientAccountGuildEventDataUpdated.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EEvent CMsgGCToClientAccountGuildEventDataUpdated::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgGCToClientAccountGuildEventDataUpdated::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAccountGuildEventDataUpdated.event_id)
  return _internal_event_id();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientAccountGuildEventDataUpdated.event_id)
}

// optional uint32 update_flags = 3;
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_has_update_flags() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::has_update_flags() const {
  return _internal_has_update_flags();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::clear_update_flags() {
  update_flags_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientAccountGuildEventDataUpdated::_internal_update_flags() const {
  return update_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientAccountGuildEventDataUpdated::update_flags() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAccountGuildEventDataUpdated.update_flags)
  return _internal_update_flags();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::_internal_set_update_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  update_flags_ = value;
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::set_update_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_update_flags(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientAccountGuildEventDataUpdated.update_flags)
}

// optional .CMsgAccountGuildEventData guild_event_data = 4;
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_has_guild_event_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || guild_event_data_ != nullptr);
  return value;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::has_guild_event_data() const {
  return _internal_has_guild_event_data();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::clear_guild_event_data() {
  if (guild_event_data_ != nullptr) guild_event_data_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAccountGuildEventData& CMsgGCToClientAccountGuildEventDataUpdated::_internal_guild_event_data() const {
  const ::CMsgAccountGuildEventData* p = guild_event_data_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAccountGuildEventData&>(
      ::_CMsgAccountGuildEventData_default_instance_);
}
inline const ::CMsgAccountGuildEventData& CMsgGCToClientAccountGuildEventDataUpdated::guild_event_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAccountGuildEventDataUpdated.guild_event_data)
  return _internal_guild_event_data();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::unsafe_arena_set_allocated_guild_event_data(
    ::CMsgAccountGuildEventData* guild_event_data) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(guild_event_data_);
  }
  guild_event_data_ = guild_event_data;
  if (guild_event_data) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientAccountGuildEventDataUpdated.guild_event_data)
}
inline ::CMsgAccountGuildEventData* CMsgGCToClientAccountGuildEventDataUpdated::release_guild_event_data() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildEventData* temp = guild_event_data_;
  guild_event_data_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgAccountGuildEventData* CMsgGCToClientAccountGuildEventDataUpdated::unsafe_arena_release_guild_event_data() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientAccountGuildEventDataUpdated.guild_event_data)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAccountGuildEventData* temp = guild_event_data_;
  guild_event_data_ = nullptr;
  return temp;
}
inline ::CMsgAccountGuildEventData* CMsgGCToClientAccountGuildEventDataUpdated::_internal_mutable_guild_event_data() {
  _has_bits_[0] |= 0x00000001u;
  if (guild_event_data_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAccountGuildEventData>(GetArena());
    guild_event_data_ = p;
  }
  return guild_event_data_;
}
inline ::CMsgAccountGuildEventData* CMsgGCToClientAccountGuildEventDataUpdated::mutable_guild_event_data() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientAccountGuildEventDataUpdated.guild_event_data)
  return _internal_mutable_guild_event_data();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::set_allocated_guild_event_data(::CMsgAccountGuildEventData* guild_event_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete guild_event_data_;
  }
  if (guild_event_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(guild_event_data);
    if (message_arena != submessage_arena) {
      guild_event_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, guild_event_data, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  guild_event_data_ = guild_event_data;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientAccountGuildEventDataUpdated.guild_event_data)
}

// optional bool contracts_updated = 5;
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_has_contracts_updated() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::has_contracts_updated() const {
  return _internal_has_contracts_updated();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::clear_contracts_updated() {
  contracts_updated_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::_internal_contracts_updated() const {
  return contracts_updated_;
}
inline bool CMsgGCToClientAccountGuildEventDataUpdated::contracts_updated() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientAccountGuildEventDataUpdated.contracts_updated)
  return _internal_contracts_updated();
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::_internal_set_contracts_updated(bool value) {
  _has_bits_[0] |= 0x00000010u;
  contracts_updated_ = value;
}
inline void CMsgGCToClientAccountGuildEventDataUpdated::set_contracts_updated(bool value) {
  _internal_set_contracts_updated(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientAccountGuildEventDataUpdated.contracts_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestActiveGuildContracts

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRequestActiveGuildContracts::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildContracts::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestActiveGuildContracts::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestActiveGuildContracts::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestActiveGuildContracts::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildContracts.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestActiveGuildContracts::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCRequestActiveGuildContracts::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildContracts.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestActiveGuildContracts::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildContracts::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRequestActiveGuildContracts::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCRequestActiveGuildContracts::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCRequestActiveGuildContracts::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildContracts.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRequestActiveGuildContracts::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCRequestActiveGuildContracts::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildContracts.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestActiveGuildContractsResponse

// optional .CMsgClientToGCRequestActiveGuildContractsResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse CMsgClientToGCRequestActiveGuildContractsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse CMsgClientToGCRequestActiveGuildContractsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildContractsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::_internal_set_result(::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse value) {
  assert(::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::set_result(::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildContractsResponse.result)
}

// optional .CMsgGuildActiveContracts active_contracts = 2;
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::_internal_has_active_contracts() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || active_contracts_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::has_active_contracts() const {
  return _internal_has_active_contracts();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::clear_active_contracts() {
  if (active_contracts_ != nullptr) active_contracts_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildActiveContracts& CMsgClientToGCRequestActiveGuildContractsResponse::_internal_active_contracts() const {
  const ::CMsgGuildActiveContracts* p = active_contracts_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildActiveContracts&>(
      ::_CMsgGuildActiveContracts_default_instance_);
}
inline const ::CMsgGuildActiveContracts& CMsgClientToGCRequestActiveGuildContractsResponse::active_contracts() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildContractsResponse.active_contracts)
  return _internal_active_contracts();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::unsafe_arena_set_allocated_active_contracts(
    ::CMsgGuildActiveContracts* active_contracts) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(active_contracts_);
  }
  active_contracts_ = active_contracts;
  if (active_contracts) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestActiveGuildContractsResponse.active_contracts)
}
inline ::CMsgGuildActiveContracts* CMsgClientToGCRequestActiveGuildContractsResponse::release_active_contracts() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildActiveContracts* temp = active_contracts_;
  active_contracts_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGuildActiveContracts* CMsgClientToGCRequestActiveGuildContractsResponse::unsafe_arena_release_active_contracts() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestActiveGuildContractsResponse.active_contracts)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildActiveContracts* temp = active_contracts_;
  active_contracts_ = nullptr;
  return temp;
}
inline ::CMsgGuildActiveContracts* CMsgClientToGCRequestActiveGuildContractsResponse::_internal_mutable_active_contracts() {
  _has_bits_[0] |= 0x00000001u;
  if (active_contracts_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildActiveContracts>(GetArena());
    active_contracts_ = p;
  }
  return active_contracts_;
}
inline ::CMsgGuildActiveContracts* CMsgClientToGCRequestActiveGuildContractsResponse::mutable_active_contracts() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestActiveGuildContractsResponse.active_contracts)
  return _internal_mutable_active_contracts();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::set_allocated_active_contracts(::CMsgGuildActiveContracts* active_contracts) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete active_contracts_;
  }
  if (active_contracts) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(active_contracts);
    if (message_arena != submessage_arena) {
      active_contracts = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_contracts, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  active_contracts_ = active_contracts;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestActiveGuildContractsResponse.active_contracts)
}

// optional .CMsgGuildChallenge active_challenges = 3;
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::_internal_has_active_challenges() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || active_challenges_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildContractsResponse::has_active_challenges() const {
  return _internal_has_active_challenges();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::clear_active_challenges() {
  if (active_challenges_ != nullptr) active_challenges_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgGuildChallenge& CMsgClientToGCRequestActiveGuildContractsResponse::_internal_active_challenges() const {
  const ::CMsgGuildChallenge* p = active_challenges_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildChallenge&>(
      ::_CMsgGuildChallenge_default_instance_);
}
inline const ::CMsgGuildChallenge& CMsgClientToGCRequestActiveGuildContractsResponse::active_challenges() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildContractsResponse.active_challenges)
  return _internal_active_challenges();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::unsafe_arena_set_allocated_active_challenges(
    ::CMsgGuildChallenge* active_challenges) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(active_challenges_);
  }
  active_challenges_ = active_challenges;
  if (active_challenges) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestActiveGuildContractsResponse.active_challenges)
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildContractsResponse::release_active_challenges() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgGuildChallenge* temp = active_challenges_;
  active_challenges_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildContractsResponse::unsafe_arena_release_active_challenges() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestActiveGuildContractsResponse.active_challenges)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgGuildChallenge* temp = active_challenges_;
  active_challenges_ = nullptr;
  return temp;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildContractsResponse::_internal_mutable_active_challenges() {
  _has_bits_[0] |= 0x00000002u;
  if (active_challenges_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildChallenge>(GetArena());
    active_challenges_ = p;
  }
  return active_challenges_;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildContractsResponse::mutable_active_challenges() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestActiveGuildContractsResponse.active_challenges)
  return _internal_mutable_active_challenges();
}
inline void CMsgClientToGCRequestActiveGuildContractsResponse::set_allocated_active_challenges(::CMsgGuildChallenge* active_challenges) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete active_challenges_;
  }
  if (active_challenges) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(active_challenges);
    if (message_arena != submessage_arena) {
      active_challenges = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_challenges, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  active_challenges_ = active_challenges;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestActiveGuildContractsResponse.active_challenges)
}

// -------------------------------------------------------------------

// CMsgGCToClientActiveGuildContractsUpdated

// optional uint32 guild_id = 1;
inline bool CMsgGCToClientActiveGuildContractsUpdated::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientActiveGuildContractsUpdated::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGCToClientActiveGuildContractsUpdated::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientActiveGuildContractsUpdated::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientActiveGuildContractsUpdated::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientActiveGuildContractsUpdated.guild_id)
  return _internal_guild_id();
}
inline void CMsgGCToClientActiveGuildContractsUpdated::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgGCToClientActiveGuildContractsUpdated::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientActiveGuildContractsUpdated.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgGCToClientActiveGuildContractsUpdated::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientActiveGuildContractsUpdated::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGCToClientActiveGuildContractsUpdated::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgGCToClientActiveGuildContractsUpdated::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgGCToClientActiveGuildContractsUpdated::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientActiveGuildContractsUpdated.event_id)
  return _internal_event_id();
}
inline void CMsgGCToClientActiveGuildContractsUpdated::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgGCToClientActiveGuildContractsUpdated::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientActiveGuildContractsUpdated.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectGuildContract

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCSelectGuildContract::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSelectGuildContract::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCSelectGuildContract::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSelectGuildContract::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSelectGuildContract::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectGuildContract.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCSelectGuildContract::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCSelectGuildContract::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectGuildContract.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCSelectGuildContract::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSelectGuildContract::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCSelectGuildContract::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCSelectGuildContract::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCSelectGuildContract::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectGuildContract.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCSelectGuildContract::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCSelectGuildContract::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectGuildContract.event_id)
}

// optional uint64 contract_id = 3;
inline bool CMsgClientToGCSelectGuildContract::_internal_has_contract_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSelectGuildContract::has_contract_id() const {
  return _internal_has_contract_id();
}
inline void CMsgClientToGCSelectGuildContract::clear_contract_id() {
  contract_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSelectGuildContract::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSelectGuildContract::contract_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectGuildContract.contract_id)
  return _internal_contract_id();
}
inline void CMsgClientToGCSelectGuildContract::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  contract_id_ = value;
}
inline void CMsgClientToGCSelectGuildContract::set_contract_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectGuildContract.contract_id)
}

// optional uint32 contract_slot = 4;
inline bool CMsgClientToGCSelectGuildContract::_internal_has_contract_slot() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCSelectGuildContract::has_contract_slot() const {
  return _internal_has_contract_slot();
}
inline void CMsgClientToGCSelectGuildContract::clear_contract_slot() {
  contract_slot_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSelectGuildContract::_internal_contract_slot() const {
  return contract_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSelectGuildContract::contract_slot() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectGuildContract.contract_slot)
  return _internal_contract_slot();
}
inline void CMsgClientToGCSelectGuildContract::_internal_set_contract_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  contract_slot_ = value;
}
inline void CMsgClientToGCSelectGuildContract::set_contract_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contract_slot(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectGuildContract.contract_slot)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectGuildContractResponse

// optional .CMsgClientToGCSelectGuildContractResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSelectGuildContractResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSelectGuildContractResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSelectGuildContractResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSelectGuildContractResponse_EResponse CMsgClientToGCSelectGuildContractResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSelectGuildContractResponse_EResponse >(result_);
}
inline ::CMsgClientToGCSelectGuildContractResponse_EResponse CMsgClientToGCSelectGuildContractResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSelectGuildContractResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSelectGuildContractResponse::_internal_set_result(::CMsgClientToGCSelectGuildContractResponse_EResponse value) {
  assert(::CMsgClientToGCSelectGuildContractResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCSelectGuildContractResponse::set_result(::CMsgClientToGCSelectGuildContractResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSelectGuildContractResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestActiveGuildChallenge

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRequestActiveGuildChallenge::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildChallenge::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestActiveGuildChallenge::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestActiveGuildChallenge::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestActiveGuildChallenge::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildChallenge.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestActiveGuildChallenge::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCRequestActiveGuildChallenge::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildChallenge.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestActiveGuildChallenge::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildChallenge::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRequestActiveGuildChallenge::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCRequestActiveGuildChallenge::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCRequestActiveGuildChallenge::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildChallenge.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRequestActiveGuildChallenge::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCRequestActiveGuildChallenge::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildChallenge.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestActiveGuildChallengeResponse

// optional .CMsgClientToGCRequestActiveGuildChallengeResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildChallengeResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse CMsgClientToGCRequestActiveGuildChallengeResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildChallengeResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_set_result(::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse value) {
  assert(::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::set_result(::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestActiveGuildChallengeResponse.result)
}

// optional .CMsgGuildChallenge active_challenge = 2;
inline bool CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_has_active_challenge() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || active_challenge_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestActiveGuildChallengeResponse::has_active_challenge() const {
  return _internal_has_active_challenge();
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::clear_active_challenge() {
  if (active_challenge_ != nullptr) active_challenge_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildChallenge& CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_active_challenge() const {
  const ::CMsgGuildChallenge* p = active_challenge_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildChallenge&>(
      ::_CMsgGuildChallenge_default_instance_);
}
inline const ::CMsgGuildChallenge& CMsgClientToGCRequestActiveGuildChallengeResponse::active_challenge() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestActiveGuildChallengeResponse.active_challenge)
  return _internal_active_challenge();
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::unsafe_arena_set_allocated_active_challenge(
    ::CMsgGuildChallenge* active_challenge) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(active_challenge_);
  }
  active_challenge_ = active_challenge;
  if (active_challenge) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestActiveGuildChallengeResponse.active_challenge)
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildChallengeResponse::release_active_challenge() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildChallenge* temp = active_challenge_;
  active_challenge_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildChallengeResponse::unsafe_arena_release_active_challenge() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestActiveGuildChallengeResponse.active_challenge)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildChallenge* temp = active_challenge_;
  active_challenge_ = nullptr;
  return temp;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildChallengeResponse::_internal_mutable_active_challenge() {
  _has_bits_[0] |= 0x00000001u;
  if (active_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildChallenge>(GetArena());
    active_challenge_ = p;
  }
  return active_challenge_;
}
inline ::CMsgGuildChallenge* CMsgClientToGCRequestActiveGuildChallengeResponse::mutable_active_challenge() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestActiveGuildChallengeResponse.active_challenge)
  return _internal_mutable_active_challenge();
}
inline void CMsgClientToGCRequestActiveGuildChallengeResponse::set_allocated_active_challenge(::CMsgGuildChallenge* active_challenge) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete active_challenge_;
  }
  if (active_challenge) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(active_challenge);
    if (message_arena != submessage_arena) {
      active_challenge = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  active_challenge_ = active_challenge;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestActiveGuildChallengeResponse.active_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientActiveGuildChallengeUpdated

// optional uint32 guild_id = 1;
inline bool CMsgGCToClientActiveGuildChallengeUpdated::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientActiveGuildChallengeUpdated::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientActiveGuildChallengeUpdated::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientActiveGuildChallengeUpdated::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientActiveGuildChallengeUpdated.guild_id)
  return _internal_guild_id();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  guild_id_ = value;
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientActiveGuildChallengeUpdated.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgGCToClientActiveGuildChallengeUpdated::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToClientActiveGuildChallengeUpdated::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::EEvent CMsgGCToClientActiveGuildChallengeUpdated::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgGCToClientActiveGuildChallengeUpdated::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientActiveGuildChallengeUpdated.event_id)
  return _internal_event_id();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientActiveGuildChallengeUpdated.event_id)
}

// optional .CMsgGuildChallenge active_challenge = 3;
inline bool CMsgGCToClientActiveGuildChallengeUpdated::_internal_has_active_challenge() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || active_challenge_ != nullptr);
  return value;
}
inline bool CMsgGCToClientActiveGuildChallengeUpdated::has_active_challenge() const {
  return _internal_has_active_challenge();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::clear_active_challenge() {
  if (active_challenge_ != nullptr) active_challenge_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGuildChallenge& CMsgGCToClientActiveGuildChallengeUpdated::_internal_active_challenge() const {
  const ::CMsgGuildChallenge* p = active_challenge_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGuildChallenge&>(
      ::_CMsgGuildChallenge_default_instance_);
}
inline const ::CMsgGuildChallenge& CMsgGCToClientActiveGuildChallengeUpdated::active_challenge() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientActiveGuildChallengeUpdated.active_challenge)
  return _internal_active_challenge();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::unsafe_arena_set_allocated_active_challenge(
    ::CMsgGuildChallenge* active_challenge) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(active_challenge_);
  }
  active_challenge_ = active_challenge;
  if (active_challenge) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientActiveGuildChallengeUpdated.active_challenge)
}
inline ::CMsgGuildChallenge* CMsgGCToClientActiveGuildChallengeUpdated::release_active_challenge() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildChallenge* temp = active_challenge_;
  active_challenge_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGuildChallenge* CMsgGCToClientActiveGuildChallengeUpdated::unsafe_arena_release_active_challenge() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientActiveGuildChallengeUpdated.active_challenge)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGuildChallenge* temp = active_challenge_;
  active_challenge_ = nullptr;
  return temp;
}
inline ::CMsgGuildChallenge* CMsgGCToClientActiveGuildChallengeUpdated::_internal_mutable_active_challenge() {
  _has_bits_[0] |= 0x00000001u;
  if (active_challenge_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGuildChallenge>(GetArena());
    active_challenge_ = p;
  }
  return active_challenge_;
}
inline ::CMsgGuildChallenge* CMsgGCToClientActiveGuildChallengeUpdated::mutable_active_challenge() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientActiveGuildChallengeUpdated.active_challenge)
  return _internal_mutable_active_challenge();
}
inline void CMsgGCToClientActiveGuildChallengeUpdated::set_allocated_active_challenge(::CMsgGuildChallenge* active_challenge) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete active_challenge_;
  }
  if (active_challenge) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(active_challenge);
    if (message_arena != submessage_arena) {
      active_challenge = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, active_challenge, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  active_challenge_ = active_challenge;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientActiveGuildChallengeUpdated.active_challenge)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildEventMembers

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCRequestGuildEventMembers::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildEventMembers::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCRequestGuildEventMembers::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestGuildEventMembers::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestGuildEventMembers::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildEventMembers.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCRequestGuildEventMembers::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCRequestGuildEventMembers::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildEventMembers.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestGuildEventMembers::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildEventMembers::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCRequestGuildEventMembers::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCRequestGuildEventMembers::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCRequestGuildEventMembers::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildEventMembers.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCRequestGuildEventMembers::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCRequestGuildEventMembers::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildEventMembers.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestGuildEventMembersResponse

// optional .CMsgClientToGCRequestGuildEventMembersResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestGuildEventMembersResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestGuildEventMembersResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestGuildEventMembersResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse CMsgClientToGCRequestGuildEventMembersResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse CMsgClientToGCRequestGuildEventMembersResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildEventMembersResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestGuildEventMembersResponse::_internal_set_result(::CMsgClientToGCRequestGuildEventMembersResponse_EResponse value) {
  assert(::CMsgClientToGCRequestGuildEventMembersResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCRequestGuildEventMembersResponse::set_result(::CMsgClientToGCRequestGuildEventMembersResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestGuildEventMembersResponse.result)
}

// repeated .CMsgGuildEventMember members = 2;
inline int CMsgClientToGCRequestGuildEventMembersResponse::_internal_members_size() const {
  return members_.size();
}
inline int CMsgClientToGCRequestGuildEventMembersResponse::members_size() const {
  return _internal_members_size();
}
inline void CMsgClientToGCRequestGuildEventMembersResponse::clear_members() {
  members_.Clear();
}
inline ::CMsgGuildEventMember* CMsgClientToGCRequestGuildEventMembersResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestGuildEventMembersResponse.members)
  return members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildEventMember >*
CMsgClientToGCRequestGuildEventMembersResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestGuildEventMembersResponse.members)
  return &members_;
}
inline const ::CMsgGuildEventMember& CMsgClientToGCRequestGuildEventMembersResponse::_internal_members(int index) const {
  return members_.Get(index);
}
inline const ::CMsgGuildEventMember& CMsgClientToGCRequestGuildEventMembersResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestGuildEventMembersResponse.members)
  return _internal_members(index);
}
inline ::CMsgGuildEventMember* CMsgClientToGCRequestGuildEventMembersResponse::_internal_add_members() {
  return members_.Add();
}
inline ::CMsgGuildEventMember* CMsgClientToGCRequestGuildEventMembersResponse::add_members() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestGuildEventMembersResponse.members)
  return _internal_add_members();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildEventMember >&
CMsgClientToGCRequestGuildEventMembersResponse::members() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestGuildEventMembersResponse.members)
  return members_;
}

// -------------------------------------------------------------------

// CMsgGuildLeaderboardCombinedResponse_Entry

// optional uint32 id = 1;
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::has_id() const {
  return _internal_has_id();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::clear_id() {
  id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.Entry.id)
  return _internal_id();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.Entry.id)
}

// optional uint32 r = 2;
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::_internal_has_r() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::has_r() const {
  return _internal_has_r();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::clear_r() {
  r_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::r() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.Entry.r)
  return _internal_r();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::_internal_set_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  r_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::set_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.Entry.r)
}

// optional uint32 c = 3;
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::_internal_has_c() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::has_c() const {
  return _internal_has_c();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::clear_c() {
  c_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::_internal_c() const {
  return c_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::c() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.Entry.c)
  return _internal_c();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::_internal_set_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  c_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::set_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_c(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.Entry.c)
}

// optional uint32 w = 4;
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::_internal_has_w() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::has_w() const {
  return _internal_has_w();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::clear_w() {
  w_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::_internal_w() const {
  return w_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::w() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.Entry.w)
  return _internal_w();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::_internal_set_w(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  w_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::set_w(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.Entry.w)
}

// optional uint32 p = 5;
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::_internal_has_p() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse_Entry::has_p() const {
  return _internal_has_p();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::clear_p() {
  p_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::_internal_p() const {
  return p_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse_Entry::p() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.Entry.p)
  return _internal_p();
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::_internal_set_p(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  p_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse_Entry::set_p(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_p(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.Entry.p)
}

// -------------------------------------------------------------------

// CMsgGuildLeaderboardCombinedResponse

// optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgGuildLeaderboardCombinedResponse::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGuildLeaderboardCombinedResponse::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::EEvent CMsgGuildLeaderboardCombinedResponse::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgGuildLeaderboardCombinedResponse::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.event_id)
  return _internal_event_id();
}
inline void CMsgGuildLeaderboardCombinedResponse::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.event_id)
}

// optional uint32 region = 2;
inline bool CMsgGuildLeaderboardCombinedResponse::_internal_has_region() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse::has_region() const {
  return _internal_has_region();
}
inline void CMsgGuildLeaderboardCombinedResponse::clear_region() {
  region_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse::_internal_region() const {
  return region_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse::region() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.region)
  return _internal_region();
}
inline void CMsgGuildLeaderboardCombinedResponse::_internal_set_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  region_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse::set_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_region(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.region)
}

// optional uint32 last_updated = 3;
inline bool CMsgGuildLeaderboardCombinedResponse::_internal_has_last_updated() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponse::has_last_updated() const {
  return _internal_has_last_updated();
}
inline void CMsgGuildLeaderboardCombinedResponse::clear_last_updated() {
  last_updated_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse::_internal_last_updated() const {
  return last_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponse::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.last_updated)
  return _internal_last_updated();
}
inline void CMsgGuildLeaderboardCombinedResponse::_internal_set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_updated_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponse::set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_updated(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponse.last_updated)
}

// repeated .CMsgGuildLeaderboardCombinedResponse.Entry entries = 4;
inline int CMsgGuildLeaderboardCombinedResponse::_internal_entries_size() const {
  return entries_.size();
}
inline int CMsgGuildLeaderboardCombinedResponse::entries_size() const {
  return _internal_entries_size();
}
inline void CMsgGuildLeaderboardCombinedResponse::clear_entries() {
  entries_.Clear();
}
inline ::CMsgGuildLeaderboardCombinedResponse_Entry* CMsgGuildLeaderboardCombinedResponse::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGuildLeaderboardCombinedResponse.entries)
  return entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildLeaderboardCombinedResponse_Entry >*
CMsgGuildLeaderboardCombinedResponse::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponse.entries)
  return &entries_;
}
inline const ::CMsgGuildLeaderboardCombinedResponse_Entry& CMsgGuildLeaderboardCombinedResponse::_internal_entries(int index) const {
  return entries_.Get(index);
}
inline const ::CMsgGuildLeaderboardCombinedResponse_Entry& CMsgGuildLeaderboardCombinedResponse::entries(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponse.entries)
  return _internal_entries(index);
}
inline ::CMsgGuildLeaderboardCombinedResponse_Entry* CMsgGuildLeaderboardCombinedResponse::_internal_add_entries() {
  return entries_.Add();
}
inline ::CMsgGuildLeaderboardCombinedResponse_Entry* CMsgGuildLeaderboardCombinedResponse::add_entries() {
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponse.entries)
  return _internal_add_entries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGuildLeaderboardCombinedResponse_Entry >&
CMsgGuildLeaderboardCombinedResponse::entries() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponse.entries)
  return entries_;
}

// -------------------------------------------------------------------

// CMsgGuildLeaderboardCombinedResponseV2

// optional .EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgGuildLeaderboardCombinedResponseV2::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponseV2::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::EEvent CMsgGuildLeaderboardCombinedResponseV2::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgGuildLeaderboardCombinedResponseV2::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.event_id)
  return _internal_event_id();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.event_id)
}

// optional uint32 region = 2;
inline bool CMsgGuildLeaderboardCombinedResponseV2::_internal_has_region() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponseV2::has_region() const {
  return _internal_has_region();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_region() {
  region_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_region() const {
  return region_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::region() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.region)
  return _internal_region();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_set_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  region_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_region(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_region(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.region)
}

// optional uint32 last_updated = 3;
inline bool CMsgGuildLeaderboardCombinedResponseV2::_internal_has_last_updated() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGuildLeaderboardCombinedResponseV2::has_last_updated() const {
  return _internal_has_last_updated();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_last_updated() {
  last_updated_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_last_updated() const {
  return last_updated_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::last_updated() const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.last_updated)
  return _internal_last_updated();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  last_updated_ = value;
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_last_updated(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_updated(value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.last_updated)
}

// repeated uint32 id = 4 [packed = true];
inline int CMsgGuildLeaderboardCombinedResponseV2::_internal_id_size() const {
  return id_.size();
}
inline int CMsgGuildLeaderboardCombinedResponseV2::id_size() const {
  return _internal_id_size();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_id() {
  id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_id(int index) const {
  return id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::id(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.id)
  return _internal_id(index);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_id(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.id)
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_add_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  id_.Add(value);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::add_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_id(value);
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponseV2.id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::_internal_id() const {
  return id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::id() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponseV2.id)
  return _internal_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::_internal_mutable_id() {
  return &id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponseV2.id)
  return _internal_mutable_id();
}

// repeated uint32 r = 5 [packed = true];
inline int CMsgGuildLeaderboardCombinedResponseV2::_internal_r_size() const {
  return r_.size();
}
inline int CMsgGuildLeaderboardCombinedResponseV2::r_size() const {
  return _internal_r_size();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_r() {
  r_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_r(int index) const {
  return r_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::r(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.r)
  return _internal_r(index);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_r(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  r_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.r)
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_add_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  r_.Add(value);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::add_r(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_r(value);
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponseV2.r)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::_internal_r() const {
  return r_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::r() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponseV2.r)
  return _internal_r();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::_internal_mutable_r() {
  return &r_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::mutable_r() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponseV2.r)
  return _internal_mutable_r();
}

// repeated uint32 c = 6 [packed = true];
inline int CMsgGuildLeaderboardCombinedResponseV2::_internal_c_size() const {
  return c_.size();
}
inline int CMsgGuildLeaderboardCombinedResponseV2::c_size() const {
  return _internal_c_size();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_c() {
  c_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_c(int index) const {
  return c_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::c(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.c)
  return _internal_c(index);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_c(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  c_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.c)
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_add_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  c_.Add(value);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::add_c(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_c(value);
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponseV2.c)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::_internal_c() const {
  return c_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::c() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponseV2.c)
  return _internal_c();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::_internal_mutable_c() {
  return &c_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::mutable_c() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponseV2.c)
  return _internal_mutable_c();
}

// repeated uint32 w = 7 [packed = true];
inline int CMsgGuildLeaderboardCombinedResponseV2::_internal_w_size() const {
  return w_.size();
}
inline int CMsgGuildLeaderboardCombinedResponseV2::w_size() const {
  return _internal_w_size();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_w() {
  w_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_w(int index) const {
  return w_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::w(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.w)
  return _internal_w(index);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_w(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  w_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.w)
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_add_w(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  w_.Add(value);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::add_w(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_w(value);
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponseV2.w)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::_internal_w() const {
  return w_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::w() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponseV2.w)
  return _internal_w();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::_internal_mutable_w() {
  return &w_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::mutable_w() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponseV2.w)
  return _internal_mutable_w();
}

// repeated uint32 p = 8 [packed = true];
inline int CMsgGuildLeaderboardCombinedResponseV2::_internal_p_size() const {
  return p_.size();
}
inline int CMsgGuildLeaderboardCombinedResponseV2::p_size() const {
  return _internal_p_size();
}
inline void CMsgGuildLeaderboardCombinedResponseV2::clear_p() {
  p_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::_internal_p(int index) const {
  return p_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGuildLeaderboardCombinedResponseV2::p(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGuildLeaderboardCombinedResponseV2.p)
  return _internal_p(index);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::set_p(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  p_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGuildLeaderboardCombinedResponseV2.p)
}
inline void CMsgGuildLeaderboardCombinedResponseV2::_internal_add_p(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  p_.Add(value);
}
inline void CMsgGuildLeaderboardCombinedResponseV2::add_p(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_p(value);
  // @@protoc_insertion_point(field_add:CMsgGuildLeaderboardCombinedResponseV2.p)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::_internal_p() const {
  return p_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGuildLeaderboardCombinedResponseV2::p() const {
  // @@protoc_insertion_point(field_list:CMsgGuildLeaderboardCombinedResponseV2.p)
  return _internal_p();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::_internal_mutable_p() {
  return &p_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGuildLeaderboardCombinedResponseV2::mutable_p() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGuildLeaderboardCombinedResponseV2.p)
  return _internal_mutable_p();
}

// -------------------------------------------------------------------

// CMsgClientToGCClaimLeaderboardRewards

// optional uint32 guild_id = 1;
inline bool CMsgClientToGCClaimLeaderboardRewards::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCClaimLeaderboardRewards::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CMsgClientToGCClaimLeaderboardRewards::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCClaimLeaderboardRewards::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCClaimLeaderboardRewards::guild_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCClaimLeaderboardRewards.guild_id)
  return _internal_guild_id();
}
inline void CMsgClientToGCClaimLeaderboardRewards::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CMsgClientToGCClaimLeaderboardRewards::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCClaimLeaderboardRewards.guild_id)
}

// optional .EEvent event_id = 2 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCClaimLeaderboardRewards::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCClaimLeaderboardRewards::has_event_id() const {
  return _internal_has_event_id();
}
inline void CMsgClientToGCClaimLeaderboardRewards::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EEvent CMsgClientToGCClaimLeaderboardRewards::_internal_event_id() const {
  return static_cast< ::EEvent >(event_id_);
}
inline ::EEvent CMsgClientToGCClaimLeaderboardRewards::event_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCClaimLeaderboardRewards.event_id)
  return _internal_event_id();
}
inline void CMsgClientToGCClaimLeaderboardRewards::_internal_set_event_id(::EEvent value) {
  assert(::EEvent_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  event_id_ = value;
}
inline void CMsgClientToGCClaimLeaderboardRewards::set_event_id(::EEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCClaimLeaderboardRewards.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCClaimLeaderboardRewardsResponse

// optional .CMsgClientToGCClaimLeaderboardRewardsResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCClaimLeaderboardRewardsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse >(result_);
}
inline ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse CMsgClientToGCClaimLeaderboardRewardsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCClaimLeaderboardRewardsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_set_result(::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse value) {
  assert(::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::set_result(::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCClaimLeaderboardRewardsResponse.result)
}

// optional uint32 event_points = 2;
inline bool CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_has_event_points() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCClaimLeaderboardRewardsResponse::has_event_points() const {
  return _internal_has_event_points();
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::clear_event_points() {
  event_points_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_event_points() const {
  return event_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCClaimLeaderboardRewardsResponse::event_points() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCClaimLeaderboardRewardsResponse.event_points)
  return _internal_event_points();
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::_internal_set_event_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  event_points_ = value;
}
inline void CMsgClientToGCClaimLeaderboardRewardsResponse::set_event_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_points(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCClaimLeaderboardRewardsResponse.event_points)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse>() {
  return ::CMsgClientToGCRequestAccountGuildEventDataResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse>() {
  return ::CMsgClientToGCRequestActiveGuildContractsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSelectGuildContractResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSelectGuildContractResponse_EResponse>() {
  return ::CMsgClientToGCSelectGuildContractResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse>() {
  return ::CMsgClientToGCRequestActiveGuildChallengeResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse>() {
  return ::CMsgClientToGCRequestGuildEventMembersResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse>() {
  return ::CMsgClientToGCClaimLeaderboardRewardsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::EGuildEventAuditAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGuildEventAuditAction>() {
  return ::EGuildEventAuditAction_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fguild_5fevents_2eproto
