// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_helprequest.steamworkssdk.proto

#include "steammessages_helprequest.steamworkssdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CHelpRequestLogs_UploadUserApplicationLog_Request::CHelpRequestLogs_UploadUserApplicationLog_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : log_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , version_string_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , log_contents_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , appid_(0u){}
struct CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal {
  constexpr CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal() {}
  union {
    CHelpRequestLogs_UploadUserApplicationLog_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal _CHelpRequestLogs_UploadUserApplicationLog_Request_default_instance_;
constexpr CHelpRequestLogs_UploadUserApplicationLog_Response::CHelpRequestLogs_UploadUserApplicationLog_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(PROTOBUF_ULONGLONG(0)){}
struct CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal {
  constexpr CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal() {}
  union {
    CHelpRequestLogs_UploadUserApplicationLog_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal _CHelpRequestLogs_UploadUserApplicationLog_Response_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5fhelprequest_2esteamworkssdk_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* file_level_service_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto[1];

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5fhelprequest_2esteamworkssdk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, appid_),
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, log_type_),
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, version_string_),
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Request, log_contents_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CHelpRequestLogs_UploadUserApplicationLog_Response, id_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::CHelpRequestLogs_UploadUserApplicationLog_Request)},
  { 13, 19, sizeof(::CHelpRequestLogs_UploadUserApplicationLog_Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CHelpRequestLogs_UploadUserApplicationLog_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CHelpRequestLogs_UploadUserApplicationLog_Response_default_instance_),
};

const char descriptor_table_protodef_steammessages_5fhelprequest_2esteamworkssdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n-steammessages_helprequest.steamworkssd"
  "k.proto\032.steammessages_unified_base.stea"
  "mworkssdk.proto\"\202\001\n1CHelpRequestLogs_Upl"
  "oadUserApplicationLog_Request\022\r\n\005appid\030\001"
  " \001(\r\022\020\n\010log_type\030\002 \001(\t\022\026\n\016version_string"
  "\030\003 \001(\t\022\024\n\014log_contents\030\004 \001(\t\"@\n2CHelpReq"
  "uestLogs_UploadUserApplicationLog_Respon"
  "se\022\n\n\002id\030\001 \001(\0042\356\001\n\017HelpRequestLogs\022\250\001\n\030U"
  "ploadUserApplicationLog\0222.CHelpRequestLo"
  "gs_UploadUserApplicationLog_Request\0323.CH"
  "elpRequestLogs_UploadUserApplicationLog_"
  "Response\"#\202\265\030\037User uploading application"
  " logs\0320\202\265\030,Service for dealing with user"
  "-submitted logsB\003\200\001\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_deps[1] = {
  &::descriptor_table_steammessages_5funified_5fbase_2esteamworkssdk_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto = {
  false, false, 540, descriptor_table_protodef_steammessages_5fhelprequest_2esteamworkssdk_2eproto, "steammessages_helprequest.steamworkssdk.proto", 
  &descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_once, descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_steammessages_5fhelprequest_2esteamworkssdk_2eproto::offsets,
  file_level_metadata_steammessages_5fhelprequest_2esteamworkssdk_2eproto, file_level_enum_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto, file_level_service_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto);
  return descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5fhelprequest_2esteamworkssdk_2eproto(&descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto);

// ===================================================================

class CHelpRequestLogs_UploadUserApplicationLog_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<CHelpRequestLogs_UploadUserApplicationLog_Request>()._has_bits_);
  static void set_has_appid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_log_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_version_string(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_log_contents(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CHelpRequestLogs_UploadUserApplicationLog_Request::CHelpRequestLogs_UploadUserApplicationLog_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CHelpRequestLogs_UploadUserApplicationLog_Request)
}
CHelpRequestLogs_UploadUserApplicationLog_Request::CHelpRequestLogs_UploadUserApplicationLog_Request(const CHelpRequestLogs_UploadUserApplicationLog_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  log_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_log_type()) {
    log_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_log_type(), 
      GetArena());
  }
  version_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_version_string()) {
    version_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_version_string(), 
      GetArena());
  }
  log_contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_log_contents()) {
    log_contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_log_contents(), 
      GetArena());
  }
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:CHelpRequestLogs_UploadUserApplicationLog_Request)
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::SharedCtor() {
log_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
version_string_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
log_contents_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
appid_ = 0u;
}

CHelpRequestLogs_UploadUserApplicationLog_Request::~CHelpRequestLogs_UploadUserApplicationLog_Request() {
  // @@protoc_insertion_point(destructor:CHelpRequestLogs_UploadUserApplicationLog_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  log_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_string_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  log_contents_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::ArenaDtor(void* object) {
  CHelpRequestLogs_UploadUserApplicationLog_Request* _this = reinterpret_cast< CHelpRequestLogs_UploadUserApplicationLog_Request* >(object);
  (void)_this;
}
void CHelpRequestLogs_UploadUserApplicationLog_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CHelpRequestLogs_UploadUserApplicationLog_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      log_type_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      version_string_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      log_contents_.ClearNonDefaultToEmpty();
    }
  }
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CHelpRequestLogs_UploadUserApplicationLog_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 appid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_appid(&has_bits);
          appid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string log_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_log_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CHelpRequestLogs_UploadUserApplicationLog_Request.log_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string version_string = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CHelpRequestLogs_UploadUserApplicationLog_Request.version_string");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string log_contents = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_log_contents();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CHelpRequestLogs_UploadUserApplicationLog_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_appid(), target);
  }

  // optional string log_type = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_log_type().data(), static_cast<int>(this->_internal_log_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CHelpRequestLogs_UploadUserApplicationLog_Request.log_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_log_type(), target);
  }

  // optional string version_string = 3;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_version_string().data(), static_cast<int>(this->_internal_version_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CHelpRequestLogs_UploadUserApplicationLog_Request.version_string");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version_string(), target);
  }

  // optional string log_contents = 4;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_log_contents().data(), static_cast<int>(this->_internal_log_contents().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_log_contents(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHelpRequestLogs_UploadUserApplicationLog_Request)
  return target;
}

size_t CHelpRequestLogs_UploadUserApplicationLog_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string log_type = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_log_type());
    }

    // optional string version_string = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_version_string());
    }

    // optional string log_contents = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_log_contents());
    }

    // optional uint32 appid = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_appid());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CHelpRequestLogs_UploadUserApplicationLog_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CHelpRequestLogs_UploadUserApplicationLog_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHelpRequestLogs_UploadUserApplicationLog_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHelpRequestLogs_UploadUserApplicationLog_Request)
    MergeFrom(*source);
  }
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::MergeFrom(const CHelpRequestLogs_UploadUserApplicationLog_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_log_type(from._internal_log_type());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_version_string(from._internal_version_string());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_log_contents(from._internal_log_contents());
    }
    if (cached_has_bits & 0x00000008u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::CopyFrom(const CHelpRequestLogs_UploadUserApplicationLog_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHelpRequestLogs_UploadUserApplicationLog_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHelpRequestLogs_UploadUserApplicationLog_Request::IsInitialized() const {
  return true;
}

void CHelpRequestLogs_UploadUserApplicationLog_Request::InternalSwap(CHelpRequestLogs_UploadUserApplicationLog_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  log_type_.Swap(&other->log_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  version_string_.Swap(&other->version_string_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  log_contents_.Swap(&other->log_contents_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(appid_, other->appid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CHelpRequestLogs_UploadUserApplicationLog_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CHelpRequestLogs_UploadUserApplicationLog_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<CHelpRequestLogs_UploadUserApplicationLog_Response>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CHelpRequestLogs_UploadUserApplicationLog_Response::CHelpRequestLogs_UploadUserApplicationLog_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CHelpRequestLogs_UploadUserApplicationLog_Response)
}
CHelpRequestLogs_UploadUserApplicationLog_Response::CHelpRequestLogs_UploadUserApplicationLog_Response(const CHelpRequestLogs_UploadUserApplicationLog_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:CHelpRequestLogs_UploadUserApplicationLog_Response)
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::SharedCtor() {
id_ = PROTOBUF_ULONGLONG(0);
}

CHelpRequestLogs_UploadUserApplicationLog_Response::~CHelpRequestLogs_UploadUserApplicationLog_Response() {
  // @@protoc_insertion_point(destructor:CHelpRequestLogs_UploadUserApplicationLog_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::ArenaDtor(void* object) {
  CHelpRequestLogs_UploadUserApplicationLog_Response* _this = reinterpret_cast< CHelpRequestLogs_UploadUserApplicationLog_Response* >(object);
  (void)_this;
}
void CHelpRequestLogs_UploadUserApplicationLog_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CHelpRequestLogs_UploadUserApplicationLog_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CHelpRequestLogs_UploadUserApplicationLog_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CHelpRequestLogs_UploadUserApplicationLog_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CHelpRequestLogs_UploadUserApplicationLog_Response)
  return target;
}

size_t CHelpRequestLogs_UploadUserApplicationLog_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CHelpRequestLogs_UploadUserApplicationLog_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CHelpRequestLogs_UploadUserApplicationLog_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CHelpRequestLogs_UploadUserApplicationLog_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CHelpRequestLogs_UploadUserApplicationLog_Response)
    MergeFrom(*source);
  }
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::MergeFrom(const CHelpRequestLogs_UploadUserApplicationLog_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_id()) {
    _internal_set_id(from._internal_id());
  }
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::CopyFrom(const CHelpRequestLogs_UploadUserApplicationLog_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CHelpRequestLogs_UploadUserApplicationLog_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CHelpRequestLogs_UploadUserApplicationLog_Response::IsInitialized() const {
  return true;
}

void CHelpRequestLogs_UploadUserApplicationLog_Response::InternalSwap(CHelpRequestLogs_UploadUserApplicationLog_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CHelpRequestLogs_UploadUserApplicationLog_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

HelpRequestLogs::~HelpRequestLogs() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* HelpRequestLogs::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto);
  return file_level_service_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* HelpRequestLogs::GetDescriptor() {
  return descriptor();
}

void HelpRequestLogs::UploadUserApplicationLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::CHelpRequestLogs_UploadUserApplicationLog_Request*,
                         ::CHelpRequestLogs_UploadUserApplicationLog_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method UploadUserApplicationLog() not implemented.");
  done->Run();
}

void HelpRequestLogs::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_steammessages_5fhelprequest_2esteamworkssdk_2eproto[0]);
  switch(method->index()) {
    case 0:
      UploadUserApplicationLog(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::CHelpRequestLogs_UploadUserApplicationLog_Request*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::CHelpRequestLogs_UploadUserApplicationLog_Response*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& HelpRequestLogs::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CHelpRequestLogs_UploadUserApplicationLog_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& HelpRequestLogs::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CHelpRequestLogs_UploadUserApplicationLog_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

HelpRequestLogs_Stub::HelpRequestLogs_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
HelpRequestLogs_Stub::HelpRequestLogs_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
HelpRequestLogs_Stub::~HelpRequestLogs_Stub() {
  if (owns_channel_) delete channel_;
}

void HelpRequestLogs_Stub::UploadUserApplicationLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::CHelpRequestLogs_UploadUserApplicationLog_Request* request,
                              ::CHelpRequestLogs_UploadUserApplicationLog_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CHelpRequestLogs_UploadUserApplicationLog_Request* Arena::CreateMaybeMessage< ::CHelpRequestLogs_UploadUserApplicationLog_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CHelpRequestLogs_UploadUserApplicationLog_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::CHelpRequestLogs_UploadUserApplicationLog_Response* Arena::CreateMaybeMessage< ::CHelpRequestLogs_UploadUserApplicationLog_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CHelpRequestLogs_UploadUserApplicationLog_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
