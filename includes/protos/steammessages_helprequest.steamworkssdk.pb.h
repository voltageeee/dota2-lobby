// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_helprequest.steamworkssdk.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_steammessages_5fhelprequest_2esteamworkssdk_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_steammessages_5fhelprequest_2esteamworkssdk_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamworkssdk.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_steammessages_5fhelprequest_2esteamworkssdk_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_steammessages_5fhelprequest_2esteamworkssdk_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_metadata_getter(int index);
class CHelpRequestLogs_UploadUserApplicationLog_Request;
struct CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal;
extern CHelpRequestLogs_UploadUserApplicationLog_RequestDefaultTypeInternal _CHelpRequestLogs_UploadUserApplicationLog_Request_default_instance_;
class CHelpRequestLogs_UploadUserApplicationLog_Response;
struct CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal;
extern CHelpRequestLogs_UploadUserApplicationLog_ResponseDefaultTypeInternal _CHelpRequestLogs_UploadUserApplicationLog_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CHelpRequestLogs_UploadUserApplicationLog_Request* Arena::CreateMaybeMessage<::CHelpRequestLogs_UploadUserApplicationLog_Request>(Arena*);
template<> ::CHelpRequestLogs_UploadUserApplicationLog_Response* Arena::CreateMaybeMessage<::CHelpRequestLogs_UploadUserApplicationLog_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CHelpRequestLogs_UploadUserApplicationLog_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CHelpRequestLogs_UploadUserApplicationLog_Request) */ {
 public:
  inline CHelpRequestLogs_UploadUserApplicationLog_Request() : CHelpRequestLogs_UploadUserApplicationLog_Request(nullptr) {}
  virtual ~CHelpRequestLogs_UploadUserApplicationLog_Request();
  explicit constexpr CHelpRequestLogs_UploadUserApplicationLog_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CHelpRequestLogs_UploadUserApplicationLog_Request(const CHelpRequestLogs_UploadUserApplicationLog_Request& from);
  CHelpRequestLogs_UploadUserApplicationLog_Request(CHelpRequestLogs_UploadUserApplicationLog_Request&& from) noexcept
    : CHelpRequestLogs_UploadUserApplicationLog_Request() {
    *this = ::std::move(from);
  }

  inline CHelpRequestLogs_UploadUserApplicationLog_Request& operator=(const CHelpRequestLogs_UploadUserApplicationLog_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CHelpRequestLogs_UploadUserApplicationLog_Request& operator=(CHelpRequestLogs_UploadUserApplicationLog_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CHelpRequestLogs_UploadUserApplicationLog_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CHelpRequestLogs_UploadUserApplicationLog_Request* internal_default_instance() {
    return reinterpret_cast<const CHelpRequestLogs_UploadUserApplicationLog_Request*>(
               &_CHelpRequestLogs_UploadUserApplicationLog_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CHelpRequestLogs_UploadUserApplicationLog_Request& a, CHelpRequestLogs_UploadUserApplicationLog_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CHelpRequestLogs_UploadUserApplicationLog_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CHelpRequestLogs_UploadUserApplicationLog_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CHelpRequestLogs_UploadUserApplicationLog_Request* New() const final {
    return CreateMaybeMessage<CHelpRequestLogs_UploadUserApplicationLog_Request>(nullptr);
  }

  CHelpRequestLogs_UploadUserApplicationLog_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CHelpRequestLogs_UploadUserApplicationLog_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CHelpRequestLogs_UploadUserApplicationLog_Request& from);
  void MergeFrom(const CHelpRequestLogs_UploadUserApplicationLog_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CHelpRequestLogs_UploadUserApplicationLog_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CHelpRequestLogs_UploadUserApplicationLog_Request";
  }
  protected:
  explicit CHelpRequestLogs_UploadUserApplicationLog_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLogTypeFieldNumber = 2,
    kVersionStringFieldNumber = 3,
    kLogContentsFieldNumber = 4,
    kAppidFieldNumber = 1,
  };
  // optional string log_type = 2;
  bool has_log_type() const;
  private:
  bool _internal_has_log_type() const;
  public:
  void clear_log_type();
  const std::string& log_type() const;
  void set_log_type(const std::string& value);
  void set_log_type(std::string&& value);
  void set_log_type(const char* value);
  void set_log_type(const char* value, size_t size);
  std::string* mutable_log_type();
  std::string* release_log_type();
  void set_allocated_log_type(std::string* log_type);
  private:
  const std::string& _internal_log_type() const;
  void _internal_set_log_type(const std::string& value);
  std::string* _internal_mutable_log_type();
  public:

  // optional string version_string = 3;
  bool has_version_string() const;
  private:
  bool _internal_has_version_string() const;
  public:
  void clear_version_string();
  const std::string& version_string() const;
  void set_version_string(const std::string& value);
  void set_version_string(std::string&& value);
  void set_version_string(const char* value);
  void set_version_string(const char* value, size_t size);
  std::string* mutable_version_string();
  std::string* release_version_string();
  void set_allocated_version_string(std::string* version_string);
  private:
  const std::string& _internal_version_string() const;
  void _internal_set_version_string(const std::string& value);
  std::string* _internal_mutable_version_string();
  public:

  // optional string log_contents = 4;
  bool has_log_contents() const;
  private:
  bool _internal_has_log_contents() const;
  public:
  void clear_log_contents();
  const std::string& log_contents() const;
  void set_log_contents(const std::string& value);
  void set_log_contents(std::string&& value);
  void set_log_contents(const char* value);
  void set_log_contents(const char* value, size_t size);
  std::string* mutable_log_contents();
  std::string* release_log_contents();
  void set_allocated_log_contents(std::string* log_contents);
  private:
  const std::string& _internal_log_contents() const;
  void _internal_set_log_contents(const std::string& value);
  std::string* _internal_mutable_log_contents();
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CHelpRequestLogs_UploadUserApplicationLog_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr log_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_string_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr log_contents_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_steammessages_5fhelprequest_2esteamworkssdk_2eproto;
};
// -------------------------------------------------------------------

class CHelpRequestLogs_UploadUserApplicationLog_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CHelpRequestLogs_UploadUserApplicationLog_Response) */ {
 public:
  inline CHelpRequestLogs_UploadUserApplicationLog_Response() : CHelpRequestLogs_UploadUserApplicationLog_Response(nullptr) {}
  virtual ~CHelpRequestLogs_UploadUserApplicationLog_Response();
  explicit constexpr CHelpRequestLogs_UploadUserApplicationLog_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CHelpRequestLogs_UploadUserApplicationLog_Response(const CHelpRequestLogs_UploadUserApplicationLog_Response& from);
  CHelpRequestLogs_UploadUserApplicationLog_Response(CHelpRequestLogs_UploadUserApplicationLog_Response&& from) noexcept
    : CHelpRequestLogs_UploadUserApplicationLog_Response() {
    *this = ::std::move(from);
  }

  inline CHelpRequestLogs_UploadUserApplicationLog_Response& operator=(const CHelpRequestLogs_UploadUserApplicationLog_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CHelpRequestLogs_UploadUserApplicationLog_Response& operator=(CHelpRequestLogs_UploadUserApplicationLog_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CHelpRequestLogs_UploadUserApplicationLog_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CHelpRequestLogs_UploadUserApplicationLog_Response* internal_default_instance() {
    return reinterpret_cast<const CHelpRequestLogs_UploadUserApplicationLog_Response*>(
               &_CHelpRequestLogs_UploadUserApplicationLog_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CHelpRequestLogs_UploadUserApplicationLog_Response& a, CHelpRequestLogs_UploadUserApplicationLog_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CHelpRequestLogs_UploadUserApplicationLog_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CHelpRequestLogs_UploadUserApplicationLog_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CHelpRequestLogs_UploadUserApplicationLog_Response* New() const final {
    return CreateMaybeMessage<CHelpRequestLogs_UploadUserApplicationLog_Response>(nullptr);
  }

  CHelpRequestLogs_UploadUserApplicationLog_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CHelpRequestLogs_UploadUserApplicationLog_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CHelpRequestLogs_UploadUserApplicationLog_Response& from);
  void MergeFrom(const CHelpRequestLogs_UploadUserApplicationLog_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CHelpRequestLogs_UploadUserApplicationLog_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CHelpRequestLogs_UploadUserApplicationLog_Response";
  }
  protected:
  explicit CHelpRequestLogs_UploadUserApplicationLog_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_steammessages_5fhelprequest_2esteamworkssdk_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // optional uint64 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CHelpRequestLogs_UploadUserApplicationLog_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  friend struct ::TableStruct_steammessages_5fhelprequest_2esteamworkssdk_2eproto;
};
// ===================================================================

class HelpRequestLogs_Stub;

class HelpRequestLogs : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline HelpRequestLogs() {};
 public:
  virtual ~HelpRequestLogs();

  typedef HelpRequestLogs_Stub Stub;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void UploadUserApplicationLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CHelpRequestLogs_UploadUserApplicationLog_Request* request,
                       ::CHelpRequestLogs_UploadUserApplicationLog_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done);
  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;
  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(HelpRequestLogs);
};

class HelpRequestLogs_Stub : public HelpRequestLogs {
 public:
  HelpRequestLogs_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  HelpRequestLogs_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);
  ~HelpRequestLogs_Stub();

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements HelpRequestLogs ------------------------------------------

  void UploadUserApplicationLog(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                       const ::CHelpRequestLogs_UploadUserApplicationLog_Request* request,
                       ::CHelpRequestLogs_UploadUserApplicationLog_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(HelpRequestLogs_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CHelpRequestLogs_UploadUserApplicationLog_Request

// optional uint32 appid = 1;
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CHelpRequestLogs_UploadUserApplicationLog_Request::appid() const {
  // @@protoc_insertion_point(field_get:CHelpRequestLogs_UploadUserApplicationLog_Request.appid)
  return _internal_appid();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  appid_ = value;
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CHelpRequestLogs_UploadUserApplicationLog_Request.appid)
}

// optional string log_type = 2;
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_has_log_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::has_log_type() const {
  return _internal_has_log_type();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::clear_log_type() {
  log_type_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::log_type() const {
  // @@protoc_insertion_point(field_get:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
  return _internal_log_type();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_type(const std::string& value) {
  _internal_set_log_type(value);
  // @@protoc_insertion_point(field_set:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::mutable_log_type() {
  // @@protoc_insertion_point(field_mutable:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
  return _internal_mutable_log_type();
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_log_type() const {
  return log_type_.Get();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_set_log_type(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  log_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_type(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  log_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  log_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_type(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  log_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_mutable_log_type() {
  _has_bits_[0] |= 0x00000001u;
  return log_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::release_log_type() {
  // @@protoc_insertion_point(field_release:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
  if (!_internal_has_log_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return log_type_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_allocated_log_type(std::string* log_type) {
  if (log_type != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  log_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), log_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CHelpRequestLogs_UploadUserApplicationLog_Request.log_type)
}

// optional string version_string = 3;
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_has_version_string() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::has_version_string() const {
  return _internal_has_version_string();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::clear_version_string() {
  version_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::version_string() const {
  // @@protoc_insertion_point(field_get:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
  return _internal_version_string();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_version_string(const std::string& value) {
  _internal_set_version_string(value);
  // @@protoc_insertion_point(field_set:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::mutable_version_string() {
  // @@protoc_insertion_point(field_mutable:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
  return _internal_mutable_version_string();
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_version_string() const {
  return version_string_.Get();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_set_version_string(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  version_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_version_string(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  version_string_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_version_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  version_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_version_string(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  version_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_mutable_version_string() {
  _has_bits_[0] |= 0x00000002u;
  return version_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::release_version_string() {
  // @@protoc_insertion_point(field_release:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
  if (!_internal_has_version_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return version_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_allocated_version_string(std::string* version_string) {
  if (version_string != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  version_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version_string,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CHelpRequestLogs_UploadUserApplicationLog_Request.version_string)
}

// optional string log_contents = 4;
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_has_log_contents() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CHelpRequestLogs_UploadUserApplicationLog_Request::has_log_contents() const {
  return _internal_has_log_contents();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::clear_log_contents() {
  log_contents_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::log_contents() const {
  // @@protoc_insertion_point(field_get:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
  return _internal_log_contents();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_contents(const std::string& value) {
  _internal_set_log_contents(value);
  // @@protoc_insertion_point(field_set:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::mutable_log_contents() {
  // @@protoc_insertion_point(field_mutable:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
  return _internal_mutable_log_contents();
}
inline const std::string& CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_log_contents() const {
  return log_contents_.Get();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_set_log_contents(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  log_contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_contents(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  log_contents_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  log_contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_log_contents(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  log_contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::_internal_mutable_log_contents() {
  _has_bits_[0] |= 0x00000004u;
  return log_contents_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CHelpRequestLogs_UploadUserApplicationLog_Request::release_log_contents() {
  // @@protoc_insertion_point(field_release:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
  if (!_internal_has_log_contents()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return log_contents_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Request::set_allocated_log_contents(std::string* log_contents) {
  if (log_contents != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  log_contents_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), log_contents,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CHelpRequestLogs_UploadUserApplicationLog_Request.log_contents)
}

// -------------------------------------------------------------------

// CHelpRequestLogs_UploadUserApplicationLog_Response

// optional uint64 id = 1;
inline bool CHelpRequestLogs_UploadUserApplicationLog_Response::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CHelpRequestLogs_UploadUserApplicationLog_Response::has_id() const {
  return _internal_has_id();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Response::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CHelpRequestLogs_UploadUserApplicationLog_Response::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CHelpRequestLogs_UploadUserApplicationLog_Response::id() const {
  // @@protoc_insertion_point(field_get:CHelpRequestLogs_UploadUserApplicationLog_Response.id)
  return _internal_id();
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Response::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void CHelpRequestLogs_UploadUserApplicationLog_Response::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CHelpRequestLogs_UploadUserApplicationLog_Response.id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_steammessages_5fhelprequest_2esteamworkssdk_2eproto
