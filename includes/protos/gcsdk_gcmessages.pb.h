// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gcsdk_gcmessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gcsdk_5fgcmessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gcsdk_5fgcmessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gcsdk_5fgcmessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gcsdk_5fgcmessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[72]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gcsdk_5fgcmessages_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(int index);
class CBroadcast_PostGameDataFrame_Request;
struct CBroadcast_PostGameDataFrame_RequestDefaultTypeInternal;
extern CBroadcast_PostGameDataFrame_RequestDefaultTypeInternal _CBroadcast_PostGameDataFrame_Request_default_instance_;
class CCommunity_GetClanAnnouncements_Request;
struct CCommunity_GetClanAnnouncements_RequestDefaultTypeInternal;
extern CCommunity_GetClanAnnouncements_RequestDefaultTypeInternal _CCommunity_GetClanAnnouncements_Request_default_instance_;
class CCommunity_GetClanAnnouncements_Response;
struct CCommunity_GetClanAnnouncements_ResponseDefaultTypeInternal;
extern CCommunity_GetClanAnnouncements_ResponseDefaultTypeInternal _CCommunity_GetClanAnnouncements_Response_default_instance_;
class CExtraMsgBlock;
struct CExtraMsgBlockDefaultTypeInternal;
extern CExtraMsgBlockDefaultTypeInternal _CExtraMsgBlock_default_instance_;
class CGCMsgCompressedMsgToClient;
struct CGCMsgCompressedMsgToClientDefaultTypeInternal;
extern CGCMsgCompressedMsgToClientDefaultTypeInternal _CGCMsgCompressedMsgToClient_default_instance_;
class CGCToGCMsgMasterAck;
struct CGCToGCMsgMasterAckDefaultTypeInternal;
extern CGCToGCMsgMasterAckDefaultTypeInternal _CGCToGCMsgMasterAck_default_instance_;
class CGCToGCMsgMasterAck_Process;
struct CGCToGCMsgMasterAck_ProcessDefaultTypeInternal;
extern CGCToGCMsgMasterAck_ProcessDefaultTypeInternal _CGCToGCMsgMasterAck_Process_default_instance_;
class CGCToGCMsgMasterAck_Response;
struct CGCToGCMsgMasterAck_ResponseDefaultTypeInternal;
extern CGCToGCMsgMasterAck_ResponseDefaultTypeInternal _CGCToGCMsgMasterAck_Response_default_instance_;
class CGCToGCMsgMasterStartupComplete;
struct CGCToGCMsgMasterStartupCompleteDefaultTypeInternal;
extern CGCToGCMsgMasterStartupCompleteDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_default_instance_;
class CGCToGCMsgMasterStartupComplete_GCInfo;
struct CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal;
extern CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_GCInfo_default_instance_;
class CGCToGCMsgRouted;
struct CGCToGCMsgRoutedDefaultTypeInternal;
extern CGCToGCMsgRoutedDefaultTypeInternal _CGCToGCMsgRouted_default_instance_;
class CGCToGCMsgRoutedReply;
struct CGCToGCMsgRoutedReplyDefaultTypeInternal;
extern CGCToGCMsgRoutedReplyDefaultTypeInternal _CGCToGCMsgRoutedReply_default_instance_;
class CMsgClientHello;
struct CMsgClientHelloDefaultTypeInternal;
extern CMsgClientHelloDefaultTypeInternal _CMsgClientHello_default_instance_;
class CMsgClientWelcome;
struct CMsgClientWelcomeDefaultTypeInternal;
extern CMsgClientWelcomeDefaultTypeInternal _CMsgClientWelcome_default_instance_;
class CMsgClientWelcome_Location;
struct CMsgClientWelcome_LocationDefaultTypeInternal;
extern CMsgClientWelcome_LocationDefaultTypeInternal _CMsgClientWelcome_Location_default_instance_;
class CMsgConnectionStatus;
struct CMsgConnectionStatusDefaultTypeInternal;
extern CMsgConnectionStatusDefaultTypeInternal _CMsgConnectionStatus_default_instance_;
class CMsgGCAssertJobData;
struct CMsgGCAssertJobDataDefaultTypeInternal;
extern CMsgGCAssertJobDataDefaultTypeInternal _CMsgGCAssertJobData_default_instance_;
class CMsgGCClientPing;
struct CMsgGCClientPingDefaultTypeInternal;
extern CMsgGCClientPingDefaultTypeInternal _CMsgGCClientPing_default_instance_;
class CMsgGCConCommand;
struct CMsgGCConCommandDefaultTypeInternal;
extern CMsgGCConCommandDefaultTypeInternal _CMsgGCConCommand_default_instance_;
class CMsgGCMultiplexMessage;
struct CMsgGCMultiplexMessageDefaultTypeInternal;
extern CMsgGCMultiplexMessageDefaultTypeInternal _CMsgGCMultiplexMessage_default_instance_;
class CMsgGCRequestSubGCSessionInfo;
struct CMsgGCRequestSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoDefaultTypeInternal _CMsgGCRequestSubGCSessionInfo_default_instance_;
class CMsgGCRequestSubGCSessionInfoResponse;
struct CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal _CMsgGCRequestSubGCSessionInfoResponse_default_instance_;
class CMsgGCToClientPollConvarRequest;
struct CMsgGCToClientPollConvarRequestDefaultTypeInternal;
extern CMsgGCToClientPollConvarRequestDefaultTypeInternal _CMsgGCToClientPollConvarRequest_default_instance_;
class CMsgGCToClientPollConvarResponse;
struct CMsgGCToClientPollConvarResponseDefaultTypeInternal;
extern CMsgGCToClientPollConvarResponseDefaultTypeInternal _CMsgGCToClientPollConvarResponse_default_instance_;
class CMsgGCToClientRequestDropped;
struct CMsgGCToClientRequestDroppedDefaultTypeInternal;
extern CMsgGCToClientRequestDroppedDefaultTypeInternal _CMsgGCToClientRequestDropped_default_instance_;
class CMsgGCToGCForwardAccountDetails;
struct CMsgGCToGCForwardAccountDetailsDefaultTypeInternal;
extern CMsgGCToGCForwardAccountDetailsDefaultTypeInternal _CMsgGCToGCForwardAccountDetails_default_instance_;
class CMsgGCToGCLoadSessionSOCache;
struct CMsgGCToGCLoadSessionSOCacheDefaultTypeInternal;
extern CMsgGCToGCLoadSessionSOCacheDefaultTypeInternal _CMsgGCToGCLoadSessionSOCache_default_instance_;
class CMsgGCToGCLoadSessionSOCacheResponse;
struct CMsgGCToGCLoadSessionSOCacheResponseDefaultTypeInternal;
extern CMsgGCToGCLoadSessionSOCacheResponseDefaultTypeInternal _CMsgGCToGCLoadSessionSOCacheResponse_default_instance_;
class CMsgGCToGCMasterBroadcastMessage;
struct CMsgGCToGCMasterBroadcastMessageDefaultTypeInternal;
extern CMsgGCToGCMasterBroadcastMessageDefaultTypeInternal _CMsgGCToGCMasterBroadcastMessage_default_instance_;
class CMsgGCToGCMasterDestroyCache;
struct CMsgGCToGCMasterDestroyCacheDefaultTypeInternal;
extern CMsgGCToGCMasterDestroyCacheDefaultTypeInternal _CMsgGCToGCMasterDestroyCache_default_instance_;
class CMsgGCToGCMasterSubscribeToCache;
struct CMsgGCToGCMasterSubscribeToCacheDefaultTypeInternal;
extern CMsgGCToGCMasterSubscribeToCacheDefaultTypeInternal _CMsgGCToGCMasterSubscribeToCache_default_instance_;
class CMsgGCToGCMasterSubscribeToCacheAsync;
struct CMsgGCToGCMasterSubscribeToCacheAsyncDefaultTypeInternal;
extern CMsgGCToGCMasterSubscribeToCacheAsyncDefaultTypeInternal _CMsgGCToGCMasterSubscribeToCacheAsync_default_instance_;
class CMsgGCToGCMasterSubscribeToCacheResponse;
struct CMsgGCToGCMasterSubscribeToCacheResponseDefaultTypeInternal;
extern CMsgGCToGCMasterSubscribeToCacheResponseDefaultTypeInternal _CMsgGCToGCMasterSubscribeToCacheResponse_default_instance_;
class CMsgGCToGCMasterUnsubscribeFromCache;
struct CMsgGCToGCMasterUnsubscribeFromCacheDefaultTypeInternal;
extern CMsgGCToGCMasterUnsubscribeFromCacheDefaultTypeInternal _CMsgGCToGCMasterUnsubscribeFromCache_default_instance_;
class CMsgGCToGCSOCacheSubscribe;
struct CMsgGCToGCSOCacheSubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribeDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_default_instance_;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions;
struct CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions_default_instance_;
class CMsgGCToGCSOCacheUnsubscribe;
struct CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal _CMsgGCToGCSOCacheUnsubscribe_default_instance_;
class CMsgGCToGCSubGCStarting;
struct CMsgGCToGCSubGCStartingDefaultTypeInternal;
extern CMsgGCToGCSubGCStartingDefaultTypeInternal _CMsgGCToGCSubGCStarting_default_instance_;
class CMsgGCToGCUniverseStartup;
struct CMsgGCToGCUniverseStartupDefaultTypeInternal;
extern CMsgGCToGCUniverseStartupDefaultTypeInternal _CMsgGCToGCUniverseStartup_default_instance_;
class CMsgGCToGCUniverseStartupResponse;
struct CMsgGCToGCUniverseStartupResponseDefaultTypeInternal;
extern CMsgGCToGCUniverseStartupResponseDefaultTypeInternal _CMsgGCToGCUniverseStartupResponse_default_instance_;
class CMsgGCToGCUpdateSessionStats;
struct CMsgGCToGCUpdateSessionStatsDefaultTypeInternal;
extern CMsgGCToGCUpdateSessionStatsDefaultTypeInternal _CMsgGCToGCUpdateSessionStats_default_instance_;
class CMsgGCUpdateSubGCSessionInfo;
struct CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_default_instance_;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate;
struct CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_CMsgUpdate_default_instance_;
class CMsgSDOAssert;
struct CMsgSDOAssertDefaultTypeInternal;
extern CMsgSDOAssertDefaultTypeInternal _CMsgSDOAssert_default_instance_;
class CMsgSDOAssert_Request;
struct CMsgSDOAssert_RequestDefaultTypeInternal;
extern CMsgSDOAssert_RequestDefaultTypeInternal _CMsgSDOAssert_Request_default_instance_;
class CMsgSHA1Digest;
struct CMsgSHA1DigestDefaultTypeInternal;
extern CMsgSHA1DigestDefaultTypeInternal _CMsgSHA1Digest_default_instance_;
class CMsgSOCacheHaveVersion;
struct CMsgSOCacheHaveVersionDefaultTypeInternal;
extern CMsgSOCacheHaveVersionDefaultTypeInternal _CMsgSOCacheHaveVersion_default_instance_;
class CMsgSOCacheSubscribed;
struct CMsgSOCacheSubscribedDefaultTypeInternal;
extern CMsgSOCacheSubscribedDefaultTypeInternal _CMsgSOCacheSubscribed_default_instance_;
class CMsgSOCacheSubscribedUpToDate;
struct CMsgSOCacheSubscribedUpToDateDefaultTypeInternal;
extern CMsgSOCacheSubscribedUpToDateDefaultTypeInternal _CMsgSOCacheSubscribedUpToDate_default_instance_;
class CMsgSOCacheSubscribed_SubscribedType;
struct CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal;
extern CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal _CMsgSOCacheSubscribed_SubscribedType_default_instance_;
class CMsgSOCacheSubscriptionCheck;
struct CMsgSOCacheSubscriptionCheckDefaultTypeInternal;
extern CMsgSOCacheSubscriptionCheckDefaultTypeInternal _CMsgSOCacheSubscriptionCheck_default_instance_;
class CMsgSOCacheSubscriptionRefresh;
struct CMsgSOCacheSubscriptionRefreshDefaultTypeInternal;
extern CMsgSOCacheSubscriptionRefreshDefaultTypeInternal _CMsgSOCacheSubscriptionRefresh_default_instance_;
class CMsgSOCacheUnsubscribed;
struct CMsgSOCacheUnsubscribedDefaultTypeInternal;
extern CMsgSOCacheUnsubscribedDefaultTypeInternal _CMsgSOCacheUnsubscribed_default_instance_;
class CMsgSOCacheVersion;
struct CMsgSOCacheVersionDefaultTypeInternal;
extern CMsgSOCacheVersionDefaultTypeInternal _CMsgSOCacheVersion_default_instance_;
class CMsgSOIDOwner;
struct CMsgSOIDOwnerDefaultTypeInternal;
extern CMsgSOIDOwnerDefaultTypeInternal _CMsgSOIDOwner_default_instance_;
class CMsgSOMultipleObjects;
struct CMsgSOMultipleObjectsDefaultTypeInternal;
extern CMsgSOMultipleObjectsDefaultTypeInternal _CMsgSOMultipleObjects_default_instance_;
class CMsgSOMultipleObjects_SingleObject;
struct CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal;
extern CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal _CMsgSOMultipleObjects_SingleObject_default_instance_;
class CMsgSOSingleObject;
struct CMsgSOSingleObjectDefaultTypeInternal;
extern CMsgSOSingleObjectDefaultTypeInternal _CMsgSOSingleObject_default_instance_;
class CMsgSerializedSOCache;
struct CMsgSerializedSOCacheDefaultTypeInternal;
extern CMsgSerializedSOCacheDefaultTypeInternal _CMsgSerializedSOCache_default_instance_;
class CMsgSerializedSOCache_Cache;
struct CMsgSerializedSOCache_CacheDefaultTypeInternal;
extern CMsgSerializedSOCache_CacheDefaultTypeInternal _CMsgSerializedSOCache_Cache_default_instance_;
class CMsgSerializedSOCache_Cache_Version;
struct CMsgSerializedSOCache_Cache_VersionDefaultTypeInternal;
extern CMsgSerializedSOCache_Cache_VersionDefaultTypeInternal _CMsgSerializedSOCache_Cache_Version_default_instance_;
class CMsgSerializedSOCache_TypeCache;
struct CMsgSerializedSOCache_TypeCacheDefaultTypeInternal;
extern CMsgSerializedSOCache_TypeCacheDefaultTypeInternal _CMsgSerializedSOCache_TypeCache_default_instance_;
class CWorkshop_GetContributors_Request;
struct CWorkshop_GetContributors_RequestDefaultTypeInternal;
extern CWorkshop_GetContributors_RequestDefaultTypeInternal _CWorkshop_GetContributors_Request_default_instance_;
class CWorkshop_GetContributors_Response;
struct CWorkshop_GetContributors_ResponseDefaultTypeInternal;
extern CWorkshop_GetContributors_ResponseDefaultTypeInternal _CWorkshop_GetContributors_Response_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request;
struct CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;
struct CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
struct CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
class CWorkshop_SetItemPaymentRules_Request;
struct CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule;
struct CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule;
struct CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRuleDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule;
struct CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Response;
struct CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Response_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CBroadcast_PostGameDataFrame_Request* Arena::CreateMaybeMessage<::CBroadcast_PostGameDataFrame_Request>(Arena*);
template<> ::CCommunity_GetClanAnnouncements_Request* Arena::CreateMaybeMessage<::CCommunity_GetClanAnnouncements_Request>(Arena*);
template<> ::CCommunity_GetClanAnnouncements_Response* Arena::CreateMaybeMessage<::CCommunity_GetClanAnnouncements_Response>(Arena*);
template<> ::CExtraMsgBlock* Arena::CreateMaybeMessage<::CExtraMsgBlock>(Arena*);
template<> ::CGCMsgCompressedMsgToClient* Arena::CreateMaybeMessage<::CGCMsgCompressedMsgToClient>(Arena*);
template<> ::CGCToGCMsgMasterAck* Arena::CreateMaybeMessage<::CGCToGCMsgMasterAck>(Arena*);
template<> ::CGCToGCMsgMasterAck_Process* Arena::CreateMaybeMessage<::CGCToGCMsgMasterAck_Process>(Arena*);
template<> ::CGCToGCMsgMasterAck_Response* Arena::CreateMaybeMessage<::CGCToGCMsgMasterAck_Response>(Arena*);
template<> ::CGCToGCMsgMasterStartupComplete* Arena::CreateMaybeMessage<::CGCToGCMsgMasterStartupComplete>(Arena*);
template<> ::CGCToGCMsgMasterStartupComplete_GCInfo* Arena::CreateMaybeMessage<::CGCToGCMsgMasterStartupComplete_GCInfo>(Arena*);
template<> ::CGCToGCMsgRouted* Arena::CreateMaybeMessage<::CGCToGCMsgRouted>(Arena*);
template<> ::CGCToGCMsgRoutedReply* Arena::CreateMaybeMessage<::CGCToGCMsgRoutedReply>(Arena*);
template<> ::CMsgClientHello* Arena::CreateMaybeMessage<::CMsgClientHello>(Arena*);
template<> ::CMsgClientWelcome* Arena::CreateMaybeMessage<::CMsgClientWelcome>(Arena*);
template<> ::CMsgClientWelcome_Location* Arena::CreateMaybeMessage<::CMsgClientWelcome_Location>(Arena*);
template<> ::CMsgConnectionStatus* Arena::CreateMaybeMessage<::CMsgConnectionStatus>(Arena*);
template<> ::CMsgGCAssertJobData* Arena::CreateMaybeMessage<::CMsgGCAssertJobData>(Arena*);
template<> ::CMsgGCClientPing* Arena::CreateMaybeMessage<::CMsgGCClientPing>(Arena*);
template<> ::CMsgGCConCommand* Arena::CreateMaybeMessage<::CMsgGCConCommand>(Arena*);
template<> ::CMsgGCMultiplexMessage* Arena::CreateMaybeMessage<::CMsgGCMultiplexMessage>(Arena*);
template<> ::CMsgGCRequestSubGCSessionInfo* Arena::CreateMaybeMessage<::CMsgGCRequestSubGCSessionInfo>(Arena*);
template<> ::CMsgGCRequestSubGCSessionInfoResponse* Arena::CreateMaybeMessage<::CMsgGCRequestSubGCSessionInfoResponse>(Arena*);
template<> ::CMsgGCToClientPollConvarRequest* Arena::CreateMaybeMessage<::CMsgGCToClientPollConvarRequest>(Arena*);
template<> ::CMsgGCToClientPollConvarResponse* Arena::CreateMaybeMessage<::CMsgGCToClientPollConvarResponse>(Arena*);
template<> ::CMsgGCToClientRequestDropped* Arena::CreateMaybeMessage<::CMsgGCToClientRequestDropped>(Arena*);
template<> ::CMsgGCToGCForwardAccountDetails* Arena::CreateMaybeMessage<::CMsgGCToGCForwardAccountDetails>(Arena*);
template<> ::CMsgGCToGCLoadSessionSOCache* Arena::CreateMaybeMessage<::CMsgGCToGCLoadSessionSOCache>(Arena*);
template<> ::CMsgGCToGCLoadSessionSOCacheResponse* Arena::CreateMaybeMessage<::CMsgGCToGCLoadSessionSOCacheResponse>(Arena*);
template<> ::CMsgGCToGCMasterBroadcastMessage* Arena::CreateMaybeMessage<::CMsgGCToGCMasterBroadcastMessage>(Arena*);
template<> ::CMsgGCToGCMasterDestroyCache* Arena::CreateMaybeMessage<::CMsgGCToGCMasterDestroyCache>(Arena*);
template<> ::CMsgGCToGCMasterSubscribeToCache* Arena::CreateMaybeMessage<::CMsgGCToGCMasterSubscribeToCache>(Arena*);
template<> ::CMsgGCToGCMasterSubscribeToCacheAsync* Arena::CreateMaybeMessage<::CMsgGCToGCMasterSubscribeToCacheAsync>(Arena*);
template<> ::CMsgGCToGCMasterSubscribeToCacheResponse* Arena::CreateMaybeMessage<::CMsgGCToGCMasterSubscribeToCacheResponse>(Arena*);
template<> ::CMsgGCToGCMasterUnsubscribeFromCache* Arena::CreateMaybeMessage<::CMsgGCToGCMasterUnsubscribeFromCache>(Arena*);
template<> ::CMsgGCToGCSOCacheSubscribe* Arena::CreateMaybeMessage<::CMsgGCToGCSOCacheSubscribe>(Arena*);
template<> ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* Arena::CreateMaybeMessage<::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions>(Arena*);
template<> ::CMsgGCToGCSOCacheUnsubscribe* Arena::CreateMaybeMessage<::CMsgGCToGCSOCacheUnsubscribe>(Arena*);
template<> ::CMsgGCToGCSubGCStarting* Arena::CreateMaybeMessage<::CMsgGCToGCSubGCStarting>(Arena*);
template<> ::CMsgGCToGCUniverseStartup* Arena::CreateMaybeMessage<::CMsgGCToGCUniverseStartup>(Arena*);
template<> ::CMsgGCToGCUniverseStartupResponse* Arena::CreateMaybeMessage<::CMsgGCToGCUniverseStartupResponse>(Arena*);
template<> ::CMsgGCToGCUpdateSessionStats* Arena::CreateMaybeMessage<::CMsgGCToGCUpdateSessionStats>(Arena*);
template<> ::CMsgGCUpdateSubGCSessionInfo* Arena::CreateMaybeMessage<::CMsgGCUpdateSubGCSessionInfo>(Arena*);
template<> ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* Arena::CreateMaybeMessage<::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate>(Arena*);
template<> ::CMsgSDOAssert* Arena::CreateMaybeMessage<::CMsgSDOAssert>(Arena*);
template<> ::CMsgSDOAssert_Request* Arena::CreateMaybeMessage<::CMsgSDOAssert_Request>(Arena*);
template<> ::CMsgSHA1Digest* Arena::CreateMaybeMessage<::CMsgSHA1Digest>(Arena*);
template<> ::CMsgSOCacheHaveVersion* Arena::CreateMaybeMessage<::CMsgSOCacheHaveVersion>(Arena*);
template<> ::CMsgSOCacheSubscribed* Arena::CreateMaybeMessage<::CMsgSOCacheSubscribed>(Arena*);
template<> ::CMsgSOCacheSubscribedUpToDate* Arena::CreateMaybeMessage<::CMsgSOCacheSubscribedUpToDate>(Arena*);
template<> ::CMsgSOCacheSubscribed_SubscribedType* Arena::CreateMaybeMessage<::CMsgSOCacheSubscribed_SubscribedType>(Arena*);
template<> ::CMsgSOCacheSubscriptionCheck* Arena::CreateMaybeMessage<::CMsgSOCacheSubscriptionCheck>(Arena*);
template<> ::CMsgSOCacheSubscriptionRefresh* Arena::CreateMaybeMessage<::CMsgSOCacheSubscriptionRefresh>(Arena*);
template<> ::CMsgSOCacheUnsubscribed* Arena::CreateMaybeMessage<::CMsgSOCacheUnsubscribed>(Arena*);
template<> ::CMsgSOCacheVersion* Arena::CreateMaybeMessage<::CMsgSOCacheVersion>(Arena*);
template<> ::CMsgSOIDOwner* Arena::CreateMaybeMessage<::CMsgSOIDOwner>(Arena*);
template<> ::CMsgSOMultipleObjects* Arena::CreateMaybeMessage<::CMsgSOMultipleObjects>(Arena*);
template<> ::CMsgSOMultipleObjects_SingleObject* Arena::CreateMaybeMessage<::CMsgSOMultipleObjects_SingleObject>(Arena*);
template<> ::CMsgSOSingleObject* Arena::CreateMaybeMessage<::CMsgSOSingleObject>(Arena*);
template<> ::CMsgSerializedSOCache* Arena::CreateMaybeMessage<::CMsgSerializedSOCache>(Arena*);
template<> ::CMsgSerializedSOCache_Cache* Arena::CreateMaybeMessage<::CMsgSerializedSOCache_Cache>(Arena*);
template<> ::CMsgSerializedSOCache_Cache_Version* Arena::CreateMaybeMessage<::CMsgSerializedSOCache_Cache_Version>(Arena*);
template<> ::CMsgSerializedSOCache_TypeCache* Arena::CreateMaybeMessage<::CMsgSerializedSOCache_TypeCache>(Arena*);
template<> ::CWorkshop_GetContributors_Request* Arena::CreateMaybeMessage<::CWorkshop_GetContributors_Request>(Arena*);
template<> ::CWorkshop_GetContributors_Response* Arena::CreateMaybeMessage<::CWorkshop_GetContributors_Response>(Arena*);
template<> ::CWorkshop_PopulateItemDescriptions_Request* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request>(Arena*);
template<> ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(Arena*);
template<> ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* Arena::CreateMaybeMessage<::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(Arena*);
template<> ::CWorkshop_SetItemPaymentRules_Request* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request>(Arena*);
template<> ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(Arena*);
template<> ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule>(Arena*);
template<> ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(Arena*);
template<> ::CWorkshop_SetItemPaymentRules_Response* Arena::CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum ESourceEngine : int {
  k_ESE_Source1 = 0,
  k_ESE_Source2 = 1
};
bool ESourceEngine_IsValid(int value);
constexpr ESourceEngine ESourceEngine_MIN = k_ESE_Source1;
constexpr ESourceEngine ESourceEngine_MAX = k_ESE_Source2;
constexpr int ESourceEngine_ARRAYSIZE = ESourceEngine_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESourceEngine_descriptor();
template<typename T>
inline const std::string& ESourceEngine_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ESourceEngine>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ESourceEngine_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ESourceEngine_descriptor(), enum_t_value);
}
inline bool ESourceEngine_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ESourceEngine* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ESourceEngine>(
    ESourceEngine_descriptor(), name, value);
}
enum PartnerAccountType : int {
  PARTNER_NONE = 0,
  PARTNER_PERFECT_WORLD = 1,
  PARTNER_INVALID = 3
};
bool PartnerAccountType_IsValid(int value);
constexpr PartnerAccountType PartnerAccountType_MIN = PARTNER_NONE;
constexpr PartnerAccountType PartnerAccountType_MAX = PARTNER_INVALID;
constexpr int PartnerAccountType_ARRAYSIZE = PartnerAccountType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PartnerAccountType_descriptor();
template<typename T>
inline const std::string& PartnerAccountType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PartnerAccountType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PartnerAccountType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PartnerAccountType_descriptor(), enum_t_value);
}
inline bool PartnerAccountType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PartnerAccountType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PartnerAccountType>(
    PartnerAccountType_descriptor(), name, value);
}
enum GCConnectionStatus : int {
  GCConnectionStatus_HAVE_SESSION = 0,
  GCConnectionStatus_GC_GOING_DOWN = 1,
  GCConnectionStatus_NO_SESSION = 2,
  GCConnectionStatus_NO_SESSION_IN_LOGON_QUEUE = 3,
  GCConnectionStatus_NO_STEAM = 4,
  GCConnectionStatus_SUSPENDED = 5,
  GCConnectionStatus_STEAM_GOING_DOWN = 6
};
bool GCConnectionStatus_IsValid(int value);
constexpr GCConnectionStatus GCConnectionStatus_MIN = GCConnectionStatus_HAVE_SESSION;
constexpr GCConnectionStatus GCConnectionStatus_MAX = GCConnectionStatus_STEAM_GOING_DOWN;
constexpr int GCConnectionStatus_ARRAYSIZE = GCConnectionStatus_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GCConnectionStatus_descriptor();
template<typename T>
inline const std::string& GCConnectionStatus_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GCConnectionStatus>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GCConnectionStatus_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GCConnectionStatus_descriptor(), enum_t_value);
}
inline bool GCConnectionStatus_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, GCConnectionStatus* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GCConnectionStatus>(
    GCConnectionStatus_descriptor(), name, value);
}
// ===================================================================

class CExtraMsgBlock PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CExtraMsgBlock) */ {
 public:
  inline CExtraMsgBlock() : CExtraMsgBlock(nullptr) {}
  virtual ~CExtraMsgBlock();
  explicit constexpr CExtraMsgBlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CExtraMsgBlock(const CExtraMsgBlock& from);
  CExtraMsgBlock(CExtraMsgBlock&& from) noexcept
    : CExtraMsgBlock() {
    *this = ::std::move(from);
  }

  inline CExtraMsgBlock& operator=(const CExtraMsgBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CExtraMsgBlock& operator=(CExtraMsgBlock&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CExtraMsgBlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CExtraMsgBlock* internal_default_instance() {
    return reinterpret_cast<const CExtraMsgBlock*>(
               &_CExtraMsgBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CExtraMsgBlock& a, CExtraMsgBlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CExtraMsgBlock* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CExtraMsgBlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CExtraMsgBlock* New() const final {
    return CreateMaybeMessage<CExtraMsgBlock>(nullptr);
  }

  CExtraMsgBlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CExtraMsgBlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CExtraMsgBlock& from);
  void MergeFrom(const CExtraMsgBlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CExtraMsgBlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CExtraMsgBlock";
  }
  protected:
  explicit CExtraMsgBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContentsFieldNumber = 2,
    kMsgTypeFieldNumber = 1,
    kIsCompressedFieldNumber = 4,
    kMsgKeyFieldNumber = 3,
  };
  // optional bytes contents = 2;
  bool has_contents() const;
  private:
  bool _internal_has_contents() const;
  public:
  void clear_contents();
  const std::string& contents() const;
  void set_contents(const std::string& value);
  void set_contents(std::string&& value);
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  std::string* mutable_contents();
  std::string* release_contents();
  void set_allocated_contents(std::string* contents);
  private:
  const std::string& _internal_contents() const;
  void _internal_set_contents(const std::string& value);
  std::string* _internal_mutable_contents();
  public:

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  private:
  bool _internal_has_msg_type() const;
  public:
  void clear_msg_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type() const;
  void set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msg_type() const;
  void _internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_compressed = 4;
  bool has_is_compressed() const;
  private:
  bool _internal_has_is_compressed() const;
  public:
  void clear_is_compressed();
  bool is_compressed() const;
  void set_is_compressed(bool value);
  private:
  bool _internal_is_compressed() const;
  void _internal_set_is_compressed(bool value);
  public:

  // optional uint64 msg_key = 3;
  bool has_msg_key() const;
  private:
  bool _internal_has_msg_key() const;
  public:
  void clear_msg_key();
  ::PROTOBUF_NAMESPACE_ID::uint64 msg_key() const;
  void set_msg_key(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_msg_key() const;
  void _internal_set_msg_key(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CExtraMsgBlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr contents_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type_;
  bool is_compressed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 msg_key_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCAssertJobData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCAssertJobData) */ {
 public:
  inline CMsgGCAssertJobData() : CMsgGCAssertJobData(nullptr) {}
  virtual ~CMsgGCAssertJobData();
  explicit constexpr CMsgGCAssertJobData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCAssertJobData(const CMsgGCAssertJobData& from);
  CMsgGCAssertJobData(CMsgGCAssertJobData&& from) noexcept
    : CMsgGCAssertJobData() {
    *this = ::std::move(from);
  }

  inline CMsgGCAssertJobData& operator=(const CMsgGCAssertJobData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCAssertJobData& operator=(CMsgGCAssertJobData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCAssertJobData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCAssertJobData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCAssertJobData*>(
               &_CMsgGCAssertJobData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgGCAssertJobData& a, CMsgGCAssertJobData& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCAssertJobData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCAssertJobData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCAssertJobData* New() const final {
    return CreateMaybeMessage<CMsgGCAssertJobData>(nullptr);
  }

  CMsgGCAssertJobData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCAssertJobData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCAssertJobData& from);
  void MergeFrom(const CMsgGCAssertJobData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCAssertJobData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCAssertJobData";
  }
  protected:
  explicit CMsgGCAssertJobData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageTypeFieldNumber = 1,
    kMessageDataFieldNumber = 2,
  };
  // optional string message_type = 1;
  bool has_message_type() const;
  private:
  bool _internal_has_message_type() const;
  public:
  void clear_message_type();
  const std::string& message_type() const;
  void set_message_type(const std::string& value);
  void set_message_type(std::string&& value);
  void set_message_type(const char* value);
  void set_message_type(const char* value, size_t size);
  std::string* mutable_message_type();
  std::string* release_message_type();
  void set_allocated_message_type(std::string* message_type);
  private:
  const std::string& _internal_message_type() const;
  void _internal_set_message_type(const std::string& value);
  std::string* _internal_mutable_message_type();
  public:

  // optional bytes message_data = 2;
  bool has_message_data() const;
  private:
  bool _internal_has_message_data() const;
  public:
  void clear_message_data();
  const std::string& message_data() const;
  void set_message_data(const std::string& value);
  void set_message_data(std::string&& value);
  void set_message_data(const char* value);
  void set_message_data(const void* value, size_t size);
  std::string* mutable_message_data();
  std::string* release_message_data();
  void set_allocated_message_data(std::string* message_data);
  private:
  const std::string& _internal_message_data() const;
  void _internal_set_message_data(const std::string& value);
  std::string* _internal_mutable_message_data();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCAssertJobData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_data_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCConCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCConCommand) */ {
 public:
  inline CMsgGCConCommand() : CMsgGCConCommand(nullptr) {}
  virtual ~CMsgGCConCommand();
  explicit constexpr CMsgGCConCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCConCommand(const CMsgGCConCommand& from);
  CMsgGCConCommand(CMsgGCConCommand&& from) noexcept
    : CMsgGCConCommand() {
    *this = ::std::move(from);
  }

  inline CMsgGCConCommand& operator=(const CMsgGCConCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCConCommand& operator=(CMsgGCConCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCConCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCConCommand* internal_default_instance() {
    return reinterpret_cast<const CMsgGCConCommand*>(
               &_CMsgGCConCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgGCConCommand& a, CMsgGCConCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCConCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCConCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCConCommand* New() const final {
    return CreateMaybeMessage<CMsgGCConCommand>(nullptr);
  }

  CMsgGCConCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCConCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCConCommand& from);
  void MergeFrom(const CMsgGCConCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCConCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCConCommand";
  }
  protected:
  explicit CMsgGCConCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommandFieldNumber = 1,
  };
  // optional string command = 1;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  const std::string& command() const;
  void set_command(const std::string& value);
  void set_command(std::string&& value);
  void set_command(const char* value);
  void set_command(const char* value, size_t size);
  std::string* mutable_command();
  std::string* release_command();
  void set_allocated_command(std::string* command);
  private:
  const std::string& _internal_command() const;
  void _internal_set_command(const std::string& value);
  std::string* _internal_mutable_command();
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCConCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr command_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSDOAssert_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSDOAssert.Request) */ {
 public:
  inline CMsgSDOAssert_Request() : CMsgSDOAssert_Request(nullptr) {}
  virtual ~CMsgSDOAssert_Request();
  explicit constexpr CMsgSDOAssert_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSDOAssert_Request(const CMsgSDOAssert_Request& from);
  CMsgSDOAssert_Request(CMsgSDOAssert_Request&& from) noexcept
    : CMsgSDOAssert_Request() {
    *this = ::std::move(from);
  }

  inline CMsgSDOAssert_Request& operator=(const CMsgSDOAssert_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSDOAssert_Request& operator=(CMsgSDOAssert_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSDOAssert_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSDOAssert_Request* internal_default_instance() {
    return reinterpret_cast<const CMsgSDOAssert_Request*>(
               &_CMsgSDOAssert_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgSDOAssert_Request& a, CMsgSDOAssert_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSDOAssert_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSDOAssert_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSDOAssert_Request* New() const final {
    return CreateMaybeMessage<CMsgSDOAssert_Request>(nullptr);
  }

  CMsgSDOAssert_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSDOAssert_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSDOAssert_Request& from);
  void MergeFrom(const CMsgSDOAssert_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSDOAssert_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSDOAssert.Request";
  }
  protected:
  explicit CMsgSDOAssert_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kRequestingJobFieldNumber = 2,
  };
  // repeated uint64 key = 1;
  int key_size() const;
  private:
  int _internal_key_size() const;
  public:
  void clear_key();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_key(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_key() const;
  void _internal_add_key(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_key();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 key(int index) const;
  void set_key(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_key(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      key() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_key();

  // optional string requesting_job = 2;
  bool has_requesting_job() const;
  private:
  bool _internal_has_requesting_job() const;
  public:
  void clear_requesting_job();
  const std::string& requesting_job() const;
  void set_requesting_job(const std::string& value);
  void set_requesting_job(std::string&& value);
  void set_requesting_job(const char* value);
  void set_requesting_job(const char* value, size_t size);
  std::string* mutable_requesting_job();
  std::string* release_requesting_job();
  void set_allocated_requesting_job(std::string* requesting_job);
  private:
  const std::string& _internal_requesting_job() const;
  void _internal_set_requesting_job(const std::string& value);
  std::string* _internal_mutable_requesting_job();
  public:

  // @@protoc_insertion_point(class_scope:CMsgSDOAssert.Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr requesting_job_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSDOAssert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSDOAssert) */ {
 public:
  inline CMsgSDOAssert() : CMsgSDOAssert(nullptr) {}
  virtual ~CMsgSDOAssert();
  explicit constexpr CMsgSDOAssert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSDOAssert(const CMsgSDOAssert& from);
  CMsgSDOAssert(CMsgSDOAssert&& from) noexcept
    : CMsgSDOAssert() {
    *this = ::std::move(from);
  }

  inline CMsgSDOAssert& operator=(const CMsgSDOAssert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSDOAssert& operator=(CMsgSDOAssert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSDOAssert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSDOAssert* internal_default_instance() {
    return reinterpret_cast<const CMsgSDOAssert*>(
               &_CMsgSDOAssert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgSDOAssert& a, CMsgSDOAssert& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSDOAssert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSDOAssert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSDOAssert* New() const final {
    return CreateMaybeMessage<CMsgSDOAssert>(nullptr);
  }

  CMsgSDOAssert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSDOAssert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSDOAssert& from);
  void MergeFrom(const CMsgSDOAssert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSDOAssert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSDOAssert";
  }
  protected:
  explicit CMsgSDOAssert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSDOAssert_Request Request;

  // accessors -------------------------------------------------------

  enum : int {
    kRequestsFieldNumber = 2,
    kSdoTypeFieldNumber = 1,
  };
  // repeated .CMsgSDOAssert.Request requests = 2;
  int requests_size() const;
  private:
  int _internal_requests_size() const;
  public:
  void clear_requests();
  ::CMsgSDOAssert_Request* mutable_requests(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSDOAssert_Request >*
      mutable_requests();
  private:
  const ::CMsgSDOAssert_Request& _internal_requests(int index) const;
  ::CMsgSDOAssert_Request* _internal_add_requests();
  public:
  const ::CMsgSDOAssert_Request& requests(int index) const;
  ::CMsgSDOAssert_Request* add_requests();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSDOAssert_Request >&
      requests() const;

  // optional int32 sdo_type = 1;
  bool has_sdo_type() const;
  private:
  bool _internal_has_sdo_type() const;
  public:
  void clear_sdo_type();
  ::PROTOBUF_NAMESPACE_ID::int32 sdo_type() const;
  void set_sdo_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sdo_type() const;
  void _internal_set_sdo_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSDOAssert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSDOAssert_Request > requests_;
  ::PROTOBUF_NAMESPACE_ID::int32 sdo_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSHA1Digest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSHA1Digest) */ {
 public:
  inline CMsgSHA1Digest() : CMsgSHA1Digest(nullptr) {}
  virtual ~CMsgSHA1Digest();
  explicit constexpr CMsgSHA1Digest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSHA1Digest(const CMsgSHA1Digest& from);
  CMsgSHA1Digest(CMsgSHA1Digest&& from) noexcept
    : CMsgSHA1Digest() {
    *this = ::std::move(from);
  }

  inline CMsgSHA1Digest& operator=(const CMsgSHA1Digest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSHA1Digest& operator=(CMsgSHA1Digest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSHA1Digest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSHA1Digest* internal_default_instance() {
    return reinterpret_cast<const CMsgSHA1Digest*>(
               &_CMsgSHA1Digest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgSHA1Digest& a, CMsgSHA1Digest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSHA1Digest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSHA1Digest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSHA1Digest* New() const final {
    return CreateMaybeMessage<CMsgSHA1Digest>(nullptr);
  }

  CMsgSHA1Digest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSHA1Digest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSHA1Digest& from);
  void MergeFrom(const CMsgSHA1Digest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSHA1Digest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSHA1Digest";
  }
  protected:
  explicit CMsgSHA1Digest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlock1FieldNumber = 1,
    kBlock2FieldNumber = 2,
    kBlock3FieldNumber = 3,
  };
  // required fixed64 block1 = 1;
  bool has_block1() const;
  private:
  bool _internal_has_block1() const;
  public:
  void clear_block1();
  ::PROTOBUF_NAMESPACE_ID::uint64 block1() const;
  void set_block1(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_block1() const;
  void _internal_set_block1(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required fixed64 block2 = 2;
  bool has_block2() const;
  private:
  bool _internal_has_block2() const;
  public:
  void clear_block2();
  ::PROTOBUF_NAMESPACE_ID::uint64 block2() const;
  void set_block2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_block2() const;
  void _internal_set_block2(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // required fixed32 block3 = 3;
  bool has_block3() const;
  private:
  bool _internal_has_block3() const;
  public:
  void clear_block3();
  ::PROTOBUF_NAMESPACE_ID::uint32 block3() const;
  void set_block3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_block3() const;
  void _internal_set_block3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSHA1Digest)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 block1_;
  ::PROTOBUF_NAMESPACE_ID::uint64 block2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 block3_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOIDOwner PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOIDOwner) */ {
 public:
  inline CMsgSOIDOwner() : CMsgSOIDOwner(nullptr) {}
  virtual ~CMsgSOIDOwner();
  explicit constexpr CMsgSOIDOwner(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOIDOwner(const CMsgSOIDOwner& from);
  CMsgSOIDOwner(CMsgSOIDOwner&& from) noexcept
    : CMsgSOIDOwner() {
    *this = ::std::move(from);
  }

  inline CMsgSOIDOwner& operator=(const CMsgSOIDOwner& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOIDOwner& operator=(CMsgSOIDOwner&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOIDOwner& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOIDOwner* internal_default_instance() {
    return reinterpret_cast<const CMsgSOIDOwner*>(
               &_CMsgSOIDOwner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgSOIDOwner& a, CMsgSOIDOwner& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOIDOwner* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOIDOwner* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOIDOwner* New() const final {
    return CreateMaybeMessage<CMsgSOIDOwner>(nullptr);
  }

  CMsgSOIDOwner* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOIDOwner>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOIDOwner& from);
  void MergeFrom(const CMsgSOIDOwner& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOIDOwner* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOIDOwner";
  }
  protected:
  explicit CMsgSOIDOwner(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional uint64 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOIDOwner)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOSingleObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOSingleObject) */ {
 public:
  inline CMsgSOSingleObject() : CMsgSOSingleObject(nullptr) {}
  virtual ~CMsgSOSingleObject();
  explicit constexpr CMsgSOSingleObject(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOSingleObject(const CMsgSOSingleObject& from);
  CMsgSOSingleObject(CMsgSOSingleObject&& from) noexcept
    : CMsgSOSingleObject() {
    *this = ::std::move(from);
  }

  inline CMsgSOSingleObject& operator=(const CMsgSOSingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOSingleObject& operator=(CMsgSOSingleObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOSingleObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOSingleObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSOSingleObject*>(
               &_CMsgSOSingleObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgSOSingleObject& a, CMsgSOSingleObject& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOSingleObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOSingleObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOSingleObject* New() const final {
    return CreateMaybeMessage<CMsgSOSingleObject>(nullptr);
  }

  CMsgSOSingleObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOSingleObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOSingleObject& from);
  void MergeFrom(const CMsgSOSingleObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOSingleObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOSingleObject";
  }
  protected:
  explicit CMsgSOSingleObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectDataFieldNumber = 3,
    kOwnerSoidFieldNumber = 5,
    kVersionFieldNumber = 4,
    kTypeIdFieldNumber = 2,
    kServiceIdFieldNumber = 6,
  };
  // optional bytes object_data = 3;
  bool has_object_data() const;
  private:
  bool _internal_has_object_data() const;
  public:
  void clear_object_data();
  const std::string& object_data() const;
  void set_object_data(const std::string& value);
  void set_object_data(std::string&& value);
  void set_object_data(const char* value);
  void set_object_data(const void* value, size_t size);
  std::string* mutable_object_data();
  std::string* release_object_data();
  void set_allocated_object_data(std::string* object_data);
  private:
  const std::string& _internal_object_data() const;
  void _internal_set_object_data(const std::string& value);
  std::string* _internal_mutable_object_data();
  public:

  // optional .CMsgSOIDOwner owner_soid = 5;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // optional fixed64 version = 4;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 type_id = 2;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  ::PROTOBUF_NAMESPACE_ID::int32 type_id() const;
  void set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type_id() const;
  void _internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 service_id = 6;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOSingleObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr object_data_;
  ::CMsgSOIDOwner* owner_soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects_SingleObject PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOMultipleObjects.SingleObject) */ {
 public:
  inline CMsgSOMultipleObjects_SingleObject() : CMsgSOMultipleObjects_SingleObject(nullptr) {}
  virtual ~CMsgSOMultipleObjects_SingleObject();
  explicit constexpr CMsgSOMultipleObjects_SingleObject(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOMultipleObjects_SingleObject(const CMsgSOMultipleObjects_SingleObject& from);
  CMsgSOMultipleObjects_SingleObject(CMsgSOMultipleObjects_SingleObject&& from) noexcept
    : CMsgSOMultipleObjects_SingleObject() {
    *this = ::std::move(from);
  }

  inline CMsgSOMultipleObjects_SingleObject& operator=(const CMsgSOMultipleObjects_SingleObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOMultipleObjects_SingleObject& operator=(CMsgSOMultipleObjects_SingleObject&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOMultipleObjects_SingleObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOMultipleObjects_SingleObject* internal_default_instance() {
    return reinterpret_cast<const CMsgSOMultipleObjects_SingleObject*>(
               &_CMsgSOMultipleObjects_SingleObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgSOMultipleObjects_SingleObject& a, CMsgSOMultipleObjects_SingleObject& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOMultipleObjects_SingleObject* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOMultipleObjects_SingleObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOMultipleObjects_SingleObject* New() const final {
    return CreateMaybeMessage<CMsgSOMultipleObjects_SingleObject>(nullptr);
  }

  CMsgSOMultipleObjects_SingleObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOMultipleObjects_SingleObject>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOMultipleObjects_SingleObject& from);
  void MergeFrom(const CMsgSOMultipleObjects_SingleObject& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOMultipleObjects_SingleObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOMultipleObjects.SingleObject";
  }
  protected:
  explicit CMsgSOMultipleObjects_SingleObject(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectDataFieldNumber = 2,
    kTypeIdFieldNumber = 1,
  };
  // optional bytes object_data = 2;
  bool has_object_data() const;
  private:
  bool _internal_has_object_data() const;
  public:
  void clear_object_data();
  const std::string& object_data() const;
  void set_object_data(const std::string& value);
  void set_object_data(std::string&& value);
  void set_object_data(const char* value);
  void set_object_data(const void* value, size_t size);
  std::string* mutable_object_data();
  std::string* release_object_data();
  void set_allocated_object_data(std::string* object_data);
  private:
  const std::string& _internal_object_data() const;
  void _internal_set_object_data(const std::string& value);
  std::string* _internal_mutable_object_data();
  public:

  // optional int32 type_id = 1;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  ::PROTOBUF_NAMESPACE_ID::int32 type_id() const;
  void set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type_id() const;
  void _internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects.SingleObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr object_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOMultipleObjects PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOMultipleObjects) */ {
 public:
  inline CMsgSOMultipleObjects() : CMsgSOMultipleObjects(nullptr) {}
  virtual ~CMsgSOMultipleObjects();
  explicit constexpr CMsgSOMultipleObjects(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOMultipleObjects(const CMsgSOMultipleObjects& from);
  CMsgSOMultipleObjects(CMsgSOMultipleObjects&& from) noexcept
    : CMsgSOMultipleObjects() {
    *this = ::std::move(from);
  }

  inline CMsgSOMultipleObjects& operator=(const CMsgSOMultipleObjects& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOMultipleObjects& operator=(CMsgSOMultipleObjects&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOMultipleObjects& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOMultipleObjects* internal_default_instance() {
    return reinterpret_cast<const CMsgSOMultipleObjects*>(
               &_CMsgSOMultipleObjects_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgSOMultipleObjects& a, CMsgSOMultipleObjects& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOMultipleObjects* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOMultipleObjects* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOMultipleObjects* New() const final {
    return CreateMaybeMessage<CMsgSOMultipleObjects>(nullptr);
  }

  CMsgSOMultipleObjects* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOMultipleObjects>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOMultipleObjects& from);
  void MergeFrom(const CMsgSOMultipleObjects& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOMultipleObjects* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOMultipleObjects";
  }
  protected:
  explicit CMsgSOMultipleObjects(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSOMultipleObjects_SingleObject SingleObject;

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsModifiedFieldNumber = 2,
    kObjectsAddedFieldNumber = 4,
    kObjectsRemovedFieldNumber = 5,
    kOwnerSoidFieldNumber = 6,
    kVersionFieldNumber = 3,
    kServiceIdFieldNumber = 7,
  };
  // repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
  int objects_modified_size() const;
  private:
  int _internal_objects_modified_size() const;
  public:
  void clear_objects_modified();
  ::CMsgSOMultipleObjects_SingleObject* mutable_objects_modified(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_modified();
  private:
  const ::CMsgSOMultipleObjects_SingleObject& _internal_objects_modified(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* _internal_add_objects_modified();
  public:
  const ::CMsgSOMultipleObjects_SingleObject& objects_modified(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* add_objects_modified();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_modified() const;

  // repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
  int objects_added_size() const;
  private:
  int _internal_objects_added_size() const;
  public:
  void clear_objects_added();
  ::CMsgSOMultipleObjects_SingleObject* mutable_objects_added(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_added();
  private:
  const ::CMsgSOMultipleObjects_SingleObject& _internal_objects_added(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* _internal_add_objects_added();
  public:
  const ::CMsgSOMultipleObjects_SingleObject& objects_added(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* add_objects_added();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_added() const;

  // repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
  int objects_removed_size() const;
  private:
  int _internal_objects_removed_size() const;
  public:
  void clear_objects_removed();
  ::CMsgSOMultipleObjects_SingleObject* mutable_objects_removed(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
      mutable_objects_removed();
  private:
  const ::CMsgSOMultipleObjects_SingleObject& _internal_objects_removed(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* _internal_add_objects_removed();
  public:
  const ::CMsgSOMultipleObjects_SingleObject& objects_removed(int index) const;
  ::CMsgSOMultipleObjects_SingleObject* add_objects_removed();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
      objects_removed() const;

  // optional .CMsgSOIDOwner owner_soid = 6;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // optional fixed64 version = 3;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 7;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOMultipleObjects)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_modified_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_added_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject > objects_removed_;
  ::CMsgSOIDOwner* owner_soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed_SubscribedType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribed.SubscribedType) */ {
 public:
  inline CMsgSOCacheSubscribed_SubscribedType() : CMsgSOCacheSubscribed_SubscribedType(nullptr) {}
  virtual ~CMsgSOCacheSubscribed_SubscribedType();
  explicit constexpr CMsgSOCacheSubscribed_SubscribedType(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheSubscribed_SubscribedType(const CMsgSOCacheSubscribed_SubscribedType& from);
  CMsgSOCacheSubscribed_SubscribedType(CMsgSOCacheSubscribed_SubscribedType&& from) noexcept
    : CMsgSOCacheSubscribed_SubscribedType() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribed_SubscribedType& operator=(const CMsgSOCacheSubscribed_SubscribedType& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheSubscribed_SubscribedType& operator=(CMsgSOCacheSubscribed_SubscribedType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheSubscribed_SubscribedType& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheSubscribed_SubscribedType* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribed_SubscribedType*>(
               &_CMsgSOCacheSubscribed_SubscribedType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgSOCacheSubscribed_SubscribedType& a, CMsgSOCacheSubscribed_SubscribedType& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheSubscribed_SubscribedType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheSubscribed_SubscribedType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribed_SubscribedType* New() const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribed_SubscribedType>(nullptr);
  }

  CMsgSOCacheSubscribed_SubscribedType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribed_SubscribedType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  void MergeFrom(const CMsgSOCacheSubscribed_SubscribedType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheSubscribed_SubscribedType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheSubscribed.SubscribedType";
  }
  protected:
  explicit CMsgSOCacheSubscribed_SubscribedType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectDataFieldNumber = 2,
    kTypeIdFieldNumber = 1,
  };
  // repeated bytes object_data = 2;
  int object_data_size() const;
  private:
  int _internal_object_data_size() const;
  public:
  void clear_object_data();
  const std::string& object_data(int index) const;
  std::string* mutable_object_data(int index);
  void set_object_data(int index, const std::string& value);
  void set_object_data(int index, std::string&& value);
  void set_object_data(int index, const char* value);
  void set_object_data(int index, const void* value, size_t size);
  std::string* add_object_data();
  void add_object_data(const std::string& value);
  void add_object_data(std::string&& value);
  void add_object_data(const char* value);
  void add_object_data(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& object_data() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_object_data();
  private:
  const std::string& _internal_object_data(int index) const;
  std::string* _internal_add_object_data();
  public:

  // optional int32 type_id = 1;
  bool has_type_id() const;
  private:
  bool _internal_has_type_id() const;
  public:
  void clear_type_id();
  ::PROTOBUF_NAMESPACE_ID::int32 type_id() const;
  void set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type_id() const;
  void _internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed.SubscribedType)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> object_data_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribed PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribed) */ {
 public:
  inline CMsgSOCacheSubscribed() : CMsgSOCacheSubscribed(nullptr) {}
  virtual ~CMsgSOCacheSubscribed();
  explicit constexpr CMsgSOCacheSubscribed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheSubscribed(const CMsgSOCacheSubscribed& from);
  CMsgSOCacheSubscribed(CMsgSOCacheSubscribed&& from) noexcept
    : CMsgSOCacheSubscribed() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribed& operator=(const CMsgSOCacheSubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheSubscribed& operator=(CMsgSOCacheSubscribed&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheSubscribed& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheSubscribed* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribed*>(
               &_CMsgSOCacheSubscribed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgSOCacheSubscribed& a, CMsgSOCacheSubscribed& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheSubscribed* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheSubscribed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribed* New() const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribed>(nullptr);
  }

  CMsgSOCacheSubscribed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheSubscribed& from);
  void MergeFrom(const CMsgSOCacheSubscribed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheSubscribed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheSubscribed";
  }
  protected:
  explicit CMsgSOCacheSubscribed(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSOCacheSubscribed_SubscribedType SubscribedType;

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 2,
    kServiceListFieldNumber = 6,
    kOwnerSoidFieldNumber = 4,
    kVersionFieldNumber = 3,
    kSyncVersionFieldNumber = 7,
    kServiceIdFieldNumber = 5,
  };
  // repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  ::CMsgSOCacheSubscribed_SubscribedType* mutable_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
      mutable_objects();
  private:
  const ::CMsgSOCacheSubscribed_SubscribedType& _internal_objects(int index) const;
  ::CMsgSOCacheSubscribed_SubscribedType* _internal_add_objects();
  public:
  const ::CMsgSOCacheSubscribed_SubscribedType& objects(int index) const;
  ::CMsgSOCacheSubscribed_SubscribedType* add_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
      objects() const;

  // repeated uint32 service_list = 6;
  int service_list_size() const;
  private:
  int _internal_service_list_size() const;
  public:
  void clear_service_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_service_list() const;
  void _internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_service_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 service_list(int index) const;
  void set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      service_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 4;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // optional fixed64 version = 3;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 sync_version = 7;
  bool has_sync_version() const;
  private:
  bool _internal_has_sync_version() const;
  public:
  void clear_sync_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version() const;
  void set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sync_version() const;
  void _internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 5;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType > objects_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscribedUpToDate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscribedUpToDate) */ {
 public:
  inline CMsgSOCacheSubscribedUpToDate() : CMsgSOCacheSubscribedUpToDate(nullptr) {}
  virtual ~CMsgSOCacheSubscribedUpToDate();
  explicit constexpr CMsgSOCacheSubscribedUpToDate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheSubscribedUpToDate(const CMsgSOCacheSubscribedUpToDate& from);
  CMsgSOCacheSubscribedUpToDate(CMsgSOCacheSubscribedUpToDate&& from) noexcept
    : CMsgSOCacheSubscribedUpToDate() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscribedUpToDate& operator=(const CMsgSOCacheSubscribedUpToDate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheSubscribedUpToDate& operator=(CMsgSOCacheSubscribedUpToDate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheSubscribedUpToDate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheSubscribedUpToDate* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscribedUpToDate*>(
               &_CMsgSOCacheSubscribedUpToDate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgSOCacheSubscribedUpToDate& a, CMsgSOCacheSubscribedUpToDate& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheSubscribedUpToDate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheSubscribedUpToDate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscribedUpToDate* New() const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribedUpToDate>(nullptr);
  }

  CMsgSOCacheSubscribedUpToDate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheSubscribedUpToDate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheSubscribedUpToDate& from);
  void MergeFrom(const CMsgSOCacheSubscribedUpToDate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheSubscribedUpToDate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheSubscribedUpToDate";
  }
  protected:
  explicit CMsgSOCacheSubscribedUpToDate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServiceListFieldNumber = 4,
    kOwnerSoidFieldNumber = 2,
    kVersionFieldNumber = 1,
    kSyncVersionFieldNumber = 5,
    kServiceIdFieldNumber = 3,
  };
  // repeated uint32 service_list = 4;
  int service_list_size() const;
  private:
  int _internal_service_list_size() const;
  public:
  void clear_service_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_service_list() const;
  void _internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_service_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 service_list(int index) const;
  void set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      service_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 2;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // optional fixed64 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 sync_version = 5;
  bool has_sync_version() const;
  private:
  bool _internal_has_sync_version() const;
  public:
  void clear_sync_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version() const;
  void set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sync_version() const;
  void _internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 3;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscribedUpToDate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheUnsubscribed PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheUnsubscribed) */ {
 public:
  inline CMsgSOCacheUnsubscribed() : CMsgSOCacheUnsubscribed(nullptr) {}
  virtual ~CMsgSOCacheUnsubscribed();
  explicit constexpr CMsgSOCacheUnsubscribed(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheUnsubscribed(const CMsgSOCacheUnsubscribed& from);
  CMsgSOCacheUnsubscribed(CMsgSOCacheUnsubscribed&& from) noexcept
    : CMsgSOCacheUnsubscribed() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheUnsubscribed& operator=(const CMsgSOCacheUnsubscribed& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheUnsubscribed& operator=(CMsgSOCacheUnsubscribed&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheUnsubscribed& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheUnsubscribed* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheUnsubscribed*>(
               &_CMsgSOCacheUnsubscribed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgSOCacheUnsubscribed& a, CMsgSOCacheUnsubscribed& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheUnsubscribed* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheUnsubscribed* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheUnsubscribed* New() const final {
    return CreateMaybeMessage<CMsgSOCacheUnsubscribed>(nullptr);
  }

  CMsgSOCacheUnsubscribed* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheUnsubscribed>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheUnsubscribed& from);
  void MergeFrom(const CMsgSOCacheUnsubscribed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheUnsubscribed* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheUnsubscribed";
  }
  protected:
  explicit CMsgSOCacheUnsubscribed(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwnerSoidFieldNumber = 2,
  };
  // optional .CMsgSOIDOwner owner_soid = 2;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // @@protoc_insertion_point(class_scope:CMsgSOCacheUnsubscribed)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgSOIDOwner* owner_soid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionCheck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscriptionCheck) */ {
 public:
  inline CMsgSOCacheSubscriptionCheck() : CMsgSOCacheSubscriptionCheck(nullptr) {}
  virtual ~CMsgSOCacheSubscriptionCheck();
  explicit constexpr CMsgSOCacheSubscriptionCheck(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheSubscriptionCheck(const CMsgSOCacheSubscriptionCheck& from);
  CMsgSOCacheSubscriptionCheck(CMsgSOCacheSubscriptionCheck&& from) noexcept
    : CMsgSOCacheSubscriptionCheck() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscriptionCheck& operator=(const CMsgSOCacheSubscriptionCheck& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheSubscriptionCheck& operator=(CMsgSOCacheSubscriptionCheck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheSubscriptionCheck& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheSubscriptionCheck* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscriptionCheck*>(
               &_CMsgSOCacheSubscriptionCheck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgSOCacheSubscriptionCheck& a, CMsgSOCacheSubscriptionCheck& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheSubscriptionCheck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheSubscriptionCheck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscriptionCheck* New() const final {
    return CreateMaybeMessage<CMsgSOCacheSubscriptionCheck>(nullptr);
  }

  CMsgSOCacheSubscriptionCheck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheSubscriptionCheck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheSubscriptionCheck& from);
  void MergeFrom(const CMsgSOCacheSubscriptionCheck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheSubscriptionCheck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheSubscriptionCheck";
  }
  protected:
  explicit CMsgSOCacheSubscriptionCheck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServiceListFieldNumber = 5,
    kOwnerSoidFieldNumber = 3,
    kVersionFieldNumber = 2,
    kSyncVersionFieldNumber = 6,
    kServiceIdFieldNumber = 4,
  };
  // repeated uint32 service_list = 5;
  int service_list_size() const;
  private:
  int _internal_service_list_size() const;
  public:
  void clear_service_list();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_list(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_service_list() const;
  void _internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_service_list();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 service_list(int index) const;
  void set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      service_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_service_list();

  // optional .CMsgSOIDOwner owner_soid = 3;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // optional fixed64 version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 sync_version = 6;
  bool has_sync_version() const;
  private:
  bool _internal_has_sync_version() const;
  public:
  void clear_sync_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version() const;
  void set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sync_version() const;
  void _internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 4;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionCheck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > service_list_;
  ::CMsgSOIDOwner* owner_soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheSubscriptionRefresh PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheSubscriptionRefresh) */ {
 public:
  inline CMsgSOCacheSubscriptionRefresh() : CMsgSOCacheSubscriptionRefresh(nullptr) {}
  virtual ~CMsgSOCacheSubscriptionRefresh();
  explicit constexpr CMsgSOCacheSubscriptionRefresh(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheSubscriptionRefresh(const CMsgSOCacheSubscriptionRefresh& from);
  CMsgSOCacheSubscriptionRefresh(CMsgSOCacheSubscriptionRefresh&& from) noexcept
    : CMsgSOCacheSubscriptionRefresh() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheSubscriptionRefresh& operator=(const CMsgSOCacheSubscriptionRefresh& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheSubscriptionRefresh& operator=(CMsgSOCacheSubscriptionRefresh&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheSubscriptionRefresh& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheSubscriptionRefresh* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheSubscriptionRefresh*>(
               &_CMsgSOCacheSubscriptionRefresh_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgSOCacheSubscriptionRefresh& a, CMsgSOCacheSubscriptionRefresh& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheSubscriptionRefresh* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheSubscriptionRefresh* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheSubscriptionRefresh* New() const final {
    return CreateMaybeMessage<CMsgSOCacheSubscriptionRefresh>(nullptr);
  }

  CMsgSOCacheSubscriptionRefresh* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheSubscriptionRefresh>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheSubscriptionRefresh& from);
  void MergeFrom(const CMsgSOCacheSubscriptionRefresh& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheSubscriptionRefresh* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheSubscriptionRefresh";
  }
  protected:
  explicit CMsgSOCacheSubscriptionRefresh(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOwnerSoidFieldNumber = 2,
  };
  // optional .CMsgSOIDOwner owner_soid = 2;
  bool has_owner_soid() const;
  private:
  bool _internal_has_owner_soid() const;
  public:
  void clear_owner_soid();
  const ::CMsgSOIDOwner& owner_soid() const;
  ::CMsgSOIDOwner* release_owner_soid();
  ::CMsgSOIDOwner* mutable_owner_soid();
  void set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid);
  private:
  const ::CMsgSOIDOwner& _internal_owner_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_owner_soid();
  public:
  void unsafe_arena_set_allocated_owner_soid(
      ::CMsgSOIDOwner* owner_soid);
  ::CMsgSOIDOwner* unsafe_arena_release_owner_soid();

  // @@protoc_insertion_point(class_scope:CMsgSOCacheSubscriptionRefresh)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgSOIDOwner* owner_soid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheVersion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheVersion) */ {
 public:
  inline CMsgSOCacheVersion() : CMsgSOCacheVersion(nullptr) {}
  virtual ~CMsgSOCacheVersion();
  explicit constexpr CMsgSOCacheVersion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheVersion(const CMsgSOCacheVersion& from);
  CMsgSOCacheVersion(CMsgSOCacheVersion&& from) noexcept
    : CMsgSOCacheVersion() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheVersion& operator=(const CMsgSOCacheVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheVersion& operator=(CMsgSOCacheVersion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheVersion* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheVersion*>(
               &_CMsgSOCacheVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgSOCacheVersion& a, CMsgSOCacheVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheVersion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheVersion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheVersion* New() const final {
    return CreateMaybeMessage<CMsgSOCacheVersion>(nullptr);
  }

  CMsgSOCacheVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheVersion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheVersion& from);
  void MergeFrom(const CMsgSOCacheVersion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheVersion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheVersion";
  }
  protected:
  explicit CMsgSOCacheVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 1,
  };
  // optional fixed64 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheVersion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCMultiplexMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCMultiplexMessage) */ {
 public:
  inline CMsgGCMultiplexMessage() : CMsgGCMultiplexMessage(nullptr) {}
  virtual ~CMsgGCMultiplexMessage();
  explicit constexpr CMsgGCMultiplexMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCMultiplexMessage(const CMsgGCMultiplexMessage& from);
  CMsgGCMultiplexMessage(CMsgGCMultiplexMessage&& from) noexcept
    : CMsgGCMultiplexMessage() {
    *this = ::std::move(from);
  }

  inline CMsgGCMultiplexMessage& operator=(const CMsgGCMultiplexMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCMultiplexMessage& operator=(CMsgGCMultiplexMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCMultiplexMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCMultiplexMessage* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMultiplexMessage*>(
               &_CMsgGCMultiplexMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgGCMultiplexMessage& a, CMsgGCMultiplexMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCMultiplexMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCMultiplexMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCMultiplexMessage* New() const final {
    return CreateMaybeMessage<CMsgGCMultiplexMessage>(nullptr);
  }

  CMsgGCMultiplexMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCMultiplexMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCMultiplexMessage& from);
  void MergeFrom(const CMsgGCMultiplexMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCMultiplexMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCMultiplexMessage";
  }
  protected:
  explicit CMsgGCMultiplexMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidsFieldNumber = 3,
    kPayloadFieldNumber = 2,
    kMsgtypeFieldNumber = 1,
  };
  // repeated fixed64 steamids = 3;
  int steamids_size() const;
  private:
  int _internal_steamids_size() const;
  public:
  void clear_steamids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steamids() const;
  void _internal_add_steamids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steamids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steamids(int index) const;
  void set_steamids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steamids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steamids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steamids();

  // optional bytes payload = 2;
  bool has_payload() const;
  private:
  bool _internal_has_payload() const;
  public:
  void clear_payload();
  const std::string& payload() const;
  void set_payload(const std::string& value);
  void set_payload(std::string&& value);
  void set_payload(const char* value);
  void set_payload(const void* value, size_t size);
  std::string* mutable_payload();
  std::string* release_payload();
  void set_allocated_payload(std::string* payload);
  private:
  const std::string& _internal_payload() const;
  void _internal_set_payload(const std::string& value);
  std::string* _internal_mutable_payload();
  public:

  // optional uint32 msgtype = 1;
  bool has_msgtype() const;
  private:
  bool _internal_has_msgtype() const;
  public:
  void clear_msgtype();
  ::PROTOBUF_NAMESPACE_ID::uint32 msgtype() const;
  void set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msgtype() const;
  void _internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCMultiplexMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steamids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payload_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msgtype_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCSubGCStarting PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSubGCStarting) */ {
 public:
  inline CMsgGCToGCSubGCStarting() : CMsgGCToGCSubGCStarting(nullptr) {}
  virtual ~CMsgGCToGCSubGCStarting();
  explicit constexpr CMsgGCToGCSubGCStarting(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCSubGCStarting(const CMsgGCToGCSubGCStarting& from);
  CMsgGCToGCSubGCStarting(CMsgGCToGCSubGCStarting&& from) noexcept
    : CMsgGCToGCSubGCStarting() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSubGCStarting& operator=(const CMsgGCToGCSubGCStarting& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCSubGCStarting& operator=(CMsgGCToGCSubGCStarting&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCSubGCStarting& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCSubGCStarting* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSubGCStarting*>(
               &_CMsgGCToGCSubGCStarting_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgGCToGCSubGCStarting& a, CMsgGCToGCSubGCStarting& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCSubGCStarting* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCSubGCStarting* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSubGCStarting* New() const final {
    return CreateMaybeMessage<CMsgGCToGCSubGCStarting>(nullptr);
  }

  CMsgGCToGCSubGCStarting* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCSubGCStarting>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCSubGCStarting& from);
  void MergeFrom(const CMsgGCToGCSubGCStarting& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCSubGCStarting* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCSubGCStarting";
  }
  protected:
  explicit CMsgGCToGCSubGCStarting(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirIndexFieldNumber = 1,
  };
  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  private:
  bool _internal_has_dir_index() const;
  public:
  void clear_dir_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index() const;
  void set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir_index() const;
  void _internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSubGCStarting)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck_Process PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterAck.Process) */ {
 public:
  inline CGCToGCMsgMasterAck_Process() : CGCToGCMsgMasterAck_Process(nullptr) {}
  virtual ~CGCToGCMsgMasterAck_Process();
  explicit constexpr CGCToGCMsgMasterAck_Process(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgMasterAck_Process(const CGCToGCMsgMasterAck_Process& from);
  CGCToGCMsgMasterAck_Process(CGCToGCMsgMasterAck_Process&& from) noexcept
    : CGCToGCMsgMasterAck_Process() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterAck_Process& operator=(const CGCToGCMsgMasterAck_Process& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgMasterAck_Process& operator=(CGCToGCMsgMasterAck_Process&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgMasterAck_Process& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgMasterAck_Process* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterAck_Process*>(
               &_CGCToGCMsgMasterAck_Process_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CGCToGCMsgMasterAck_Process& a, CGCToGCMsgMasterAck_Process& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgMasterAck_Process* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgMasterAck_Process* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterAck_Process* New() const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck_Process>(nullptr);
  }

  CGCToGCMsgMasterAck_Process* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck_Process>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgMasterAck_Process& from);
  void MergeFrom(const CGCToGCMsgMasterAck_Process& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgMasterAck_Process* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgMasterAck.Process";
  }
  protected:
  explicit CGCToGCMsgMasterAck_Process(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeInstancesFieldNumber = 2,
    kDirIndexFieldNumber = 1,
  };
  // repeated uint32 type_instances = 2;
  int type_instances_size() const;
  private:
  int _internal_type_instances_size() const;
  public:
  void clear_type_instances();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type_instances(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_type_instances() const;
  void _internal_add_type_instances(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_type_instances();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 type_instances(int index) const;
  void set_type_instances(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_type_instances(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      type_instances() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_type_instances();

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  private:
  bool _internal_has_dir_index() const;
  public:
  void clear_dir_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index() const;
  void set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir_index() const;
  void _internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck.Process)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > type_instances_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterAck) */ {
 public:
  inline CGCToGCMsgMasterAck() : CGCToGCMsgMasterAck(nullptr) {}
  virtual ~CGCToGCMsgMasterAck();
  explicit constexpr CGCToGCMsgMasterAck(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgMasterAck(const CGCToGCMsgMasterAck& from);
  CGCToGCMsgMasterAck(CGCToGCMsgMasterAck&& from) noexcept
    : CGCToGCMsgMasterAck() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterAck& operator=(const CGCToGCMsgMasterAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgMasterAck& operator=(CGCToGCMsgMasterAck&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgMasterAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgMasterAck* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterAck*>(
               &_CGCToGCMsgMasterAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CGCToGCMsgMasterAck& a, CGCToGCMsgMasterAck& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgMasterAck* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgMasterAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterAck* New() const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck>(nullptr);
  }

  CGCToGCMsgMasterAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgMasterAck& from);
  void MergeFrom(const CGCToGCMsgMasterAck& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgMasterAck* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgMasterAck";
  }
  protected:
  explicit CGCToGCMsgMasterAck(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CGCToGCMsgMasterAck_Process Process;

  // accessors -------------------------------------------------------

  enum : int {
    kDirectoryFieldNumber = 6,
    kMachineNameFieldNumber = 3,
    kProcessNameFieldNumber = 4,
    kDirIndexFieldNumber = 1,
  };
  // repeated .CGCToGCMsgMasterAck.Process directory = 6;
  int directory_size() const;
  private:
  int _internal_directory_size() const;
  public:
  void clear_directory();
  ::CGCToGCMsgMasterAck_Process* mutable_directory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterAck_Process >*
      mutable_directory();
  private:
  const ::CGCToGCMsgMasterAck_Process& _internal_directory(int index) const;
  ::CGCToGCMsgMasterAck_Process* _internal_add_directory();
  public:
  const ::CGCToGCMsgMasterAck_Process& directory(int index) const;
  ::CGCToGCMsgMasterAck_Process* add_directory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterAck_Process >&
      directory() const;

  // optional string machine_name = 3;
  bool has_machine_name() const;
  private:
  bool _internal_has_machine_name() const;
  public:
  void clear_machine_name();
  const std::string& machine_name() const;
  void set_machine_name(const std::string& value);
  void set_machine_name(std::string&& value);
  void set_machine_name(const char* value);
  void set_machine_name(const char* value, size_t size);
  std::string* mutable_machine_name();
  std::string* release_machine_name();
  void set_allocated_machine_name(std::string* machine_name);
  private:
  const std::string& _internal_machine_name() const;
  void _internal_set_machine_name(const std::string& value);
  std::string* _internal_mutable_machine_name();
  public:

  // optional string process_name = 4;
  bool has_process_name() const;
  private:
  bool _internal_has_process_name() const;
  public:
  void clear_process_name();
  const std::string& process_name() const;
  void set_process_name(const std::string& value);
  void set_process_name(std::string&& value);
  void set_process_name(const char* value);
  void set_process_name(const char* value, size_t size);
  std::string* mutable_process_name();
  std::string* release_process_name();
  void set_allocated_process_name(std::string* process_name);
  private:
  const std::string& _internal_process_name() const;
  void _internal_set_process_name(const std::string& value);
  std::string* _internal_mutable_process_name();
  public:

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  private:
  bool _internal_has_dir_index() const;
  public:
  void clear_dir_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index() const;
  void set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir_index() const;
  void _internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterAck_Process > directory_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr process_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterAck_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterAck_Response) */ {
 public:
  inline CGCToGCMsgMasterAck_Response() : CGCToGCMsgMasterAck_Response(nullptr) {}
  virtual ~CGCToGCMsgMasterAck_Response();
  explicit constexpr CGCToGCMsgMasterAck_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgMasterAck_Response(const CGCToGCMsgMasterAck_Response& from);
  CGCToGCMsgMasterAck_Response(CGCToGCMsgMasterAck_Response&& from) noexcept
    : CGCToGCMsgMasterAck_Response() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterAck_Response& operator=(const CGCToGCMsgMasterAck_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgMasterAck_Response& operator=(CGCToGCMsgMasterAck_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgMasterAck_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgMasterAck_Response* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterAck_Response*>(
               &_CGCToGCMsgMasterAck_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CGCToGCMsgMasterAck_Response& a, CGCToGCMsgMasterAck_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgMasterAck_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgMasterAck_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterAck_Response* New() const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck_Response>(nullptr);
  }

  CGCToGCMsgMasterAck_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgMasterAck_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgMasterAck_Response& from);
  void MergeFrom(const CGCToGCMsgMasterAck_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgMasterAck_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgMasterAck_Response";
  }
  protected:
  explicit CGCToGCMsgMasterAck_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterAck_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUniverseStartup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUniverseStartup) */ {
 public:
  inline CMsgGCToGCUniverseStartup() : CMsgGCToGCUniverseStartup(nullptr) {}
  virtual ~CMsgGCToGCUniverseStartup();
  explicit constexpr CMsgGCToGCUniverseStartup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUniverseStartup(const CMsgGCToGCUniverseStartup& from);
  CMsgGCToGCUniverseStartup(CMsgGCToGCUniverseStartup&& from) noexcept
    : CMsgGCToGCUniverseStartup() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUniverseStartup& operator=(const CMsgGCToGCUniverseStartup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUniverseStartup& operator=(CMsgGCToGCUniverseStartup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCUniverseStartup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUniverseStartup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUniverseStartup*>(
               &_CMsgGCToGCUniverseStartup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgGCToGCUniverseStartup& a, CMsgGCToGCUniverseStartup& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUniverseStartup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUniverseStartup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCUniverseStartup* New() const final {
    return CreateMaybeMessage<CMsgGCToGCUniverseStartup>(nullptr);
  }

  CMsgGCToGCUniverseStartup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCUniverseStartup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCUniverseStartup& from);
  void MergeFrom(const CMsgGCToGCUniverseStartup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUniverseStartup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUniverseStartup";
  }
  protected:
  explicit CMsgGCToGCUniverseStartup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsInitialStartupFieldNumber = 1,
  };
  // optional bool is_initial_startup = 1;
  bool has_is_initial_startup() const;
  private:
  bool _internal_has_is_initial_startup() const;
  public:
  void clear_is_initial_startup();
  bool is_initial_startup() const;
  void set_is_initial_startup(bool value);
  private:
  bool _internal_is_initial_startup() const;
  void _internal_set_is_initial_startup(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUniverseStartup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_initial_startup_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUniverseStartupResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUniverseStartupResponse) */ {
 public:
  inline CMsgGCToGCUniverseStartupResponse() : CMsgGCToGCUniverseStartupResponse(nullptr) {}
  virtual ~CMsgGCToGCUniverseStartupResponse();
  explicit constexpr CMsgGCToGCUniverseStartupResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUniverseStartupResponse(const CMsgGCToGCUniverseStartupResponse& from);
  CMsgGCToGCUniverseStartupResponse(CMsgGCToGCUniverseStartupResponse&& from) noexcept
    : CMsgGCToGCUniverseStartupResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUniverseStartupResponse& operator=(const CMsgGCToGCUniverseStartupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUniverseStartupResponse& operator=(CMsgGCToGCUniverseStartupResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCUniverseStartupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUniverseStartupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUniverseStartupResponse*>(
               &_CMsgGCToGCUniverseStartupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgGCToGCUniverseStartupResponse& a, CMsgGCToGCUniverseStartupResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUniverseStartupResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUniverseStartupResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCUniverseStartupResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToGCUniverseStartupResponse>(nullptr);
  }

  CMsgGCToGCUniverseStartupResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCUniverseStartupResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCUniverseStartupResponse& from);
  void MergeFrom(const CMsgGCToGCUniverseStartupResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUniverseStartupResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUniverseStartupResponse";
  }
  protected:
  explicit CMsgGCToGCUniverseStartupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEresultFieldNumber = 1,
  };
  // optional int32 eresult = 1;
  bool has_eresult() const;
  private:
  bool _internal_has_eresult() const;
  public:
  void clear_eresult();
  ::PROTOBUF_NAMESPACE_ID::int32 eresult() const;
  void set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eresult() const;
  void _internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUniverseStartupResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 eresult_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete_GCInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterStartupComplete.GCInfo) */ {
 public:
  inline CGCToGCMsgMasterStartupComplete_GCInfo() : CGCToGCMsgMasterStartupComplete_GCInfo(nullptr) {}
  virtual ~CGCToGCMsgMasterStartupComplete_GCInfo();
  explicit constexpr CGCToGCMsgMasterStartupComplete_GCInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgMasterStartupComplete_GCInfo(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  CGCToGCMsgMasterStartupComplete_GCInfo(CGCToGCMsgMasterStartupComplete_GCInfo&& from) noexcept
    : CGCToGCMsgMasterStartupComplete_GCInfo() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterStartupComplete_GCInfo& operator=(const CGCToGCMsgMasterStartupComplete_GCInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgMasterStartupComplete_GCInfo& operator=(CGCToGCMsgMasterStartupComplete_GCInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgMasterStartupComplete_GCInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgMasterStartupComplete_GCInfo* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterStartupComplete_GCInfo*>(
               &_CGCToGCMsgMasterStartupComplete_GCInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CGCToGCMsgMasterStartupComplete_GCInfo& a, CGCToGCMsgMasterStartupComplete_GCInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgMasterStartupComplete_GCInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgMasterStartupComplete_GCInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterStartupComplete_GCInfo* New() const final {
    return CreateMaybeMessage<CGCToGCMsgMasterStartupComplete_GCInfo>(nullptr);
  }

  CGCToGCMsgMasterStartupComplete_GCInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgMasterStartupComplete_GCInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete_GCInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgMasterStartupComplete_GCInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgMasterStartupComplete.GCInfo";
  }
  protected:
  explicit CGCToGCMsgMasterStartupComplete_GCInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMachineNameFieldNumber = 2,
    kDirIndexFieldNumber = 1,
  };
  // optional string machine_name = 2;
  bool has_machine_name() const;
  private:
  bool _internal_has_machine_name() const;
  public:
  void clear_machine_name();
  const std::string& machine_name() const;
  void set_machine_name(const std::string& value);
  void set_machine_name(std::string&& value);
  void set_machine_name(const char* value);
  void set_machine_name(const char* value, size_t size);
  std::string* mutable_machine_name();
  std::string* release_machine_name();
  void set_allocated_machine_name(std::string* machine_name);
  private:
  const std::string& _internal_machine_name() const;
  void _internal_set_machine_name(const std::string& value);
  std::string* _internal_mutable_machine_name();
  public:

  // optional uint32 dir_index = 1;
  bool has_dir_index() const;
  private:
  bool _internal_has_dir_index() const;
  public:
  void clear_dir_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index() const;
  void set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dir_index() const;
  void _internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete.GCInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr machine_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dir_index_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgMasterStartupComplete PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgMasterStartupComplete) */ {
 public:
  inline CGCToGCMsgMasterStartupComplete() : CGCToGCMsgMasterStartupComplete(nullptr) {}
  virtual ~CGCToGCMsgMasterStartupComplete();
  explicit constexpr CGCToGCMsgMasterStartupComplete(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgMasterStartupComplete(const CGCToGCMsgMasterStartupComplete& from);
  CGCToGCMsgMasterStartupComplete(CGCToGCMsgMasterStartupComplete&& from) noexcept
    : CGCToGCMsgMasterStartupComplete() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgMasterStartupComplete& operator=(const CGCToGCMsgMasterStartupComplete& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgMasterStartupComplete& operator=(CGCToGCMsgMasterStartupComplete&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgMasterStartupComplete& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgMasterStartupComplete* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgMasterStartupComplete*>(
               &_CGCToGCMsgMasterStartupComplete_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CGCToGCMsgMasterStartupComplete& a, CGCToGCMsgMasterStartupComplete& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgMasterStartupComplete* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgMasterStartupComplete* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgMasterStartupComplete* New() const final {
    return CreateMaybeMessage<CGCToGCMsgMasterStartupComplete>(nullptr);
  }

  CGCToGCMsgMasterStartupComplete* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgMasterStartupComplete>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgMasterStartupComplete& from);
  void MergeFrom(const CGCToGCMsgMasterStartupComplete& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgMasterStartupComplete* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgMasterStartupComplete";
  }
  protected:
  explicit CGCToGCMsgMasterStartupComplete(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CGCToGCMsgMasterStartupComplete_GCInfo GCInfo;

  // accessors -------------------------------------------------------

  enum : int {
    kGcInfoFieldNumber = 1,
  };
  // repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
  int gc_info_size() const;
  private:
  int _internal_gc_info_size() const;
  public:
  void clear_gc_info();
  ::CGCToGCMsgMasterStartupComplete_GCInfo* mutable_gc_info(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
      mutable_gc_info();
  private:
  const ::CGCToGCMsgMasterStartupComplete_GCInfo& _internal_gc_info(int index) const;
  ::CGCToGCMsgMasterStartupComplete_GCInfo* _internal_add_gc_info();
  public:
  const ::CGCToGCMsgMasterStartupComplete_GCInfo& gc_info(int index) const;
  ::CGCToGCMsgMasterStartupComplete_GCInfo* add_gc_info();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
      gc_info() const;

  // @@protoc_insertion_point(class_scope:CGCToGCMsgMasterStartupComplete)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo > gc_info_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgRouted PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgRouted) */ {
 public:
  inline CGCToGCMsgRouted() : CGCToGCMsgRouted(nullptr) {}
  virtual ~CGCToGCMsgRouted();
  explicit constexpr CGCToGCMsgRouted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgRouted(const CGCToGCMsgRouted& from);
  CGCToGCMsgRouted(CGCToGCMsgRouted&& from) noexcept
    : CGCToGCMsgRouted() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgRouted& operator=(const CGCToGCMsgRouted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgRouted& operator=(CGCToGCMsgRouted&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgRouted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgRouted* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgRouted*>(
               &_CGCToGCMsgRouted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CGCToGCMsgRouted& a, CGCToGCMsgRouted& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgRouted* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgRouted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgRouted* New() const final {
    return CreateMaybeMessage<CGCToGCMsgRouted>(nullptr);
  }

  CGCToGCMsgRouted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgRouted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgRouted& from);
  void MergeFrom(const CGCToGCMsgRouted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgRouted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgRouted";
  }
  protected:
  explicit CGCToGCMsgRouted(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNetMessageFieldNumber = 3,
    kSenderIdFieldNumber = 2,
    kMsgTypeFieldNumber = 1,
  };
  // optional bytes net_message = 3;
  bool has_net_message() const;
  private:
  bool _internal_has_net_message() const;
  public:
  void clear_net_message();
  const std::string& net_message() const;
  void set_net_message(const std::string& value);
  void set_net_message(std::string&& value);
  void set_net_message(const char* value);
  void set_net_message(const void* value, size_t size);
  std::string* mutable_net_message();
  std::string* release_net_message();
  void set_allocated_net_message(std::string* net_message);
  private:
  const std::string& _internal_net_message() const;
  void _internal_set_net_message(const std::string& value);
  std::string* _internal_mutable_net_message();
  public:

  // optional fixed64 sender_id = 2;
  bool has_sender_id() const;
  private:
  bool _internal_has_sender_id() const;
  public:
  void clear_sender_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 sender_id() const;
  void set_sender_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sender_id() const;
  void _internal_set_sender_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  private:
  bool _internal_has_msg_type() const;
  public:
  void clear_msg_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type() const;
  void set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msg_type() const;
  void _internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgRouted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr net_message_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sender_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCToGCMsgRoutedReply PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCToGCMsgRoutedReply) */ {
 public:
  inline CGCToGCMsgRoutedReply() : CGCToGCMsgRoutedReply(nullptr) {}
  virtual ~CGCToGCMsgRoutedReply();
  explicit constexpr CGCToGCMsgRoutedReply(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCToGCMsgRoutedReply(const CGCToGCMsgRoutedReply& from);
  CGCToGCMsgRoutedReply(CGCToGCMsgRoutedReply&& from) noexcept
    : CGCToGCMsgRoutedReply() {
    *this = ::std::move(from);
  }

  inline CGCToGCMsgRoutedReply& operator=(const CGCToGCMsgRoutedReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCToGCMsgRoutedReply& operator=(CGCToGCMsgRoutedReply&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCToGCMsgRoutedReply& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCToGCMsgRoutedReply* internal_default_instance() {
    return reinterpret_cast<const CGCToGCMsgRoutedReply*>(
               &_CGCToGCMsgRoutedReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CGCToGCMsgRoutedReply& a, CGCToGCMsgRoutedReply& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCToGCMsgRoutedReply* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCToGCMsgRoutedReply* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCToGCMsgRoutedReply* New() const final {
    return CreateMaybeMessage<CGCToGCMsgRoutedReply>(nullptr);
  }

  CGCToGCMsgRoutedReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCToGCMsgRoutedReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCToGCMsgRoutedReply& from);
  void MergeFrom(const CGCToGCMsgRoutedReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCToGCMsgRoutedReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCToGCMsgRoutedReply";
  }
  protected:
  explicit CGCToGCMsgRoutedReply(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNetMessageFieldNumber = 2,
    kMsgTypeFieldNumber = 1,
  };
  // optional bytes net_message = 2;
  bool has_net_message() const;
  private:
  bool _internal_has_net_message() const;
  public:
  void clear_net_message();
  const std::string& net_message() const;
  void set_net_message(const std::string& value);
  void set_net_message(std::string&& value);
  void set_net_message(const char* value);
  void set_net_message(const void* value, size_t size);
  std::string* mutable_net_message();
  std::string* release_net_message();
  void set_allocated_net_message(std::string* net_message);
  private:
  const std::string& _internal_net_message() const;
  void _internal_set_net_message(const std::string& value);
  std::string* _internal_mutable_net_message();
  public:

  // optional uint32 msg_type = 1;
  bool has_msg_type() const;
  private:
  bool _internal_has_msg_type() const;
  public:
  void clear_msg_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type() const;
  void set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msg_type() const;
  void _internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCToGCMsgRoutedReply)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr net_message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate) */ {
 public:
  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate() : CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(nullptr) {}
  virtual ~CMsgGCUpdateSubGCSessionInfo_CMsgUpdate();
  explicit constexpr CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate&& from) noexcept
    : CMsgGCUpdateSubGCSessionInfo_CMsgUpdate() {
    *this = ::std::move(from);
  }

  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& operator=(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& operator=(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate*>(
               &_CMsgGCUpdateSubGCSessionInfo_CMsgUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& a, CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* New() const final {
    return CreateMaybeMessage<CMsgGCUpdateSubGCSessionInfo_CMsgUpdate>(nullptr);
  }

  CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCUpdateSubGCSessionInfo_CMsgUpdate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCUpdateSubGCSessionInfo.CMsgUpdate";
  }
  protected:
  explicit CMsgGCUpdateSubGCSessionInfo_CMsgUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
    kIpFieldNumber = 2,
    kTrustedFieldNumber = 3,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 ip = 2;
  bool has_ip() const;
  private:
  bool _internal_has_ip() const;
  public:
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool trusted = 3;
  bool has_trusted() const;
  private:
  bool _internal_has_trusted() const;
  public:
  void clear_trusted();
  bool trusted() const;
  void set_trusted(bool value);
  private:
  bool _internal_trusted() const;
  void _internal_set_trusted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ip_;
  bool trusted_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCUpdateSubGCSessionInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCUpdateSubGCSessionInfo) */ {
 public:
  inline CMsgGCUpdateSubGCSessionInfo() : CMsgGCUpdateSubGCSessionInfo(nullptr) {}
  virtual ~CMsgGCUpdateSubGCSessionInfo();
  explicit constexpr CMsgGCUpdateSubGCSessionInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCUpdateSubGCSessionInfo(const CMsgGCUpdateSubGCSessionInfo& from);
  CMsgGCUpdateSubGCSessionInfo(CMsgGCUpdateSubGCSessionInfo&& from) noexcept
    : CMsgGCUpdateSubGCSessionInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCUpdateSubGCSessionInfo& operator=(const CMsgGCUpdateSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCUpdateSubGCSessionInfo& operator=(CMsgGCUpdateSubGCSessionInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCUpdateSubGCSessionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCUpdateSubGCSessionInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCUpdateSubGCSessionInfo*>(
               &_CMsgGCUpdateSubGCSessionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgGCUpdateSubGCSessionInfo& a, CMsgGCUpdateSubGCSessionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCUpdateSubGCSessionInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCUpdateSubGCSessionInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCUpdateSubGCSessionInfo* New() const final {
    return CreateMaybeMessage<CMsgGCUpdateSubGCSessionInfo>(nullptr);
  }

  CMsgGCUpdateSubGCSessionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCUpdateSubGCSessionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCUpdateSubGCSessionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCUpdateSubGCSessionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCUpdateSubGCSessionInfo";
  }
  protected:
  explicit CMsgGCUpdateSubGCSessionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgGCUpdateSubGCSessionInfo_CMsgUpdate CMsgUpdate;

  // accessors -------------------------------------------------------

  enum : int {
    kUpdatesFieldNumber = 1,
  };
  // repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
  int updates_size() const;
  private:
  int _internal_updates_size() const;
  public:
  void clear_updates();
  ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* mutable_updates(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
      mutable_updates();
  private:
  const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& _internal_updates(int index) const;
  ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* _internal_add_updates();
  public:
  const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& updates(int index) const;
  ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* add_updates();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
      updates() const;

  // @@protoc_insertion_point(class_scope:CMsgGCUpdateSubGCSessionInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate > updates_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestSubGCSessionInfo) */ {
 public:
  inline CMsgGCRequestSubGCSessionInfo() : CMsgGCRequestSubGCSessionInfo(nullptr) {}
  virtual ~CMsgGCRequestSubGCSessionInfo();
  explicit constexpr CMsgGCRequestSubGCSessionInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestSubGCSessionInfo(const CMsgGCRequestSubGCSessionInfo& from);
  CMsgGCRequestSubGCSessionInfo(CMsgGCRequestSubGCSessionInfo&& from) noexcept
    : CMsgGCRequestSubGCSessionInfo() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSubGCSessionInfo& operator=(const CMsgGCRequestSubGCSessionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestSubGCSessionInfo& operator=(CMsgGCRequestSubGCSessionInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCRequestSubGCSessionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestSubGCSessionInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSubGCSessionInfo*>(
               &_CMsgGCRequestSubGCSessionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgGCRequestSubGCSessionInfo& a, CMsgGCRequestSubGCSessionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestSubGCSessionInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestSubGCSessionInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSubGCSessionInfo* New() const final {
    return CreateMaybeMessage<CMsgGCRequestSubGCSessionInfo>(nullptr);
  }

  CMsgGCRequestSubGCSessionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestSubGCSessionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCRequestSubGCSessionInfo& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestSubGCSessionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestSubGCSessionInfo";
  }
  protected:
  explicit CMsgGCRequestSubGCSessionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSteamidFieldNumber = 1,
  };
  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCRequestSubGCSessionInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCRequestSubGCSessionInfoResponse) */ {
 public:
  inline CMsgGCRequestSubGCSessionInfoResponse() : CMsgGCRequestSubGCSessionInfoResponse(nullptr) {}
  virtual ~CMsgGCRequestSubGCSessionInfoResponse();
  explicit constexpr CMsgGCRequestSubGCSessionInfoResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCRequestSubGCSessionInfoResponse(const CMsgGCRequestSubGCSessionInfoResponse& from);
  CMsgGCRequestSubGCSessionInfoResponse(CMsgGCRequestSubGCSessionInfoResponse&& from) noexcept
    : CMsgGCRequestSubGCSessionInfoResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCRequestSubGCSessionInfoResponse& operator=(const CMsgGCRequestSubGCSessionInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCRequestSubGCSessionInfoResponse& operator=(CMsgGCRequestSubGCSessionInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCRequestSubGCSessionInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCRequestSubGCSessionInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCRequestSubGCSessionInfoResponse*>(
               &_CMsgGCRequestSubGCSessionInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgGCRequestSubGCSessionInfoResponse& a, CMsgGCRequestSubGCSessionInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCRequestSubGCSessionInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCRequestSubGCSessionInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCRequestSubGCSessionInfoResponse* New() const final {
    return CreateMaybeMessage<CMsgGCRequestSubGCSessionInfoResponse>(nullptr);
  }

  CMsgGCRequestSubGCSessionInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCRequestSubGCSessionInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  void MergeFrom(const CMsgGCRequestSubGCSessionInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCRequestSubGCSessionInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCRequestSubGCSessionInfoResponse";
  }
  protected:
  explicit CMsgGCRequestSubGCSessionInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 1,
    kPortFieldNumber = 3,
    kTrustedFieldNumber = 2,
    kSuccessFieldNumber = 4,
  };
  // optional fixed32 ip = 1;
  bool has_ip() const;
  private:
  bool _internal_has_ip() const;
  public:
  void clear_ip();
  ::PROTOBUF_NAMESPACE_ID::uint32 ip() const;
  void set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ip() const;
  void _internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 port = 3;
  bool has_port() const;
  private:
  bool _internal_has_port() const;
  public:
  void clear_port();
  ::PROTOBUF_NAMESPACE_ID::uint32 port() const;
  void set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_port() const;
  void _internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool trusted = 2;
  bool has_trusted() const;
  private:
  bool _internal_has_trusted() const;
  public:
  void clear_trusted();
  bool trusted() const;
  void set_trusted(bool value);
  private:
  bool _internal_trusted() const;
  void _internal_set_trusted(bool value);
  public:

  // optional bool success = 4;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCRequestSubGCSessionInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ip_;
  ::PROTOBUF_NAMESPACE_ID::uint32 port_;
  bool trusted_;
  bool success_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSOCacheHaveVersion PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSOCacheHaveVersion) */ {
 public:
  inline CMsgSOCacheHaveVersion() : CMsgSOCacheHaveVersion(nullptr) {}
  virtual ~CMsgSOCacheHaveVersion();
  explicit constexpr CMsgSOCacheHaveVersion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSOCacheHaveVersion(const CMsgSOCacheHaveVersion& from);
  CMsgSOCacheHaveVersion(CMsgSOCacheHaveVersion&& from) noexcept
    : CMsgSOCacheHaveVersion() {
    *this = ::std::move(from);
  }

  inline CMsgSOCacheHaveVersion& operator=(const CMsgSOCacheHaveVersion& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSOCacheHaveVersion& operator=(CMsgSOCacheHaveVersion&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSOCacheHaveVersion& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSOCacheHaveVersion* internal_default_instance() {
    return reinterpret_cast<const CMsgSOCacheHaveVersion*>(
               &_CMsgSOCacheHaveVersion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgSOCacheHaveVersion& a, CMsgSOCacheHaveVersion& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSOCacheHaveVersion* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSOCacheHaveVersion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSOCacheHaveVersion* New() const final {
    return CreateMaybeMessage<CMsgSOCacheHaveVersion>(nullptr);
  }

  CMsgSOCacheHaveVersion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSOCacheHaveVersion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSOCacheHaveVersion& from);
  void MergeFrom(const CMsgSOCacheHaveVersion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSOCacheHaveVersion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSOCacheHaveVersion";
  }
  protected:
  explicit CMsgSOCacheHaveVersion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSoidFieldNumber = 1,
    kVersionFieldNumber = 2,
    kServiceIdFieldNumber = 3,
    kCachedFileVersionFieldNumber = 4,
  };
  // optional .CMsgSOIDOwner soid = 1;
  bool has_soid() const;
  private:
  bool _internal_has_soid() const;
  public:
  void clear_soid();
  const ::CMsgSOIDOwner& soid() const;
  ::CMsgSOIDOwner* release_soid();
  ::CMsgSOIDOwner* mutable_soid();
  void set_allocated_soid(::CMsgSOIDOwner* soid);
  private:
  const ::CMsgSOIDOwner& _internal_soid() const;
  ::CMsgSOIDOwner* _internal_mutable_soid();
  public:
  void unsafe_arena_set_allocated_soid(
      ::CMsgSOIDOwner* soid);
  ::CMsgSOIDOwner* unsafe_arena_release_soid();

  // optional fixed64 version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 3;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cached_file_version = 4;
  bool has_cached_file_version() const;
  private:
  bool _internal_has_cached_file_version() const;
  public:
  void clear_cached_file_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_file_version() const;
  void set_cached_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cached_file_version() const;
  void _internal_set_cached_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSOCacheHaveVersion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgSOIDOwner* soid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_file_version_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientHello PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientHello) */ {
 public:
  inline CMsgClientHello() : CMsgClientHello(nullptr) {}
  virtual ~CMsgClientHello();
  explicit constexpr CMsgClientHello(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientHello(const CMsgClientHello& from);
  CMsgClientHello(CMsgClientHello&& from) noexcept
    : CMsgClientHello() {
    *this = ::std::move(from);
  }

  inline CMsgClientHello& operator=(const CMsgClientHello& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientHello& operator=(CMsgClientHello&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientHello& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientHello* internal_default_instance() {
    return reinterpret_cast<const CMsgClientHello*>(
               &_CMsgClientHello_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgClientHello& a, CMsgClientHello& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientHello* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientHello* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientHello* New() const final {
    return CreateMaybeMessage<CMsgClientHello>(nullptr);
  }

  CMsgClientHello* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientHello>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientHello& from);
  void MergeFrom(const CMsgClientHello& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientHello* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientHello";
  }
  protected:
  explicit CMsgClientHello(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSocacheHaveVersionsFieldNumber = 2,
    kSecretKeyFieldNumber = 5,
    kSteamdatagramLoginFieldNumber = 8,
    kGameMsgFieldNumber = 10,
    kPlatformNameFieldNumber = 23,
    kVersionFieldNumber = 1,
    kClientSessionNeedFieldNumber = 3,
    kClientLauncherFieldNumber = 4,
    kClientLanguageFieldNumber = 6,
    kEngineFieldNumber = 7,
    kPlatformIdFieldNumber = 9,
    kOsTypeFieldNumber = 11,
    kRenderSystemFieldNumber = 12,
    kRenderSystemReqFieldNumber = 13,
    kScreenWidthFieldNumber = 14,
    kScreenHeightFieldNumber = 15,
    kScreenRefreshFieldNumber = 16,
    kRenderWidthFieldNumber = 17,
    kRenderHeightFieldNumber = 18,
    kSwapWidthFieldNumber = 19,
    kSwapHeightFieldNumber = 20,
    kIsSteamChinaFieldNumber = 22,
    kIsSteamChinaClientFieldNumber = 24,
  };
  // repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
  int socache_have_versions_size() const;
  private:
  int _internal_socache_have_versions_size() const;
  public:
  void clear_socache_have_versions();
  ::CMsgSOCacheHaveVersion* mutable_socache_have_versions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
      mutable_socache_have_versions();
  private:
  const ::CMsgSOCacheHaveVersion& _internal_socache_have_versions(int index) const;
  ::CMsgSOCacheHaveVersion* _internal_add_socache_have_versions();
  public:
  const ::CMsgSOCacheHaveVersion& socache_have_versions(int index) const;
  ::CMsgSOCacheHaveVersion* add_socache_have_versions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
      socache_have_versions() const;

  // optional string secret_key = 5;
  bool has_secret_key() const;
  private:
  bool _internal_has_secret_key() const;
  public:
  void clear_secret_key();
  const std::string& secret_key() const;
  void set_secret_key(const std::string& value);
  void set_secret_key(std::string&& value);
  void set_secret_key(const char* value);
  void set_secret_key(const char* value, size_t size);
  std::string* mutable_secret_key();
  std::string* release_secret_key();
  void set_allocated_secret_key(std::string* secret_key);
  private:
  const std::string& _internal_secret_key() const;
  void _internal_set_secret_key(const std::string& value);
  std::string* _internal_mutable_secret_key();
  public:

  // optional bytes steamdatagram_login = 8;
  bool has_steamdatagram_login() const;
  private:
  bool _internal_has_steamdatagram_login() const;
  public:
  void clear_steamdatagram_login();
  const std::string& steamdatagram_login() const;
  void set_steamdatagram_login(const std::string& value);
  void set_steamdatagram_login(std::string&& value);
  void set_steamdatagram_login(const char* value);
  void set_steamdatagram_login(const void* value, size_t size);
  std::string* mutable_steamdatagram_login();
  std::string* release_steamdatagram_login();
  void set_allocated_steamdatagram_login(std::string* steamdatagram_login);
  private:
  const std::string& _internal_steamdatagram_login() const;
  void _internal_set_steamdatagram_login(const std::string& value);
  std::string* _internal_mutable_steamdatagram_login();
  public:

  // optional bytes game_msg = 10;
  bool has_game_msg() const;
  private:
  bool _internal_has_game_msg() const;
  public:
  void clear_game_msg();
  const std::string& game_msg() const;
  void set_game_msg(const std::string& value);
  void set_game_msg(std::string&& value);
  void set_game_msg(const char* value);
  void set_game_msg(const void* value, size_t size);
  std::string* mutable_game_msg();
  std::string* release_game_msg();
  void set_allocated_game_msg(std::string* game_msg);
  private:
  const std::string& _internal_game_msg() const;
  void _internal_set_game_msg(const std::string& value);
  std::string* _internal_mutable_game_msg();
  public:

  // optional string platform_name = 23;
  bool has_platform_name() const;
  private:
  bool _internal_has_platform_name() const;
  public:
  void clear_platform_name();
  const std::string& platform_name() const;
  void set_platform_name(const std::string& value);
  void set_platform_name(std::string&& value);
  void set_platform_name(const char* value);
  void set_platform_name(const char* value, size_t size);
  std::string* mutable_platform_name();
  std::string* release_platform_name();
  void set_allocated_platform_name(std::string* platform_name);
  private:
  const std::string& _internal_platform_name() const;
  void _internal_set_platform_name(const std::string& value);
  std::string* _internal_mutable_platform_name();
  public:

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 client_session_need = 3;
  bool has_client_session_need() const;
  private:
  bool _internal_has_client_session_need() const;
  public:
  void clear_client_session_need();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_session_need() const;
  void set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_session_need() const;
  void _internal_set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .PartnerAccountType client_launcher = 4 [default = PARTNER_NONE];
  bool has_client_launcher() const;
  private:
  bool _internal_has_client_launcher() const;
  public:
  void clear_client_launcher();
  ::PartnerAccountType client_launcher() const;
  void set_client_launcher(::PartnerAccountType value);
  private:
  ::PartnerAccountType _internal_client_launcher() const;
  void _internal_set_client_launcher(::PartnerAccountType value);
  public:

  // optional uint32 client_language = 6;
  bool has_client_language() const;
  private:
  bool _internal_has_client_language() const;
  public:
  void clear_client_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_language() const;
  void set_client_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_language() const;
  void _internal_set_client_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ESourceEngine engine = 7 [default = k_ESE_Source1];
  bool has_engine() const;
  private:
  bool _internal_has_engine() const;
  public:
  void clear_engine();
  ::ESourceEngine engine() const;
  void set_engine(::ESourceEngine value);
  private:
  ::ESourceEngine _internal_engine() const;
  void _internal_set_engine(::ESourceEngine value);
  public:

  // optional uint32 platform_id = 9;
  bool has_platform_id() const;
  private:
  bool _internal_has_platform_id() const;
  public:
  void clear_platform_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 platform_id() const;
  void set_platform_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_platform_id() const;
  void _internal_set_platform_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 os_type = 11;
  bool has_os_type() const;
  private:
  bool _internal_has_os_type() const;
  public:
  void clear_os_type();
  ::PROTOBUF_NAMESPACE_ID::int32 os_type() const;
  void set_os_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_os_type() const;
  void _internal_set_os_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 render_system = 12;
  bool has_render_system() const;
  private:
  bool _internal_has_render_system() const;
  public:
  void clear_render_system();
  ::PROTOBUF_NAMESPACE_ID::uint32 render_system() const;
  void set_render_system(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_render_system() const;
  void _internal_set_render_system(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 render_system_req = 13;
  bool has_render_system_req() const;
  private:
  bool _internal_has_render_system_req() const;
  public:
  void clear_render_system_req();
  ::PROTOBUF_NAMESPACE_ID::uint32 render_system_req() const;
  void set_render_system_req(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_render_system_req() const;
  void _internal_set_render_system_req(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 screen_width = 14;
  bool has_screen_width() const;
  private:
  bool _internal_has_screen_width() const;
  public:
  void clear_screen_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width() const;
  void set_screen_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_screen_width() const;
  void _internal_set_screen_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 screen_height = 15;
  bool has_screen_height() const;
  private:
  bool _internal_has_screen_height() const;
  public:
  void clear_screen_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height() const;
  void set_screen_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_screen_height() const;
  void _internal_set_screen_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 screen_refresh = 16;
  bool has_screen_refresh() const;
  private:
  bool _internal_has_screen_refresh() const;
  public:
  void clear_screen_refresh();
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_refresh() const;
  void set_screen_refresh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_screen_refresh() const;
  void _internal_set_screen_refresh(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 render_width = 17;
  bool has_render_width() const;
  private:
  bool _internal_has_render_width() const;
  public:
  void clear_render_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 render_width() const;
  void set_render_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_render_width() const;
  void _internal_set_render_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 render_height = 18;
  bool has_render_height() const;
  private:
  bool _internal_has_render_height() const;
  public:
  void clear_render_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 render_height() const;
  void set_render_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_render_height() const;
  void _internal_set_render_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 swap_width = 19;
  bool has_swap_width() const;
  private:
  bool _internal_has_swap_width() const;
  public:
  void clear_swap_width();
  ::PROTOBUF_NAMESPACE_ID::uint32 swap_width() const;
  void set_swap_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_swap_width() const;
  void _internal_set_swap_width(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 swap_height = 20;
  bool has_swap_height() const;
  private:
  bool _internal_has_swap_height() const;
  public:
  void clear_swap_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 swap_height() const;
  void set_swap_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_swap_height() const;
  void _internal_set_swap_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_steam_china = 22;
  bool has_is_steam_china() const;
  private:
  bool _internal_has_is_steam_china() const;
  public:
  void clear_is_steam_china();
  bool is_steam_china() const;
  void set_is_steam_china(bool value);
  private:
  bool _internal_is_steam_china() const;
  void _internal_set_is_steam_china(bool value);
  public:

  // optional bool is_steam_china_client = 24;
  bool has_is_steam_china_client() const;
  private:
  bool _internal_has_is_steam_china_client() const;
  public:
  void clear_is_steam_china_client();
  bool is_steam_china_client() const;
  void set_is_steam_china_client(bool value);
  private:
  bool _internal_is_steam_china_client() const;
  void _internal_set_is_steam_china_client(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientHello)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheHaveVersion > socache_have_versions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secret_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr steamdatagram_login_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_msg_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr platform_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_session_need_;
  int client_launcher_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_language_;
  int engine_;
  ::PROTOBUF_NAMESPACE_ID::uint32 platform_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 os_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 render_system_;
  ::PROTOBUF_NAMESPACE_ID::uint32 render_system_req_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 screen_refresh_;
  ::PROTOBUF_NAMESPACE_ID::uint32 render_width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 render_height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 swap_width_;
  ::PROTOBUF_NAMESPACE_ID::uint32 swap_height_;
  bool is_steam_china_;
  bool is_steam_china_client_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWelcome_Location PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWelcome.Location) */ {
 public:
  inline CMsgClientWelcome_Location() : CMsgClientWelcome_Location(nullptr) {}
  virtual ~CMsgClientWelcome_Location();
  explicit constexpr CMsgClientWelcome_Location(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWelcome_Location(const CMsgClientWelcome_Location& from);
  CMsgClientWelcome_Location(CMsgClientWelcome_Location&& from) noexcept
    : CMsgClientWelcome_Location() {
    *this = ::std::move(from);
  }

  inline CMsgClientWelcome_Location& operator=(const CMsgClientWelcome_Location& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWelcome_Location& operator=(CMsgClientWelcome_Location&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientWelcome_Location& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWelcome_Location* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWelcome_Location*>(
               &_CMsgClientWelcome_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgClientWelcome_Location& a, CMsgClientWelcome_Location& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWelcome_Location* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWelcome_Location* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWelcome_Location* New() const final {
    return CreateMaybeMessage<CMsgClientWelcome_Location>(nullptr);
  }

  CMsgClientWelcome_Location* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWelcome_Location>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWelcome_Location& from);
  void MergeFrom(const CMsgClientWelcome_Location& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWelcome_Location* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWelcome.Location";
  }
  protected:
  explicit CMsgClientWelcome_Location(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCountryFieldNumber = 3,
    kLatitudeFieldNumber = 1,
    kLongitudeFieldNumber = 2,
  };
  // optional string country = 3;
  bool has_country() const;
  private:
  bool _internal_has_country() const;
  public:
  void clear_country();
  const std::string& country() const;
  void set_country(const std::string& value);
  void set_country(std::string&& value);
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  std::string* mutable_country();
  std::string* release_country();
  void set_allocated_country(std::string* country);
  private:
  const std::string& _internal_country() const;
  void _internal_set_country(const std::string& value);
  std::string* _internal_mutable_country();
  public:

  // optional float latitude = 1;
  bool has_latitude() const;
  private:
  bool _internal_has_latitude() const;
  public:
  void clear_latitude();
  float latitude() const;
  void set_latitude(float value);
  private:
  float _internal_latitude() const;
  void _internal_set_latitude(float value);
  public:

  // optional float longitude = 2;
  bool has_longitude() const;
  private:
  bool _internal_has_longitude() const;
  public:
  void clear_longitude();
  float longitude() const;
  void set_longitude(float value);
  private:
  float _internal_longitude() const;
  void _internal_set_longitude(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWelcome.Location)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr country_;
  float latitude_;
  float longitude_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientWelcome PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientWelcome) */ {
 public:
  inline CMsgClientWelcome() : CMsgClientWelcome(nullptr) {}
  virtual ~CMsgClientWelcome();
  explicit constexpr CMsgClientWelcome(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientWelcome(const CMsgClientWelcome& from);
  CMsgClientWelcome(CMsgClientWelcome&& from) noexcept
    : CMsgClientWelcome() {
    *this = ::std::move(from);
  }

  inline CMsgClientWelcome& operator=(const CMsgClientWelcome& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientWelcome& operator=(CMsgClientWelcome&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientWelcome& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientWelcome* internal_default_instance() {
    return reinterpret_cast<const CMsgClientWelcome*>(
               &_CMsgClientWelcome_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgClientWelcome& a, CMsgClientWelcome& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientWelcome* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientWelcome* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientWelcome* New() const final {
    return CreateMaybeMessage<CMsgClientWelcome>(nullptr);
  }

  CMsgClientWelcome* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientWelcome>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientWelcome& from);
  void MergeFrom(const CMsgClientWelcome& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientWelcome* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientWelcome";
  }
  protected:
  explicit CMsgClientWelcome(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientWelcome_Location Location;

  // accessors -------------------------------------------------------

  enum : int {
    kOutofdateSubscribedCachesFieldNumber = 3,
    kUptodateSubscribedCachesFieldNumber = 4,
    kGameDataFieldNumber = 2,
    kSaveGameKeyFieldNumber = 6,
    kItemsGameUrlFieldNumber = 8,
    kTxnCountryCodeFieldNumber = 10,
    kGameData2FieldNumber = 11,
    kBalanceUrlFieldNumber = 15,
    kLocationFieldNumber = 5,
    kAdditionalWelcomeMsgsFieldNumber = 18,
    kVersionFieldNumber = 1,
    kItemSchemaCrcFieldNumber = 7,
    kGcSocacheFileVersionFieldNumber = 9,
    kRtime32GcWelcomeTimestampFieldNumber = 12,
    kCurrencyFieldNumber = 13,
    kBalanceFieldNumber = 14,
    kHasAcceptedChinaSsaFieldNumber = 16,
    kIsBannedSteamChinaFieldNumber = 17,
  };
  // repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
  int outofdate_subscribed_caches_size() const;
  private:
  int _internal_outofdate_subscribed_caches_size() const;
  public:
  void clear_outofdate_subscribed_caches();
  ::CMsgSOCacheSubscribed* mutable_outofdate_subscribed_caches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed >*
      mutable_outofdate_subscribed_caches();
  private:
  const ::CMsgSOCacheSubscribed& _internal_outofdate_subscribed_caches(int index) const;
  ::CMsgSOCacheSubscribed* _internal_add_outofdate_subscribed_caches();
  public:
  const ::CMsgSOCacheSubscribed& outofdate_subscribed_caches(int index) const;
  ::CMsgSOCacheSubscribed* add_outofdate_subscribed_caches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed >&
      outofdate_subscribed_caches() const;

  // repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
  int uptodate_subscribed_caches_size() const;
  private:
  int _internal_uptodate_subscribed_caches_size() const;
  public:
  void clear_uptodate_subscribed_caches();
  ::CMsgSOCacheSubscriptionCheck* mutable_uptodate_subscribed_caches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >*
      mutable_uptodate_subscribed_caches();
  private:
  const ::CMsgSOCacheSubscriptionCheck& _internal_uptodate_subscribed_caches(int index) const;
  ::CMsgSOCacheSubscriptionCheck* _internal_add_uptodate_subscribed_caches();
  public:
  const ::CMsgSOCacheSubscriptionCheck& uptodate_subscribed_caches(int index) const;
  ::CMsgSOCacheSubscriptionCheck* add_uptodate_subscribed_caches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >&
      uptodate_subscribed_caches() const;

  // optional bytes game_data = 2;
  bool has_game_data() const;
  private:
  bool _internal_has_game_data() const;
  public:
  void clear_game_data();
  const std::string& game_data() const;
  void set_game_data(const std::string& value);
  void set_game_data(std::string&& value);
  void set_game_data(const char* value);
  void set_game_data(const void* value, size_t size);
  std::string* mutable_game_data();
  std::string* release_game_data();
  void set_allocated_game_data(std::string* game_data);
  private:
  const std::string& _internal_game_data() const;
  void _internal_set_game_data(const std::string& value);
  std::string* _internal_mutable_game_data();
  public:

  // optional bytes save_game_key = 6;
  bool has_save_game_key() const;
  private:
  bool _internal_has_save_game_key() const;
  public:
  void clear_save_game_key();
  const std::string& save_game_key() const;
  void set_save_game_key(const std::string& value);
  void set_save_game_key(std::string&& value);
  void set_save_game_key(const char* value);
  void set_save_game_key(const void* value, size_t size);
  std::string* mutable_save_game_key();
  std::string* release_save_game_key();
  void set_allocated_save_game_key(std::string* save_game_key);
  private:
  const std::string& _internal_save_game_key() const;
  void _internal_set_save_game_key(const std::string& value);
  std::string* _internal_mutable_save_game_key();
  public:

  // optional string items_game_url = 8;
  bool has_items_game_url() const;
  private:
  bool _internal_has_items_game_url() const;
  public:
  void clear_items_game_url();
  const std::string& items_game_url() const;
  void set_items_game_url(const std::string& value);
  void set_items_game_url(std::string&& value);
  void set_items_game_url(const char* value);
  void set_items_game_url(const char* value, size_t size);
  std::string* mutable_items_game_url();
  std::string* release_items_game_url();
  void set_allocated_items_game_url(std::string* items_game_url);
  private:
  const std::string& _internal_items_game_url() const;
  void _internal_set_items_game_url(const std::string& value);
  std::string* _internal_mutable_items_game_url();
  public:

  // optional string txn_country_code = 10;
  bool has_txn_country_code() const;
  private:
  bool _internal_has_txn_country_code() const;
  public:
  void clear_txn_country_code();
  const std::string& txn_country_code() const;
  void set_txn_country_code(const std::string& value);
  void set_txn_country_code(std::string&& value);
  void set_txn_country_code(const char* value);
  void set_txn_country_code(const char* value, size_t size);
  std::string* mutable_txn_country_code();
  std::string* release_txn_country_code();
  void set_allocated_txn_country_code(std::string* txn_country_code);
  private:
  const std::string& _internal_txn_country_code() const;
  void _internal_set_txn_country_code(const std::string& value);
  std::string* _internal_mutable_txn_country_code();
  public:

  // optional bytes game_data2 = 11;
  bool has_game_data2() const;
  private:
  bool _internal_has_game_data2() const;
  public:
  void clear_game_data2();
  const std::string& game_data2() const;
  void set_game_data2(const std::string& value);
  void set_game_data2(std::string&& value);
  void set_game_data2(const char* value);
  void set_game_data2(const void* value, size_t size);
  std::string* mutable_game_data2();
  std::string* release_game_data2();
  void set_allocated_game_data2(std::string* game_data2);
  private:
  const std::string& _internal_game_data2() const;
  void _internal_set_game_data2(const std::string& value);
  std::string* _internal_mutable_game_data2();
  public:

  // optional string balance_url = 15;
  bool has_balance_url() const;
  private:
  bool _internal_has_balance_url() const;
  public:
  void clear_balance_url();
  const std::string& balance_url() const;
  void set_balance_url(const std::string& value);
  void set_balance_url(std::string&& value);
  void set_balance_url(const char* value);
  void set_balance_url(const char* value, size_t size);
  std::string* mutable_balance_url();
  std::string* release_balance_url();
  void set_allocated_balance_url(std::string* balance_url);
  private:
  const std::string& _internal_balance_url() const;
  void _internal_set_balance_url(const std::string& value);
  std::string* _internal_mutable_balance_url();
  public:

  // optional .CMsgClientWelcome.Location location = 5;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgClientWelcome_Location& location() const;
  ::CMsgClientWelcome_Location* release_location();
  ::CMsgClientWelcome_Location* mutable_location();
  void set_allocated_location(::CMsgClientWelcome_Location* location);
  private:
  const ::CMsgClientWelcome_Location& _internal_location() const;
  ::CMsgClientWelcome_Location* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgClientWelcome_Location* location);
  ::CMsgClientWelcome_Location* unsafe_arena_release_location();

  // optional .CExtraMsgBlock additional_welcome_msgs = 18;
  bool has_additional_welcome_msgs() const;
  private:
  bool _internal_has_additional_welcome_msgs() const;
  public:
  void clear_additional_welcome_msgs();
  const ::CExtraMsgBlock& additional_welcome_msgs() const;
  ::CExtraMsgBlock* release_additional_welcome_msgs();
  ::CExtraMsgBlock* mutable_additional_welcome_msgs();
  void set_allocated_additional_welcome_msgs(::CExtraMsgBlock* additional_welcome_msgs);
  private:
  const ::CExtraMsgBlock& _internal_additional_welcome_msgs() const;
  ::CExtraMsgBlock* _internal_mutable_additional_welcome_msgs();
  public:
  void unsafe_arena_set_allocated_additional_welcome_msgs(
      ::CExtraMsgBlock* additional_welcome_msgs);
  ::CExtraMsgBlock* unsafe_arena_release_additional_welcome_msgs();

  // optional uint32 version = 1;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 item_schema_crc = 7;
  bool has_item_schema_crc() const;
  private:
  bool _internal_has_item_schema_crc() const;
  public:
  void clear_item_schema_crc();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_schema_crc() const;
  void set_item_schema_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_schema_crc() const;
  void _internal_set_item_schema_crc(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gc_socache_file_version = 9;
  bool has_gc_socache_file_version() const;
  private:
  bool _internal_has_gc_socache_file_version() const;
  public:
  void clear_gc_socache_file_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 gc_socache_file_version() const;
  void set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gc_socache_file_version() const;
  void _internal_set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 rtime32_gc_welcome_timestamp = 12;
  bool has_rtime32_gc_welcome_timestamp() const;
  private:
  bool _internal_has_rtime32_gc_welcome_timestamp() const;
  public:
  void clear_rtime32_gc_welcome_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_gc_welcome_timestamp() const;
  void set_rtime32_gc_welcome_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime32_gc_welcome_timestamp() const;
  void _internal_set_rtime32_gc_welcome_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 currency = 13;
  bool has_currency() const;
  private:
  bool _internal_has_currency() const;
  public:
  void clear_currency();
  ::PROTOBUF_NAMESPACE_ID::uint32 currency() const;
  void set_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_currency() const;
  void _internal_set_currency(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance = 14;
  bool has_balance() const;
  private:
  bool _internal_has_balance() const;
  public:
  void clear_balance();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance() const;
  void set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance() const;
  void _internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool has_accepted_china_ssa = 16;
  bool has_has_accepted_china_ssa() const;
  private:
  bool _internal_has_has_accepted_china_ssa() const;
  public:
  void clear_has_accepted_china_ssa();
  bool has_accepted_china_ssa() const;
  void set_has_accepted_china_ssa(bool value);
  private:
  bool _internal_has_accepted_china_ssa() const;
  void _internal_set_has_accepted_china_ssa(bool value);
  public:

  // optional bool is_banned_steam_china = 17;
  bool has_is_banned_steam_china() const;
  private:
  bool _internal_has_is_banned_steam_china() const;
  public:
  void clear_is_banned_steam_china();
  bool is_banned_steam_china() const;
  void set_is_banned_steam_china(bool value);
  private:
  bool _internal_is_banned_steam_china() const;
  void _internal_set_is_banned_steam_china(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientWelcome)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed > outofdate_subscribed_caches_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck > uptodate_subscribed_caches_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_data_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr save_game_key_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr items_game_url_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr txn_country_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr game_data2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr balance_url_;
  ::CMsgClientWelcome_Location* location_;
  ::CExtraMsgBlock* additional_welcome_msgs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_schema_crc_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gc_socache_file_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime32_gc_welcome_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 currency_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_;
  bool has_accepted_china_ssa_;
  bool is_banned_steam_china_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgConnectionStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgConnectionStatus) */ {
 public:
  inline CMsgConnectionStatus() : CMsgConnectionStatus(nullptr) {}
  virtual ~CMsgConnectionStatus();
  explicit constexpr CMsgConnectionStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgConnectionStatus(const CMsgConnectionStatus& from);
  CMsgConnectionStatus(CMsgConnectionStatus&& from) noexcept
    : CMsgConnectionStatus() {
    *this = ::std::move(from);
  }

  inline CMsgConnectionStatus& operator=(const CMsgConnectionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgConnectionStatus& operator=(CMsgConnectionStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgConnectionStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgConnectionStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgConnectionStatus*>(
               &_CMsgConnectionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgConnectionStatus& a, CMsgConnectionStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgConnectionStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgConnectionStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgConnectionStatus* New() const final {
    return CreateMaybeMessage<CMsgConnectionStatus>(nullptr);
  }

  CMsgConnectionStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgConnectionStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgConnectionStatus& from);
  void MergeFrom(const CMsgConnectionStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgConnectionStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgConnectionStatus";
  }
  protected:
  explicit CMsgConnectionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
    kClientSessionNeedFieldNumber = 2,
    kQueuePositionFieldNumber = 3,
    kQueueSizeFieldNumber = 4,
    kWaitSecondsFieldNumber = 5,
    kEstimatedWaitSecondsRemainingFieldNumber = 6,
  };
  // optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::GCConnectionStatus status() const;
  void set_status(::GCConnectionStatus value);
  private:
  ::GCConnectionStatus _internal_status() const;
  void _internal_set_status(::GCConnectionStatus value);
  public:

  // optional uint32 client_session_need = 2;
  bool has_client_session_need() const;
  private:
  bool _internal_has_client_session_need() const;
  public:
  void clear_client_session_need();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_session_need() const;
  void set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_session_need() const;
  void _internal_set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 queue_position = 3;
  bool has_queue_position() const;
  private:
  bool _internal_has_queue_position() const;
  public:
  void clear_queue_position();
  ::PROTOBUF_NAMESPACE_ID::int32 queue_position() const;
  void set_queue_position(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_queue_position() const;
  void _internal_set_queue_position(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 queue_size = 4;
  bool has_queue_size() const;
  private:
  bool _internal_has_queue_size() const;
  public:
  void clear_queue_size();
  ::PROTOBUF_NAMESPACE_ID::int32 queue_size() const;
  void set_queue_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_queue_size() const;
  void _internal_set_queue_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 wait_seconds = 5;
  bool has_wait_seconds() const;
  private:
  bool _internal_has_wait_seconds() const;
  public:
  void clear_wait_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 wait_seconds() const;
  void set_wait_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_wait_seconds() const;
  void _internal_set_wait_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 estimated_wait_seconds_remaining = 6;
  bool has_estimated_wait_seconds_remaining() const;
  private:
  bool _internal_has_estimated_wait_seconds_remaining() const;
  public:
  void clear_estimated_wait_seconds_remaining();
  ::PROTOBUF_NAMESPACE_ID::int32 estimated_wait_seconds_remaining() const;
  void set_estimated_wait_seconds_remaining(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_estimated_wait_seconds_remaining() const;
  void _internal_set_estimated_wait_seconds_remaining(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgConnectionStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int status_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_session_need_;
  ::PROTOBUF_NAMESPACE_ID::int32 queue_position_;
  ::PROTOBUF_NAMESPACE_ID::int32 queue_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 wait_seconds_;
  ::PROTOBUF_NAMESPACE_ID::int32 estimated_wait_seconds_remaining_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions) */ {
 public:
  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions() : CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(nullptr) {}
  virtual ~CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions();
  explicit constexpr CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions&& from) noexcept
    : CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& operator=(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& operator=(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions*>(
               &_CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& a, CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* New() const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions>(nullptr);
  }

  CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions";
  }
  protected:
  explicit CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 2,
    kServiceIdFieldNumber = 1,
  };
  // optional uint64 version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service_id = 1;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheSubscribe PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheSubscribe) */ {
 public:
  inline CMsgGCToGCSOCacheSubscribe() : CMsgGCToGCSOCacheSubscribe(nullptr) {}
  virtual ~CMsgGCToGCSOCacheSubscribe();
  explicit constexpr CMsgGCToGCSOCacheSubscribe(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCSOCacheSubscribe(const CMsgGCToGCSOCacheSubscribe& from);
  CMsgGCToGCSOCacheSubscribe(CMsgGCToGCSOCacheSubscribe&& from) noexcept
    : CMsgGCToGCSOCacheSubscribe() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheSubscribe& operator=(const CMsgGCToGCSOCacheSubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCSOCacheSubscribe& operator=(CMsgGCToGCSOCacheSubscribe&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCSOCacheSubscribe& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCSOCacheSubscribe* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheSubscribe*>(
               &_CMsgGCToGCSOCacheSubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgGCToGCSOCacheSubscribe& a, CMsgGCToGCSOCacheSubscribe& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCSOCacheSubscribe* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCSOCacheSubscribe* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheSubscribe* New() const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheSubscribe>(nullptr);
  }

  CMsgGCToGCSOCacheSubscribe* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheSubscribe>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCSOCacheSubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheSubscribe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCSOCacheSubscribe* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCSOCacheSubscribe";
  }
  protected:
  explicit CMsgGCToGCSOCacheSubscribe(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions CMsgHaveVersions;

  // accessors -------------------------------------------------------

  enum : int {
    kHaveVersionsFieldNumber = 4,
    kSubscriberFieldNumber = 1,
    kSubscribeToIdFieldNumber = 2,
    kSyncVersionFieldNumber = 3,
    kSubscribeToTypeFieldNumber = 5,
  };
  // repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
  int have_versions_size() const;
  private:
  int _internal_have_versions_size() const;
  public:
  void clear_have_versions();
  ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* mutable_have_versions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
      mutable_have_versions();
  private:
  const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& _internal_have_versions(int index) const;
  ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* _internal_add_have_versions();
  public:
  const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& have_versions(int index) const;
  ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* add_have_versions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
      have_versions() const;

  // optional fixed64 subscriber = 1;
  bool has_subscriber() const;
  private:
  bool _internal_has_subscriber() const;
  public:
  void clear_subscriber();
  ::PROTOBUF_NAMESPACE_ID::uint64 subscriber() const;
  void set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subscriber() const;
  void _internal_set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 subscribe_to_id = 2;
  bool has_subscribe_to_id() const;
  private:
  bool _internal_has_subscribe_to_id() const;
  public:
  void clear_subscribe_to_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 subscribe_to_id() const;
  void set_subscribe_to_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subscribe_to_id() const;
  void _internal_set_subscribe_to_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 sync_version = 3;
  bool has_sync_version() const;
  private:
  bool _internal_has_sync_version() const;
  public:
  void clear_sync_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version() const;
  void set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_sync_version() const;
  void _internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 subscribe_to_type = 5;
  bool has_subscribe_to_type() const;
  private:
  bool _internal_has_subscribe_to_type() const;
  public:
  void clear_subscribe_to_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscribe_to_type() const;
  void set_subscribe_to_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscribe_to_type() const;
  void _internal_set_subscribe_to_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheSubscribe)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions > have_versions_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subscriber_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subscribe_to_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 sync_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscribe_to_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCSOCacheUnsubscribe PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCSOCacheUnsubscribe) */ {
 public:
  inline CMsgGCToGCSOCacheUnsubscribe() : CMsgGCToGCSOCacheUnsubscribe(nullptr) {}
  virtual ~CMsgGCToGCSOCacheUnsubscribe();
  explicit constexpr CMsgGCToGCSOCacheUnsubscribe(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCSOCacheUnsubscribe(const CMsgGCToGCSOCacheUnsubscribe& from);
  CMsgGCToGCSOCacheUnsubscribe(CMsgGCToGCSOCacheUnsubscribe&& from) noexcept
    : CMsgGCToGCSOCacheUnsubscribe() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCSOCacheUnsubscribe& operator=(const CMsgGCToGCSOCacheUnsubscribe& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCSOCacheUnsubscribe& operator=(CMsgGCToGCSOCacheUnsubscribe&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCSOCacheUnsubscribe& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCSOCacheUnsubscribe* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCSOCacheUnsubscribe*>(
               &_CMsgGCToGCSOCacheUnsubscribe_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgGCToGCSOCacheUnsubscribe& a, CMsgGCToGCSOCacheUnsubscribe& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCSOCacheUnsubscribe* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCSOCacheUnsubscribe* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCSOCacheUnsubscribe* New() const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheUnsubscribe>(nullptr);
  }

  CMsgGCToGCSOCacheUnsubscribe* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCSOCacheUnsubscribe>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  void MergeFrom(const CMsgGCToGCSOCacheUnsubscribe& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCSOCacheUnsubscribe* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCSOCacheUnsubscribe";
  }
  protected:
  explicit CMsgGCToGCSOCacheUnsubscribe(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriberFieldNumber = 1,
    kUnsubscribeFromIdFieldNumber = 2,
    kUnsubscribeFromTypeFieldNumber = 3,
  };
  // optional fixed64 subscriber = 1;
  bool has_subscriber() const;
  private:
  bool _internal_has_subscriber() const;
  public:
  void clear_subscriber();
  ::PROTOBUF_NAMESPACE_ID::uint64 subscriber() const;
  void set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_subscriber() const;
  void _internal_set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 unsubscribe_from_id = 2;
  bool has_unsubscribe_from_id() const;
  private:
  bool _internal_has_unsubscribe_from_id() const;
  public:
  void clear_unsubscribe_from_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 unsubscribe_from_id() const;
  void set_unsubscribe_from_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_unsubscribe_from_id() const;
  void _internal_set_unsubscribe_from_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 unsubscribe_from_type = 3;
  bool has_unsubscribe_from_type() const;
  private:
  bool _internal_has_unsubscribe_from_type() const;
  public:
  void clear_unsubscribe_from_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 unsubscribe_from_type() const;
  void set_unsubscribe_from_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unsubscribe_from_type() const;
  void _internal_set_unsubscribe_from_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCSOCacheUnsubscribe)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 subscriber_;
  ::PROTOBUF_NAMESPACE_ID::uint64 unsubscribe_from_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unsubscribe_from_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCClientPing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCClientPing) */ {
 public:
  inline CMsgGCClientPing() : CMsgGCClientPing(nullptr) {}
  virtual ~CMsgGCClientPing();
  explicit constexpr CMsgGCClientPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCClientPing(const CMsgGCClientPing& from);
  CMsgGCClientPing(CMsgGCClientPing&& from) noexcept
    : CMsgGCClientPing() {
    *this = ::std::move(from);
  }

  inline CMsgGCClientPing& operator=(const CMsgGCClientPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCClientPing& operator=(CMsgGCClientPing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCClientPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCClientPing* internal_default_instance() {
    return reinterpret_cast<const CMsgGCClientPing*>(
               &_CMsgGCClientPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgGCClientPing& a, CMsgGCClientPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCClientPing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCClientPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCClientPing* New() const final {
    return CreateMaybeMessage<CMsgGCClientPing>(nullptr);
  }

  CMsgGCClientPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCClientPing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCClientPing& from);
  void MergeFrom(const CMsgGCClientPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCClientPing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCClientPing";
  }
  protected:
  explicit CMsgGCClientPing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCClientPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCForwardAccountDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCForwardAccountDetails) */ {
 public:
  inline CMsgGCToGCForwardAccountDetails() : CMsgGCToGCForwardAccountDetails(nullptr) {}
  virtual ~CMsgGCToGCForwardAccountDetails();
  explicit constexpr CMsgGCToGCForwardAccountDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCForwardAccountDetails(const CMsgGCToGCForwardAccountDetails& from);
  CMsgGCToGCForwardAccountDetails(CMsgGCToGCForwardAccountDetails&& from) noexcept
    : CMsgGCToGCForwardAccountDetails() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCForwardAccountDetails& operator=(const CMsgGCToGCForwardAccountDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCForwardAccountDetails& operator=(CMsgGCToGCForwardAccountDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCForwardAccountDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCForwardAccountDetails* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCForwardAccountDetails*>(
               &_CMsgGCToGCForwardAccountDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgGCToGCForwardAccountDetails& a, CMsgGCToGCForwardAccountDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCForwardAccountDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCForwardAccountDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCForwardAccountDetails* New() const final {
    return CreateMaybeMessage<CMsgGCToGCForwardAccountDetails>(nullptr);
  }

  CMsgGCToGCForwardAccountDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCForwardAccountDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCForwardAccountDetails& from);
  void MergeFrom(const CMsgGCToGCForwardAccountDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCForwardAccountDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCForwardAccountDetails";
  }
  protected:
  explicit CMsgGCToGCForwardAccountDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountDetailsFieldNumber = 2,
    kSteamidFieldNumber = 1,
    kAgeSecondsFieldNumber = 3,
  };
  // optional .CGCSystemMsg_GetAccountDetails_Response account_details = 2;
  bool has_account_details() const;
  private:
  bool _internal_has_account_details() const;
  public:
  void clear_account_details();
  const ::CGCSystemMsg_GetAccountDetails_Response& account_details() const;
  ::CGCSystemMsg_GetAccountDetails_Response* release_account_details();
  ::CGCSystemMsg_GetAccountDetails_Response* mutable_account_details();
  void set_allocated_account_details(::CGCSystemMsg_GetAccountDetails_Response* account_details);
  private:
  const ::CGCSystemMsg_GetAccountDetails_Response& _internal_account_details() const;
  ::CGCSystemMsg_GetAccountDetails_Response* _internal_mutable_account_details();
  public:
  void unsafe_arena_set_allocated_account_details(
      ::CGCSystemMsg_GetAccountDetails_Response* account_details);
  ::CGCSystemMsg_GetAccountDetails_Response* unsafe_arena_release_account_details();

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 age_seconds = 3;
  bool has_age_seconds() const;
  private:
  bool _internal_has_age_seconds() const;
  public:
  void clear_age_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 age_seconds() const;
  void set_age_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_age_seconds() const;
  void _internal_set_age_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCForwardAccountDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CGCSystemMsg_GetAccountDetails_Response* account_details_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 age_seconds_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCLoadSessionSOCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCLoadSessionSOCache) */ {
 public:
  inline CMsgGCToGCLoadSessionSOCache() : CMsgGCToGCLoadSessionSOCache(nullptr) {}
  virtual ~CMsgGCToGCLoadSessionSOCache();
  explicit constexpr CMsgGCToGCLoadSessionSOCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCLoadSessionSOCache(const CMsgGCToGCLoadSessionSOCache& from);
  CMsgGCToGCLoadSessionSOCache(CMsgGCToGCLoadSessionSOCache&& from) noexcept
    : CMsgGCToGCLoadSessionSOCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCLoadSessionSOCache& operator=(const CMsgGCToGCLoadSessionSOCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCLoadSessionSOCache& operator=(CMsgGCToGCLoadSessionSOCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCLoadSessionSOCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCLoadSessionSOCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCLoadSessionSOCache*>(
               &_CMsgGCToGCLoadSessionSOCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgGCToGCLoadSessionSOCache& a, CMsgGCToGCLoadSessionSOCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCLoadSessionSOCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCLoadSessionSOCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCLoadSessionSOCache* New() const final {
    return CreateMaybeMessage<CMsgGCToGCLoadSessionSOCache>(nullptr);
  }

  CMsgGCToGCLoadSessionSOCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCLoadSessionSOCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCLoadSessionSOCache& from);
  void MergeFrom(const CMsgGCToGCLoadSessionSOCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCLoadSessionSOCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCLoadSessionSOCache";
  }
  protected:
  explicit CMsgGCToGCLoadSessionSOCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kForwardAccountDetailsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // optional .CMsgGCToGCForwardAccountDetails forward_account_details = 2;
  bool has_forward_account_details() const;
  private:
  bool _internal_has_forward_account_details() const;
  public:
  void clear_forward_account_details();
  const ::CMsgGCToGCForwardAccountDetails& forward_account_details() const;
  ::CMsgGCToGCForwardAccountDetails* release_forward_account_details();
  ::CMsgGCToGCForwardAccountDetails* mutable_forward_account_details();
  void set_allocated_forward_account_details(::CMsgGCToGCForwardAccountDetails* forward_account_details);
  private:
  const ::CMsgGCToGCForwardAccountDetails& _internal_forward_account_details() const;
  ::CMsgGCToGCForwardAccountDetails* _internal_mutable_forward_account_details();
  public:
  void unsafe_arena_set_allocated_forward_account_details(
      ::CMsgGCToGCForwardAccountDetails* forward_account_details);
  ::CMsgGCToGCForwardAccountDetails* unsafe_arena_release_forward_account_details();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCLoadSessionSOCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGCToGCForwardAccountDetails* forward_account_details_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCLoadSessionSOCacheResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCLoadSessionSOCacheResponse) */ {
 public:
  inline CMsgGCToGCLoadSessionSOCacheResponse() : CMsgGCToGCLoadSessionSOCacheResponse(nullptr) {}
  virtual ~CMsgGCToGCLoadSessionSOCacheResponse();
  explicit constexpr CMsgGCToGCLoadSessionSOCacheResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCLoadSessionSOCacheResponse(const CMsgGCToGCLoadSessionSOCacheResponse& from);
  CMsgGCToGCLoadSessionSOCacheResponse(CMsgGCToGCLoadSessionSOCacheResponse&& from) noexcept
    : CMsgGCToGCLoadSessionSOCacheResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCLoadSessionSOCacheResponse& operator=(const CMsgGCToGCLoadSessionSOCacheResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCLoadSessionSOCacheResponse& operator=(CMsgGCToGCLoadSessionSOCacheResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCLoadSessionSOCacheResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCLoadSessionSOCacheResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCLoadSessionSOCacheResponse*>(
               &_CMsgGCToGCLoadSessionSOCacheResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgGCToGCLoadSessionSOCacheResponse& a, CMsgGCToGCLoadSessionSOCacheResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCLoadSessionSOCacheResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCLoadSessionSOCacheResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCLoadSessionSOCacheResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToGCLoadSessionSOCacheResponse>(nullptr);
  }

  CMsgGCToGCLoadSessionSOCacheResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCLoadSessionSOCacheResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCLoadSessionSOCacheResponse& from);
  void MergeFrom(const CMsgGCToGCLoadSessionSOCacheResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCLoadSessionSOCacheResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCLoadSessionSOCacheResponse";
  }
  protected:
  explicit CMsgGCToGCLoadSessionSOCacheResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCLoadSessionSOCacheResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCUpdateSessionStats PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCUpdateSessionStats) */ {
 public:
  inline CMsgGCToGCUpdateSessionStats() : CMsgGCToGCUpdateSessionStats(nullptr) {}
  virtual ~CMsgGCToGCUpdateSessionStats();
  explicit constexpr CMsgGCToGCUpdateSessionStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCUpdateSessionStats(const CMsgGCToGCUpdateSessionStats& from);
  CMsgGCToGCUpdateSessionStats(CMsgGCToGCUpdateSessionStats&& from) noexcept
    : CMsgGCToGCUpdateSessionStats() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCUpdateSessionStats& operator=(const CMsgGCToGCUpdateSessionStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCUpdateSessionStats& operator=(CMsgGCToGCUpdateSessionStats&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCUpdateSessionStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCUpdateSessionStats* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCUpdateSessionStats*>(
               &_CMsgGCToGCUpdateSessionStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgGCToGCUpdateSessionStats& a, CMsgGCToGCUpdateSessionStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCUpdateSessionStats* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCUpdateSessionStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCUpdateSessionStats* New() const final {
    return CreateMaybeMessage<CMsgGCToGCUpdateSessionStats>(nullptr);
  }

  CMsgGCToGCUpdateSessionStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCUpdateSessionStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCUpdateSessionStats& from);
  void MergeFrom(const CMsgGCToGCUpdateSessionStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCUpdateSessionStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCUpdateSessionStats";
  }
  protected:
  explicit CMsgGCToGCUpdateSessionStats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUserSessionsFieldNumber = 1,
    kServerSessionsFieldNumber = 2,
    kInLogonSurgeFieldNumber = 3,
  };
  // optional uint32 user_sessions = 1;
  bool has_user_sessions() const;
  private:
  bool _internal_has_user_sessions() const;
  public:
  void clear_user_sessions();
  ::PROTOBUF_NAMESPACE_ID::uint32 user_sessions() const;
  void set_user_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_user_sessions() const;
  void _internal_set_user_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 server_sessions = 2;
  bool has_server_sessions() const;
  private:
  bool _internal_has_server_sessions() const;
  public:
  void clear_server_sessions();
  ::PROTOBUF_NAMESPACE_ID::uint32 server_sessions() const;
  void set_server_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_server_sessions() const;
  void _internal_set_server_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool in_logon_surge = 3;
  bool has_in_logon_surge() const;
  private:
  bool _internal_has_in_logon_surge() const;
  public:
  void clear_in_logon_surge();
  bool in_logon_surge() const;
  void set_in_logon_surge(bool value);
  private:
  bool _internal_in_logon_surge() const;
  void _internal_set_in_logon_surge(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCUpdateSessionStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 user_sessions_;
  ::PROTOBUF_NAMESPACE_ID::uint32 server_sessions_;
  bool in_logon_surge_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientRequestDropped PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientRequestDropped) */ {
 public:
  inline CMsgGCToClientRequestDropped() : CMsgGCToClientRequestDropped(nullptr) {}
  virtual ~CMsgGCToClientRequestDropped();
  explicit constexpr CMsgGCToClientRequestDropped(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientRequestDropped(const CMsgGCToClientRequestDropped& from);
  CMsgGCToClientRequestDropped(CMsgGCToClientRequestDropped&& from) noexcept
    : CMsgGCToClientRequestDropped() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientRequestDropped& operator=(const CMsgGCToClientRequestDropped& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientRequestDropped& operator=(CMsgGCToClientRequestDropped&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientRequestDropped& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientRequestDropped* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientRequestDropped*>(
               &_CMsgGCToClientRequestDropped_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgGCToClientRequestDropped& a, CMsgGCToClientRequestDropped& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientRequestDropped* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientRequestDropped* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientRequestDropped* New() const final {
    return CreateMaybeMessage<CMsgGCToClientRequestDropped>(nullptr);
  }

  CMsgGCToClientRequestDropped* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientRequestDropped>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientRequestDropped& from);
  void MergeFrom(const CMsgGCToClientRequestDropped& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientRequestDropped* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientRequestDropped";
  }
  protected:
  explicit CMsgGCToClientRequestDropped(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToClientRequestDropped)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() : CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(nullptr) {}
  virtual ~CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription();
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& operator=(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& operator=(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription*>(
               &_CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& a, CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* New() const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(nullptr);
  }

  CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDescriptionFieldNumber = 2,
    kGameitemidFieldNumber = 1,
  };
  // optional string item_description = 2;
  bool has_item_description() const;
  private:
  bool _internal_has_item_description() const;
  public:
  void clear_item_description();
  const std::string& item_description() const;
  void set_item_description(const std::string& value);
  void set_item_description(std::string&& value);
  void set_item_description(const char* value);
  void set_item_description(const char* value, size_t size);
  std::string* mutable_item_description();
  std::string* release_item_description();
  void set_allocated_item_description(std::string* item_description);
  private:
  const std::string& _internal_item_description() const;
  void _internal_set_item_description(const std::string& value);
  std::string* _internal_mutable_item_description();
  public:

  // optional uint32 gameitemid = 1;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_description_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() : CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(nullptr) {}
  virtual ~CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock();
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& operator=(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& operator=(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock*>(
               &_CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& a, CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* New() const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(nullptr);
  }

  CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptionsFieldNumber = 2,
    kLanguageFieldNumber = 1,
  };
  // repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
  int descriptions_size() const;
  private:
  int _internal_descriptions_size() const;
  public:
  void clear_descriptions();
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* mutable_descriptions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
      mutable_descriptions();
  private:
  const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& _internal_descriptions(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* _internal_add_descriptions();
  public:
  const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& descriptions(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* add_descriptions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
      descriptions() const;

  // optional string language = 1;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  const std::string& language() const;
  void set_language(const std::string& value);
  void set_language(std::string&& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  std::string* mutable_language();
  std::string* release_language();
  void set_allocated_language(std::string* language);
  private:
  const std::string& _internal_language() const;
  void _internal_set_language(const std::string& value);
  std::string* _internal_mutable_language();
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription > descriptions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr language_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_PopulateItemDescriptions_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_PopulateItemDescriptions_Request) */ {
 public:
  inline CWorkshop_PopulateItemDescriptions_Request() : CWorkshop_PopulateItemDescriptions_Request(nullptr) {}
  virtual ~CWorkshop_PopulateItemDescriptions_Request();
  explicit constexpr CWorkshop_PopulateItemDescriptions_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_PopulateItemDescriptions_Request(const CWorkshop_PopulateItemDescriptions_Request& from);
  CWorkshop_PopulateItemDescriptions_Request(CWorkshop_PopulateItemDescriptions_Request&& from) noexcept
    : CWorkshop_PopulateItemDescriptions_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_PopulateItemDescriptions_Request& operator=(const CWorkshop_PopulateItemDescriptions_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_PopulateItemDescriptions_Request& operator=(CWorkshop_PopulateItemDescriptions_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_PopulateItemDescriptions_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_PopulateItemDescriptions_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_PopulateItemDescriptions_Request*>(
               &_CWorkshop_PopulateItemDescriptions_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CWorkshop_PopulateItemDescriptions_Request& a, CWorkshop_PopulateItemDescriptions_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_PopulateItemDescriptions_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_PopulateItemDescriptions_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_PopulateItemDescriptions_Request* New() const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request>(nullptr);
  }

  CWorkshop_PopulateItemDescriptions_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_PopulateItemDescriptions_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  void MergeFrom(const CWorkshop_PopulateItemDescriptions_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_PopulateItemDescriptions_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_PopulateItemDescriptions_Request";
  }
  protected:
  explicit CWorkshop_PopulateItemDescriptions_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription SingleItemDescription;
  typedef CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock ItemDescriptionsLanguageBlock;

  // accessors -------------------------------------------------------

  enum : int {
    kLanguagesFieldNumber = 2,
    kAppidFieldNumber = 1,
  };
  // repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
  int languages_size() const;
  private:
  int _internal_languages_size() const;
  public:
  void clear_languages();
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* mutable_languages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
      mutable_languages();
  private:
  const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& _internal_languages(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* _internal_add_languages();
  public:
  const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& languages(int index) const;
  ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* add_languages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
      languages() const;

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_PopulateItemDescriptions_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock > languages_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetContributors_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetContributors_Request) */ {
 public:
  inline CWorkshop_GetContributors_Request() : CWorkshop_GetContributors_Request(nullptr) {}
  virtual ~CWorkshop_GetContributors_Request();
  explicit constexpr CWorkshop_GetContributors_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetContributors_Request(const CWorkshop_GetContributors_Request& from);
  CWorkshop_GetContributors_Request(CWorkshop_GetContributors_Request&& from) noexcept
    : CWorkshop_GetContributors_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetContributors_Request& operator=(const CWorkshop_GetContributors_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetContributors_Request& operator=(CWorkshop_GetContributors_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_GetContributors_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetContributors_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetContributors_Request*>(
               &_CWorkshop_GetContributors_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CWorkshop_GetContributors_Request& a, CWorkshop_GetContributors_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetContributors_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetContributors_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_GetContributors_Request* New() const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Request>(nullptr);
  }

  CWorkshop_GetContributors_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_GetContributors_Request& from);
  void MergeFrom(const CWorkshop_GetContributors_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetContributors_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetContributors_Request";
  }
  protected:
  explicit CWorkshop_GetContributors_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppidFieldNumber = 1,
    kGameitemidFieldNumber = 2,
  };
  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gameitemid = 2;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_GetContributors_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_GetContributors_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_GetContributors_Response) */ {
 public:
  inline CWorkshop_GetContributors_Response() : CWorkshop_GetContributors_Response(nullptr) {}
  virtual ~CWorkshop_GetContributors_Response();
  explicit constexpr CWorkshop_GetContributors_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_GetContributors_Response(const CWorkshop_GetContributors_Response& from);
  CWorkshop_GetContributors_Response(CWorkshop_GetContributors_Response&& from) noexcept
    : CWorkshop_GetContributors_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_GetContributors_Response& operator=(const CWorkshop_GetContributors_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_GetContributors_Response& operator=(CWorkshop_GetContributors_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_GetContributors_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_GetContributors_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_GetContributors_Response*>(
               &_CWorkshop_GetContributors_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CWorkshop_GetContributors_Response& a, CWorkshop_GetContributors_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_GetContributors_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_GetContributors_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_GetContributors_Response* New() const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Response>(nullptr);
  }

  CWorkshop_GetContributors_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_GetContributors_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_GetContributors_Response& from);
  void MergeFrom(const CWorkshop_GetContributors_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_GetContributors_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_GetContributors_Response";
  }
  protected:
  explicit CWorkshop_GetContributors_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContributorsFieldNumber = 1,
  };
  // repeated fixed64 contributors = 1;
  int contributors_size() const;
  private:
  int _internal_contributors_size() const;
  public:
  void clear_contributors();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_contributors(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_contributors() const;
  void _internal_add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_contributors();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 contributors(int index) const;
  void set_contributors(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      contributors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_contributors();

  // @@protoc_insertion_point(class_scope:CWorkshop_GetContributors_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > contributors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() : CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(nullptr) {}
  virtual ~CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule();
  explicit constexpr CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& operator=(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& operator=(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule*>(
               &_CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& a, CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* New() const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(nullptr);
  }

  CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleDescriptionFieldNumber = 3,
    kWorkshopFileIdFieldNumber = 1,
    kRevenuePercentageFieldNumber = 2,
    kRuleTypeFieldNumber = 4,
  };
  // optional string rule_description = 3;
  bool has_rule_description() const;
  private:
  bool _internal_has_rule_description() const;
  public:
  void clear_rule_description();
  const std::string& rule_description() const;
  void set_rule_description(const std::string& value);
  void set_rule_description(std::string&& value);
  void set_rule_description(const char* value);
  void set_rule_description(const char* value, size_t size);
  std::string* mutable_rule_description();
  std::string* release_rule_description();
  void set_allocated_rule_description(std::string* rule_description);
  private:
  const std::string& _internal_rule_description() const;
  void _internal_set_rule_description(const std::string& value);
  std::string* _internal_mutable_rule_description();
  public:

  // optional uint64 workshop_file_id = 1;
  bool has_workshop_file_id() const;
  private:
  bool _internal_has_workshop_file_id() const;
  public:
  void clear_workshop_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id() const;
  void set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_workshop_file_id() const;
  void _internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional float revenue_percentage = 2;
  bool has_revenue_percentage() const;
  private:
  bool _internal_has_revenue_percentage() const;
  public:
  void clear_revenue_percentage();
  float revenue_percentage() const;
  void set_revenue_percentage(float value);
  private:
  float _internal_revenue_percentage() const;
  void _internal_set_revenue_percentage(float value);
  public:

  // optional uint32 rule_type = 4 [default = 1];
  bool has_rule_type() const;
  private:
  bool _internal_has_rule_type() const;
  public:
  void clear_rule_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 rule_type() const;
  void set_rule_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rule_type() const;
  void _internal_set_rule_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rule_description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id_;
  float revenue_percentage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rule_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule() : CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(nullptr) {}
  virtual ~CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule();
  explicit constexpr CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from);
  CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& operator=(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& operator=(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule*>(
               &_CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& a, CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* New() const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule>(nullptr);
  }

  CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleDescriptionFieldNumber = 2,
    kWorkshopFileIdFieldNumber = 1,
  };
  // optional string rule_description = 2;
  bool has_rule_description() const;
  private:
  bool _internal_has_rule_description() const;
  public:
  void clear_rule_description();
  const std::string& rule_description() const;
  void set_rule_description(const std::string& value);
  void set_rule_description(std::string&& value);
  void set_rule_description(const char* value);
  void set_rule_description(const char* value, size_t size);
  std::string* mutable_rule_description();
  std::string* release_rule_description();
  void set_allocated_rule_description(std::string* rule_description);
  private:
  const std::string& _internal_rule_description() const;
  void _internal_set_rule_description(const std::string& value);
  std::string* _internal_mutable_rule_description();
  public:

  // optional uint64 workshop_file_id = 1;
  bool has_workshop_file_id() const;
  private:
  bool _internal_has_workshop_file_id() const;
  public:
  void clear_workshop_file_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id() const;
  void set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_workshop_file_id() const;
  void _internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rule_description_;
  ::PROTOBUF_NAMESPACE_ID::uint64 workshop_file_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() : CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(nullptr) {}
  virtual ~CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule();
  explicit constexpr CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& operator=(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& operator=(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule*>(
               &_CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& a, CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* New() const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(nullptr);
  }

  CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRuleDescriptionFieldNumber = 3,
    kAccountIdFieldNumber = 1,
    kRevenuePercentageFieldNumber = 2,
  };
  // optional string rule_description = 3;
  bool has_rule_description() const;
  private:
  bool _internal_has_rule_description() const;
  public:
  void clear_rule_description();
  const std::string& rule_description() const;
  void set_rule_description(const std::string& value);
  void set_rule_description(std::string&& value);
  void set_rule_description(const char* value);
  void set_rule_description(const char* value, size_t size);
  std::string* mutable_rule_description();
  std::string* release_rule_description();
  void set_allocated_rule_description(std::string* rule_description);
  private:
  const std::string& _internal_rule_description() const;
  void _internal_set_rule_description(const std::string& value);
  std::string* _internal_mutable_rule_description();
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float revenue_percentage = 2;
  bool has_revenue_percentage() const;
  private:
  bool _internal_has_revenue_percentage() const;
  public:
  void clear_revenue_percentage();
  float revenue_percentage() const;
  void set_revenue_percentage(float value);
  private:
  float _internal_revenue_percentage() const;
  void _internal_set_revenue_percentage(float value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr rule_description_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  float revenue_percentage_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_SetItemPaymentRules_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Request) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Request() : CWorkshop_SetItemPaymentRules_Request(nullptr) {}
  virtual ~CWorkshop_SetItemPaymentRules_Request();
  explicit constexpr CWorkshop_SetItemPaymentRules_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Request(const CWorkshop_SetItemPaymentRules_Request& from);
  CWorkshop_SetItemPaymentRules_Request(CWorkshop_SetItemPaymentRules_Request&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Request() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Request& operator=(const CWorkshop_SetItemPaymentRules_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Request& operator=(CWorkshop_SetItemPaymentRules_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Request* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Request*>(
               &_CWorkshop_SetItemPaymentRules_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CWorkshop_SetItemPaymentRules_Request& a, CWorkshop_SetItemPaymentRules_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Request* New() const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request>(nullptr);
  }

  CWorkshop_SetItemPaymentRules_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Request& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Request";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule WorkshopItemPaymentRule;
  typedef CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule WorkshopDirectPaymentRule;
  typedef CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule PartnerItemPaymentRule;

  // accessors -------------------------------------------------------

  enum : int {
    kAssociatedWorkshopFilesFieldNumber = 3,
    kPartnerAccountsFieldNumber = 4,
    kAssociatedWorkshopFileForDirectPaymentsFieldNumber = 7,
    kAppidFieldNumber = 1,
    kGameitemidFieldNumber = 2,
    kValidateOnlyFieldNumber = 5,
    kMakeWorkshopFilesSubscribableFieldNumber = 6,
  };
  // repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
  int associated_workshop_files_size() const;
  private:
  int _internal_associated_workshop_files_size() const;
  public:
  void clear_associated_workshop_files();
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* mutable_associated_workshop_files(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >*
      mutable_associated_workshop_files();
  private:
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& _internal_associated_workshop_files(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* _internal_add_associated_workshop_files();
  public:
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& associated_workshop_files(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* add_associated_workshop_files();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >&
      associated_workshop_files() const;

  // repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
  int partner_accounts_size() const;
  private:
  int _internal_partner_accounts_size() const;
  public:
  void clear_partner_accounts();
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* mutable_partner_accounts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >*
      mutable_partner_accounts();
  private:
  const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& _internal_partner_accounts(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* _internal_add_partner_accounts();
  public:
  const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& partner_accounts(int index) const;
  ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* add_partner_accounts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >&
      partner_accounts() const;

  // optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
  bool has_associated_workshop_file_for_direct_payments() const;
  private:
  bool _internal_has_associated_workshop_file_for_direct_payments() const;
  public:
  void clear_associated_workshop_file_for_direct_payments();
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& associated_workshop_file_for_direct_payments() const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* release_associated_workshop_file_for_direct_payments();
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* mutable_associated_workshop_file_for_direct_payments();
  void set_allocated_associated_workshop_file_for_direct_payments(::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments);
  private:
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& _internal_associated_workshop_file_for_direct_payments() const;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* _internal_mutable_associated_workshop_file_for_direct_payments();
  public:
  void unsafe_arena_set_allocated_associated_workshop_file_for_direct_payments(
      ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments);
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* unsafe_arena_release_associated_workshop_file_for_direct_payments();

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gameitemid = 2;
  bool has_gameitemid() const;
  private:
  bool _internal_has_gameitemid() const;
  public:
  void clear_gameitemid();
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid() const;
  void set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gameitemid() const;
  void _internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool validate_only = 5;
  bool has_validate_only() const;
  private:
  bool _internal_has_validate_only() const;
  public:
  void clear_validate_only();
  bool validate_only() const;
  void set_validate_only(bool value);
  private:
  bool _internal_validate_only() const;
  void _internal_set_validate_only(bool value);
  public:

  // optional bool make_workshop_files_subscribable = 6;
  bool has_make_workshop_files_subscribable() const;
  private:
  bool _internal_has_make_workshop_files_subscribable() const;
  public:
  void clear_make_workshop_files_subscribable();
  bool make_workshop_files_subscribable() const;
  void set_make_workshop_files_subscribable(bool value);
  private:
  bool _internal_make_workshop_files_subscribable() const;
  void _internal_set_make_workshop_files_subscribable(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule > associated_workshop_files_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule > partner_accounts_;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gameitemid_;
  bool validate_only_;
  bool make_workshop_files_subscribable_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CWorkshop_SetItemPaymentRules_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CWorkshop_SetItemPaymentRules_Response) */ {
 public:
  inline CWorkshop_SetItemPaymentRules_Response() : CWorkshop_SetItemPaymentRules_Response(nullptr) {}
  virtual ~CWorkshop_SetItemPaymentRules_Response();
  explicit constexpr CWorkshop_SetItemPaymentRules_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CWorkshop_SetItemPaymentRules_Response(const CWorkshop_SetItemPaymentRules_Response& from);
  CWorkshop_SetItemPaymentRules_Response(CWorkshop_SetItemPaymentRules_Response&& from) noexcept
    : CWorkshop_SetItemPaymentRules_Response() {
    *this = ::std::move(from);
  }

  inline CWorkshop_SetItemPaymentRules_Response& operator=(const CWorkshop_SetItemPaymentRules_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CWorkshop_SetItemPaymentRules_Response& operator=(CWorkshop_SetItemPaymentRules_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CWorkshop_SetItemPaymentRules_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CWorkshop_SetItemPaymentRules_Response* internal_default_instance() {
    return reinterpret_cast<const CWorkshop_SetItemPaymentRules_Response*>(
               &_CWorkshop_SetItemPaymentRules_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CWorkshop_SetItemPaymentRules_Response& a, CWorkshop_SetItemPaymentRules_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CWorkshop_SetItemPaymentRules_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CWorkshop_SetItemPaymentRules_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CWorkshop_SetItemPaymentRules_Response* New() const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Response>(nullptr);
  }

  CWorkshop_SetItemPaymentRules_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CWorkshop_SetItemPaymentRules_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CWorkshop_SetItemPaymentRules_Response& from);
  void MergeFrom(const CWorkshop_SetItemPaymentRules_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CWorkshop_SetItemPaymentRules_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CWorkshop_SetItemPaymentRules_Response";
  }
  protected:
  explicit CWorkshop_SetItemPaymentRules_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValidationErrorsFieldNumber = 1,
  };
  // repeated string validation_errors = 1;
  int validation_errors_size() const;
  private:
  int _internal_validation_errors_size() const;
  public:
  void clear_validation_errors();
  const std::string& validation_errors(int index) const;
  std::string* mutable_validation_errors(int index);
  void set_validation_errors(int index, const std::string& value);
  void set_validation_errors(int index, std::string&& value);
  void set_validation_errors(int index, const char* value);
  void set_validation_errors(int index, const char* value, size_t size);
  std::string* add_validation_errors();
  void add_validation_errors(const std::string& value);
  void add_validation_errors(std::string&& value);
  void add_validation_errors(const char* value);
  void add_validation_errors(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& validation_errors() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_validation_errors();
  private:
  const std::string& _internal_validation_errors(int index) const;
  std::string* _internal_add_validation_errors();
  public:

  // @@protoc_insertion_point(class_scope:CWorkshop_SetItemPaymentRules_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> validation_errors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetClanAnnouncements_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetClanAnnouncements_Request) */ {
 public:
  inline CCommunity_GetClanAnnouncements_Request() : CCommunity_GetClanAnnouncements_Request(nullptr) {}
  virtual ~CCommunity_GetClanAnnouncements_Request();
  explicit constexpr CCommunity_GetClanAnnouncements_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetClanAnnouncements_Request(const CCommunity_GetClanAnnouncements_Request& from);
  CCommunity_GetClanAnnouncements_Request(CCommunity_GetClanAnnouncements_Request&& from) noexcept
    : CCommunity_GetClanAnnouncements_Request() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetClanAnnouncements_Request& operator=(const CCommunity_GetClanAnnouncements_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetClanAnnouncements_Request& operator=(CCommunity_GetClanAnnouncements_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetClanAnnouncements_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetClanAnnouncements_Request* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetClanAnnouncements_Request*>(
               &_CCommunity_GetClanAnnouncements_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CCommunity_GetClanAnnouncements_Request& a, CCommunity_GetClanAnnouncements_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetClanAnnouncements_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetClanAnnouncements_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetClanAnnouncements_Request* New() const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncements_Request>(nullptr);
  }

  CCommunity_GetClanAnnouncements_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncements_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetClanAnnouncements_Request& from);
  void MergeFrom(const CCommunity_GetClanAnnouncements_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetClanAnnouncements_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetClanAnnouncements_Request";
  }
  protected:
  explicit CCommunity_GetClanAnnouncements_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequiredTagsFieldNumber = 6,
    kLanguagePreferenceFieldNumber = 8,
    kSteamidFieldNumber = 1,
    kOffsetFieldNumber = 2,
    kCountFieldNumber = 3,
    kMaxcharsFieldNumber = 4,
    kStripHtmlFieldNumber = 5,
    kRequireNoTagsFieldNumber = 7,
    kHiddenOnlyFieldNumber = 9,
    kOnlyGidFieldNumber = 10,
    kRtimeOldestDateFieldNumber = 11,
    kIncludeHiddenFieldNumber = 12,
    kIncludePartnerEventsFieldNumber = 13,
  };
  // repeated string required_tags = 6;
  int required_tags_size() const;
  private:
  int _internal_required_tags_size() const;
  public:
  void clear_required_tags();
  const std::string& required_tags(int index) const;
  std::string* mutable_required_tags(int index);
  void set_required_tags(int index, const std::string& value);
  void set_required_tags(int index, std::string&& value);
  void set_required_tags(int index, const char* value);
  void set_required_tags(int index, const char* value, size_t size);
  std::string* add_required_tags();
  void add_required_tags(const std::string& value);
  void add_required_tags(std::string&& value);
  void add_required_tags(const char* value);
  void add_required_tags(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& required_tags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_required_tags();
  private:
  const std::string& _internal_required_tags(int index) const;
  std::string* _internal_add_required_tags();
  public:

  // repeated uint32 language_preference = 8;
  int language_preference_size() const;
  private:
  int _internal_language_preference_size() const;
  public:
  void clear_language_preference();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_language_preference(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_language_preference() const;
  void _internal_add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_language_preference();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 language_preference(int index) const;
  void set_language_preference(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      language_preference() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_language_preference();

  // optional uint64 steamid = 1;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 offset = 2;
  bool has_offset() const;
  private:
  bool _internal_has_offset() const;
  public:
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint32 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 count = 3;
  bool has_count() const;
  private:
  bool _internal_has_count() const;
  public:
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 maxchars = 4;
  bool has_maxchars() const;
  private:
  bool _internal_has_maxchars() const;
  public:
  void clear_maxchars();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxchars() const;
  void set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxchars() const;
  void _internal_set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool strip_html = 5;
  bool has_strip_html() const;
  private:
  bool _internal_has_strip_html() const;
  public:
  void clear_strip_html();
  bool strip_html() const;
  void set_strip_html(bool value);
  private:
  bool _internal_strip_html() const;
  void _internal_set_strip_html(bool value);
  public:

  // optional bool require_no_tags = 7;
  bool has_require_no_tags() const;
  private:
  bool _internal_has_require_no_tags() const;
  public:
  void clear_require_no_tags();
  bool require_no_tags() const;
  void set_require_no_tags(bool value);
  private:
  bool _internal_require_no_tags() const;
  void _internal_set_require_no_tags(bool value);
  public:

  // optional bool hidden_only = 9;
  bool has_hidden_only() const;
  private:
  bool _internal_has_hidden_only() const;
  public:
  void clear_hidden_only();
  bool hidden_only() const;
  void set_hidden_only(bool value);
  private:
  bool _internal_hidden_only() const;
  void _internal_set_hidden_only(bool value);
  public:

  // optional bool only_gid = 10;
  bool has_only_gid() const;
  private:
  bool _internal_has_only_gid() const;
  public:
  void clear_only_gid();
  bool only_gid() const;
  void set_only_gid(bool value);
  private:
  bool _internal_only_gid() const;
  void _internal_set_only_gid(bool value);
  public:

  // optional uint32 rtime_oldest_date = 11;
  bool has_rtime_oldest_date() const;
  private:
  bool _internal_has_rtime_oldest_date() const;
  public:
  void clear_rtime_oldest_date();
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_oldest_date() const;
  void set_rtime_oldest_date(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rtime_oldest_date() const;
  void _internal_set_rtime_oldest_date(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool include_hidden = 12;
  bool has_include_hidden() const;
  private:
  bool _internal_has_include_hidden() const;
  public:
  void clear_include_hidden();
  bool include_hidden() const;
  void set_include_hidden(bool value);
  private:
  bool _internal_include_hidden() const;
  void _internal_set_include_hidden(bool value);
  public:

  // optional bool include_partner_events = 13;
  bool has_include_partner_events() const;
  private:
  bool _internal_has_include_partner_events() const;
  public:
  void clear_include_partner_events();
  bool include_partner_events() const;
  void set_include_partner_events(bool value);
  private:
  bool _internal_include_partner_events() const;
  void _internal_set_include_partner_events(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetClanAnnouncements_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> required_tags_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > language_preference_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 offset_;
  ::PROTOBUF_NAMESPACE_ID::uint32 count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxchars_;
  bool strip_html_;
  bool require_no_tags_;
  bool hidden_only_;
  bool only_gid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 rtime_oldest_date_;
  bool include_hidden_;
  bool include_partner_events_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CCommunity_GetClanAnnouncements_Response PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CCommunity_GetClanAnnouncements_Response) */ {
 public:
  inline CCommunity_GetClanAnnouncements_Response() : CCommunity_GetClanAnnouncements_Response(nullptr) {}
  virtual ~CCommunity_GetClanAnnouncements_Response();
  explicit constexpr CCommunity_GetClanAnnouncements_Response(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CCommunity_GetClanAnnouncements_Response(const CCommunity_GetClanAnnouncements_Response& from);
  CCommunity_GetClanAnnouncements_Response(CCommunity_GetClanAnnouncements_Response&& from) noexcept
    : CCommunity_GetClanAnnouncements_Response() {
    *this = ::std::move(from);
  }

  inline CCommunity_GetClanAnnouncements_Response& operator=(const CCommunity_GetClanAnnouncements_Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline CCommunity_GetClanAnnouncements_Response& operator=(CCommunity_GetClanAnnouncements_Response&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CCommunity_GetClanAnnouncements_Response& default_instance() {
    return *internal_default_instance();
  }
  static inline const CCommunity_GetClanAnnouncements_Response* internal_default_instance() {
    return reinterpret_cast<const CCommunity_GetClanAnnouncements_Response*>(
               &_CCommunity_GetClanAnnouncements_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CCommunity_GetClanAnnouncements_Response& a, CCommunity_GetClanAnnouncements_Response& b) {
    a.Swap(&b);
  }
  inline void Swap(CCommunity_GetClanAnnouncements_Response* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CCommunity_GetClanAnnouncements_Response* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CCommunity_GetClanAnnouncements_Response* New() const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncements_Response>(nullptr);
  }

  CCommunity_GetClanAnnouncements_Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CCommunity_GetClanAnnouncements_Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CCommunity_GetClanAnnouncements_Response& from);
  void MergeFrom(const CCommunity_GetClanAnnouncements_Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CCommunity_GetClanAnnouncements_Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CCommunity_GetClanAnnouncements_Response";
  }
  protected:
  explicit CCommunity_GetClanAnnouncements_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAnnouncementsFieldNumber = 3,
    kMaxcharsFieldNumber = 1,
    kStripHtmlFieldNumber = 2,
  };
  // repeated .CCommunity_ClanAnnouncementInfo announcements = 3;
  int announcements_size() const;
  private:
  int _internal_announcements_size() const;
  public:
  void clear_announcements();
  ::CCommunity_ClanAnnouncementInfo* mutable_announcements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_ClanAnnouncementInfo >*
      mutable_announcements();
  private:
  const ::CCommunity_ClanAnnouncementInfo& _internal_announcements(int index) const;
  ::CCommunity_ClanAnnouncementInfo* _internal_add_announcements();
  public:
  const ::CCommunity_ClanAnnouncementInfo& announcements(int index) const;
  ::CCommunity_ClanAnnouncementInfo* add_announcements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_ClanAnnouncementInfo >&
      announcements() const;

  // optional uint32 maxchars = 1;
  bool has_maxchars() const;
  private:
  bool _internal_has_maxchars() const;
  public:
  void clear_maxchars();
  ::PROTOBUF_NAMESPACE_ID::uint32 maxchars() const;
  void set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_maxchars() const;
  void _internal_set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool strip_html = 2;
  bool has_strip_html() const;
  private:
  bool _internal_has_strip_html() const;
  public:
  void clear_strip_html();
  bool strip_html() const;
  void set_strip_html(bool value);
  private:
  bool _internal_strip_html() const;
  void _internal_set_strip_html(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CCommunity_GetClanAnnouncements_Response)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_ClanAnnouncementInfo > announcements_;
  ::PROTOBUF_NAMESPACE_ID::uint32 maxchars_;
  bool strip_html_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CBroadcast_PostGameDataFrame_Request PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CBroadcast_PostGameDataFrame_Request) */ {
 public:
  inline CBroadcast_PostGameDataFrame_Request() : CBroadcast_PostGameDataFrame_Request(nullptr) {}
  virtual ~CBroadcast_PostGameDataFrame_Request();
  explicit constexpr CBroadcast_PostGameDataFrame_Request(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CBroadcast_PostGameDataFrame_Request(const CBroadcast_PostGameDataFrame_Request& from);
  CBroadcast_PostGameDataFrame_Request(CBroadcast_PostGameDataFrame_Request&& from) noexcept
    : CBroadcast_PostGameDataFrame_Request() {
    *this = ::std::move(from);
  }

  inline CBroadcast_PostGameDataFrame_Request& operator=(const CBroadcast_PostGameDataFrame_Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline CBroadcast_PostGameDataFrame_Request& operator=(CBroadcast_PostGameDataFrame_Request&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CBroadcast_PostGameDataFrame_Request& default_instance() {
    return *internal_default_instance();
  }
  static inline const CBroadcast_PostGameDataFrame_Request* internal_default_instance() {
    return reinterpret_cast<const CBroadcast_PostGameDataFrame_Request*>(
               &_CBroadcast_PostGameDataFrame_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CBroadcast_PostGameDataFrame_Request& a, CBroadcast_PostGameDataFrame_Request& b) {
    a.Swap(&b);
  }
  inline void Swap(CBroadcast_PostGameDataFrame_Request* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CBroadcast_PostGameDataFrame_Request* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CBroadcast_PostGameDataFrame_Request* New() const final {
    return CreateMaybeMessage<CBroadcast_PostGameDataFrame_Request>(nullptr);
  }

  CBroadcast_PostGameDataFrame_Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CBroadcast_PostGameDataFrame_Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CBroadcast_PostGameDataFrame_Request& from);
  void MergeFrom(const CBroadcast_PostGameDataFrame_Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CBroadcast_PostGameDataFrame_Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CBroadcast_PostGameDataFrame_Request";
  }
  protected:
  explicit CBroadcast_PostGameDataFrame_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameDataFieldNumber = 4,
    kSteamidFieldNumber = 2,
    kBroadcastIdFieldNumber = 3,
    kAppidFieldNumber = 1,
  };
  // optional bytes frame_data = 4;
  bool has_frame_data() const;
  private:
  bool _internal_has_frame_data() const;
  public:
  void clear_frame_data();
  const std::string& frame_data() const;
  void set_frame_data(const std::string& value);
  void set_frame_data(std::string&& value);
  void set_frame_data(const char* value);
  void set_frame_data(const void* value, size_t size);
  std::string* mutable_frame_data();
  std::string* release_frame_data();
  void set_allocated_frame_data(std::string* frame_data);
  private:
  const std::string& _internal_frame_data() const;
  void _internal_set_frame_data(const std::string& value);
  std::string* _internal_mutable_frame_data();
  public:

  // optional fixed64 steamid = 2;
  bool has_steamid() const;
  private:
  bool _internal_has_steamid() const;
  public:
  void clear_steamid();
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid() const;
  void set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steamid() const;
  void _internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed64 broadcast_id = 3;
  bool has_broadcast_id() const;
  private:
  bool _internal_has_broadcast_id() const;
  public:
  void clear_broadcast_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 broadcast_id() const;
  void set_broadcast_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_broadcast_id() const;
  void _internal_set_broadcast_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 appid = 1;
  bool has_appid() const;
  private:
  bool _internal_has_appid() const;
  public:
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CBroadcast_PostGameDataFrame_Request)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_data_;
  ::PROTOBUF_NAMESPACE_ID::uint64 steamid_;
  ::PROTOBUF_NAMESPACE_ID::uint64 broadcast_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_TypeCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSerializedSOCache.TypeCache) */ {
 public:
  inline CMsgSerializedSOCache_TypeCache() : CMsgSerializedSOCache_TypeCache(nullptr) {}
  virtual ~CMsgSerializedSOCache_TypeCache();
  explicit constexpr CMsgSerializedSOCache_TypeCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSerializedSOCache_TypeCache(const CMsgSerializedSOCache_TypeCache& from);
  CMsgSerializedSOCache_TypeCache(CMsgSerializedSOCache_TypeCache&& from) noexcept
    : CMsgSerializedSOCache_TypeCache() {
    *this = ::std::move(from);
  }

  inline CMsgSerializedSOCache_TypeCache& operator=(const CMsgSerializedSOCache_TypeCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSerializedSOCache_TypeCache& operator=(CMsgSerializedSOCache_TypeCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSerializedSOCache_TypeCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSerializedSOCache_TypeCache* internal_default_instance() {
    return reinterpret_cast<const CMsgSerializedSOCache_TypeCache*>(
               &_CMsgSerializedSOCache_TypeCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgSerializedSOCache_TypeCache& a, CMsgSerializedSOCache_TypeCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSerializedSOCache_TypeCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSerializedSOCache_TypeCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSerializedSOCache_TypeCache* New() const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_TypeCache>(nullptr);
  }

  CMsgSerializedSOCache_TypeCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_TypeCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSerializedSOCache_TypeCache& from);
  void MergeFrom(const CMsgSerializedSOCache_TypeCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSerializedSOCache_TypeCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSerializedSOCache.TypeCache";
  }
  protected:
  explicit CMsgSerializedSOCache_TypeCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectsFieldNumber = 2,
    kTypeFieldNumber = 1,
    kServiceIdFieldNumber = 3,
  };
  // repeated bytes objects = 2;
  int objects_size() const;
  private:
  int _internal_objects_size() const;
  public:
  void clear_objects();
  const std::string& objects(int index) const;
  std::string* mutable_objects(int index);
  void set_objects(int index, const std::string& value);
  void set_objects(int index, std::string&& value);
  void set_objects(int index, const char* value);
  void set_objects(int index, const void* value, size_t size);
  std::string* add_objects();
  void add_objects(const std::string& value);
  void add_objects(std::string&& value);
  void add_objects(const char* value);
  void add_objects(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& objects() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_objects();
  private:
  const std::string& _internal_objects(int index) const;
  std::string* _internal_add_objects();
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 service_id = 3;
  bool has_service_id() const;
  private:
  bool _internal_has_service_id() const;
  public:
  void clear_service_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id() const;
  void set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service_id() const;
  void _internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.TypeCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> objects_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_Cache_Version PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSerializedSOCache.Cache.Version) */ {
 public:
  inline CMsgSerializedSOCache_Cache_Version() : CMsgSerializedSOCache_Cache_Version(nullptr) {}
  virtual ~CMsgSerializedSOCache_Cache_Version();
  explicit constexpr CMsgSerializedSOCache_Cache_Version(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSerializedSOCache_Cache_Version(const CMsgSerializedSOCache_Cache_Version& from);
  CMsgSerializedSOCache_Cache_Version(CMsgSerializedSOCache_Cache_Version&& from) noexcept
    : CMsgSerializedSOCache_Cache_Version() {
    *this = ::std::move(from);
  }

  inline CMsgSerializedSOCache_Cache_Version& operator=(const CMsgSerializedSOCache_Cache_Version& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSerializedSOCache_Cache_Version& operator=(CMsgSerializedSOCache_Cache_Version&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSerializedSOCache_Cache_Version& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSerializedSOCache_Cache_Version* internal_default_instance() {
    return reinterpret_cast<const CMsgSerializedSOCache_Cache_Version*>(
               &_CMsgSerializedSOCache_Cache_Version_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CMsgSerializedSOCache_Cache_Version& a, CMsgSerializedSOCache_Cache_Version& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSerializedSOCache_Cache_Version* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSerializedSOCache_Cache_Version* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSerializedSOCache_Cache_Version* New() const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_Cache_Version>(nullptr);
  }

  CMsgSerializedSOCache_Cache_Version* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_Cache_Version>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSerializedSOCache_Cache_Version& from);
  void MergeFrom(const CMsgSerializedSOCache_Cache_Version& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSerializedSOCache_Cache_Version* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSerializedSOCache.Cache.Version";
  }
  protected:
  explicit CMsgSerializedSOCache_Cache_Version(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionFieldNumber = 2,
    kServiceFieldNumber = 1,
  };
  // optional uint64 version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 service = 1;
  bool has_service() const;
  private:
  bool _internal_has_service() const;
  public:
  void clear_service();
  ::PROTOBUF_NAMESPACE_ID::uint32 service() const;
  void set_service(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_service() const;
  void _internal_set_service(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.Cache.Version)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache_Cache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSerializedSOCache.Cache) */ {
 public:
  inline CMsgSerializedSOCache_Cache() : CMsgSerializedSOCache_Cache(nullptr) {}
  virtual ~CMsgSerializedSOCache_Cache();
  explicit constexpr CMsgSerializedSOCache_Cache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSerializedSOCache_Cache(const CMsgSerializedSOCache_Cache& from);
  CMsgSerializedSOCache_Cache(CMsgSerializedSOCache_Cache&& from) noexcept
    : CMsgSerializedSOCache_Cache() {
    *this = ::std::move(from);
  }

  inline CMsgSerializedSOCache_Cache& operator=(const CMsgSerializedSOCache_Cache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSerializedSOCache_Cache& operator=(CMsgSerializedSOCache_Cache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSerializedSOCache_Cache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSerializedSOCache_Cache* internal_default_instance() {
    return reinterpret_cast<const CMsgSerializedSOCache_Cache*>(
               &_CMsgSerializedSOCache_Cache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CMsgSerializedSOCache_Cache& a, CMsgSerializedSOCache_Cache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSerializedSOCache_Cache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSerializedSOCache_Cache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSerializedSOCache_Cache* New() const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_Cache>(nullptr);
  }

  CMsgSerializedSOCache_Cache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSerializedSOCache_Cache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSerializedSOCache_Cache& from);
  void MergeFrom(const CMsgSerializedSOCache_Cache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSerializedSOCache_Cache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSerializedSOCache.Cache";
  }
  protected:
  explicit CMsgSerializedSOCache_Cache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSerializedSOCache_Cache_Version Version;

  // accessors -------------------------------------------------------

  enum : int {
    kVersionsFieldNumber = 3,
    kTypeCachesFieldNumber = 4,
    kIdFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // repeated .CMsgSerializedSOCache.Cache.Version versions = 3;
  int versions_size() const;
  private:
  int _internal_versions_size() const;
  public:
  void clear_versions();
  ::CMsgSerializedSOCache_Cache_Version* mutable_versions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >*
      mutable_versions();
  private:
  const ::CMsgSerializedSOCache_Cache_Version& _internal_versions(int index) const;
  ::CMsgSerializedSOCache_Cache_Version* _internal_add_versions();
  public:
  const ::CMsgSerializedSOCache_Cache_Version& versions(int index) const;
  ::CMsgSerializedSOCache_Cache_Version* add_versions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >&
      versions() const;

  // repeated .CMsgSerializedSOCache.TypeCache type_caches = 4;
  int type_caches_size() const;
  private:
  int _internal_type_caches_size() const;
  public:
  void clear_type_caches();
  ::CMsgSerializedSOCache_TypeCache* mutable_type_caches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >*
      mutable_type_caches();
  private:
  const ::CMsgSerializedSOCache_TypeCache& _internal_type_caches(int index) const;
  ::CMsgSerializedSOCache_TypeCache* _internal_add_type_caches();
  public:
  const ::CMsgSerializedSOCache_TypeCache& type_caches(int index) const;
  ::CMsgSerializedSOCache_TypeCache* add_type_caches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >&
      type_caches() const;

  // optional uint64 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache.Cache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version > versions_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache > type_caches_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgSerializedSOCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSerializedSOCache) */ {
 public:
  inline CMsgSerializedSOCache() : CMsgSerializedSOCache(nullptr) {}
  virtual ~CMsgSerializedSOCache();
  explicit constexpr CMsgSerializedSOCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSerializedSOCache(const CMsgSerializedSOCache& from);
  CMsgSerializedSOCache(CMsgSerializedSOCache&& from) noexcept
    : CMsgSerializedSOCache() {
    *this = ::std::move(from);
  }

  inline CMsgSerializedSOCache& operator=(const CMsgSerializedSOCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSerializedSOCache& operator=(CMsgSerializedSOCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSerializedSOCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSerializedSOCache* internal_default_instance() {
    return reinterpret_cast<const CMsgSerializedSOCache*>(
               &_CMsgSerializedSOCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CMsgSerializedSOCache& a, CMsgSerializedSOCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSerializedSOCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSerializedSOCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSerializedSOCache* New() const final {
    return CreateMaybeMessage<CMsgSerializedSOCache>(nullptr);
  }

  CMsgSerializedSOCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSerializedSOCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSerializedSOCache& from);
  void MergeFrom(const CMsgSerializedSOCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSerializedSOCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSerializedSOCache";
  }
  protected:
  explicit CMsgSerializedSOCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSerializedSOCache_TypeCache TypeCache;
  typedef CMsgSerializedSOCache_Cache Cache;

  // accessors -------------------------------------------------------

  enum : int {
    kCachesFieldNumber = 2,
    kFileVersionFieldNumber = 1,
    kGcSocacheFileVersionFieldNumber = 3,
  };
  // repeated .CMsgSerializedSOCache.Cache caches = 2;
  int caches_size() const;
  private:
  int _internal_caches_size() const;
  public:
  void clear_caches();
  ::CMsgSerializedSOCache_Cache* mutable_caches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >*
      mutable_caches();
  private:
  const ::CMsgSerializedSOCache_Cache& _internal_caches(int index) const;
  ::CMsgSerializedSOCache_Cache* _internal_add_caches();
  public:
  const ::CMsgSerializedSOCache_Cache& caches(int index) const;
  ::CMsgSerializedSOCache_Cache* add_caches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >&
      caches() const;

  // optional uint32 file_version = 1;
  bool has_file_version() const;
  private:
  bool _internal_has_file_version() const;
  public:
  void clear_file_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 file_version() const;
  void set_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_file_version() const;
  void _internal_set_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gc_socache_file_version = 3;
  bool has_gc_socache_file_version() const;
  private:
  bool _internal_has_gc_socache_file_version() const;
  public:
  void clear_gc_socache_file_version();
  ::PROTOBUF_NAMESPACE_ID::uint32 gc_socache_file_version() const;
  void set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gc_socache_file_version() const;
  void _internal_set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSerializedSOCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache > caches_;
  ::PROTOBUF_NAMESPACE_ID::uint32 file_version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gc_socache_file_version_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPollConvarRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPollConvarRequest) */ {
 public:
  inline CMsgGCToClientPollConvarRequest() : CMsgGCToClientPollConvarRequest(nullptr) {}
  virtual ~CMsgGCToClientPollConvarRequest();
  explicit constexpr CMsgGCToClientPollConvarRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPollConvarRequest(const CMsgGCToClientPollConvarRequest& from);
  CMsgGCToClientPollConvarRequest(CMsgGCToClientPollConvarRequest&& from) noexcept
    : CMsgGCToClientPollConvarRequest() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPollConvarRequest& operator=(const CMsgGCToClientPollConvarRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPollConvarRequest& operator=(CMsgGCToClientPollConvarRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientPollConvarRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPollConvarRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPollConvarRequest*>(
               &_CMsgGCToClientPollConvarRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CMsgGCToClientPollConvarRequest& a, CMsgGCToClientPollConvarRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPollConvarRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPollConvarRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPollConvarRequest* New() const final {
    return CreateMaybeMessage<CMsgGCToClientPollConvarRequest>(nullptr);
  }

  CMsgGCToClientPollConvarRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientPollConvarRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientPollConvarRequest& from);
  void MergeFrom(const CMsgGCToClientPollConvarRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPollConvarRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPollConvarRequest";
  }
  protected:
  explicit CMsgGCToClientPollConvarRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConvarNameFieldNumber = 1,
    kPollIdFieldNumber = 2,
  };
  // optional string convar_name = 1;
  bool has_convar_name() const;
  private:
  bool _internal_has_convar_name() const;
  public:
  void clear_convar_name();
  const std::string& convar_name() const;
  void set_convar_name(const std::string& value);
  void set_convar_name(std::string&& value);
  void set_convar_name(const char* value);
  void set_convar_name(const char* value, size_t size);
  std::string* mutable_convar_name();
  std::string* release_convar_name();
  void set_allocated_convar_name(std::string* convar_name);
  private:
  const std::string& _internal_convar_name() const;
  void _internal_set_convar_name(const std::string& value);
  std::string* _internal_mutable_convar_name();
  public:

  // optional uint32 poll_id = 2;
  bool has_poll_id() const;
  private:
  bool _internal_has_poll_id() const;
  public:
  void clear_poll_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 poll_id() const;
  void set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poll_id() const;
  void _internal_set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPollConvarRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr convar_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poll_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPollConvarResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPollConvarResponse) */ {
 public:
  inline CMsgGCToClientPollConvarResponse() : CMsgGCToClientPollConvarResponse(nullptr) {}
  virtual ~CMsgGCToClientPollConvarResponse();
  explicit constexpr CMsgGCToClientPollConvarResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPollConvarResponse(const CMsgGCToClientPollConvarResponse& from);
  CMsgGCToClientPollConvarResponse(CMsgGCToClientPollConvarResponse&& from) noexcept
    : CMsgGCToClientPollConvarResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPollConvarResponse& operator=(const CMsgGCToClientPollConvarResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPollConvarResponse& operator=(CMsgGCToClientPollConvarResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientPollConvarResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPollConvarResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPollConvarResponse*>(
               &_CMsgGCToClientPollConvarResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CMsgGCToClientPollConvarResponse& a, CMsgGCToClientPollConvarResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPollConvarResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPollConvarResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPollConvarResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToClientPollConvarResponse>(nullptr);
  }

  CMsgGCToClientPollConvarResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientPollConvarResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientPollConvarResponse& from);
  void MergeFrom(const CMsgGCToClientPollConvarResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPollConvarResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPollConvarResponse";
  }
  protected:
  explicit CMsgGCToClientPollConvarResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConvarValueFieldNumber = 2,
    kPollIdFieldNumber = 1,
  };
  // optional string convar_value = 2;
  bool has_convar_value() const;
  private:
  bool _internal_has_convar_value() const;
  public:
  void clear_convar_value();
  const std::string& convar_value() const;
  void set_convar_value(const std::string& value);
  void set_convar_value(std::string&& value);
  void set_convar_value(const char* value);
  void set_convar_value(const char* value, size_t size);
  std::string* mutable_convar_value();
  std::string* release_convar_value();
  void set_allocated_convar_value(std::string* convar_value);
  private:
  const std::string& _internal_convar_value() const;
  void _internal_set_convar_value(const std::string& value);
  std::string* _internal_mutable_convar_value();
  public:

  // optional uint32 poll_id = 1;
  bool has_poll_id() const;
  private:
  bool _internal_has_poll_id() const;
  public:
  void clear_poll_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 poll_id() const;
  void set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_poll_id() const;
  void _internal_set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPollConvarResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr convar_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 poll_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CGCMsgCompressedMsgToClient PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CGCMsgCompressedMsgToClient) */ {
 public:
  inline CGCMsgCompressedMsgToClient() : CGCMsgCompressedMsgToClient(nullptr) {}
  virtual ~CGCMsgCompressedMsgToClient();
  explicit constexpr CGCMsgCompressedMsgToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CGCMsgCompressedMsgToClient(const CGCMsgCompressedMsgToClient& from);
  CGCMsgCompressedMsgToClient(CGCMsgCompressedMsgToClient&& from) noexcept
    : CGCMsgCompressedMsgToClient() {
    *this = ::std::move(from);
  }

  inline CGCMsgCompressedMsgToClient& operator=(const CGCMsgCompressedMsgToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CGCMsgCompressedMsgToClient& operator=(CGCMsgCompressedMsgToClient&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CGCMsgCompressedMsgToClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CGCMsgCompressedMsgToClient* internal_default_instance() {
    return reinterpret_cast<const CGCMsgCompressedMsgToClient*>(
               &_CGCMsgCompressedMsgToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CGCMsgCompressedMsgToClient& a, CGCMsgCompressedMsgToClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CGCMsgCompressedMsgToClient* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CGCMsgCompressedMsgToClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CGCMsgCompressedMsgToClient* New() const final {
    return CreateMaybeMessage<CGCMsgCompressedMsgToClient>(nullptr);
  }

  CGCMsgCompressedMsgToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CGCMsgCompressedMsgToClient>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CGCMsgCompressedMsgToClient& from);
  void MergeFrom(const CGCMsgCompressedMsgToClient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CGCMsgCompressedMsgToClient* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CGCMsgCompressedMsgToClient";
  }
  protected:
  explicit CGCMsgCompressedMsgToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCompressedMsgFieldNumber = 2,
    kMsgIdFieldNumber = 1,
  };
  // optional bytes compressed_msg = 2;
  bool has_compressed_msg() const;
  private:
  bool _internal_has_compressed_msg() const;
  public:
  void clear_compressed_msg();
  const std::string& compressed_msg() const;
  void set_compressed_msg(const std::string& value);
  void set_compressed_msg(std::string&& value);
  void set_compressed_msg(const char* value);
  void set_compressed_msg(const void* value, size_t size);
  std::string* mutable_compressed_msg();
  std::string* release_compressed_msg();
  void set_allocated_compressed_msg(std::string* compressed_msg);
  private:
  const std::string& _internal_compressed_msg() const;
  void _internal_set_compressed_msg(const std::string& value);
  std::string* _internal_mutable_compressed_msg();
  public:

  // optional uint32 msg_id = 1;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_id() const;
  void set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msg_id() const;
  void _internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CGCMsgCompressedMsgToClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr compressed_msg_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterBroadcastMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterBroadcastMessage) */ {
 public:
  inline CMsgGCToGCMasterBroadcastMessage() : CMsgGCToGCMasterBroadcastMessage(nullptr) {}
  virtual ~CMsgGCToGCMasterBroadcastMessage();
  explicit constexpr CMsgGCToGCMasterBroadcastMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterBroadcastMessage(const CMsgGCToGCMasterBroadcastMessage& from);
  CMsgGCToGCMasterBroadcastMessage(CMsgGCToGCMasterBroadcastMessage&& from) noexcept
    : CMsgGCToGCMasterBroadcastMessage() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterBroadcastMessage& operator=(const CMsgGCToGCMasterBroadcastMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterBroadcastMessage& operator=(CMsgGCToGCMasterBroadcastMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterBroadcastMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterBroadcastMessage* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterBroadcastMessage*>(
               &_CMsgGCToGCMasterBroadcastMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CMsgGCToGCMasterBroadcastMessage& a, CMsgGCToGCMasterBroadcastMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterBroadcastMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterBroadcastMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterBroadcastMessage* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterBroadcastMessage>(nullptr);
  }

  CMsgGCToGCMasterBroadcastMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterBroadcastMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterBroadcastMessage& from);
  void MergeFrom(const CMsgGCToGCMasterBroadcastMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterBroadcastMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterBroadcastMessage";
  }
  protected:
  explicit CMsgGCToGCMasterBroadcastMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMsgDataFieldNumber = 5,
    kUsersPerSecondFieldNumber = 1,
    kSendToUsersFieldNumber = 2,
    kSendToServersFieldNumber = 3,
    kMsgIdFieldNumber = 4,
  };
  // optional bytes msg_data = 5;
  bool has_msg_data() const;
  private:
  bool _internal_has_msg_data() const;
  public:
  void clear_msg_data();
  const std::string& msg_data() const;
  void set_msg_data(const std::string& value);
  void set_msg_data(std::string&& value);
  void set_msg_data(const char* value);
  void set_msg_data(const void* value, size_t size);
  std::string* mutable_msg_data();
  std::string* release_msg_data();
  void set_allocated_msg_data(std::string* msg_data);
  private:
  const std::string& _internal_msg_data() const;
  void _internal_set_msg_data(const std::string& value);
  std::string* _internal_mutable_msg_data();
  public:

  // optional uint32 users_per_second = 1;
  bool has_users_per_second() const;
  private:
  bool _internal_has_users_per_second() const;
  public:
  void clear_users_per_second();
  ::PROTOBUF_NAMESPACE_ID::uint32 users_per_second() const;
  void set_users_per_second(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_users_per_second() const;
  void _internal_set_users_per_second(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool send_to_users = 2;
  bool has_send_to_users() const;
  private:
  bool _internal_has_send_to_users() const;
  public:
  void clear_send_to_users();
  bool send_to_users() const;
  void set_send_to_users(bool value);
  private:
  bool _internal_send_to_users() const;
  void _internal_set_send_to_users(bool value);
  public:

  // optional bool send_to_servers = 3;
  bool has_send_to_servers() const;
  private:
  bool _internal_has_send_to_servers() const;
  public:
  void clear_send_to_servers();
  bool send_to_servers() const;
  void set_send_to_servers(bool value);
  private:
  bool _internal_send_to_servers() const;
  void _internal_set_send_to_servers(bool value);
  public:

  // optional uint32 msg_id = 4;
  bool has_msg_id() const;
  private:
  bool _internal_has_msg_id() const;
  public:
  void clear_msg_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_id() const;
  void set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_msg_id() const;
  void _internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterBroadcastMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr msg_data_;
  ::PROTOBUF_NAMESPACE_ID::uint32 users_per_second_;
  bool send_to_users_;
  bool send_to_servers_;
  ::PROTOBUF_NAMESPACE_ID::uint32 msg_id_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterSubscribeToCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterSubscribeToCache) */ {
 public:
  inline CMsgGCToGCMasterSubscribeToCache() : CMsgGCToGCMasterSubscribeToCache(nullptr) {}
  virtual ~CMsgGCToGCMasterSubscribeToCache();
  explicit constexpr CMsgGCToGCMasterSubscribeToCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterSubscribeToCache(const CMsgGCToGCMasterSubscribeToCache& from);
  CMsgGCToGCMasterSubscribeToCache(CMsgGCToGCMasterSubscribeToCache&& from) noexcept
    : CMsgGCToGCMasterSubscribeToCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterSubscribeToCache& operator=(const CMsgGCToGCMasterSubscribeToCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterSubscribeToCache& operator=(CMsgGCToGCMasterSubscribeToCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterSubscribeToCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterSubscribeToCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterSubscribeToCache*>(
               &_CMsgGCToGCMasterSubscribeToCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CMsgGCToGCMasterSubscribeToCache& a, CMsgGCToGCMasterSubscribeToCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterSubscribeToCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterSubscribeToCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterSubscribeToCache* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCache>(nullptr);
  }

  CMsgGCToGCMasterSubscribeToCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterSubscribeToCache& from);
  void MergeFrom(const CMsgGCToGCMasterSubscribeToCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterSubscribeToCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterSubscribeToCache";
  }
  protected:
  explicit CMsgGCToGCMasterSubscribeToCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdsFieldNumber = 3,
    kSteamIdsFieldNumber = 4,
    kSoidIdFieldNumber = 2,
    kSoidTypeFieldNumber = 1,
  };
  // repeated uint32 account_ids = 3;
  int account_ids_size() const;
  private:
  int _internal_account_ids_size() const;
  public:
  void clear_account_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_account_ids() const;
  void _internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_account_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      account_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_account_ids();

  // repeated fixed64 steam_ids = 4;
  int steam_ids_size() const;
  private:
  int _internal_steam_ids_size() const;
  public:
  void clear_steam_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steam_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steam_ids() const;
  void _internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steam_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_ids(int index) const;
  void set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steam_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steam_ids();

  // optional fixed64 soid_id = 2;
  bool has_soid_id() const;
  private:
  bool _internal_has_soid_id() const;
  public:
  void clear_soid_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id() const;
  void set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_soid_id() const;
  void _internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 soid_type = 1;
  bool has_soid_type() const;
  private:
  bool _internal_has_soid_type() const;
  public:
  void clear_soid_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type() const;
  void set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soid_type() const;
  void _internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterSubscribeToCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > account_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steam_ids_;
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterSubscribeToCacheResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterSubscribeToCacheResponse) */ {
 public:
  inline CMsgGCToGCMasterSubscribeToCacheResponse() : CMsgGCToGCMasterSubscribeToCacheResponse(nullptr) {}
  virtual ~CMsgGCToGCMasterSubscribeToCacheResponse();
  explicit constexpr CMsgGCToGCMasterSubscribeToCacheResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterSubscribeToCacheResponse(const CMsgGCToGCMasterSubscribeToCacheResponse& from);
  CMsgGCToGCMasterSubscribeToCacheResponse(CMsgGCToGCMasterSubscribeToCacheResponse&& from) noexcept
    : CMsgGCToGCMasterSubscribeToCacheResponse() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterSubscribeToCacheResponse& operator=(const CMsgGCToGCMasterSubscribeToCacheResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterSubscribeToCacheResponse& operator=(CMsgGCToGCMasterSubscribeToCacheResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterSubscribeToCacheResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterSubscribeToCacheResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterSubscribeToCacheResponse*>(
               &_CMsgGCToGCMasterSubscribeToCacheResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CMsgGCToGCMasterSubscribeToCacheResponse& a, CMsgGCToGCMasterSubscribeToCacheResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterSubscribeToCacheResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterSubscribeToCacheResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterSubscribeToCacheResponse* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCacheResponse>(nullptr);
  }

  CMsgGCToGCMasterSubscribeToCacheResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCacheResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterSubscribeToCacheResponse& from);
  void MergeFrom(const CMsgGCToGCMasterSubscribeToCacheResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterSubscribeToCacheResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterSubscribeToCacheResponse";
  }
  protected:
  explicit CMsgGCToGCMasterSubscribeToCacheResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterSubscribeToCacheResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterSubscribeToCacheAsync PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterSubscribeToCacheAsync) */ {
 public:
  inline CMsgGCToGCMasterSubscribeToCacheAsync() : CMsgGCToGCMasterSubscribeToCacheAsync(nullptr) {}
  virtual ~CMsgGCToGCMasterSubscribeToCacheAsync();
  explicit constexpr CMsgGCToGCMasterSubscribeToCacheAsync(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterSubscribeToCacheAsync(const CMsgGCToGCMasterSubscribeToCacheAsync& from);
  CMsgGCToGCMasterSubscribeToCacheAsync(CMsgGCToGCMasterSubscribeToCacheAsync&& from) noexcept
    : CMsgGCToGCMasterSubscribeToCacheAsync() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterSubscribeToCacheAsync& operator=(const CMsgGCToGCMasterSubscribeToCacheAsync& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterSubscribeToCacheAsync& operator=(CMsgGCToGCMasterSubscribeToCacheAsync&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterSubscribeToCacheAsync& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterSubscribeToCacheAsync* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterSubscribeToCacheAsync*>(
               &_CMsgGCToGCMasterSubscribeToCacheAsync_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CMsgGCToGCMasterSubscribeToCacheAsync& a, CMsgGCToGCMasterSubscribeToCacheAsync& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterSubscribeToCacheAsync* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterSubscribeToCacheAsync* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterSubscribeToCacheAsync* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCacheAsync>(nullptr);
  }

  CMsgGCToGCMasterSubscribeToCacheAsync* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterSubscribeToCacheAsync>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterSubscribeToCacheAsync& from);
  void MergeFrom(const CMsgGCToGCMasterSubscribeToCacheAsync& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterSubscribeToCacheAsync* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterSubscribeToCacheAsync";
  }
  protected:
  explicit CMsgGCToGCMasterSubscribeToCacheAsync(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscribeMsgFieldNumber = 1,
  };
  // optional .CMsgGCToGCMasterSubscribeToCache subscribe_msg = 1;
  bool has_subscribe_msg() const;
  private:
  bool _internal_has_subscribe_msg() const;
  public:
  void clear_subscribe_msg();
  const ::CMsgGCToGCMasterSubscribeToCache& subscribe_msg() const;
  ::CMsgGCToGCMasterSubscribeToCache* release_subscribe_msg();
  ::CMsgGCToGCMasterSubscribeToCache* mutable_subscribe_msg();
  void set_allocated_subscribe_msg(::CMsgGCToGCMasterSubscribeToCache* subscribe_msg);
  private:
  const ::CMsgGCToGCMasterSubscribeToCache& _internal_subscribe_msg() const;
  ::CMsgGCToGCMasterSubscribeToCache* _internal_mutable_subscribe_msg();
  public:
  void unsafe_arena_set_allocated_subscribe_msg(
      ::CMsgGCToGCMasterSubscribeToCache* subscribe_msg);
  ::CMsgGCToGCMasterSubscribeToCache* unsafe_arena_release_subscribe_msg();

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterSubscribeToCacheAsync)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgGCToGCMasterSubscribeToCache* subscribe_msg_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterUnsubscribeFromCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterUnsubscribeFromCache) */ {
 public:
  inline CMsgGCToGCMasterUnsubscribeFromCache() : CMsgGCToGCMasterUnsubscribeFromCache(nullptr) {}
  virtual ~CMsgGCToGCMasterUnsubscribeFromCache();
  explicit constexpr CMsgGCToGCMasterUnsubscribeFromCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterUnsubscribeFromCache(const CMsgGCToGCMasterUnsubscribeFromCache& from);
  CMsgGCToGCMasterUnsubscribeFromCache(CMsgGCToGCMasterUnsubscribeFromCache&& from) noexcept
    : CMsgGCToGCMasterUnsubscribeFromCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterUnsubscribeFromCache& operator=(const CMsgGCToGCMasterUnsubscribeFromCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterUnsubscribeFromCache& operator=(CMsgGCToGCMasterUnsubscribeFromCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterUnsubscribeFromCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterUnsubscribeFromCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterUnsubscribeFromCache*>(
               &_CMsgGCToGCMasterUnsubscribeFromCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CMsgGCToGCMasterUnsubscribeFromCache& a, CMsgGCToGCMasterUnsubscribeFromCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterUnsubscribeFromCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterUnsubscribeFromCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterUnsubscribeFromCache* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterUnsubscribeFromCache>(nullptr);
  }

  CMsgGCToGCMasterUnsubscribeFromCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterUnsubscribeFromCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterUnsubscribeFromCache& from);
  void MergeFrom(const CMsgGCToGCMasterUnsubscribeFromCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterUnsubscribeFromCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterUnsubscribeFromCache";
  }
  protected:
  explicit CMsgGCToGCMasterUnsubscribeFromCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdsFieldNumber = 3,
    kSteamIdsFieldNumber = 4,
    kSoidIdFieldNumber = 2,
    kSoidTypeFieldNumber = 1,
  };
  // repeated uint32 account_ids = 3;
  int account_ids_size() const;
  private:
  int _internal_account_ids_size() const;
  public:
  void clear_account_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_account_ids() const;
  void _internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_account_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      account_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_account_ids();

  // repeated fixed64 steam_ids = 4;
  int steam_ids_size() const;
  private:
  int _internal_steam_ids_size() const;
  public:
  void clear_steam_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_steam_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_steam_ids() const;
  void _internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_steam_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 steam_ids(int index) const;
  void set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      steam_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_steam_ids();

  // optional fixed64 soid_id = 2;
  bool has_soid_id() const;
  private:
  bool _internal_has_soid_id() const;
  public:
  void clear_soid_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id() const;
  void set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_soid_id() const;
  void _internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 soid_type = 1;
  bool has_soid_type() const;
  private:
  bool _internal_has_soid_type() const;
  public:
  void clear_soid_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type() const;
  void set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soid_type() const;
  void _internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterUnsubscribeFromCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > account_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > steam_ids_;
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToGCMasterDestroyCache PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToGCMasterDestroyCache) */ {
 public:
  inline CMsgGCToGCMasterDestroyCache() : CMsgGCToGCMasterDestroyCache(nullptr) {}
  virtual ~CMsgGCToGCMasterDestroyCache();
  explicit constexpr CMsgGCToGCMasterDestroyCache(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToGCMasterDestroyCache(const CMsgGCToGCMasterDestroyCache& from);
  CMsgGCToGCMasterDestroyCache(CMsgGCToGCMasterDestroyCache&& from) noexcept
    : CMsgGCToGCMasterDestroyCache() {
    *this = ::std::move(from);
  }

  inline CMsgGCToGCMasterDestroyCache& operator=(const CMsgGCToGCMasterDestroyCache& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToGCMasterDestroyCache& operator=(CMsgGCToGCMasterDestroyCache&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToGCMasterDestroyCache& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToGCMasterDestroyCache* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCMasterDestroyCache*>(
               &_CMsgGCToGCMasterDestroyCache_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CMsgGCToGCMasterDestroyCache& a, CMsgGCToGCMasterDestroyCache& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToGCMasterDestroyCache* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToGCMasterDestroyCache* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToGCMasterDestroyCache* New() const final {
    return CreateMaybeMessage<CMsgGCToGCMasterDestroyCache>(nullptr);
  }

  CMsgGCToGCMasterDestroyCache* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToGCMasterDestroyCache>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToGCMasterDestroyCache& from);
  void MergeFrom(const CMsgGCToGCMasterDestroyCache& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToGCMasterDestroyCache* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToGCMasterDestroyCache";
  }
  protected:
  explicit CMsgGCToGCMasterDestroyCache(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gcsdk_5fgcmessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSoidIdFieldNumber = 2,
    kSoidTypeFieldNumber = 1,
  };
  // optional fixed64 soid_id = 2;
  bool has_soid_id() const;
  private:
  bool _internal_has_soid_id() const;
  public:
  void clear_soid_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id() const;
  void set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_soid_id() const;
  void _internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 soid_type = 1;
  bool has_soid_type() const;
  private:
  bool _internal_has_soid_type() const;
  public:
  void clear_soid_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type() const;
  void set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soid_type() const;
  void _internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgGCToGCMasterDestroyCache)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 soid_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soid_type_;
  friend struct ::TableStruct_gcsdk_5fgcmessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CExtraMsgBlock

// optional uint32 msg_type = 1;
inline bool CExtraMsgBlock::_internal_has_msg_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CExtraMsgBlock::has_msg_type() const {
  return _internal_has_msg_type();
}
inline void CExtraMsgBlock::clear_msg_type() {
  msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CExtraMsgBlock::_internal_msg_type() const {
  return msg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CExtraMsgBlock::msg_type() const {
  // @@protoc_insertion_point(field_get:CExtraMsgBlock.msg_type)
  return _internal_msg_type();
}
inline void CExtraMsgBlock::_internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_type_ = value;
}
inline void CExtraMsgBlock::set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:CExtraMsgBlock.msg_type)
}

// optional bytes contents = 2;
inline bool CExtraMsgBlock::_internal_has_contents() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CExtraMsgBlock::has_contents() const {
  return _internal_has_contents();
}
inline void CExtraMsgBlock::clear_contents() {
  contents_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CExtraMsgBlock::contents() const {
  // @@protoc_insertion_point(field_get:CExtraMsgBlock.contents)
  return _internal_contents();
}
inline void CExtraMsgBlock::set_contents(const std::string& value) {
  _internal_set_contents(value);
  // @@protoc_insertion_point(field_set:CExtraMsgBlock.contents)
}
inline std::string* CExtraMsgBlock::mutable_contents() {
  // @@protoc_insertion_point(field_mutable:CExtraMsgBlock.contents)
  return _internal_mutable_contents();
}
inline const std::string& CExtraMsgBlock::_internal_contents() const {
  return contents_.Get();
}
inline void CExtraMsgBlock::_internal_set_contents(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CExtraMsgBlock::set_contents(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  contents_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CExtraMsgBlock.contents)
}
inline void CExtraMsgBlock::set_contents(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CExtraMsgBlock.contents)
}
inline void CExtraMsgBlock::set_contents(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  contents_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CExtraMsgBlock.contents)
}
inline std::string* CExtraMsgBlock::_internal_mutable_contents() {
  _has_bits_[0] |= 0x00000001u;
  return contents_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CExtraMsgBlock::release_contents() {
  // @@protoc_insertion_point(field_release:CExtraMsgBlock.contents)
  if (!_internal_has_contents()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return contents_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CExtraMsgBlock::set_allocated_contents(std::string* contents) {
  if (contents != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  contents_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), contents,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CExtraMsgBlock.contents)
}

// optional uint64 msg_key = 3;
inline bool CExtraMsgBlock::_internal_has_msg_key() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CExtraMsgBlock::has_msg_key() const {
  return _internal_has_msg_key();
}
inline void CExtraMsgBlock::clear_msg_key() {
  msg_key_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CExtraMsgBlock::_internal_msg_key() const {
  return msg_key_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CExtraMsgBlock::msg_key() const {
  // @@protoc_insertion_point(field_get:CExtraMsgBlock.msg_key)
  return _internal_msg_key();
}
inline void CExtraMsgBlock::_internal_set_msg_key(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  msg_key_ = value;
}
inline void CExtraMsgBlock::set_msg_key(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_msg_key(value);
  // @@protoc_insertion_point(field_set:CExtraMsgBlock.msg_key)
}

// optional bool is_compressed = 4;
inline bool CExtraMsgBlock::_internal_has_is_compressed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CExtraMsgBlock::has_is_compressed() const {
  return _internal_has_is_compressed();
}
inline void CExtraMsgBlock::clear_is_compressed() {
  is_compressed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CExtraMsgBlock::_internal_is_compressed() const {
  return is_compressed_;
}
inline bool CExtraMsgBlock::is_compressed() const {
  // @@protoc_insertion_point(field_get:CExtraMsgBlock.is_compressed)
  return _internal_is_compressed();
}
inline void CExtraMsgBlock::_internal_set_is_compressed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  is_compressed_ = value;
}
inline void CExtraMsgBlock::set_is_compressed(bool value) {
  _internal_set_is_compressed(value);
  // @@protoc_insertion_point(field_set:CExtraMsgBlock.is_compressed)
}

// -------------------------------------------------------------------

// CMsgGCAssertJobData

// optional string message_type = 1;
inline bool CMsgGCAssertJobData::_internal_has_message_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCAssertJobData::has_message_type() const {
  return _internal_has_message_type();
}
inline void CMsgGCAssertJobData::clear_message_type() {
  message_type_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCAssertJobData::message_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCAssertJobData.message_type)
  return _internal_message_type();
}
inline void CMsgGCAssertJobData::set_message_type(const std::string& value) {
  _internal_set_message_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCAssertJobData.message_type)
}
inline std::string* CMsgGCAssertJobData::mutable_message_type() {
  // @@protoc_insertion_point(field_mutable:CMsgGCAssertJobData.message_type)
  return _internal_mutable_message_type();
}
inline const std::string& CMsgGCAssertJobData::_internal_message_type() const {
  return message_type_.Get();
}
inline void CMsgGCAssertJobData::_internal_set_message_type(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCAssertJobData::set_message_type(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_type_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCAssertJobData.message_type)
}
inline void CMsgGCAssertJobData::set_message_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCAssertJobData.message_type)
}
inline void CMsgGCAssertJobData::set_message_type(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCAssertJobData.message_type)
}
inline std::string* CMsgGCAssertJobData::_internal_mutable_message_type() {
  _has_bits_[0] |= 0x00000001u;
  return message_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCAssertJobData::release_message_type() {
  // @@protoc_insertion_point(field_release:CMsgGCAssertJobData.message_type)
  if (!_internal_has_message_type()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_type_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCAssertJobData::set_allocated_message_type(std::string* message_type) {
  if (message_type != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_type,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCAssertJobData.message_type)
}

// optional bytes message_data = 2;
inline bool CMsgGCAssertJobData::_internal_has_message_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCAssertJobData::has_message_data() const {
  return _internal_has_message_data();
}
inline void CMsgGCAssertJobData::clear_message_data() {
  message_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgGCAssertJobData::message_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCAssertJobData.message_data)
  return _internal_message_data();
}
inline void CMsgGCAssertJobData::set_message_data(const std::string& value) {
  _internal_set_message_data(value);
  // @@protoc_insertion_point(field_set:CMsgGCAssertJobData.message_data)
}
inline std::string* CMsgGCAssertJobData::mutable_message_data() {
  // @@protoc_insertion_point(field_mutable:CMsgGCAssertJobData.message_data)
  return _internal_mutable_message_data();
}
inline const std::string& CMsgGCAssertJobData::_internal_message_data() const {
  return message_data_.Get();
}
inline void CMsgGCAssertJobData::_internal_set_message_data(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  message_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCAssertJobData::set_message_data(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  message_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCAssertJobData.message_data)
}
inline void CMsgGCAssertJobData::set_message_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  message_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCAssertJobData.message_data)
}
inline void CMsgGCAssertJobData::set_message_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  message_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCAssertJobData.message_data)
}
inline std::string* CMsgGCAssertJobData::_internal_mutable_message_data() {
  _has_bits_[0] |= 0x00000002u;
  return message_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCAssertJobData::release_message_data() {
  // @@protoc_insertion_point(field_release:CMsgGCAssertJobData.message_data)
  if (!_internal_has_message_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return message_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCAssertJobData::set_allocated_message_data(std::string* message_data) {
  if (message_data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  message_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCAssertJobData.message_data)
}

// -------------------------------------------------------------------

// CMsgGCConCommand

// optional string command = 1;
inline bool CMsgGCConCommand::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCConCommand::has_command() const {
  return _internal_has_command();
}
inline void CMsgGCConCommand::clear_command() {
  command_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCConCommand::command() const {
  // @@protoc_insertion_point(field_get:CMsgGCConCommand.command)
  return _internal_command();
}
inline void CMsgGCConCommand::set_command(const std::string& value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:CMsgGCConCommand.command)
}
inline std::string* CMsgGCConCommand::mutable_command() {
  // @@protoc_insertion_point(field_mutable:CMsgGCConCommand.command)
  return _internal_mutable_command();
}
inline const std::string& CMsgGCConCommand::_internal_command() const {
  return command_.Get();
}
inline void CMsgGCConCommand::_internal_set_command(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCConCommand::set_command(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  command_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCConCommand.command)
}
inline void CMsgGCConCommand::set_command(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCConCommand.command)
}
inline void CMsgGCConCommand::set_command(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  command_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCConCommand.command)
}
inline std::string* CMsgGCConCommand::_internal_mutable_command() {
  _has_bits_[0] |= 0x00000001u;
  return command_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCConCommand::release_command() {
  // @@protoc_insertion_point(field_release:CMsgGCConCommand.command)
  if (!_internal_has_command()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return command_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCConCommand::set_allocated_command(std::string* command) {
  if (command != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  command_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), command,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCConCommand.command)
}

// -------------------------------------------------------------------

// CMsgSDOAssert_Request

// repeated uint64 key = 1;
inline int CMsgSDOAssert_Request::_internal_key_size() const {
  return key_.size();
}
inline int CMsgSDOAssert_Request::key_size() const {
  return _internal_key_size();
}
inline void CMsgSDOAssert_Request::clear_key() {
  key_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSDOAssert_Request::_internal_key(int index) const {
  return key_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSDOAssert_Request::key(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSDOAssert.Request.key)
  return _internal_key(index);
}
inline void CMsgSDOAssert_Request::set_key(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  key_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSDOAssert.Request.key)
}
inline void CMsgSDOAssert_Request::_internal_add_key(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  key_.Add(value);
}
inline void CMsgSDOAssert_Request::add_key(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_key(value);
  // @@protoc_insertion_point(field_add:CMsgSDOAssert.Request.key)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgSDOAssert_Request::_internal_key() const {
  return key_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgSDOAssert_Request::key() const {
  // @@protoc_insertion_point(field_list:CMsgSDOAssert.Request.key)
  return _internal_key();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgSDOAssert_Request::_internal_mutable_key() {
  return &key_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgSDOAssert_Request::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSDOAssert.Request.key)
  return _internal_mutable_key();
}

// optional string requesting_job = 2;
inline bool CMsgSDOAssert_Request::_internal_has_requesting_job() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSDOAssert_Request::has_requesting_job() const {
  return _internal_has_requesting_job();
}
inline void CMsgSDOAssert_Request::clear_requesting_job() {
  requesting_job_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSDOAssert_Request::requesting_job() const {
  // @@protoc_insertion_point(field_get:CMsgSDOAssert.Request.requesting_job)
  return _internal_requesting_job();
}
inline void CMsgSDOAssert_Request::set_requesting_job(const std::string& value) {
  _internal_set_requesting_job(value);
  // @@protoc_insertion_point(field_set:CMsgSDOAssert.Request.requesting_job)
}
inline std::string* CMsgSDOAssert_Request::mutable_requesting_job() {
  // @@protoc_insertion_point(field_mutable:CMsgSDOAssert.Request.requesting_job)
  return _internal_mutable_requesting_job();
}
inline const std::string& CMsgSDOAssert_Request::_internal_requesting_job() const {
  return requesting_job_.Get();
}
inline void CMsgSDOAssert_Request::_internal_set_requesting_job(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  requesting_job_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSDOAssert_Request::set_requesting_job(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  requesting_job_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSDOAssert.Request.requesting_job)
}
inline void CMsgSDOAssert_Request::set_requesting_job(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  requesting_job_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSDOAssert.Request.requesting_job)
}
inline void CMsgSDOAssert_Request::set_requesting_job(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  requesting_job_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSDOAssert.Request.requesting_job)
}
inline std::string* CMsgSDOAssert_Request::_internal_mutable_requesting_job() {
  _has_bits_[0] |= 0x00000001u;
  return requesting_job_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSDOAssert_Request::release_requesting_job() {
  // @@protoc_insertion_point(field_release:CMsgSDOAssert.Request.requesting_job)
  if (!_internal_has_requesting_job()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return requesting_job_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSDOAssert_Request::set_allocated_requesting_job(std::string* requesting_job) {
  if (requesting_job != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  requesting_job_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), requesting_job,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSDOAssert.Request.requesting_job)
}

// -------------------------------------------------------------------

// CMsgSDOAssert

// optional int32 sdo_type = 1;
inline bool CMsgSDOAssert::_internal_has_sdo_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSDOAssert::has_sdo_type() const {
  return _internal_has_sdo_type();
}
inline void CMsgSDOAssert::clear_sdo_type() {
  sdo_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSDOAssert::_internal_sdo_type() const {
  return sdo_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSDOAssert::sdo_type() const {
  // @@protoc_insertion_point(field_get:CMsgSDOAssert.sdo_type)
  return _internal_sdo_type();
}
inline void CMsgSDOAssert::_internal_set_sdo_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  sdo_type_ = value;
}
inline void CMsgSDOAssert::set_sdo_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sdo_type(value);
  // @@protoc_insertion_point(field_set:CMsgSDOAssert.sdo_type)
}

// repeated .CMsgSDOAssert.Request requests = 2;
inline int CMsgSDOAssert::_internal_requests_size() const {
  return requests_.size();
}
inline int CMsgSDOAssert::requests_size() const {
  return _internal_requests_size();
}
inline void CMsgSDOAssert::clear_requests() {
  requests_.Clear();
}
inline ::CMsgSDOAssert_Request* CMsgSDOAssert::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSDOAssert.requests)
  return requests_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSDOAssert_Request >*
CMsgSDOAssert::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSDOAssert.requests)
  return &requests_;
}
inline const ::CMsgSDOAssert_Request& CMsgSDOAssert::_internal_requests(int index) const {
  return requests_.Get(index);
}
inline const ::CMsgSDOAssert_Request& CMsgSDOAssert::requests(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSDOAssert.requests)
  return _internal_requests(index);
}
inline ::CMsgSDOAssert_Request* CMsgSDOAssert::_internal_add_requests() {
  return requests_.Add();
}
inline ::CMsgSDOAssert_Request* CMsgSDOAssert::add_requests() {
  // @@protoc_insertion_point(field_add:CMsgSDOAssert.requests)
  return _internal_add_requests();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSDOAssert_Request >&
CMsgSDOAssert::requests() const {
  // @@protoc_insertion_point(field_list:CMsgSDOAssert.requests)
  return requests_;
}

// -------------------------------------------------------------------

// CMsgSHA1Digest

// required fixed64 block1 = 1;
inline bool CMsgSHA1Digest::_internal_has_block1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSHA1Digest::has_block1() const {
  return _internal_has_block1();
}
inline void CMsgSHA1Digest::clear_block1() {
  block1_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSHA1Digest::_internal_block1() const {
  return block1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSHA1Digest::block1() const {
  // @@protoc_insertion_point(field_get:CMsgSHA1Digest.block1)
  return _internal_block1();
}
inline void CMsgSHA1Digest::_internal_set_block1(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  block1_ = value;
}
inline void CMsgSHA1Digest::set_block1(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_block1(value);
  // @@protoc_insertion_point(field_set:CMsgSHA1Digest.block1)
}

// required fixed64 block2 = 2;
inline bool CMsgSHA1Digest::_internal_has_block2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSHA1Digest::has_block2() const {
  return _internal_has_block2();
}
inline void CMsgSHA1Digest::clear_block2() {
  block2_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSHA1Digest::_internal_block2() const {
  return block2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSHA1Digest::block2() const {
  // @@protoc_insertion_point(field_get:CMsgSHA1Digest.block2)
  return _internal_block2();
}
inline void CMsgSHA1Digest::_internal_set_block2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  block2_ = value;
}
inline void CMsgSHA1Digest::set_block2(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_block2(value);
  // @@protoc_insertion_point(field_set:CMsgSHA1Digest.block2)
}

// required fixed32 block3 = 3;
inline bool CMsgSHA1Digest::_internal_has_block3() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSHA1Digest::has_block3() const {
  return _internal_has_block3();
}
inline void CMsgSHA1Digest::clear_block3() {
  block3_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSHA1Digest::_internal_block3() const {
  return block3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSHA1Digest::block3() const {
  // @@protoc_insertion_point(field_get:CMsgSHA1Digest.block3)
  return _internal_block3();
}
inline void CMsgSHA1Digest::_internal_set_block3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  block3_ = value;
}
inline void CMsgSHA1Digest::set_block3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_block3(value);
  // @@protoc_insertion_point(field_set:CMsgSHA1Digest.block3)
}

// -------------------------------------------------------------------

// CMsgSOIDOwner

// optional uint32 type = 1;
inline bool CMsgSOIDOwner::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOIDOwner::has_type() const {
  return _internal_has_type();
}
inline void CMsgSOIDOwner::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOIDOwner::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOIDOwner::type() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.type)
  return _internal_type();
}
inline void CMsgSOIDOwner::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void CMsgSOIDOwner::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.type)
}

// optional uint64 id = 2;
inline bool CMsgSOIDOwner::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSOIDOwner::has_id() const {
  return _internal_has_id();
}
inline void CMsgSOIDOwner::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOIDOwner::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOIDOwner::id() const {
  // @@protoc_insertion_point(field_get:CMsgSOIDOwner.id)
  return _internal_id();
}
inline void CMsgSOIDOwner::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void CMsgSOIDOwner::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOIDOwner.id)
}

// -------------------------------------------------------------------

// CMsgSOSingleObject

// optional int32 type_id = 2;
inline bool CMsgSOSingleObject::_internal_has_type_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSOSingleObject::has_type_id() const {
  return _internal_has_type_id();
}
inline void CMsgSOSingleObject::clear_type_id() {
  type_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOSingleObject::_internal_type_id() const {
  return type_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOSingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.type_id)
  return _internal_type_id();
}
inline void CMsgSOSingleObject::_internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  type_id_ = value;
}
inline void CMsgSOSingleObject::set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.type_id)
}

// optional bytes object_data = 3;
inline bool CMsgSOSingleObject::_internal_has_object_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSOSingleObject::has_object_data() const {
  return _internal_has_object_data();
}
inline void CMsgSOSingleObject::clear_object_data() {
  object_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSOSingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.object_data)
  return _internal_object_data();
}
inline void CMsgSOSingleObject::set_object_data(const std::string& value) {
  _internal_set_object_data(value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.object_data)
}
inline std::string* CMsgSOSingleObject::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.object_data)
  return _internal_mutable_object_data();
}
inline const std::string& CMsgSOSingleObject::_internal_object_data() const {
  return object_data_.Get();
}
inline void CMsgSOSingleObject::_internal_set_object_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSOSingleObject::set_object_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOSingleObject.object_data)
}
inline void CMsgSOSingleObject::set_object_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSOSingleObject.object_data)
}
inline void CMsgSOSingleObject::set_object_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSOSingleObject.object_data)
}
inline std::string* CMsgSOSingleObject::_internal_mutable_object_data() {
  _has_bits_[0] |= 0x00000001u;
  return object_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSOSingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.object_data)
  if (!_internal_has_object_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return object_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSOSingleObject::set_allocated_object_data(std::string* object_data) {
  if (object_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  object_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), object_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.object_data)
}

// optional fixed64 version = 4;
inline bool CMsgSOSingleObject::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOSingleObject::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOSingleObject::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOSingleObject::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOSingleObject::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.version)
  return _internal_version();
}
inline void CMsgSOSingleObject::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  version_ = value;
}
inline void CMsgSOSingleObject::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.version)
}

// optional .CMsgSOIDOwner owner_soid = 5;
inline bool CMsgSOSingleObject::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOSingleObject::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOSingleObject::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgSOIDOwner& CMsgSOSingleObject::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOSingleObject::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOSingleObject::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOSingleObject.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::release_owner_soid() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOSingleObject.owner_soid)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000002u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOSingleObject::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOSingleObject.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOSingleObject::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOSingleObject.owner_soid)
}

// optional uint32 service_id = 6;
inline bool CMsgSOSingleObject::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgSOSingleObject::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOSingleObject::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOSingleObject::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOSingleObject::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOSingleObject.service_id)
  return _internal_service_id();
}
inline void CMsgSOSingleObject::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  service_id_ = value;
}
inline void CMsgSOSingleObject::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOSingleObject.service_id)
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects_SingleObject

// optional int32 type_id = 1;
inline bool CMsgSOMultipleObjects_SingleObject::_internal_has_type_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOMultipleObjects_SingleObject::has_type_id() const {
  return _internal_has_type_id();
}
inline void CMsgSOMultipleObjects_SingleObject::clear_type_id() {
  type_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOMultipleObjects_SingleObject::_internal_type_id() const {
  return type_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOMultipleObjects_SingleObject::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.type_id)
  return _internal_type_id();
}
inline void CMsgSOMultipleObjects_SingleObject::_internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_id_ = value;
}
inline void CMsgSOMultipleObjects_SingleObject::set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.type_id)
}

// optional bytes object_data = 2;
inline bool CMsgSOMultipleObjects_SingleObject::_internal_has_object_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSOMultipleObjects_SingleObject::has_object_data() const {
  return _internal_has_object_data();
}
inline void CMsgSOMultipleObjects_SingleObject::clear_object_data() {
  object_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSOMultipleObjects_SingleObject::object_data() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.SingleObject.object_data)
  return _internal_object_data();
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const std::string& value) {
  _internal_set_object_data(value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline std::string* CMsgSOMultipleObjects_SingleObject::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.SingleObject.object_data)
  return _internal_mutable_object_data();
}
inline const std::string& CMsgSOMultipleObjects_SingleObject::_internal_object_data() const {
  return object_data_.Get();
}
inline void CMsgSOMultipleObjects_SingleObject::_internal_set_object_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline void CMsgSOMultipleObjects_SingleObject::set_object_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  object_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSOMultipleObjects.SingleObject.object_data)
}
inline std::string* CMsgSOMultipleObjects_SingleObject::_internal_mutable_object_data() {
  _has_bits_[0] |= 0x00000001u;
  return object_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSOMultipleObjects_SingleObject::release_object_data() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.SingleObject.object_data)
  if (!_internal_has_object_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return object_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSOMultipleObjects_SingleObject::set_allocated_object_data(std::string* object_data) {
  if (object_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  object_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), object_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.SingleObject.object_data)
}

// -------------------------------------------------------------------

// CMsgSOMultipleObjects

// repeated .CMsgSOMultipleObjects.SingleObject objects_modified = 2;
inline int CMsgSOMultipleObjects::_internal_objects_modified_size() const {
  return objects_modified_.size();
}
inline int CMsgSOMultipleObjects::objects_modified_size() const {
  return _internal_objects_modified_size();
}
inline void CMsgSOMultipleObjects::clear_objects_modified() {
  objects_modified_.Clear();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_modified(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_modified() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOMultipleObjects.objects_modified)
  return &objects_modified_;
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::_internal_objects_modified(int index) const {
  return objects_modified_.Get(index);
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_modified(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.objects_modified)
  return _internal_objects_modified(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::_internal_add_objects_modified() {
  return objects_modified_.Add();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_modified() {
  // @@protoc_insertion_point(field_add:CMsgSOMultipleObjects.objects_modified)
  return _internal_add_objects_modified();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_modified() const {
  // @@protoc_insertion_point(field_list:CMsgSOMultipleObjects.objects_modified)
  return objects_modified_;
}

// optional fixed64 version = 3;
inline bool CMsgSOMultipleObjects::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOMultipleObjects::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOMultipleObjects::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOMultipleObjects::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOMultipleObjects::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.version)
  return _internal_version();
}
inline void CMsgSOMultipleObjects::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
}
inline void CMsgSOMultipleObjects::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.version)
}

// repeated .CMsgSOMultipleObjects.SingleObject objects_added = 4;
inline int CMsgSOMultipleObjects::_internal_objects_added_size() const {
  return objects_added_.size();
}
inline int CMsgSOMultipleObjects::objects_added_size() const {
  return _internal_objects_added_size();
}
inline void CMsgSOMultipleObjects::clear_objects_added() {
  objects_added_.Clear();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_added(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.objects_added)
  return objects_added_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_added() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOMultipleObjects.objects_added)
  return &objects_added_;
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::_internal_objects_added(int index) const {
  return objects_added_.Get(index);
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_added(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.objects_added)
  return _internal_objects_added(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::_internal_add_objects_added() {
  return objects_added_.Add();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_added() {
  // @@protoc_insertion_point(field_add:CMsgSOMultipleObjects.objects_added)
  return _internal_add_objects_added();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_added() const {
  // @@protoc_insertion_point(field_list:CMsgSOMultipleObjects.objects_added)
  return objects_added_;
}

// repeated .CMsgSOMultipleObjects.SingleObject objects_removed = 5;
inline int CMsgSOMultipleObjects::_internal_objects_removed_size() const {
  return objects_removed_.size();
}
inline int CMsgSOMultipleObjects::objects_removed_size() const {
  return _internal_objects_removed_size();
}
inline void CMsgSOMultipleObjects::clear_objects_removed() {
  objects_removed_.Clear();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::mutable_objects_removed(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.objects_removed)
  return objects_removed_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >*
CMsgSOMultipleObjects::mutable_objects_removed() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOMultipleObjects.objects_removed)
  return &objects_removed_;
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::_internal_objects_removed(int index) const {
  return objects_removed_.Get(index);
}
inline const ::CMsgSOMultipleObjects_SingleObject& CMsgSOMultipleObjects::objects_removed(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.objects_removed)
  return _internal_objects_removed(index);
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::_internal_add_objects_removed() {
  return objects_removed_.Add();
}
inline ::CMsgSOMultipleObjects_SingleObject* CMsgSOMultipleObjects::add_objects_removed() {
  // @@protoc_insertion_point(field_add:CMsgSOMultipleObjects.objects_removed)
  return _internal_add_objects_removed();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOMultipleObjects_SingleObject >&
CMsgSOMultipleObjects::objects_removed() const {
  // @@protoc_insertion_point(field_list:CMsgSOMultipleObjects.objects_removed)
  return objects_removed_;
}

// optional .CMsgSOIDOwner owner_soid = 6;
inline bool CMsgSOMultipleObjects::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOMultipleObjects::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOMultipleObjects::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOMultipleObjects::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOMultipleObjects::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOMultipleObjects::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOMultipleObjects.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOMultipleObjects.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOMultipleObjects::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOMultipleObjects.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOMultipleObjects::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOMultipleObjects.owner_soid)
}

// optional uint32 service_id = 7;
inline bool CMsgSOMultipleObjects::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOMultipleObjects::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOMultipleObjects::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOMultipleObjects::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOMultipleObjects::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOMultipleObjects.service_id)
  return _internal_service_id();
}
inline void CMsgSOMultipleObjects::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  service_id_ = value;
}
inline void CMsgSOMultipleObjects::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOMultipleObjects.service_id)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed_SubscribedType

// optional int32 type_id = 1;
inline bool CMsgSOCacheSubscribed_SubscribedType::_internal_has_type_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribed_SubscribedType::has_type_id() const {
  return _internal_has_type_id();
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_type_id() {
  type_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOCacheSubscribed_SubscribedType::_internal_type_id() const {
  return type_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSOCacheSubscribed_SubscribedType::type_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.type_id)
  return _internal_type_id();
}
inline void CMsgSOCacheSubscribed_SubscribedType::_internal_set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_id_ = value;
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_type_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.type_id)
}

// repeated bytes object_data = 2;
inline int CMsgSOCacheSubscribed_SubscribedType::_internal_object_data_size() const {
  return object_data_.size();
}
inline int CMsgSOCacheSubscribed_SubscribedType::object_data_size() const {
  return _internal_object_data_size();
}
inline void CMsgSOCacheSubscribed_SubscribedType::clear_object_data() {
  object_data_.Clear();
}
inline std::string* CMsgSOCacheSubscribed_SubscribedType::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return _internal_add_object_data();
}
inline const std::string& CMsgSOCacheSubscribed_SubscribedType::_internal_object_data(int index) const {
  return object_data_.Get(index);
}
inline const std::string& CMsgSOCacheSubscribed_SubscribedType::object_data(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return _internal_object_data(index);
}
inline std::string* CMsgSOCacheSubscribed_SubscribedType::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.object_data)
  object_data_.Mutable(index)->assign(value);
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.SubscribedType.object_data)
  object_data_.Mutable(index)->assign(std::move(value));
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline std::string* CMsgSOCacheSubscribed_SubscribedType::_internal_add_object_data() {
  return object_data_.Add();
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(std::string&& value) {
  object_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline void CMsgSOCacheSubscribed_SubscribedType::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSOCacheSubscribed.SubscribedType.object_data)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgSOCacheSubscribed_SubscribedType::object_data() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return object_data_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgSOCacheSubscribed_SubscribedType::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.SubscribedType.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribed

// repeated .CMsgSOCacheSubscribed.SubscribedType objects = 2;
inline int CMsgSOCacheSubscribed::_internal_objects_size() const {
  return objects_.size();
}
inline int CMsgSOCacheSubscribed::objects_size() const {
  return _internal_objects_size();
}
inline void CMsgSOCacheSubscribed::clear_objects() {
  objects_.Clear();
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.objects)
  return objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >*
CMsgSOCacheSubscribed::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.objects)
  return &objects_;
}
inline const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const ::CMsgSOCacheSubscribed_SubscribedType& CMsgSOCacheSubscribed::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.objects)
  return _internal_objects(index);
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::_internal_add_objects() {
  return objects_.Add();
}
inline ::CMsgSOCacheSubscribed_SubscribedType* CMsgSOCacheSubscribed::add_objects() {
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.objects)
  return _internal_add_objects();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed_SubscribedType >&
CMsgSOCacheSubscribed::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.objects)
  return objects_;
}

// optional fixed64 version = 3;
inline bool CMsgSOCacheSubscribed::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribed::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOCacheSubscribed::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribed::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribed::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.version)
  return _internal_version();
}
inline void CMsgSOCacheSubscribed::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
}
inline void CMsgSOCacheSubscribed::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.version)
}

// optional .CMsgSOIDOwner owner_soid = 4;
inline bool CMsgSOCacheSubscribed::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheSubscribed::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOCacheSubscribed::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribed::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribed::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOCacheSubscribed::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheSubscribed.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscribed.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribed::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribed.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOCacheSubscribed::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscribed.owner_soid)
}

// optional uint32 service_id = 5;
inline bool CMsgSOCacheSubscribed::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribed::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOCacheSubscribed::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribed::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribed::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.service_id)
  return _internal_service_id();
}
inline void CMsgSOCacheSubscribed::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  service_id_ = value;
}
inline void CMsgSOCacheSubscribed::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.service_id)
}

// repeated uint32 service_list = 6;
inline int CMsgSOCacheSubscribed::_internal_service_list_size() const {
  return service_list_.size();
}
inline int CMsgSOCacheSubscribed::service_list_size() const {
  return _internal_service_list_size();
}
inline void CMsgSOCacheSubscribed::clear_service_list() {
  service_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribed::_internal_service_list(int index) const {
  return service_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribed::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.service_list)
  return _internal_service_list(index);
}
inline void CMsgSOCacheSubscribed::set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.service_list)
}
inline void CMsgSOCacheSubscribed::_internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Add(value);
}
inline void CMsgSOCacheSubscribed::add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_service_list(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribed.service_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscribed::_internal_service_list() const {
  return service_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscribed::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribed.service_list)
  return _internal_service_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscribed::_internal_mutable_service_list() {
  return &service_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscribed::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribed.service_list)
  return _internal_mutable_service_list();
}

// optional fixed64 sync_version = 7;
inline bool CMsgSOCacheSubscribed::_internal_has_sync_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribed::has_sync_version() const {
  return _internal_has_sync_version();
}
inline void CMsgSOCacheSubscribed::clear_sync_version() {
  sync_version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribed::_internal_sync_version() const {
  return sync_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribed::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribed.sync_version)
  return _internal_sync_version();
}
inline void CMsgSOCacheSubscribed::_internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sync_version_ = value;
}
inline void CMsgSOCacheSubscribed::set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sync_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribed.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscribedUpToDate

// optional fixed64 version = 1;
inline bool CMsgSOCacheSubscribedUpToDate::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribedUpToDate::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribedUpToDate::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribedUpToDate::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.version)
  return _internal_version();
}
inline void CMsgSOCacheSubscribedUpToDate::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
}
inline void CMsgSOCacheSubscribedUpToDate::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.version)
}

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscribedUpToDate::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheSubscribedUpToDate::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribedUpToDate::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscribedUpToDate::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOCacheSubscribedUpToDate::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheSubscribedUpToDate.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscribedUpToDate.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscribedUpToDate::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscribedUpToDate.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOCacheSubscribedUpToDate::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscribedUpToDate.owner_soid)
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheSubscribedUpToDate::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribedUpToDate::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribedUpToDate::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribedUpToDate::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.service_id)
  return _internal_service_id();
}
inline void CMsgSOCacheSubscribedUpToDate::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  service_id_ = value;
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.service_id)
}

// repeated uint32 service_list = 4;
inline int CMsgSOCacheSubscribedUpToDate::_internal_service_list_size() const {
  return service_list_.size();
}
inline int CMsgSOCacheSubscribedUpToDate::service_list_size() const {
  return _internal_service_list_size();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_service_list() {
  service_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribedUpToDate::_internal_service_list(int index) const {
  return service_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscribedUpToDate::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.service_list)
  return _internal_service_list(index);
}
inline void CMsgSOCacheSubscribedUpToDate::set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.service_list)
}
inline void CMsgSOCacheSubscribedUpToDate::_internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Add(value);
}
inline void CMsgSOCacheSubscribedUpToDate::add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_service_list(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscribedUpToDate.service_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscribedUpToDate::_internal_service_list() const {
  return service_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscribedUpToDate::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscribedUpToDate.service_list)
  return _internal_service_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscribedUpToDate::_internal_mutable_service_list() {
  return &service_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscribedUpToDate::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscribedUpToDate.service_list)
  return _internal_mutable_service_list();
}

// optional fixed64 sync_version = 5;
inline bool CMsgSOCacheSubscribedUpToDate::_internal_has_sync_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscribedUpToDate::has_sync_version() const {
  return _internal_has_sync_version();
}
inline void CMsgSOCacheSubscribedUpToDate::clear_sync_version() {
  sync_version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribedUpToDate::_internal_sync_version() const {
  return sync_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscribedUpToDate::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscribedUpToDate.sync_version)
  return _internal_sync_version();
}
inline void CMsgSOCacheSubscribedUpToDate::_internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sync_version_ = value;
}
inline void CMsgSOCacheSubscribedUpToDate::set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sync_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscribedUpToDate.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheUnsubscribed

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheUnsubscribed::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheUnsubscribed::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOCacheUnsubscribed::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheUnsubscribed::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheUnsubscribed::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheUnsubscribed.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOCacheUnsubscribed::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheUnsubscribed.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheUnsubscribed.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheUnsubscribed::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheUnsubscribed.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOCacheUnsubscribed::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheUnsubscribed.owner_soid)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionCheck

// optional fixed64 version = 2;
inline bool CMsgSOCacheSubscriptionCheck::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscriptionCheck::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOCacheSubscriptionCheck::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscriptionCheck::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscriptionCheck::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.version)
  return _internal_version();
}
inline void CMsgSOCacheSubscriptionCheck::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
}
inline void CMsgSOCacheSubscriptionCheck::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.version)
}

// optional .CMsgSOIDOwner owner_soid = 3;
inline bool CMsgSOCacheSubscriptionCheck::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheSubscriptionCheck::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOCacheSubscriptionCheck::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionCheck::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionCheck::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOCacheSubscriptionCheck::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheSubscriptionCheck.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionCheck.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionCheck::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionCheck.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOCacheSubscriptionCheck::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionCheck.owner_soid)
}

// optional uint32 service_id = 4;
inline bool CMsgSOCacheSubscriptionCheck::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscriptionCheck::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscriptionCheck::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscriptionCheck::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.service_id)
  return _internal_service_id();
}
inline void CMsgSOCacheSubscriptionCheck::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  service_id_ = value;
}
inline void CMsgSOCacheSubscriptionCheck::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.service_id)
}

// repeated uint32 service_list = 5;
inline int CMsgSOCacheSubscriptionCheck::_internal_service_list_size() const {
  return service_list_.size();
}
inline int CMsgSOCacheSubscriptionCheck::service_list_size() const {
  return _internal_service_list_size();
}
inline void CMsgSOCacheSubscriptionCheck::clear_service_list() {
  service_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscriptionCheck::_internal_service_list(int index) const {
  return service_list_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheSubscriptionCheck::service_list(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.service_list)
  return _internal_service_list(index);
}
inline void CMsgSOCacheSubscriptionCheck::set_service_list(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.service_list)
}
inline void CMsgSOCacheSubscriptionCheck::_internal_add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  service_list_.Add(value);
}
inline void CMsgSOCacheSubscriptionCheck::add_service_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_service_list(value);
  // @@protoc_insertion_point(field_add:CMsgSOCacheSubscriptionCheck.service_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscriptionCheck::_internal_service_list() const {
  return service_list_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSOCacheSubscriptionCheck::service_list() const {
  // @@protoc_insertion_point(field_list:CMsgSOCacheSubscriptionCheck.service_list)
  return _internal_service_list();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscriptionCheck::_internal_mutable_service_list() {
  return &service_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSOCacheSubscriptionCheck::mutable_service_list() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSOCacheSubscriptionCheck.service_list)
  return _internal_mutable_service_list();
}

// optional fixed64 sync_version = 6;
inline bool CMsgSOCacheSubscriptionCheck::_internal_has_sync_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOCacheSubscriptionCheck::has_sync_version() const {
  return _internal_has_sync_version();
}
inline void CMsgSOCacheSubscriptionCheck::clear_sync_version() {
  sync_version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscriptionCheck::_internal_sync_version() const {
  return sync_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheSubscriptionCheck::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionCheck.sync_version)
  return _internal_sync_version();
}
inline void CMsgSOCacheSubscriptionCheck::_internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sync_version_ = value;
}
inline void CMsgSOCacheSubscriptionCheck::set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sync_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheSubscriptionCheck.sync_version)
}

// -------------------------------------------------------------------

// CMsgSOCacheSubscriptionRefresh

// optional .CMsgSOIDOwner owner_soid = 2;
inline bool CMsgSOCacheSubscriptionRefresh::_internal_has_owner_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || owner_soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheSubscriptionRefresh::has_owner_soid() const {
  return _internal_has_owner_soid();
}
inline void CMsgSOCacheSubscriptionRefresh::clear_owner_soid() {
  if (owner_soid_ != nullptr) owner_soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionRefresh::_internal_owner_soid() const {
  const ::CMsgSOIDOwner* p = owner_soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheSubscriptionRefresh::owner_soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return _internal_owner_soid();
}
inline void CMsgSOCacheSubscriptionRefresh::unsafe_arena_set_allocated_owner_soid(
    ::CMsgSOIDOwner* owner_soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(owner_soid_);
  }
  owner_soid_ = owner_soid;
  if (owner_soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheSubscriptionRefresh.owner_soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::release_owner_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::unsafe_arena_release_owner_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheSubscriptionRefresh.owner_soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = owner_soid_;
  owner_soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::_internal_mutable_owner_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (owner_soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    owner_soid_ = p;
  }
  return owner_soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheSubscriptionRefresh::mutable_owner_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheSubscriptionRefresh.owner_soid)
  return _internal_mutable_owner_soid();
}
inline void CMsgSOCacheSubscriptionRefresh::set_allocated_owner_soid(::CMsgSOIDOwner* owner_soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete owner_soid_;
  }
  if (owner_soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(owner_soid);
    if (message_arena != submessage_arena) {
      owner_soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, owner_soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  owner_soid_ = owner_soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheSubscriptionRefresh.owner_soid)
}

// -------------------------------------------------------------------

// CMsgSOCacheVersion

// optional fixed64 version = 1;
inline bool CMsgSOCacheVersion::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSOCacheVersion::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOCacheVersion::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheVersion::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheVersion.version)
  return _internal_version();
}
inline void CMsgSOCacheVersion::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CMsgSOCacheVersion::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheVersion.version)
}

// -------------------------------------------------------------------

// CMsgGCMultiplexMessage

// optional uint32 msgtype = 1;
inline bool CMsgGCMultiplexMessage::_internal_has_msgtype() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCMultiplexMessage::has_msgtype() const {
  return _internal_has_msgtype();
}
inline void CMsgGCMultiplexMessage::clear_msgtype() {
  msgtype_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCMultiplexMessage::_internal_msgtype() const {
  return msgtype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCMultiplexMessage::msgtype() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.msgtype)
  return _internal_msgtype();
}
inline void CMsgGCMultiplexMessage::_internal_set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msgtype_ = value;
}
inline void CMsgGCMultiplexMessage::set_msgtype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msgtype(value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.msgtype)
}

// optional bytes payload = 2;
inline bool CMsgGCMultiplexMessage::_internal_has_payload() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCMultiplexMessage::has_payload() const {
  return _internal_has_payload();
}
inline void CMsgGCMultiplexMessage::clear_payload() {
  payload_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCMultiplexMessage::payload() const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.payload)
  return _internal_payload();
}
inline void CMsgGCMultiplexMessage::set_payload(const std::string& value) {
  _internal_set_payload(value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.payload)
}
inline std::string* CMsgGCMultiplexMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable:CMsgGCMultiplexMessage.payload)
  return _internal_mutable_payload();
}
inline const std::string& CMsgGCMultiplexMessage::_internal_payload() const {
  return payload_.Get();
}
inline void CMsgGCMultiplexMessage::_internal_set_payload(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCMultiplexMessage::set_payload(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCMultiplexMessage.payload)
}
inline void CMsgGCMultiplexMessage::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCMultiplexMessage.payload)
}
inline void CMsgGCMultiplexMessage::set_payload(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCMultiplexMessage.payload)
}
inline std::string* CMsgGCMultiplexMessage::_internal_mutable_payload() {
  _has_bits_[0] |= 0x00000001u;
  return payload_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCMultiplexMessage::release_payload() {
  // @@protoc_insertion_point(field_release:CMsgGCMultiplexMessage.payload)
  if (!_internal_has_payload()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return payload_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCMultiplexMessage::set_allocated_payload(std::string* payload) {
  if (payload != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  payload_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payload,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCMultiplexMessage.payload)
}

// repeated fixed64 steamids = 3;
inline int CMsgGCMultiplexMessage::_internal_steamids_size() const {
  return steamids_.size();
}
inline int CMsgGCMultiplexMessage::steamids_size() const {
  return _internal_steamids_size();
}
inline void CMsgGCMultiplexMessage::clear_steamids() {
  steamids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCMultiplexMessage::_internal_steamids(int index) const {
  return steamids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCMultiplexMessage::steamids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCMultiplexMessage.steamids)
  return _internal_steamids(index);
}
inline void CMsgGCMultiplexMessage::set_steamids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCMultiplexMessage.steamids)
}
inline void CMsgGCMultiplexMessage::_internal_add_steamids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steamids_.Add(value);
}
inline void CMsgGCMultiplexMessage::add_steamids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steamids(value);
  // @@protoc_insertion_point(field_add:CMsgGCMultiplexMessage.steamids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCMultiplexMessage::_internal_steamids() const {
  return steamids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCMultiplexMessage::steamids() const {
  // @@protoc_insertion_point(field_list:CMsgGCMultiplexMessage.steamids)
  return _internal_steamids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCMultiplexMessage::_internal_mutable_steamids() {
  return &steamids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCMultiplexMessage::mutable_steamids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCMultiplexMessage.steamids)
  return _internal_mutable_steamids();
}

// -------------------------------------------------------------------

// CMsgGCToGCSubGCStarting

// optional uint32 dir_index = 1;
inline bool CMsgGCToGCSubGCStarting::_internal_has_dir_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCSubGCStarting::has_dir_index() const {
  return _internal_has_dir_index();
}
inline void CMsgGCToGCSubGCStarting::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSubGCStarting::_internal_dir_index() const {
  return dir_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSubGCStarting::dir_index() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSubGCStarting.dir_index)
  return _internal_dir_index();
}
inline void CMsgGCToGCSubGCStarting::_internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dir_index_ = value;
}
inline void CMsgGCToGCSubGCStarting::set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir_index(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSubGCStarting.dir_index)
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck_Process

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterAck_Process::_internal_has_dir_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterAck_Process::has_dir_index() const {
  return _internal_has_dir_index();
}
inline void CGCToGCMsgMasterAck_Process::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck_Process::_internal_dir_index() const {
  return dir_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck_Process::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.Process.dir_index)
  return _internal_dir_index();
}
inline void CGCToGCMsgMasterAck_Process::_internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dir_index_ = value;
}
inline void CGCToGCMsgMasterAck_Process::set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir_index(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.Process.dir_index)
}

// repeated uint32 type_instances = 2;
inline int CGCToGCMsgMasterAck_Process::_internal_type_instances_size() const {
  return type_instances_.size();
}
inline int CGCToGCMsgMasterAck_Process::type_instances_size() const {
  return _internal_type_instances_size();
}
inline void CGCToGCMsgMasterAck_Process::clear_type_instances() {
  type_instances_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck_Process::_internal_type_instances(int index) const {
  return type_instances_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck_Process::type_instances(int index) const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.Process.type_instances)
  return _internal_type_instances(index);
}
inline void CGCToGCMsgMasterAck_Process::set_type_instances(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  type_instances_.Set(index, value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.Process.type_instances)
}
inline void CGCToGCMsgMasterAck_Process::_internal_add_type_instances(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  type_instances_.Add(value);
}
inline void CGCToGCMsgMasterAck_Process::add_type_instances(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_type_instances(value);
  // @@protoc_insertion_point(field_add:CGCToGCMsgMasterAck.Process.type_instances)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CGCToGCMsgMasterAck_Process::_internal_type_instances() const {
  return type_instances_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CGCToGCMsgMasterAck_Process::type_instances() const {
  // @@protoc_insertion_point(field_list:CGCToGCMsgMasterAck.Process.type_instances)
  return _internal_type_instances();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CGCToGCMsgMasterAck_Process::_internal_mutable_type_instances() {
  return &type_instances_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CGCToGCMsgMasterAck_Process::mutable_type_instances() {
  // @@protoc_insertion_point(field_mutable_list:CGCToGCMsgMasterAck.Process.type_instances)
  return _internal_mutable_type_instances();
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterAck::_internal_has_dir_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterAck::has_dir_index() const {
  return _internal_has_dir_index();
}
inline void CGCToGCMsgMasterAck::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck::_internal_dir_index() const {
  return dir_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterAck::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.dir_index)
  return _internal_dir_index();
}
inline void CGCToGCMsgMasterAck::_internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  dir_index_ = value;
}
inline void CGCToGCMsgMasterAck::set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir_index(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.dir_index)
}

// optional string machine_name = 3;
inline bool CGCToGCMsgMasterAck::_internal_has_machine_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterAck::has_machine_name() const {
  return _internal_has_machine_name();
}
inline void CGCToGCMsgMasterAck::clear_machine_name() {
  machine_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCToGCMsgMasterAck::machine_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.machine_name)
  return _internal_machine_name();
}
inline void CGCToGCMsgMasterAck::set_machine_name(const std::string& value) {
  _internal_set_machine_name(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.machine_name)
}
inline std::string* CGCToGCMsgMasterAck::mutable_machine_name() {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterAck.machine_name)
  return _internal_mutable_machine_name();
}
inline const std::string& CGCToGCMsgMasterAck::_internal_machine_name() const {
  return machine_name_.Get();
}
inline void CGCToGCMsgMasterAck::_internal_set_machine_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCToGCMsgMasterAck::set_machine_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterAck.machine_name)
}
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterAck.machine_name)
}
inline void CGCToGCMsgMasterAck::set_machine_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterAck.machine_name)
}
inline std::string* CGCToGCMsgMasterAck::_internal_mutable_machine_name() {
  _has_bits_[0] |= 0x00000001u;
  return machine_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCToGCMsgMasterAck::release_machine_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterAck.machine_name)
  if (!_internal_has_machine_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return machine_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCToGCMsgMasterAck::set_allocated_machine_name(std::string* machine_name) {
  if (machine_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  machine_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterAck.machine_name)
}

// optional string process_name = 4;
inline bool CGCToGCMsgMasterAck::_internal_has_process_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterAck::has_process_name() const {
  return _internal_has_process_name();
}
inline void CGCToGCMsgMasterAck::clear_process_name() {
  process_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CGCToGCMsgMasterAck::process_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.process_name)
  return _internal_process_name();
}
inline void CGCToGCMsgMasterAck::set_process_name(const std::string& value) {
  _internal_set_process_name(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck.process_name)
}
inline std::string* CGCToGCMsgMasterAck::mutable_process_name() {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterAck.process_name)
  return _internal_mutable_process_name();
}
inline const std::string& CGCToGCMsgMasterAck::_internal_process_name() const {
  return process_name_.Get();
}
inline void CGCToGCMsgMasterAck::_internal_set_process_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  process_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCToGCMsgMasterAck::set_process_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  process_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterAck.process_name)
}
inline void CGCToGCMsgMasterAck::set_process_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  process_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterAck.process_name)
}
inline void CGCToGCMsgMasterAck::set_process_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  process_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterAck.process_name)
}
inline std::string* CGCToGCMsgMasterAck::_internal_mutable_process_name() {
  _has_bits_[0] |= 0x00000002u;
  return process_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCToGCMsgMasterAck::release_process_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterAck.process_name)
  if (!_internal_has_process_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return process_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCToGCMsgMasterAck::set_allocated_process_name(std::string* process_name) {
  if (process_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  process_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), process_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterAck.process_name)
}

// repeated .CGCToGCMsgMasterAck.Process directory = 6;
inline int CGCToGCMsgMasterAck::_internal_directory_size() const {
  return directory_.size();
}
inline int CGCToGCMsgMasterAck::directory_size() const {
  return _internal_directory_size();
}
inline void CGCToGCMsgMasterAck::clear_directory() {
  directory_.Clear();
}
inline ::CGCToGCMsgMasterAck_Process* CGCToGCMsgMasterAck::mutable_directory(int index) {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterAck.directory)
  return directory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterAck_Process >*
CGCToGCMsgMasterAck::mutable_directory() {
  // @@protoc_insertion_point(field_mutable_list:CGCToGCMsgMasterAck.directory)
  return &directory_;
}
inline const ::CGCToGCMsgMasterAck_Process& CGCToGCMsgMasterAck::_internal_directory(int index) const {
  return directory_.Get(index);
}
inline const ::CGCToGCMsgMasterAck_Process& CGCToGCMsgMasterAck::directory(int index) const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck.directory)
  return _internal_directory(index);
}
inline ::CGCToGCMsgMasterAck_Process* CGCToGCMsgMasterAck::_internal_add_directory() {
  return directory_.Add();
}
inline ::CGCToGCMsgMasterAck_Process* CGCToGCMsgMasterAck::add_directory() {
  // @@protoc_insertion_point(field_add:CGCToGCMsgMasterAck.directory)
  return _internal_add_directory();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterAck_Process >&
CGCToGCMsgMasterAck::directory() const {
  // @@protoc_insertion_point(field_list:CGCToGCMsgMasterAck.directory)
  return directory_;
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterAck_Response

// optional int32 eresult = 1 [default = 2];
inline bool CGCToGCMsgMasterAck_Response::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterAck_Response::has_eresult() const {
  return _internal_has_eresult();
}
inline void CGCToGCMsgMasterAck_Response::clear_eresult() {
  eresult_ = 2;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CGCToGCMsgMasterAck_Response::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CGCToGCMsgMasterAck_Response::eresult() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterAck_Response.eresult)
  return _internal_eresult();
}
inline void CGCToGCMsgMasterAck_Response::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CGCToGCMsgMasterAck_Response::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterAck_Response.eresult)
}

// -------------------------------------------------------------------

// CMsgGCToGCUniverseStartup

// optional bool is_initial_startup = 1;
inline bool CMsgGCToGCUniverseStartup::_internal_has_is_initial_startup() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCUniverseStartup::has_is_initial_startup() const {
  return _internal_has_is_initial_startup();
}
inline void CMsgGCToGCUniverseStartup::clear_is_initial_startup() {
  is_initial_startup_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CMsgGCToGCUniverseStartup::_internal_is_initial_startup() const {
  return is_initial_startup_;
}
inline bool CMsgGCToGCUniverseStartup::is_initial_startup() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUniverseStartup.is_initial_startup)
  return _internal_is_initial_startup();
}
inline void CMsgGCToGCUniverseStartup::_internal_set_is_initial_startup(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_initial_startup_ = value;
}
inline void CMsgGCToGCUniverseStartup::set_is_initial_startup(bool value) {
  _internal_set_is_initial_startup(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUniverseStartup.is_initial_startup)
}

// -------------------------------------------------------------------

// CMsgGCToGCUniverseStartupResponse

// optional int32 eresult = 1;
inline bool CMsgGCToGCUniverseStartupResponse::_internal_has_eresult() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCUniverseStartupResponse::has_eresult() const {
  return _internal_has_eresult();
}
inline void CMsgGCToGCUniverseStartupResponse::clear_eresult() {
  eresult_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCToGCUniverseStartupResponse::_internal_eresult() const {
  return eresult_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgGCToGCUniverseStartupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUniverseStartupResponse.eresult)
  return _internal_eresult();
}
inline void CMsgGCToGCUniverseStartupResponse::_internal_set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  eresult_ = value;
}
inline void CMsgGCToGCUniverseStartupResponse::set_eresult(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eresult(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUniverseStartupResponse.eresult)
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete_GCInfo

// optional uint32 dir_index = 1;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::_internal_has_dir_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_dir_index() const {
  return _internal_has_dir_index();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_dir_index() {
  dir_index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterStartupComplete_GCInfo::_internal_dir_index() const {
  return dir_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgMasterStartupComplete_GCInfo::dir_index() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.GCInfo.dir_index)
  return _internal_dir_index();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::_internal_set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dir_index_ = value;
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_dir_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dir_index(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterStartupComplete.GCInfo.dir_index)
}

// optional string machine_name = 2;
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::_internal_has_machine_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgMasterStartupComplete_GCInfo::has_machine_name() const {
  return _internal_has_machine_name();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::clear_machine_name() {
  machine_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCToGCMsgMasterStartupComplete_GCInfo::machine_name() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  return _internal_machine_name();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const std::string& value) {
  _internal_set_machine_name(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline std::string* CGCToGCMsgMasterStartupComplete_GCInfo::mutable_machine_name() {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  return _internal_mutable_machine_name();
}
inline const std::string& CGCToGCMsgMasterStartupComplete_GCInfo::_internal_machine_name() const {
  return machine_name_.Get();
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::_internal_set_machine_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_machine_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  machine_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}
inline std::string* CGCToGCMsgMasterStartupComplete_GCInfo::_internal_mutable_machine_name() {
  _has_bits_[0] |= 0x00000001u;
  return machine_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCToGCMsgMasterStartupComplete_GCInfo::release_machine_name() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
  if (!_internal_has_machine_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return machine_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCToGCMsgMasterStartupComplete_GCInfo::set_allocated_machine_name(std::string* machine_name) {
  if (machine_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  machine_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), machine_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgMasterStartupComplete.GCInfo.machine_name)
}

// -------------------------------------------------------------------

// CGCToGCMsgMasterStartupComplete

// repeated .CGCToGCMsgMasterStartupComplete.GCInfo gc_info = 1;
inline int CGCToGCMsgMasterStartupComplete::_internal_gc_info_size() const {
  return gc_info_.size();
}
inline int CGCToGCMsgMasterStartupComplete::gc_info_size() const {
  return _internal_gc_info_size();
}
inline void CGCToGCMsgMasterStartupComplete::clear_gc_info() {
  gc_info_.Clear();
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::mutable_gc_info(int index) {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >*
CGCToGCMsgMasterStartupComplete::mutable_gc_info() {
  // @@protoc_insertion_point(field_mutable_list:CGCToGCMsgMasterStartupComplete.gc_info)
  return &gc_info_;
}
inline const ::CGCToGCMsgMasterStartupComplete_GCInfo& CGCToGCMsgMasterStartupComplete::_internal_gc_info(int index) const {
  return gc_info_.Get(index);
}
inline const ::CGCToGCMsgMasterStartupComplete_GCInfo& CGCToGCMsgMasterStartupComplete::gc_info(int index) const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgMasterStartupComplete.gc_info)
  return _internal_gc_info(index);
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::_internal_add_gc_info() {
  return gc_info_.Add();
}
inline ::CGCToGCMsgMasterStartupComplete_GCInfo* CGCToGCMsgMasterStartupComplete::add_gc_info() {
  // @@protoc_insertion_point(field_add:CGCToGCMsgMasterStartupComplete.gc_info)
  return _internal_add_gc_info();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CGCToGCMsgMasterStartupComplete_GCInfo >&
CGCToGCMsgMasterStartupComplete::gc_info() const {
  // @@protoc_insertion_point(field_list:CGCToGCMsgMasterStartupComplete.gc_info)
  return gc_info_;
}

// -------------------------------------------------------------------

// CGCToGCMsgRouted

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRouted::_internal_has_msg_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CGCToGCMsgRouted::has_msg_type() const {
  return _internal_has_msg_type();
}
inline void CGCToGCMsgRouted::clear_msg_type() {
  msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgRouted::_internal_msg_type() const {
  return msg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgRouted::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.msg_type)
  return _internal_msg_type();
}
inline void CGCToGCMsgRouted::_internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  msg_type_ = value;
}
inline void CGCToGCMsgRouted::set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.msg_type)
}

// optional fixed64 sender_id = 2;
inline bool CGCToGCMsgRouted::_internal_has_sender_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCToGCMsgRouted::has_sender_id() const {
  return _internal_has_sender_id();
}
inline void CGCToGCMsgRouted::clear_sender_id() {
  sender_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CGCToGCMsgRouted::_internal_sender_id() const {
  return sender_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CGCToGCMsgRouted::sender_id() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.sender_id)
  return _internal_sender_id();
}
inline void CGCToGCMsgRouted::_internal_set_sender_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  sender_id_ = value;
}
inline void CGCToGCMsgRouted::set_sender_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.sender_id)
}

// optional bytes net_message = 3;
inline bool CGCToGCMsgRouted::_internal_has_net_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgRouted::has_net_message() const {
  return _internal_has_net_message();
}
inline void CGCToGCMsgRouted::clear_net_message() {
  net_message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCToGCMsgRouted::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRouted.net_message)
  return _internal_net_message();
}
inline void CGCToGCMsgRouted::set_net_message(const std::string& value) {
  _internal_set_net_message(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRouted.net_message)
}
inline std::string* CGCToGCMsgRouted::mutable_net_message() {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRouted.net_message)
  return _internal_mutable_net_message();
}
inline const std::string& CGCToGCMsgRouted::_internal_net_message() const {
  return net_message_.Get();
}
inline void CGCToGCMsgRouted::_internal_set_net_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCToGCMsgRouted::set_net_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRouted.net_message)
}
inline void CGCToGCMsgRouted::set_net_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRouted.net_message)
}
inline void CGCToGCMsgRouted::set_net_message(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRouted.net_message)
}
inline std::string* CGCToGCMsgRouted::_internal_mutable_net_message() {
  _has_bits_[0] |= 0x00000001u;
  return net_message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCToGCMsgRouted::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRouted.net_message)
  if (!_internal_has_net_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return net_message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCToGCMsgRouted::set_allocated_net_message(std::string* net_message) {
  if (net_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  net_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), net_message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRouted.net_message)
}

// -------------------------------------------------------------------

// CGCToGCMsgRoutedReply

// optional uint32 msg_type = 1;
inline bool CGCToGCMsgRoutedReply::_internal_has_msg_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCToGCMsgRoutedReply::has_msg_type() const {
  return _internal_has_msg_type();
}
inline void CGCToGCMsgRoutedReply::clear_msg_type() {
  msg_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgRoutedReply::_internal_msg_type() const {
  return msg_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCToGCMsgRoutedReply::msg_type() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.msg_type)
  return _internal_msg_type();
}
inline void CGCToGCMsgRoutedReply::_internal_set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_type_ = value;
}
inline void CGCToGCMsgRoutedReply::set_msg_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.msg_type)
}

// optional bytes net_message = 2;
inline bool CGCToGCMsgRoutedReply::_internal_has_net_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCToGCMsgRoutedReply::has_net_message() const {
  return _internal_has_net_message();
}
inline void CGCToGCMsgRoutedReply::clear_net_message() {
  net_message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCToGCMsgRoutedReply::net_message() const {
  // @@protoc_insertion_point(field_get:CGCToGCMsgRoutedReply.net_message)
  return _internal_net_message();
}
inline void CGCToGCMsgRoutedReply::set_net_message(const std::string& value) {
  _internal_set_net_message(value);
  // @@protoc_insertion_point(field_set:CGCToGCMsgRoutedReply.net_message)
}
inline std::string* CGCToGCMsgRoutedReply::mutable_net_message() {
  // @@protoc_insertion_point(field_mutable:CGCToGCMsgRoutedReply.net_message)
  return _internal_mutable_net_message();
}
inline const std::string& CGCToGCMsgRoutedReply::_internal_net_message() const {
  return net_message_.Get();
}
inline void CGCToGCMsgRoutedReply::_internal_set_net_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCToGCMsgRoutedReply::set_net_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCToGCMsgRoutedReply.net_message)
}
inline void CGCToGCMsgRoutedReply::set_net_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCToGCMsgRoutedReply.net_message)
}
inline void CGCToGCMsgRoutedReply::set_net_message(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  net_message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCToGCMsgRoutedReply.net_message)
}
inline std::string* CGCToGCMsgRoutedReply::_internal_mutable_net_message() {
  _has_bits_[0] |= 0x00000001u;
  return net_message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCToGCMsgRoutedReply::release_net_message() {
  // @@protoc_insertion_point(field_release:CGCToGCMsgRoutedReply.net_message)
  if (!_internal_has_net_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return net_message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCToGCMsgRoutedReply::set_allocated_net_message(std::string* net_message) {
  if (net_message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  net_message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), net_message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCToGCMsgRoutedReply.net_message)
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo_CMsgUpdate

// optional fixed64 steamid = 1;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.steamid)
  return _internal_steamid();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.steamid)
}

// optional fixed32 ip = 2;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_has_ip() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_ip() const {
  return _internal_has_ip();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.ip)
  return _internal_ip();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ip_ = value;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.ip)
}

// optional bool trusted = 3;
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_has_trusted() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::has_trusted() const {
  return _internal_has_trusted();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::clear_trusted() {
  trusted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_trusted() const {
  return trusted_;
}
inline bool CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.trusted)
  return _internal_trusted();
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::_internal_set_trusted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  trusted_ = value;
}
inline void CMsgGCUpdateSubGCSessionInfo_CMsgUpdate::set_trusted(bool value) {
  _internal_set_trusted(value);
  // @@protoc_insertion_point(field_set:CMsgGCUpdateSubGCSessionInfo.CMsgUpdate.trusted)
}

// -------------------------------------------------------------------

// CMsgGCUpdateSubGCSessionInfo

// repeated .CMsgGCUpdateSubGCSessionInfo.CMsgUpdate updates = 1;
inline int CMsgGCUpdateSubGCSessionInfo::_internal_updates_size() const {
  return updates_.size();
}
inline int CMsgGCUpdateSubGCSessionInfo::updates_size() const {
  return _internal_updates_size();
}
inline void CMsgGCUpdateSubGCSessionInfo::clear_updates() {
  updates_.Clear();
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::mutable_updates(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >*
CMsgGCUpdateSubGCSessionInfo::mutable_updates() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCUpdateSubGCSessionInfo.updates)
  return &updates_;
}
inline const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& CMsgGCUpdateSubGCSessionInfo::_internal_updates(int index) const {
  return updates_.Get(index);
}
inline const ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate& CMsgGCUpdateSubGCSessionInfo::updates(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCUpdateSubGCSessionInfo.updates)
  return _internal_updates(index);
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::_internal_add_updates() {
  return updates_.Add();
}
inline ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate* CMsgGCUpdateSubGCSessionInfo::add_updates() {
  // @@protoc_insertion_point(field_add:CMsgGCUpdateSubGCSessionInfo.updates)
  return _internal_add_updates();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCUpdateSubGCSessionInfo_CMsgUpdate >&
CMsgGCUpdateSubGCSessionInfo::updates() const {
  // @@protoc_insertion_point(field_list:CMsgGCUpdateSubGCSessionInfo.updates)
  return updates_;
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfo

// optional fixed64 steamid = 1;
inline bool CMsgGCRequestSubGCSessionInfo::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestSubGCSessionInfo::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgGCRequestSubGCSessionInfo::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRequestSubGCSessionInfo::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCRequestSubGCSessionInfo::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfo.steamid)
  return _internal_steamid();
}
inline void CMsgGCRequestSubGCSessionInfo::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CMsgGCRequestSubGCSessionInfo::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfo.steamid)
}

// -------------------------------------------------------------------

// CMsgGCRequestSubGCSessionInfoResponse

// optional fixed32 ip = 1;
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_has_ip() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_ip() const {
  return _internal_has_ip();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_ip() {
  ip_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRequestSubGCSessionInfoResponse::_internal_ip() const {
  return ip_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRequestSubGCSessionInfoResponse::ip() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.ip)
  return _internal_ip();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::_internal_set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ip_ = value;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_ip(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ip(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.ip)
}

// optional bool trusted = 2;
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_has_trusted() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_trusted() const {
  return _internal_has_trusted();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_trusted() {
  trusted_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_trusted() const {
  return trusted_;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::trusted() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.trusted)
  return _internal_trusted();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::_internal_set_trusted(bool value) {
  _has_bits_[0] |= 0x00000004u;
  trusted_ = value;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_trusted(bool value) {
  _internal_set_trusted(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.trusted)
}

// optional uint32 port = 3;
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_has_port() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_port() const {
  return _internal_has_port();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_port() {
  port_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRequestSubGCSessionInfoResponse::_internal_port() const {
  return port_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCRequestSubGCSessionInfoResponse::port() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.port)
  return _internal_port();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::_internal_set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  port_ = value;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_port(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.port)
}

// optional bool success = 4;
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::has_success() const {
  return _internal_has_success();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::_internal_success() const {
  return success_;
}
inline bool CMsgGCRequestSubGCSessionInfoResponse::success() const {
  // @@protoc_insertion_point(field_get:CMsgGCRequestSubGCSessionInfoResponse.success)
  return _internal_success();
}
inline void CMsgGCRequestSubGCSessionInfoResponse::_internal_set_success(bool value) {
  _has_bits_[0] |= 0x00000008u;
  success_ = value;
}
inline void CMsgGCRequestSubGCSessionInfoResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CMsgGCRequestSubGCSessionInfoResponse.success)
}

// -------------------------------------------------------------------

// CMsgSOCacheHaveVersion

// optional .CMsgSOIDOwner soid = 1;
inline bool CMsgSOCacheHaveVersion::_internal_has_soid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || soid_ != nullptr);
  return value;
}
inline bool CMsgSOCacheHaveVersion::has_soid() const {
  return _internal_has_soid();
}
inline void CMsgSOCacheHaveVersion::clear_soid() {
  if (soid_ != nullptr) soid_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgSOIDOwner& CMsgSOCacheHaveVersion::_internal_soid() const {
  const ::CMsgSOIDOwner* p = soid_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgSOIDOwner&>(
      ::_CMsgSOIDOwner_default_instance_);
}
inline const ::CMsgSOIDOwner& CMsgSOCacheHaveVersion::soid() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.soid)
  return _internal_soid();
}
inline void CMsgSOCacheHaveVersion::unsafe_arena_set_allocated_soid(
    ::CMsgSOIDOwner* soid) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(soid_);
  }
  soid_ = soid;
  if (soid) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgSOCacheHaveVersion.soid)
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::release_soid() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = soid_;
  soid_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::unsafe_arena_release_soid() {
  // @@protoc_insertion_point(field_release:CMsgSOCacheHaveVersion.soid)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgSOIDOwner* temp = soid_;
  soid_ = nullptr;
  return temp;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::_internal_mutable_soid() {
  _has_bits_[0] |= 0x00000001u;
  if (soid_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgSOIDOwner>(GetArena());
    soid_ = p;
  }
  return soid_;
}
inline ::CMsgSOIDOwner* CMsgSOCacheHaveVersion::mutable_soid() {
  // @@protoc_insertion_point(field_mutable:CMsgSOCacheHaveVersion.soid)
  return _internal_mutable_soid();
}
inline void CMsgSOCacheHaveVersion::set_allocated_soid(::CMsgSOIDOwner* soid) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete soid_;
  }
  if (soid) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(soid);
    if (message_arena != submessage_arena) {
      soid = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, soid, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  soid_ = soid;
  // @@protoc_insertion_point(field_set_allocated:CMsgSOCacheHaveVersion.soid)
}

// optional fixed64 version = 2;
inline bool CMsgSOCacheHaveVersion::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSOCacheHaveVersion::has_version() const {
  return _internal_has_version();
}
inline void CMsgSOCacheHaveVersion::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheHaveVersion::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSOCacheHaveVersion::version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.version)
  return _internal_version();
}
inline void CMsgSOCacheHaveVersion::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  version_ = value;
}
inline void CMsgSOCacheHaveVersion::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.version)
}

// optional uint32 service_id = 3;
inline bool CMsgSOCacheHaveVersion::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSOCacheHaveVersion::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSOCacheHaveVersion::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheHaveVersion::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheHaveVersion::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.service_id)
  return _internal_service_id();
}
inline void CMsgSOCacheHaveVersion::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  service_id_ = value;
}
inline void CMsgSOCacheHaveVersion::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.service_id)
}

// optional uint32 cached_file_version = 4;
inline bool CMsgSOCacheHaveVersion::_internal_has_cached_file_version() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSOCacheHaveVersion::has_cached_file_version() const {
  return _internal_has_cached_file_version();
}
inline void CMsgSOCacheHaveVersion::clear_cached_file_version() {
  cached_file_version_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheHaveVersion::_internal_cached_file_version() const {
  return cached_file_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSOCacheHaveVersion::cached_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgSOCacheHaveVersion.cached_file_version)
  return _internal_cached_file_version();
}
inline void CMsgSOCacheHaveVersion::_internal_set_cached_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  cached_file_version_ = value;
}
inline void CMsgSOCacheHaveVersion::set_cached_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cached_file_version(value);
  // @@protoc_insertion_point(field_set:CMsgSOCacheHaveVersion.cached_file_version)
}

// -------------------------------------------------------------------

// CMsgClientHello

// optional uint32 version = 1;
inline bool CMsgClientHello::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientHello::has_version() const {
  return _internal_has_version();
}
inline void CMsgClientHello::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.version)
  return _internal_version();
}
inline void CMsgClientHello::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  version_ = value;
}
inline void CMsgClientHello::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.version)
}

// repeated .CMsgSOCacheHaveVersion socache_have_versions = 2;
inline int CMsgClientHello::_internal_socache_have_versions_size() const {
  return socache_have_versions_.size();
}
inline int CMsgClientHello::socache_have_versions_size() const {
  return _internal_socache_have_versions_size();
}
inline void CMsgClientHello::clear_socache_have_versions() {
  socache_have_versions_.Clear();
}
inline ::CMsgSOCacheHaveVersion* CMsgClientHello::mutable_socache_have_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.socache_have_versions)
  return socache_have_versions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheHaveVersion >*
CMsgClientHello::mutable_socache_have_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientHello.socache_have_versions)
  return &socache_have_versions_;
}
inline const ::CMsgSOCacheHaveVersion& CMsgClientHello::_internal_socache_have_versions(int index) const {
  return socache_have_versions_.Get(index);
}
inline const ::CMsgSOCacheHaveVersion& CMsgClientHello::socache_have_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.socache_have_versions)
  return _internal_socache_have_versions(index);
}
inline ::CMsgSOCacheHaveVersion* CMsgClientHello::_internal_add_socache_have_versions() {
  return socache_have_versions_.Add();
}
inline ::CMsgSOCacheHaveVersion* CMsgClientHello::add_socache_have_versions() {
  // @@protoc_insertion_point(field_add:CMsgClientHello.socache_have_versions)
  return _internal_add_socache_have_versions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheHaveVersion >&
CMsgClientHello::socache_have_versions() const {
  // @@protoc_insertion_point(field_list:CMsgClientHello.socache_have_versions)
  return socache_have_versions_;
}

// optional uint32 client_session_need = 3;
inline bool CMsgClientHello::_internal_has_client_session_need() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientHello::has_client_session_need() const {
  return _internal_has_client_session_need();
}
inline void CMsgClientHello::clear_client_session_need() {
  client_session_need_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_client_session_need() const {
  return client_session_need_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.client_session_need)
  return _internal_client_session_need();
}
inline void CMsgClientHello::_internal_set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  client_session_need_ = value;
}
inline void CMsgClientHello::set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_session_need(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.client_session_need)
}

// optional .PartnerAccountType client_launcher = 4 [default = PARTNER_NONE];
inline bool CMsgClientHello::_internal_has_client_launcher() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgClientHello::has_client_launcher() const {
  return _internal_has_client_launcher();
}
inline void CMsgClientHello::clear_client_launcher() {
  client_launcher_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PartnerAccountType CMsgClientHello::_internal_client_launcher() const {
  return static_cast< ::PartnerAccountType >(client_launcher_);
}
inline ::PartnerAccountType CMsgClientHello::client_launcher() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.client_launcher)
  return _internal_client_launcher();
}
inline void CMsgClientHello::_internal_set_client_launcher(::PartnerAccountType value) {
  assert(::PartnerAccountType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  client_launcher_ = value;
}
inline void CMsgClientHello::set_client_launcher(::PartnerAccountType value) {
  _internal_set_client_launcher(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.client_launcher)
}

// optional string secret_key = 5;
inline bool CMsgClientHello::_internal_has_secret_key() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientHello::has_secret_key() const {
  return _internal_has_secret_key();
}
inline void CMsgClientHello::clear_secret_key() {
  secret_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientHello::secret_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.secret_key)
  return _internal_secret_key();
}
inline void CMsgClientHello::set_secret_key(const std::string& value) {
  _internal_set_secret_key(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.secret_key)
}
inline std::string* CMsgClientHello::mutable_secret_key() {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.secret_key)
  return _internal_mutable_secret_key();
}
inline const std::string& CMsgClientHello::_internal_secret_key() const {
  return secret_key_.Get();
}
inline void CMsgClientHello::_internal_set_secret_key(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  secret_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientHello::set_secret_key(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  secret_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientHello.secret_key)
}
inline void CMsgClientHello::set_secret_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  secret_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientHello.secret_key)
}
inline void CMsgClientHello::set_secret_key(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  secret_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientHello.secret_key)
}
inline std::string* CMsgClientHello::_internal_mutable_secret_key() {
  _has_bits_[0] |= 0x00000001u;
  return secret_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientHello::release_secret_key() {
  // @@protoc_insertion_point(field_release:CMsgClientHello.secret_key)
  if (!_internal_has_secret_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return secret_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientHello::set_allocated_secret_key(std::string* secret_key) {
  if (secret_key != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  secret_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secret_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientHello.secret_key)
}

// optional uint32 client_language = 6;
inline bool CMsgClientHello::_internal_has_client_language() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgClientHello::has_client_language() const {
  return _internal_has_client_language();
}
inline void CMsgClientHello::clear_client_language() {
  client_language_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_client_language() const {
  return client_language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::client_language() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.client_language)
  return _internal_client_language();
}
inline void CMsgClientHello::_internal_set_client_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  client_language_ = value;
}
inline void CMsgClientHello::set_client_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_language(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.client_language)
}

// optional .ESourceEngine engine = 7 [default = k_ESE_Source1];
inline bool CMsgClientHello::_internal_has_engine() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientHello::has_engine() const {
  return _internal_has_engine();
}
inline void CMsgClientHello::clear_engine() {
  engine_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::ESourceEngine CMsgClientHello::_internal_engine() const {
  return static_cast< ::ESourceEngine >(engine_);
}
inline ::ESourceEngine CMsgClientHello::engine() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.engine)
  return _internal_engine();
}
inline void CMsgClientHello::_internal_set_engine(::ESourceEngine value) {
  assert(::ESourceEngine_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  engine_ = value;
}
inline void CMsgClientHello::set_engine(::ESourceEngine value) {
  _internal_set_engine(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.engine)
}

// optional bytes steamdatagram_login = 8;
inline bool CMsgClientHello::_internal_has_steamdatagram_login() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientHello::has_steamdatagram_login() const {
  return _internal_has_steamdatagram_login();
}
inline void CMsgClientHello::clear_steamdatagram_login() {
  steamdatagram_login_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientHello::steamdatagram_login() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.steamdatagram_login)
  return _internal_steamdatagram_login();
}
inline void CMsgClientHello::set_steamdatagram_login(const std::string& value) {
  _internal_set_steamdatagram_login(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.steamdatagram_login)
}
inline std::string* CMsgClientHello::mutable_steamdatagram_login() {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.steamdatagram_login)
  return _internal_mutable_steamdatagram_login();
}
inline const std::string& CMsgClientHello::_internal_steamdatagram_login() const {
  return steamdatagram_login_.Get();
}
inline void CMsgClientHello::_internal_set_steamdatagram_login(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  steamdatagram_login_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientHello::set_steamdatagram_login(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  steamdatagram_login_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientHello.steamdatagram_login)
}
inline void CMsgClientHello::set_steamdatagram_login(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  steamdatagram_login_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientHello.steamdatagram_login)
}
inline void CMsgClientHello::set_steamdatagram_login(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  steamdatagram_login_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientHello.steamdatagram_login)
}
inline std::string* CMsgClientHello::_internal_mutable_steamdatagram_login() {
  _has_bits_[0] |= 0x00000002u;
  return steamdatagram_login_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientHello::release_steamdatagram_login() {
  // @@protoc_insertion_point(field_release:CMsgClientHello.steamdatagram_login)
  if (!_internal_has_steamdatagram_login()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return steamdatagram_login_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientHello::set_allocated_steamdatagram_login(std::string* steamdatagram_login) {
  if (steamdatagram_login != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  steamdatagram_login_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), steamdatagram_login,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientHello.steamdatagram_login)
}

// optional uint32 platform_id = 9;
inline bool CMsgClientHello::_internal_has_platform_id() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientHello::has_platform_id() const {
  return _internal_has_platform_id();
}
inline void CMsgClientHello::clear_platform_id() {
  platform_id_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_platform_id() const {
  return platform_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::platform_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.platform_id)
  return _internal_platform_id();
}
inline void CMsgClientHello::_internal_set_platform_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  platform_id_ = value;
}
inline void CMsgClientHello::set_platform_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_platform_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.platform_id)
}

// optional bytes game_msg = 10;
inline bool CMsgClientHello::_internal_has_game_msg() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientHello::has_game_msg() const {
  return _internal_has_game_msg();
}
inline void CMsgClientHello::clear_game_msg() {
  game_msg_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientHello::game_msg() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.game_msg)
  return _internal_game_msg();
}
inline void CMsgClientHello::set_game_msg(const std::string& value) {
  _internal_set_game_msg(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.game_msg)
}
inline std::string* CMsgClientHello::mutable_game_msg() {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.game_msg)
  return _internal_mutable_game_msg();
}
inline const std::string& CMsgClientHello::_internal_game_msg() const {
  return game_msg_.Get();
}
inline void CMsgClientHello::_internal_set_game_msg(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  game_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientHello::set_game_msg(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  game_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientHello.game_msg)
}
inline void CMsgClientHello::set_game_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  game_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientHello.game_msg)
}
inline void CMsgClientHello::set_game_msg(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  game_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientHello.game_msg)
}
inline std::string* CMsgClientHello::_internal_mutable_game_msg() {
  _has_bits_[0] |= 0x00000004u;
  return game_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientHello::release_game_msg() {
  // @@protoc_insertion_point(field_release:CMsgClientHello.game_msg)
  if (!_internal_has_game_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return game_msg_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientHello::set_allocated_game_msg(std::string* game_msg) {
  if (game_msg != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  game_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientHello.game_msg)
}

// optional int32 os_type = 11;
inline bool CMsgClientHello::_internal_has_os_type() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientHello::has_os_type() const {
  return _internal_has_os_type();
}
inline void CMsgClientHello::clear_os_type() {
  os_type_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientHello::_internal_os_type() const {
  return os_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgClientHello::os_type() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.os_type)
  return _internal_os_type();
}
inline void CMsgClientHello::_internal_set_os_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  os_type_ = value;
}
inline void CMsgClientHello::set_os_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_os_type(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.os_type)
}

// optional uint32 render_system = 12;
inline bool CMsgClientHello::_internal_has_render_system() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientHello::has_render_system() const {
  return _internal_has_render_system();
}
inline void CMsgClientHello::clear_render_system() {
  render_system_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_render_system() const {
  return render_system_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::render_system() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.render_system)
  return _internal_render_system();
}
inline void CMsgClientHello::_internal_set_render_system(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  render_system_ = value;
}
inline void CMsgClientHello::set_render_system(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_render_system(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.render_system)
}

// optional uint32 render_system_req = 13;
inline bool CMsgClientHello::_internal_has_render_system_req() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_render_system_req() const {
  return _internal_has_render_system_req();
}
inline void CMsgClientHello::clear_render_system_req() {
  render_system_req_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_render_system_req() const {
  return render_system_req_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::render_system_req() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.render_system_req)
  return _internal_render_system_req();
}
inline void CMsgClientHello::_internal_set_render_system_req(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  render_system_req_ = value;
}
inline void CMsgClientHello::set_render_system_req(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_render_system_req(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.render_system_req)
}

// optional uint32 screen_width = 14;
inline bool CMsgClientHello::_internal_has_screen_width() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_screen_width() const {
  return _internal_has_screen_width();
}
inline void CMsgClientHello::clear_screen_width() {
  screen_width_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_screen_width() const {
  return screen_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::screen_width() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.screen_width)
  return _internal_screen_width();
}
inline void CMsgClientHello::_internal_set_screen_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  screen_width_ = value;
}
inline void CMsgClientHello::set_screen_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_screen_width(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.screen_width)
}

// optional uint32 screen_height = 15;
inline bool CMsgClientHello::_internal_has_screen_height() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_screen_height() const {
  return _internal_has_screen_height();
}
inline void CMsgClientHello::clear_screen_height() {
  screen_height_ = 0u;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_screen_height() const {
  return screen_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::screen_height() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.screen_height)
  return _internal_screen_height();
}
inline void CMsgClientHello::_internal_set_screen_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00004000u;
  screen_height_ = value;
}
inline void CMsgClientHello::set_screen_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_screen_height(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.screen_height)
}

// optional uint32 screen_refresh = 16;
inline bool CMsgClientHello::_internal_has_screen_refresh() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_screen_refresh() const {
  return _internal_has_screen_refresh();
}
inline void CMsgClientHello::clear_screen_refresh() {
  screen_refresh_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_screen_refresh() const {
  return screen_refresh_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::screen_refresh() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.screen_refresh)
  return _internal_screen_refresh();
}
inline void CMsgClientHello::_internal_set_screen_refresh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  screen_refresh_ = value;
}
inline void CMsgClientHello::set_screen_refresh(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_screen_refresh(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.screen_refresh)
}

// optional uint32 render_width = 17;
inline bool CMsgClientHello::_internal_has_render_width() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_render_width() const {
  return _internal_has_render_width();
}
inline void CMsgClientHello::clear_render_width() {
  render_width_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_render_width() const {
  return render_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::render_width() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.render_width)
  return _internal_render_width();
}
inline void CMsgClientHello::_internal_set_render_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  render_width_ = value;
}
inline void CMsgClientHello::set_render_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_render_width(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.render_width)
}

// optional uint32 render_height = 18;
inline bool CMsgClientHello::_internal_has_render_height() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_render_height() const {
  return _internal_has_render_height();
}
inline void CMsgClientHello::clear_render_height() {
  render_height_ = 0u;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_render_height() const {
  return render_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::render_height() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.render_height)
  return _internal_render_height();
}
inline void CMsgClientHello::_internal_set_render_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00020000u;
  render_height_ = value;
}
inline void CMsgClientHello::set_render_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_render_height(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.render_height)
}

// optional uint32 swap_width = 19;
inline bool CMsgClientHello::_internal_has_swap_width() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_swap_width() const {
  return _internal_has_swap_width();
}
inline void CMsgClientHello::clear_swap_width() {
  swap_width_ = 0u;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_swap_width() const {
  return swap_width_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::swap_width() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.swap_width)
  return _internal_swap_width();
}
inline void CMsgClientHello::_internal_set_swap_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00040000u;
  swap_width_ = value;
}
inline void CMsgClientHello::set_swap_width(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_swap_width(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.swap_width)
}

// optional uint32 swap_height = 20;
inline bool CMsgClientHello::_internal_has_swap_height() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_swap_height() const {
  return _internal_has_swap_height();
}
inline void CMsgClientHello::clear_swap_height() {
  swap_height_ = 0u;
  _has_bits_[0] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::_internal_swap_height() const {
  return swap_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientHello::swap_height() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.swap_height)
  return _internal_swap_height();
}
inline void CMsgClientHello::_internal_set_swap_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00080000u;
  swap_height_ = value;
}
inline void CMsgClientHello::set_swap_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_swap_height(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.swap_height)
}

// optional bool is_steam_china = 22;
inline bool CMsgClientHello::_internal_has_is_steam_china() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_is_steam_china() const {
  return _internal_has_is_steam_china();
}
inline void CMsgClientHello::clear_is_steam_china() {
  is_steam_china_ = false;
  _has_bits_[0] &= ~0x00100000u;
}
inline bool CMsgClientHello::_internal_is_steam_china() const {
  return is_steam_china_;
}
inline bool CMsgClientHello::is_steam_china() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.is_steam_china)
  return _internal_is_steam_china();
}
inline void CMsgClientHello::_internal_set_is_steam_china(bool value) {
  _has_bits_[0] |= 0x00100000u;
  is_steam_china_ = value;
}
inline void CMsgClientHello::set_is_steam_china(bool value) {
  _internal_set_is_steam_china(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.is_steam_china)
}

// optional bool is_steam_china_client = 24;
inline bool CMsgClientHello::_internal_has_is_steam_china_client() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgClientHello::has_is_steam_china_client() const {
  return _internal_has_is_steam_china_client();
}
inline void CMsgClientHello::clear_is_steam_china_client() {
  is_steam_china_client_ = false;
  _has_bits_[0] &= ~0x00200000u;
}
inline bool CMsgClientHello::_internal_is_steam_china_client() const {
  return is_steam_china_client_;
}
inline bool CMsgClientHello::is_steam_china_client() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.is_steam_china_client)
  return _internal_is_steam_china_client();
}
inline void CMsgClientHello::_internal_set_is_steam_china_client(bool value) {
  _has_bits_[0] |= 0x00200000u;
  is_steam_china_client_ = value;
}
inline void CMsgClientHello::set_is_steam_china_client(bool value) {
  _internal_set_is_steam_china_client(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.is_steam_china_client)
}

// optional string platform_name = 23;
inline bool CMsgClientHello::_internal_has_platform_name() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientHello::has_platform_name() const {
  return _internal_has_platform_name();
}
inline void CMsgClientHello::clear_platform_name() {
  platform_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientHello::platform_name() const {
  // @@protoc_insertion_point(field_get:CMsgClientHello.platform_name)
  return _internal_platform_name();
}
inline void CMsgClientHello::set_platform_name(const std::string& value) {
  _internal_set_platform_name(value);
  // @@protoc_insertion_point(field_set:CMsgClientHello.platform_name)
}
inline std::string* CMsgClientHello::mutable_platform_name() {
  // @@protoc_insertion_point(field_mutable:CMsgClientHello.platform_name)
  return _internal_mutable_platform_name();
}
inline const std::string& CMsgClientHello::_internal_platform_name() const {
  return platform_name_.Get();
}
inline void CMsgClientHello::_internal_set_platform_name(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  platform_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientHello::set_platform_name(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  platform_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientHello.platform_name)
}
inline void CMsgClientHello::set_platform_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  platform_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientHello.platform_name)
}
inline void CMsgClientHello::set_platform_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  platform_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientHello.platform_name)
}
inline std::string* CMsgClientHello::_internal_mutable_platform_name() {
  _has_bits_[0] |= 0x00000008u;
  return platform_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientHello::release_platform_name() {
  // @@protoc_insertion_point(field_release:CMsgClientHello.platform_name)
  if (!_internal_has_platform_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return platform_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientHello::set_allocated_platform_name(std::string* platform_name) {
  if (platform_name != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  platform_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), platform_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientHello.platform_name)
}

// -------------------------------------------------------------------

// CMsgClientWelcome_Location

// optional float latitude = 1;
inline bool CMsgClientWelcome_Location::_internal_has_latitude() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWelcome_Location::has_latitude() const {
  return _internal_has_latitude();
}
inline void CMsgClientWelcome_Location::clear_latitude() {
  latitude_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgClientWelcome_Location::_internal_latitude() const {
  return latitude_;
}
inline float CMsgClientWelcome_Location::latitude() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.latitude)
  return _internal_latitude();
}
inline void CMsgClientWelcome_Location::_internal_set_latitude(float value) {
  _has_bits_[0] |= 0x00000002u;
  latitude_ = value;
}
inline void CMsgClientWelcome_Location::set_latitude(float value) {
  _internal_set_latitude(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.latitude)
}

// optional float longitude = 2;
inline bool CMsgClientWelcome_Location::_internal_has_longitude() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWelcome_Location::has_longitude() const {
  return _internal_has_longitude();
}
inline void CMsgClientWelcome_Location::clear_longitude() {
  longitude_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgClientWelcome_Location::_internal_longitude() const {
  return longitude_;
}
inline float CMsgClientWelcome_Location::longitude() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.longitude)
  return _internal_longitude();
}
inline void CMsgClientWelcome_Location::_internal_set_longitude(float value) {
  _has_bits_[0] |= 0x00000004u;
  longitude_ = value;
}
inline void CMsgClientWelcome_Location::set_longitude(float value) {
  _internal_set_longitude(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.longitude)
}

// optional string country = 3;
inline bool CMsgClientWelcome_Location::_internal_has_country() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWelcome_Location::has_country() const {
  return _internal_has_country();
}
inline void CMsgClientWelcome_Location::clear_country() {
  country_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientWelcome_Location::country() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.Location.country)
  return _internal_country();
}
inline void CMsgClientWelcome_Location::set_country(const std::string& value) {
  _internal_set_country(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.Location.country)
}
inline std::string* CMsgClientWelcome_Location::mutable_country() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.Location.country)
  return _internal_mutable_country();
}
inline const std::string& CMsgClientWelcome_Location::_internal_country() const {
  return country_.Get();
}
inline void CMsgClientWelcome_Location::_internal_set_country(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome_Location::set_country(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  country_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.Location.country)
}
inline void CMsgClientWelcome_Location::set_country(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.Location.country)
}
inline void CMsgClientWelcome_Location::set_country(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  country_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.Location.country)
}
inline std::string* CMsgClientWelcome_Location::_internal_mutable_country() {
  _has_bits_[0] |= 0x00000001u;
  return country_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome_Location::release_country() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.Location.country)
  if (!_internal_has_country()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return country_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome_Location::set_allocated_country(std::string* country) {
  if (country != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  country_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), country,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.Location.country)
}

// -------------------------------------------------------------------

// CMsgClientWelcome

// optional uint32 version = 1;
inline bool CMsgClientWelcome::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_version() const {
  return _internal_has_version();
}
inline void CMsgClientWelcome::clear_version() {
  version_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::version() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.version)
  return _internal_version();
}
inline void CMsgClientWelcome::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  version_ = value;
}
inline void CMsgClientWelcome::set_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.version)
}

// optional bytes game_data = 2;
inline bool CMsgClientWelcome::_internal_has_game_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_game_data() const {
  return _internal_has_game_data();
}
inline void CMsgClientWelcome::clear_game_data() {
  game_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientWelcome::game_data() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.game_data)
  return _internal_game_data();
}
inline void CMsgClientWelcome::set_game_data(const std::string& value) {
  _internal_set_game_data(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.game_data)
}
inline std::string* CMsgClientWelcome::mutable_game_data() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.game_data)
  return _internal_mutable_game_data();
}
inline const std::string& CMsgClientWelcome::_internal_game_data() const {
  return game_data_.Get();
}
inline void CMsgClientWelcome::_internal_set_game_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  game_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_game_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  game_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.game_data)
}
inline void CMsgClientWelcome::set_game_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  game_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.game_data)
}
inline void CMsgClientWelcome::set_game_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  game_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.game_data)
}
inline std::string* CMsgClientWelcome::_internal_mutable_game_data() {
  _has_bits_[0] |= 0x00000001u;
  return game_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_game_data() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.game_data)
  if (!_internal_has_game_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return game_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_game_data(std::string* game_data) {
  if (game_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  game_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.game_data)
}

// repeated .CMsgSOCacheSubscribed outofdate_subscribed_caches = 3;
inline int CMsgClientWelcome::_internal_outofdate_subscribed_caches_size() const {
  return outofdate_subscribed_caches_.size();
}
inline int CMsgClientWelcome::outofdate_subscribed_caches_size() const {
  return _internal_outofdate_subscribed_caches_size();
}
inline void CMsgClientWelcome::clear_outofdate_subscribed_caches() {
  outofdate_subscribed_caches_.Clear();
}
inline ::CMsgSOCacheSubscribed* CMsgClientWelcome::mutable_outofdate_subscribed_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed >*
CMsgClientWelcome::mutable_outofdate_subscribed_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWelcome.outofdate_subscribed_caches)
  return &outofdate_subscribed_caches_;
}
inline const ::CMsgSOCacheSubscribed& CMsgClientWelcome::_internal_outofdate_subscribed_caches(int index) const {
  return outofdate_subscribed_caches_.Get(index);
}
inline const ::CMsgSOCacheSubscribed& CMsgClientWelcome::outofdate_subscribed_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.outofdate_subscribed_caches)
  return _internal_outofdate_subscribed_caches(index);
}
inline ::CMsgSOCacheSubscribed* CMsgClientWelcome::_internal_add_outofdate_subscribed_caches() {
  return outofdate_subscribed_caches_.Add();
}
inline ::CMsgSOCacheSubscribed* CMsgClientWelcome::add_outofdate_subscribed_caches() {
  // @@protoc_insertion_point(field_add:CMsgClientWelcome.outofdate_subscribed_caches)
  return _internal_add_outofdate_subscribed_caches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscribed >&
CMsgClientWelcome::outofdate_subscribed_caches() const {
  // @@protoc_insertion_point(field_list:CMsgClientWelcome.outofdate_subscribed_caches)
  return outofdate_subscribed_caches_;
}

// repeated .CMsgSOCacheSubscriptionCheck uptodate_subscribed_caches = 4;
inline int CMsgClientWelcome::_internal_uptodate_subscribed_caches_size() const {
  return uptodate_subscribed_caches_.size();
}
inline int CMsgClientWelcome::uptodate_subscribed_caches_size() const {
  return _internal_uptodate_subscribed_caches_size();
}
inline void CMsgClientWelcome::clear_uptodate_subscribed_caches() {
  uptodate_subscribed_caches_.Clear();
}
inline ::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::mutable_uptodate_subscribed_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >*
CMsgClientWelcome::mutable_uptodate_subscribed_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientWelcome.uptodate_subscribed_caches)
  return &uptodate_subscribed_caches_;
}
inline const ::CMsgSOCacheSubscriptionCheck& CMsgClientWelcome::_internal_uptodate_subscribed_caches(int index) const {
  return uptodate_subscribed_caches_.Get(index);
}
inline const ::CMsgSOCacheSubscriptionCheck& CMsgClientWelcome::uptodate_subscribed_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.uptodate_subscribed_caches)
  return _internal_uptodate_subscribed_caches(index);
}
inline ::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::_internal_add_uptodate_subscribed_caches() {
  return uptodate_subscribed_caches_.Add();
}
inline ::CMsgSOCacheSubscriptionCheck* CMsgClientWelcome::add_uptodate_subscribed_caches() {
  // @@protoc_insertion_point(field_add:CMsgClientWelcome.uptodate_subscribed_caches)
  return _internal_add_uptodate_subscribed_caches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSOCacheSubscriptionCheck >&
CMsgClientWelcome::uptodate_subscribed_caches() const {
  // @@protoc_insertion_point(field_list:CMsgClientWelcome.uptodate_subscribed_caches)
  return uptodate_subscribed_caches_;
}

// optional .CMsgClientWelcome.Location location = 5;
inline bool CMsgClientWelcome::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgClientWelcome::has_location() const {
  return _internal_has_location();
}
inline void CMsgClientWelcome::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::CMsgClientWelcome_Location& CMsgClientWelcome::_internal_location() const {
  const ::CMsgClientWelcome_Location* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgClientWelcome_Location&>(
      ::_CMsgClientWelcome_Location_default_instance_);
}
inline const ::CMsgClientWelcome_Location& CMsgClientWelcome::location() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.location)
  return _internal_location();
}
inline void CMsgClientWelcome::unsafe_arena_set_allocated_location(
    ::CMsgClientWelcome_Location* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientWelcome.location)
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::release_location() {
  _has_bits_[0] &= ~0x00000040u;
  ::CMsgClientWelcome_Location* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.location)
  _has_bits_[0] &= ~0x00000040u;
  ::CMsgClientWelcome_Location* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000040u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgClientWelcome_Location>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgClientWelcome_Location* CMsgClientWelcome::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.location)
  return _internal_mutable_location();
}
inline void CMsgClientWelcome::set_allocated_location(::CMsgClientWelcome_Location* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.location)
}

// optional bytes save_game_key = 6;
inline bool CMsgClientWelcome::_internal_has_save_game_key() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_save_game_key() const {
  return _internal_has_save_game_key();
}
inline void CMsgClientWelcome::clear_save_game_key() {
  save_game_key_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgClientWelcome::save_game_key() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.save_game_key)
  return _internal_save_game_key();
}
inline void CMsgClientWelcome::set_save_game_key(const std::string& value) {
  _internal_set_save_game_key(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.save_game_key)
}
inline std::string* CMsgClientWelcome::mutable_save_game_key() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.save_game_key)
  return _internal_mutable_save_game_key();
}
inline const std::string& CMsgClientWelcome::_internal_save_game_key() const {
  return save_game_key_.Get();
}
inline void CMsgClientWelcome::_internal_set_save_game_key(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  save_game_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_save_game_key(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  save_game_key_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.save_game_key)
}
inline void CMsgClientWelcome::set_save_game_key(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  save_game_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.save_game_key)
}
inline void CMsgClientWelcome::set_save_game_key(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  save_game_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.save_game_key)
}
inline std::string* CMsgClientWelcome::_internal_mutable_save_game_key() {
  _has_bits_[0] |= 0x00000002u;
  return save_game_key_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_save_game_key() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.save_game_key)
  if (!_internal_has_save_game_key()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return save_game_key_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_save_game_key(std::string* save_game_key) {
  if (save_game_key != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  save_game_key_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), save_game_key,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.save_game_key)
}

// optional fixed32 item_schema_crc = 7;
inline bool CMsgClientWelcome::_internal_has_item_schema_crc() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_item_schema_crc() const {
  return _internal_has_item_schema_crc();
}
inline void CMsgClientWelcome::clear_item_schema_crc() {
  item_schema_crc_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_item_schema_crc() const {
  return item_schema_crc_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::item_schema_crc() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.item_schema_crc)
  return _internal_item_schema_crc();
}
inline void CMsgClientWelcome::_internal_set_item_schema_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  item_schema_crc_ = value;
}
inline void CMsgClientWelcome::set_item_schema_crc(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_schema_crc(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.item_schema_crc)
}

// optional string items_game_url = 8;
inline bool CMsgClientWelcome::_internal_has_items_game_url() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_items_game_url() const {
  return _internal_has_items_game_url();
}
inline void CMsgClientWelcome::clear_items_game_url() {
  items_game_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgClientWelcome::items_game_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.items_game_url)
  return _internal_items_game_url();
}
inline void CMsgClientWelcome::set_items_game_url(const std::string& value) {
  _internal_set_items_game_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.items_game_url)
}
inline std::string* CMsgClientWelcome::mutable_items_game_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.items_game_url)
  return _internal_mutable_items_game_url();
}
inline const std::string& CMsgClientWelcome::_internal_items_game_url() const {
  return items_game_url_.Get();
}
inline void CMsgClientWelcome::_internal_set_items_game_url(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  items_game_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_items_game_url(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  items_game_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.items_game_url)
}
inline void CMsgClientWelcome::set_items_game_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  items_game_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.items_game_url)
}
inline void CMsgClientWelcome::set_items_game_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  items_game_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.items_game_url)
}
inline std::string* CMsgClientWelcome::_internal_mutable_items_game_url() {
  _has_bits_[0] |= 0x00000004u;
  return items_game_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_items_game_url() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.items_game_url)
  if (!_internal_has_items_game_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return items_game_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_items_game_url(std::string* items_game_url) {
  if (items_game_url != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  items_game_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), items_game_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.items_game_url)
}

// optional uint32 gc_socache_file_version = 9;
inline bool CMsgClientWelcome::_internal_has_gc_socache_file_version() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_gc_socache_file_version() const {
  return _internal_has_gc_socache_file_version();
}
inline void CMsgClientWelcome::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_gc_socache_file_version() const {
  return gc_socache_file_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.gc_socache_file_version)
  return _internal_gc_socache_file_version();
}
inline void CMsgClientWelcome::_internal_set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  gc_socache_file_version_ = value;
}
inline void CMsgClientWelcome::set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gc_socache_file_version(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.gc_socache_file_version)
}

// optional string txn_country_code = 10;
inline bool CMsgClientWelcome::_internal_has_txn_country_code() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_txn_country_code() const {
  return _internal_has_txn_country_code();
}
inline void CMsgClientWelcome::clear_txn_country_code() {
  txn_country_code_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CMsgClientWelcome::txn_country_code() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.txn_country_code)
  return _internal_txn_country_code();
}
inline void CMsgClientWelcome::set_txn_country_code(const std::string& value) {
  _internal_set_txn_country_code(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.txn_country_code)
}
inline std::string* CMsgClientWelcome::mutable_txn_country_code() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.txn_country_code)
  return _internal_mutable_txn_country_code();
}
inline const std::string& CMsgClientWelcome::_internal_txn_country_code() const {
  return txn_country_code_.Get();
}
inline void CMsgClientWelcome::_internal_set_txn_country_code(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_txn_country_code(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.txn_country_code)
}
inline void CMsgClientWelcome::set_txn_country_code(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.txn_country_code)
}
inline void CMsgClientWelcome::set_txn_country_code(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  txn_country_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.txn_country_code)
}
inline std::string* CMsgClientWelcome::_internal_mutable_txn_country_code() {
  _has_bits_[0] |= 0x00000008u;
  return txn_country_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_txn_country_code() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.txn_country_code)
  if (!_internal_has_txn_country_code()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return txn_country_code_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_txn_country_code(std::string* txn_country_code) {
  if (txn_country_code != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  txn_country_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), txn_country_code,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.txn_country_code)
}

// optional bytes game_data2 = 11;
inline bool CMsgClientWelcome::_internal_has_game_data2() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_game_data2() const {
  return _internal_has_game_data2();
}
inline void CMsgClientWelcome::clear_game_data2() {
  game_data2_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CMsgClientWelcome::game_data2() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.game_data2)
  return _internal_game_data2();
}
inline void CMsgClientWelcome::set_game_data2(const std::string& value) {
  _internal_set_game_data2(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.game_data2)
}
inline std::string* CMsgClientWelcome::mutable_game_data2() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.game_data2)
  return _internal_mutable_game_data2();
}
inline const std::string& CMsgClientWelcome::_internal_game_data2() const {
  return game_data2_.Get();
}
inline void CMsgClientWelcome::_internal_set_game_data2(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  game_data2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_game_data2(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  game_data2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.game_data2)
}
inline void CMsgClientWelcome::set_game_data2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  game_data2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.game_data2)
}
inline void CMsgClientWelcome::set_game_data2(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  game_data2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.game_data2)
}
inline std::string* CMsgClientWelcome::_internal_mutable_game_data2() {
  _has_bits_[0] |= 0x00000010u;
  return game_data2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_game_data2() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.game_data2)
  if (!_internal_has_game_data2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return game_data2_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_game_data2(std::string* game_data2) {
  if (game_data2 != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  game_data2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), game_data2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.game_data2)
}

// optional uint32 rtime32_gc_welcome_timestamp = 12;
inline bool CMsgClientWelcome::_internal_has_rtime32_gc_welcome_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_rtime32_gc_welcome_timestamp() const {
  return _internal_has_rtime32_gc_welcome_timestamp();
}
inline void CMsgClientWelcome::clear_rtime32_gc_welcome_timestamp() {
  rtime32_gc_welcome_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_rtime32_gc_welcome_timestamp() const {
  return rtime32_gc_welcome_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::rtime32_gc_welcome_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.rtime32_gc_welcome_timestamp)
  return _internal_rtime32_gc_welcome_timestamp();
}
inline void CMsgClientWelcome::_internal_set_rtime32_gc_welcome_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  rtime32_gc_welcome_timestamp_ = value;
}
inline void CMsgClientWelcome::set_rtime32_gc_welcome_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime32_gc_welcome_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.rtime32_gc_welcome_timestamp)
}

// optional uint32 currency = 13;
inline bool CMsgClientWelcome::_internal_has_currency() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_currency() const {
  return _internal_has_currency();
}
inline void CMsgClientWelcome::clear_currency() {
  currency_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_currency() const {
  return currency_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::currency() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.currency)
  return _internal_currency();
}
inline void CMsgClientWelcome::_internal_set_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  currency_ = value;
}
inline void CMsgClientWelcome::set_currency(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.currency)
}

// optional uint32 balance = 14;
inline bool CMsgClientWelcome::_internal_has_balance() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_balance() const {
  return _internal_has_balance();
}
inline void CMsgClientWelcome::clear_balance() {
  balance_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::_internal_balance() const {
  return balance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientWelcome::balance() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.balance)
  return _internal_balance();
}
inline void CMsgClientWelcome::_internal_set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  balance_ = value;
}
inline void CMsgClientWelcome::set_balance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.balance)
}

// optional string balance_url = 15;
inline bool CMsgClientWelcome::_internal_has_balance_url() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_balance_url() const {
  return _internal_has_balance_url();
}
inline void CMsgClientWelcome::clear_balance_url() {
  balance_url_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000020u;
}
inline const std::string& CMsgClientWelcome::balance_url() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.balance_url)
  return _internal_balance_url();
}
inline void CMsgClientWelcome::set_balance_url(const std::string& value) {
  _internal_set_balance_url(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.balance_url)
}
inline std::string* CMsgClientWelcome::mutable_balance_url() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.balance_url)
  return _internal_mutable_balance_url();
}
inline const std::string& CMsgClientWelcome::_internal_balance_url() const {
  return balance_url_.Get();
}
inline void CMsgClientWelcome::_internal_set_balance_url(const std::string& value) {
  _has_bits_[0] |= 0x00000020u;
  balance_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientWelcome::set_balance_url(std::string&& value) {
  _has_bits_[0] |= 0x00000020u;
  balance_url_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientWelcome.balance_url)
}
inline void CMsgClientWelcome::set_balance_url(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000020u;
  balance_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientWelcome.balance_url)
}
inline void CMsgClientWelcome::set_balance_url(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000020u;
  balance_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientWelcome.balance_url)
}
inline std::string* CMsgClientWelcome::_internal_mutable_balance_url() {
  _has_bits_[0] |= 0x00000020u;
  return balance_url_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientWelcome::release_balance_url() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.balance_url)
  if (!_internal_has_balance_url()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000020u;
  return balance_url_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientWelcome::set_allocated_balance_url(std::string* balance_url) {
  if (balance_url != nullptr) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  balance_url_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), balance_url,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.balance_url)
}

// optional bool has_accepted_china_ssa = 16;
inline bool CMsgClientWelcome::_internal_has_has_accepted_china_ssa() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_has_accepted_china_ssa() const {
  return _internal_has_has_accepted_china_ssa();
}
inline void CMsgClientWelcome::clear_has_accepted_china_ssa() {
  has_accepted_china_ssa_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgClientWelcome::_internal_has_accepted_china_ssa() const {
  return has_accepted_china_ssa_;
}
inline bool CMsgClientWelcome::has_accepted_china_ssa() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.has_accepted_china_ssa)
  return _internal_has_accepted_china_ssa();
}
inline void CMsgClientWelcome::_internal_set_has_accepted_china_ssa(bool value) {
  _has_bits_[0] |= 0x00004000u;
  has_accepted_china_ssa_ = value;
}
inline void CMsgClientWelcome::set_has_accepted_china_ssa(bool value) {
  _internal_set_has_accepted_china_ssa(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.has_accepted_china_ssa)
}

// optional bool is_banned_steam_china = 17;
inline bool CMsgClientWelcome::_internal_has_is_banned_steam_china() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgClientWelcome::has_is_banned_steam_china() const {
  return _internal_has_is_banned_steam_china();
}
inline void CMsgClientWelcome::clear_is_banned_steam_china() {
  is_banned_steam_china_ = false;
  _has_bits_[0] &= ~0x00008000u;
}
inline bool CMsgClientWelcome::_internal_is_banned_steam_china() const {
  return is_banned_steam_china_;
}
inline bool CMsgClientWelcome::is_banned_steam_china() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.is_banned_steam_china)
  return _internal_is_banned_steam_china();
}
inline void CMsgClientWelcome::_internal_set_is_banned_steam_china(bool value) {
  _has_bits_[0] |= 0x00008000u;
  is_banned_steam_china_ = value;
}
inline void CMsgClientWelcome::set_is_banned_steam_china(bool value) {
  _internal_set_is_banned_steam_china(value);
  // @@protoc_insertion_point(field_set:CMsgClientWelcome.is_banned_steam_china)
}

// optional .CExtraMsgBlock additional_welcome_msgs = 18;
inline bool CMsgClientWelcome::_internal_has_additional_welcome_msgs() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || additional_welcome_msgs_ != nullptr);
  return value;
}
inline bool CMsgClientWelcome::has_additional_welcome_msgs() const {
  return _internal_has_additional_welcome_msgs();
}
inline void CMsgClientWelcome::clear_additional_welcome_msgs() {
  if (additional_welcome_msgs_ != nullptr) additional_welcome_msgs_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::CExtraMsgBlock& CMsgClientWelcome::_internal_additional_welcome_msgs() const {
  const ::CExtraMsgBlock* p = additional_welcome_msgs_;
  return p != nullptr ? *p : reinterpret_cast<const ::CExtraMsgBlock&>(
      ::_CExtraMsgBlock_default_instance_);
}
inline const ::CExtraMsgBlock& CMsgClientWelcome::additional_welcome_msgs() const {
  // @@protoc_insertion_point(field_get:CMsgClientWelcome.additional_welcome_msgs)
  return _internal_additional_welcome_msgs();
}
inline void CMsgClientWelcome::unsafe_arena_set_allocated_additional_welcome_msgs(
    ::CExtraMsgBlock* additional_welcome_msgs) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(additional_welcome_msgs_);
  }
  additional_welcome_msgs_ = additional_welcome_msgs;
  if (additional_welcome_msgs) {
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientWelcome.additional_welcome_msgs)
}
inline ::CExtraMsgBlock* CMsgClientWelcome::release_additional_welcome_msgs() {
  _has_bits_[0] &= ~0x00000080u;
  ::CExtraMsgBlock* temp = additional_welcome_msgs_;
  additional_welcome_msgs_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CExtraMsgBlock* CMsgClientWelcome::unsafe_arena_release_additional_welcome_msgs() {
  // @@protoc_insertion_point(field_release:CMsgClientWelcome.additional_welcome_msgs)
  _has_bits_[0] &= ~0x00000080u;
  ::CExtraMsgBlock* temp = additional_welcome_msgs_;
  additional_welcome_msgs_ = nullptr;
  return temp;
}
inline ::CExtraMsgBlock* CMsgClientWelcome::_internal_mutable_additional_welcome_msgs() {
  _has_bits_[0] |= 0x00000080u;
  if (additional_welcome_msgs_ == nullptr) {
    auto* p = CreateMaybeMessage<::CExtraMsgBlock>(GetArena());
    additional_welcome_msgs_ = p;
  }
  return additional_welcome_msgs_;
}
inline ::CExtraMsgBlock* CMsgClientWelcome::mutable_additional_welcome_msgs() {
  // @@protoc_insertion_point(field_mutable:CMsgClientWelcome.additional_welcome_msgs)
  return _internal_mutable_additional_welcome_msgs();
}
inline void CMsgClientWelcome::set_allocated_additional_welcome_msgs(::CExtraMsgBlock* additional_welcome_msgs) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete additional_welcome_msgs_;
  }
  if (additional_welcome_msgs) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(additional_welcome_msgs);
    if (message_arena != submessage_arena) {
      additional_welcome_msgs = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, additional_welcome_msgs, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  additional_welcome_msgs_ = additional_welcome_msgs;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientWelcome.additional_welcome_msgs)
}

// -------------------------------------------------------------------

// CMsgConnectionStatus

// optional .GCConnectionStatus status = 1 [default = GCConnectionStatus_HAVE_SESSION];
inline bool CMsgConnectionStatus::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_status() const {
  return _internal_has_status();
}
inline void CMsgConnectionStatus::clear_status() {
  status_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::GCConnectionStatus CMsgConnectionStatus::_internal_status() const {
  return static_cast< ::GCConnectionStatus >(status_);
}
inline ::GCConnectionStatus CMsgConnectionStatus::status() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.status)
  return _internal_status();
}
inline void CMsgConnectionStatus::_internal_set_status(::GCConnectionStatus value) {
  assert(::GCConnectionStatus_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  status_ = value;
}
inline void CMsgConnectionStatus::set_status(::GCConnectionStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.status)
}

// optional uint32 client_session_need = 2;
inline bool CMsgConnectionStatus::_internal_has_client_session_need() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_client_session_need() const {
  return _internal_has_client_session_need();
}
inline void CMsgConnectionStatus::clear_client_session_need() {
  client_session_need_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgConnectionStatus::_internal_client_session_need() const {
  return client_session_need_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgConnectionStatus::client_session_need() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.client_session_need)
  return _internal_client_session_need();
}
inline void CMsgConnectionStatus::_internal_set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  client_session_need_ = value;
}
inline void CMsgConnectionStatus::set_client_session_need(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_session_need(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.client_session_need)
}

// optional int32 queue_position = 3;
inline bool CMsgConnectionStatus::_internal_has_queue_position() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_queue_position() const {
  return _internal_has_queue_position();
}
inline void CMsgConnectionStatus::clear_queue_position() {
  queue_position_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::_internal_queue_position() const {
  return queue_position_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::queue_position() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_position)
  return _internal_queue_position();
}
inline void CMsgConnectionStatus::_internal_set_queue_position(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  queue_position_ = value;
}
inline void CMsgConnectionStatus::set_queue_position(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_queue_position(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_position)
}

// optional int32 queue_size = 4;
inline bool CMsgConnectionStatus::_internal_has_queue_size() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_queue_size() const {
  return _internal_has_queue_size();
}
inline void CMsgConnectionStatus::clear_queue_size() {
  queue_size_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::_internal_queue_size() const {
  return queue_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::queue_size() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.queue_size)
  return _internal_queue_size();
}
inline void CMsgConnectionStatus::_internal_set_queue_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  queue_size_ = value;
}
inline void CMsgConnectionStatus::set_queue_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_queue_size(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.queue_size)
}

// optional int32 wait_seconds = 5;
inline bool CMsgConnectionStatus::_internal_has_wait_seconds() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_wait_seconds() const {
  return _internal_has_wait_seconds();
}
inline void CMsgConnectionStatus::clear_wait_seconds() {
  wait_seconds_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::_internal_wait_seconds() const {
  return wait_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::wait_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.wait_seconds)
  return _internal_wait_seconds();
}
inline void CMsgConnectionStatus::_internal_set_wait_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  wait_seconds_ = value;
}
inline void CMsgConnectionStatus::set_wait_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_wait_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.wait_seconds)
}

// optional int32 estimated_wait_seconds_remaining = 6;
inline bool CMsgConnectionStatus::_internal_has_estimated_wait_seconds_remaining() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgConnectionStatus::has_estimated_wait_seconds_remaining() const {
  return _internal_has_estimated_wait_seconds_remaining();
}
inline void CMsgConnectionStatus::clear_estimated_wait_seconds_remaining() {
  estimated_wait_seconds_remaining_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::_internal_estimated_wait_seconds_remaining() const {
  return estimated_wait_seconds_remaining_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgConnectionStatus::estimated_wait_seconds_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgConnectionStatus.estimated_wait_seconds_remaining)
  return _internal_estimated_wait_seconds_remaining();
}
inline void CMsgConnectionStatus::_internal_set_estimated_wait_seconds_remaining(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  estimated_wait_seconds_remaining_ = value;
}
inline void CMsgConnectionStatus::set_estimated_wait_seconds_remaining(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_estimated_wait_seconds_remaining(value);
  // @@protoc_insertion_point(field_set:CMsgConnectionStatus.estimated_wait_seconds_remaining)
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions

// optional uint32 service_id = 1;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.service_id)
  return _internal_service_id();
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  service_id_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.service_id)
}

// optional uint64 version = 2;
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::has_version() const {
  return _internal_has_version();
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.version)
  return _internal_version();
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions.version)
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheSubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheSubscribe::_internal_has_subscriber() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe::has_subscriber() const {
  return _internal_has_subscriber();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscriber() {
  subscriber_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::_internal_subscriber() const {
  return subscriber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::subscriber() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.subscriber)
  return _internal_subscriber();
}
inline void CMsgGCToGCSOCacheSubscribe::_internal_set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  subscriber_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subscriber(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.subscriber)
}

// optional fixed64 subscribe_to_id = 2;
inline bool CMsgGCToGCSOCacheSubscribe::_internal_has_subscribe_to_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe::has_subscribe_to_id() const {
  return _internal_has_subscribe_to_id();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscribe_to_id() {
  subscribe_to_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::_internal_subscribe_to_id() const {
  return subscribe_to_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::subscribe_to_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.subscribe_to_id)
  return _internal_subscribe_to_id();
}
inline void CMsgGCToGCSOCacheSubscribe::_internal_set_subscribe_to_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  subscribe_to_id_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscribe_to_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subscribe_to_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.subscribe_to_id)
}

// optional fixed64 sync_version = 3;
inline bool CMsgGCToGCSOCacheSubscribe::_internal_has_sync_version() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe::has_sync_version() const {
  return _internal_has_sync_version();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_sync_version() {
  sync_version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::_internal_sync_version() const {
  return sync_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheSubscribe::sync_version() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.sync_version)
  return _internal_sync_version();
}
inline void CMsgGCToGCSOCacheSubscribe::_internal_set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  sync_version_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe::set_sync_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_sync_version(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.sync_version)
}

// repeated .CMsgGCToGCSOCacheSubscribe.CMsgHaveVersions have_versions = 4;
inline int CMsgGCToGCSOCacheSubscribe::_internal_have_versions_size() const {
  return have_versions_.size();
}
inline int CMsgGCToGCSOCacheSubscribe::have_versions_size() const {
  return _internal_have_versions_size();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_have_versions() {
  have_versions_.Clear();
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::mutable_have_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >*
CMsgGCToGCSOCacheSubscribe::mutable_have_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCSOCacheSubscribe.have_versions)
  return &have_versions_;
}
inline const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& CMsgGCToGCSOCacheSubscribe::_internal_have_versions(int index) const {
  return have_versions_.Get(index);
}
inline const ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions& CMsgGCToGCSOCacheSubscribe::have_versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.have_versions)
  return _internal_have_versions(index);
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::_internal_add_have_versions() {
  return have_versions_.Add();
}
inline ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions* CMsgGCToGCSOCacheSubscribe::add_have_versions() {
  // @@protoc_insertion_point(field_add:CMsgGCToGCSOCacheSubscribe.have_versions)
  return _internal_add_have_versions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions >&
CMsgGCToGCSOCacheSubscribe::have_versions() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCSOCacheSubscribe.have_versions)
  return have_versions_;
}

// optional uint32 subscribe_to_type = 5;
inline bool CMsgGCToGCSOCacheSubscribe::_internal_has_subscribe_to_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheSubscribe::has_subscribe_to_type() const {
  return _internal_has_subscribe_to_type();
}
inline void CMsgGCToGCSOCacheSubscribe::clear_subscribe_to_type() {
  subscribe_to_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheSubscribe::_internal_subscribe_to_type() const {
  return subscribe_to_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheSubscribe::subscribe_to_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheSubscribe.subscribe_to_type)
  return _internal_subscribe_to_type();
}
inline void CMsgGCToGCSOCacheSubscribe::_internal_set_subscribe_to_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  subscribe_to_type_ = value;
}
inline void CMsgGCToGCSOCacheSubscribe::set_subscribe_to_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscribe_to_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheSubscribe.subscribe_to_type)
}

// -------------------------------------------------------------------

// CMsgGCToGCSOCacheUnsubscribe

// optional fixed64 subscriber = 1;
inline bool CMsgGCToGCSOCacheUnsubscribe::_internal_has_subscriber() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheUnsubscribe::has_subscriber() const {
  return _internal_has_subscriber();
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_subscriber() {
  subscriber_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheUnsubscribe::_internal_subscriber() const {
  return subscriber_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheUnsubscribe::subscriber() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheUnsubscribe.subscriber)
  return _internal_subscriber();
}
inline void CMsgGCToGCSOCacheUnsubscribe::_internal_set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  subscriber_ = value;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_subscriber(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_subscriber(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheUnsubscribe.subscriber)
}

// optional fixed64 unsubscribe_from_id = 2;
inline bool CMsgGCToGCSOCacheUnsubscribe::_internal_has_unsubscribe_from_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheUnsubscribe::has_unsubscribe_from_id() const {
  return _internal_has_unsubscribe_from_id();
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_unsubscribe_from_id() {
  unsubscribe_from_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheUnsubscribe::_internal_unsubscribe_from_id() const {
  return unsubscribe_from_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCSOCacheUnsubscribe::unsubscribe_from_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from_id)
  return _internal_unsubscribe_from_id();
}
inline void CMsgGCToGCSOCacheUnsubscribe::_internal_set_unsubscribe_from_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  unsubscribe_from_id_ = value;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_unsubscribe_from_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_unsubscribe_from_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from_id)
}

// optional uint32 unsubscribe_from_type = 3;
inline bool CMsgGCToGCSOCacheUnsubscribe::_internal_has_unsubscribe_from_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCSOCacheUnsubscribe::has_unsubscribe_from_type() const {
  return _internal_has_unsubscribe_from_type();
}
inline void CMsgGCToGCSOCacheUnsubscribe::clear_unsubscribe_from_type() {
  unsubscribe_from_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheUnsubscribe::_internal_unsubscribe_from_type() const {
  return unsubscribe_from_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCSOCacheUnsubscribe::unsubscribe_from_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from_type)
  return _internal_unsubscribe_from_type();
}
inline void CMsgGCToGCSOCacheUnsubscribe::_internal_set_unsubscribe_from_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  unsubscribe_from_type_ = value;
}
inline void CMsgGCToGCSOCacheUnsubscribe::set_unsubscribe_from_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unsubscribe_from_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCSOCacheUnsubscribe.unsubscribe_from_type)
}

// -------------------------------------------------------------------

// CMsgGCClientPing

// -------------------------------------------------------------------

// CMsgGCToGCForwardAccountDetails

// optional fixed64 steamid = 1;
inline bool CMsgGCToGCForwardAccountDetails::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCForwardAccountDetails::has_steamid() const {
  return _internal_has_steamid();
}
inline void CMsgGCToGCForwardAccountDetails::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCForwardAccountDetails::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCForwardAccountDetails::steamid() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCForwardAccountDetails.steamid)
  return _internal_steamid();
}
inline void CMsgGCToGCForwardAccountDetails::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CMsgGCToGCForwardAccountDetails::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCForwardAccountDetails.steamid)
}

// optional .CGCSystemMsg_GetAccountDetails_Response account_details = 2;
inline bool CMsgGCToGCForwardAccountDetails::_internal_has_account_details() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || account_details_ != nullptr);
  return value;
}
inline bool CMsgGCToGCForwardAccountDetails::has_account_details() const {
  return _internal_has_account_details();
}
inline const ::CGCSystemMsg_GetAccountDetails_Response& CMsgGCToGCForwardAccountDetails::_internal_account_details() const {
  const ::CGCSystemMsg_GetAccountDetails_Response* p = account_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CGCSystemMsg_GetAccountDetails_Response&>(
      ::_CGCSystemMsg_GetAccountDetails_Response_default_instance_);
}
inline const ::CGCSystemMsg_GetAccountDetails_Response& CMsgGCToGCForwardAccountDetails::account_details() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCForwardAccountDetails.account_details)
  return _internal_account_details();
}
inline void CMsgGCToGCForwardAccountDetails::unsafe_arena_set_allocated_account_details(
    ::CGCSystemMsg_GetAccountDetails_Response* account_details) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_details_);
  }
  account_details_ = account_details;
  if (account_details) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCForwardAccountDetails.account_details)
}
inline ::CGCSystemMsg_GetAccountDetails_Response* CMsgGCToGCForwardAccountDetails::release_account_details() {
  _has_bits_[0] &= ~0x00000001u;
  ::CGCSystemMsg_GetAccountDetails_Response* temp = account_details_;
  account_details_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CGCSystemMsg_GetAccountDetails_Response* CMsgGCToGCForwardAccountDetails::unsafe_arena_release_account_details() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCForwardAccountDetails.account_details)
  _has_bits_[0] &= ~0x00000001u;
  ::CGCSystemMsg_GetAccountDetails_Response* temp = account_details_;
  account_details_ = nullptr;
  return temp;
}
inline ::CGCSystemMsg_GetAccountDetails_Response* CMsgGCToGCForwardAccountDetails::_internal_mutable_account_details() {
  _has_bits_[0] |= 0x00000001u;
  if (account_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CGCSystemMsg_GetAccountDetails_Response>(GetArena());
    account_details_ = p;
  }
  return account_details_;
}
inline ::CGCSystemMsg_GetAccountDetails_Response* CMsgGCToGCForwardAccountDetails::mutable_account_details() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCForwardAccountDetails.account_details)
  return _internal_mutable_account_details();
}
inline void CMsgGCToGCForwardAccountDetails::set_allocated_account_details(::CGCSystemMsg_GetAccountDetails_Response* account_details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_details_);
  }
  if (account_details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(account_details)->GetArena();
    if (message_arena != submessage_arena) {
      account_details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, account_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  account_details_ = account_details;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCForwardAccountDetails.account_details)
}

// optional uint32 age_seconds = 3;
inline bool CMsgGCToGCForwardAccountDetails::_internal_has_age_seconds() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCForwardAccountDetails::has_age_seconds() const {
  return _internal_has_age_seconds();
}
inline void CMsgGCToGCForwardAccountDetails::clear_age_seconds() {
  age_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCForwardAccountDetails::_internal_age_seconds() const {
  return age_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCForwardAccountDetails::age_seconds() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCForwardAccountDetails.age_seconds)
  return _internal_age_seconds();
}
inline void CMsgGCToGCForwardAccountDetails::_internal_set_age_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  age_seconds_ = value;
}
inline void CMsgGCToGCForwardAccountDetails::set_age_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_age_seconds(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCForwardAccountDetails.age_seconds)
}

// -------------------------------------------------------------------

// CMsgGCToGCLoadSessionSOCache

// optional uint32 account_id = 1;
inline bool CMsgGCToGCLoadSessionSOCache::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCLoadSessionSOCache::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgGCToGCLoadSessionSOCache::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCLoadSessionSOCache::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCLoadSessionSOCache::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCLoadSessionSOCache.account_id)
  return _internal_account_id();
}
inline void CMsgGCToGCLoadSessionSOCache::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
}
inline void CMsgGCToGCLoadSessionSOCache::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCLoadSessionSOCache.account_id)
}

// optional .CMsgGCToGCForwardAccountDetails forward_account_details = 2;
inline bool CMsgGCToGCLoadSessionSOCache::_internal_has_forward_account_details() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || forward_account_details_ != nullptr);
  return value;
}
inline bool CMsgGCToGCLoadSessionSOCache::has_forward_account_details() const {
  return _internal_has_forward_account_details();
}
inline void CMsgGCToGCLoadSessionSOCache::clear_forward_account_details() {
  if (forward_account_details_ != nullptr) forward_account_details_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGCToGCForwardAccountDetails& CMsgGCToGCLoadSessionSOCache::_internal_forward_account_details() const {
  const ::CMsgGCToGCForwardAccountDetails* p = forward_account_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGCToGCForwardAccountDetails&>(
      ::_CMsgGCToGCForwardAccountDetails_default_instance_);
}
inline const ::CMsgGCToGCForwardAccountDetails& CMsgGCToGCLoadSessionSOCache::forward_account_details() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCLoadSessionSOCache.forward_account_details)
  return _internal_forward_account_details();
}
inline void CMsgGCToGCLoadSessionSOCache::unsafe_arena_set_allocated_forward_account_details(
    ::CMsgGCToGCForwardAccountDetails* forward_account_details) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(forward_account_details_);
  }
  forward_account_details_ = forward_account_details;
  if (forward_account_details) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCLoadSessionSOCache.forward_account_details)
}
inline ::CMsgGCToGCForwardAccountDetails* CMsgGCToGCLoadSessionSOCache::release_forward_account_details() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCToGCForwardAccountDetails* temp = forward_account_details_;
  forward_account_details_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGCToGCForwardAccountDetails* CMsgGCToGCLoadSessionSOCache::unsafe_arena_release_forward_account_details() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCLoadSessionSOCache.forward_account_details)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCToGCForwardAccountDetails* temp = forward_account_details_;
  forward_account_details_ = nullptr;
  return temp;
}
inline ::CMsgGCToGCForwardAccountDetails* CMsgGCToGCLoadSessionSOCache::_internal_mutable_forward_account_details() {
  _has_bits_[0] |= 0x00000001u;
  if (forward_account_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGCToGCForwardAccountDetails>(GetArena());
    forward_account_details_ = p;
  }
  return forward_account_details_;
}
inline ::CMsgGCToGCForwardAccountDetails* CMsgGCToGCLoadSessionSOCache::mutable_forward_account_details() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCLoadSessionSOCache.forward_account_details)
  return _internal_mutable_forward_account_details();
}
inline void CMsgGCToGCLoadSessionSOCache::set_allocated_forward_account_details(::CMsgGCToGCForwardAccountDetails* forward_account_details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete forward_account_details_;
  }
  if (forward_account_details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(forward_account_details);
    if (message_arena != submessage_arena) {
      forward_account_details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, forward_account_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  forward_account_details_ = forward_account_details;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCLoadSessionSOCache.forward_account_details)
}

// -------------------------------------------------------------------

// CMsgGCToGCLoadSessionSOCacheResponse

// -------------------------------------------------------------------

// CMsgGCToGCUpdateSessionStats

// optional uint32 user_sessions = 1;
inline bool CMsgGCToGCUpdateSessionStats::_internal_has_user_sessions() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSessionStats::has_user_sessions() const {
  return _internal_has_user_sessions();
}
inline void CMsgGCToGCUpdateSessionStats::clear_user_sessions() {
  user_sessions_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCUpdateSessionStats::_internal_user_sessions() const {
  return user_sessions_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCUpdateSessionStats::user_sessions() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSessionStats.user_sessions)
  return _internal_user_sessions();
}
inline void CMsgGCToGCUpdateSessionStats::_internal_set_user_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  user_sessions_ = value;
}
inline void CMsgGCToGCUpdateSessionStats::set_user_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_user_sessions(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSessionStats.user_sessions)
}

// optional uint32 server_sessions = 2;
inline bool CMsgGCToGCUpdateSessionStats::_internal_has_server_sessions() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSessionStats::has_server_sessions() const {
  return _internal_has_server_sessions();
}
inline void CMsgGCToGCUpdateSessionStats::clear_server_sessions() {
  server_sessions_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCUpdateSessionStats::_internal_server_sessions() const {
  return server_sessions_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCUpdateSessionStats::server_sessions() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSessionStats.server_sessions)
  return _internal_server_sessions();
}
inline void CMsgGCToGCUpdateSessionStats::_internal_set_server_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  server_sessions_ = value;
}
inline void CMsgGCToGCUpdateSessionStats::set_server_sessions(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_server_sessions(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSessionStats.server_sessions)
}

// optional bool in_logon_surge = 3;
inline bool CMsgGCToGCUpdateSessionStats::_internal_has_in_logon_surge() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCUpdateSessionStats::has_in_logon_surge() const {
  return _internal_has_in_logon_surge();
}
inline void CMsgGCToGCUpdateSessionStats::clear_in_logon_surge() {
  in_logon_surge_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToGCUpdateSessionStats::_internal_in_logon_surge() const {
  return in_logon_surge_;
}
inline bool CMsgGCToGCUpdateSessionStats::in_logon_surge() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCUpdateSessionStats.in_logon_surge)
  return _internal_in_logon_surge();
}
inline void CMsgGCToGCUpdateSessionStats::_internal_set_in_logon_surge(bool value) {
  _has_bits_[0] |= 0x00000004u;
  in_logon_surge_ = value;
}
inline void CMsgGCToGCUpdateSessionStats::set_in_logon_surge(bool value) {
  _internal_set_in_logon_surge(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCUpdateSessionStats.in_logon_surge)
}

// -------------------------------------------------------------------

// CMsgGCToClientRequestDropped

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription

// optional uint32 gameitemid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gameitemid_ = value;
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.gameitemid)
}

// optional string item_description = 2;
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_has_item_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::has_item_description() const {
  return _internal_has_item_description();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::clear_item_description() {
  item_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::item_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return _internal_item_description();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const std::string& value) {
  _internal_set_item_description(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::mutable_item_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  return _internal_mutable_item_description();
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_item_description() const {
  return item_description_.Get();
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_set_item_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  item_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  item_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_item_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  item_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::_internal_mutable_item_description() {
  _has_bits_[0] |= 0x00000001u;
  return item_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::release_item_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
  if (!_internal_has_item_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription::set_allocated_item_description(std::string* item_description) {
  if (item_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription.item_description)
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock

// optional string language = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::has_language() const {
  return _internal_has_language();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_language() {
  language_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::language() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return _internal_language();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const std::string& value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_language() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  return _internal_mutable_language();
}
inline const std::string& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_language() const {
  return language_.Get();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_set_language(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_language(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  language_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_mutable_language() {
  _has_bits_[0] |= 0x00000001u;
  return language_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::release_language() {
  // @@protoc_insertion_point(field_release:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
  if (!_internal_has_language()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return language_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::set_allocated_language(std::string* language) {
  if (language != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  language_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), language,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.language)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.SingleItemDescription descriptions = 2;
inline int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_descriptions_size() const {
  return descriptions_.size();
}
inline int CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions_size() const {
  return _internal_descriptions_size();
}
inline void CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::clear_descriptions() {
  descriptions_.Clear();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >*
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::mutable_descriptions() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return &descriptions_;
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_descriptions(int index) const {
  return descriptions_.Get(index);
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription& CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return _internal_descriptions(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::_internal_add_descriptions() {
  return descriptions_.Add();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription* CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::add_descriptions() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return _internal_add_descriptions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription >&
CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock::descriptions() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock.descriptions)
  return descriptions_;
}

// -------------------------------------------------------------------

// CWorkshop_PopulateItemDescriptions_Request

// optional uint32 appid = 1;
inline bool CWorkshop_PopulateItemDescriptions_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_PopulateItemDescriptions_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_PopulateItemDescriptions_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_PopulateItemDescriptions_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CWorkshop_PopulateItemDescriptions_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_PopulateItemDescriptions_Request.appid)
}

// repeated .CWorkshop_PopulateItemDescriptions_Request.ItemDescriptionsLanguageBlock languages = 2;
inline int CWorkshop_PopulateItemDescriptions_Request::_internal_languages_size() const {
  return languages_.size();
}
inline int CWorkshop_PopulateItemDescriptions_Request::languages_size() const {
  return _internal_languages_size();
}
inline void CWorkshop_PopulateItemDescriptions_Request::clear_languages() {
  languages_.Clear();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::mutable_languages(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >*
CWorkshop_PopulateItemDescriptions_Request::mutable_languages() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return &languages_;
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::_internal_languages(int index) const {
  return languages_.Get(index);
}
inline const ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock& CWorkshop_PopulateItemDescriptions_Request::languages(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_PopulateItemDescriptions_Request.languages)
  return _internal_languages(index);
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::_internal_add_languages() {
  return languages_.Add();
}
inline ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock* CWorkshop_PopulateItemDescriptions_Request::add_languages() {
  // @@protoc_insertion_point(field_add:CWorkshop_PopulateItemDescriptions_Request.languages)
  return _internal_add_languages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock >&
CWorkshop_PopulateItemDescriptions_Request::languages() const {
  // @@protoc_insertion_point(field_list:CWorkshop_PopulateItemDescriptions_Request.languages)
  return languages_;
}

// -------------------------------------------------------------------

// CWorkshop_GetContributors_Request

// optional uint32 appid = 1;
inline bool CWorkshop_GetContributors_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_GetContributors_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_GetContributors_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_GetContributors_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  appid_ = value;
}
inline void CWorkshop_GetContributors_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.appid)
}

// optional uint32 gameitemid = 2;
inline bool CWorkshop_GetContributors_Request::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_GetContributors_Request::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_GetContributors_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_GetContributors_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Request.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_GetContributors_Request::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gameitemid_ = value;
}
inline void CWorkshop_GetContributors_Request::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Request.gameitemid)
}

// -------------------------------------------------------------------

// CWorkshop_GetContributors_Response

// repeated fixed64 contributors = 1;
inline int CWorkshop_GetContributors_Response::_internal_contributors_size() const {
  return contributors_.size();
}
inline int CWorkshop_GetContributors_Response::contributors_size() const {
  return _internal_contributors_size();
}
inline void CWorkshop_GetContributors_Response::clear_contributors() {
  contributors_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_GetContributors_Response::_internal_contributors(int index) const {
  return contributors_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_GetContributors_Response::contributors(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_GetContributors_Response.contributors)
  return _internal_contributors(index);
}
inline void CWorkshop_GetContributors_Response::set_contributors(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  contributors_.Set(index, value);
  // @@protoc_insertion_point(field_set:CWorkshop_GetContributors_Response.contributors)
}
inline void CWorkshop_GetContributors_Response::_internal_add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  contributors_.Add(value);
}
inline void CWorkshop_GetContributors_Response::add_contributors(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_contributors(value);
  // @@protoc_insertion_point(field_add:CWorkshop_GetContributors_Response.contributors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CWorkshop_GetContributors_Response::_internal_contributors() const {
  return contributors_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CWorkshop_GetContributors_Response::contributors() const {
  // @@protoc_insertion_point(field_list:CWorkshop_GetContributors_Response.contributors)
  return _internal_contributors();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CWorkshop_GetContributors_Response::_internal_mutable_contributors() {
  return &contributors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CWorkshop_GetContributors_Response::mutable_contributors() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_GetContributors_Response.contributors)
  return _internal_mutable_contributors();
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule

// optional uint64 workshop_file_id = 1;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_workshop_file_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_workshop_file_id() const {
  return _internal_has_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_workshop_file_id() {
  workshop_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_workshop_file_id() const {
  return workshop_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::workshop_file_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
  return _internal_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  workshop_file_id_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_workshop_file_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.workshop_file_id)
}

// optional float revenue_percentage = 2;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_revenue_percentage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_revenue_percentage() const {
  return _internal_has_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_revenue_percentage() const {
  return revenue_percentage_;
}
inline float CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
  return _internal_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_revenue_percentage(float value) {
  _has_bits_[0] |= 0x00000004u;
  revenue_percentage_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_revenue_percentage(float value) {
  _internal_set_revenue_percentage(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_rule_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_rule_description() const {
  return _internal_has_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return _internal_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const std::string& value) {
  _internal_set_rule_description(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::mutable_rule_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  return _internal_mutable_rule_description();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_rule_description() const {
  return rule_description_.Get();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_rule_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_mutable_rule_description() {
  _has_bits_[0] |= 0x00000001u;
  return rule_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
  if (!_internal_has_rule_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rule_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_allocated_rule_description(std::string* rule_description) {
  if (rule_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rule_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rule_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_description)
}

// optional uint32 rule_type = 4 [default = 1];
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_has_rule_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::has_rule_type() const {
  return _internal_has_rule_type();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::clear_rule_type() {
  rule_type_ = 1u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_rule_type() const {
  return rule_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::rule_type() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_type)
  return _internal_rule_type();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::_internal_set_rule_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  rule_type_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule::set_rule_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rule_type(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule.rule_type)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule

// optional uint64 workshop_file_id = 1;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_has_workshop_file_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::has_workshop_file_id() const {
  return _internal_has_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_workshop_file_id() {
  workshop_file_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_workshop_file_id() const {
  return workshop_file_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::workshop_file_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.workshop_file_id)
  return _internal_workshop_file_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  workshop_file_id_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_workshop_file_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_workshop_file_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.workshop_file_id)
}

// optional string rule_description = 2;
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_has_rule_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::has_rule_description() const {
  return _internal_has_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  return _internal_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const std::string& value) {
  _internal_set_rule_description(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::mutable_rule_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  return _internal_mutable_rule_description();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_rule_description() const {
  return rule_description_.Get();
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_set_rule_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_rule_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::_internal_mutable_rule_description() {
  _has_bits_[0] |= 0x00000001u;
  return rule_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
  if (!_internal_has_rule_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rule_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule::set_allocated_rule_description(std::string* rule_description) {
  if (rule_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rule_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rule_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule.rule_description)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule

// optional uint32 account_id = 1;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_account_id() const {
  return _internal_has_account_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::account_id() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
  return _internal_account_id();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.account_id)
}

// optional float revenue_percentage = 2;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_revenue_percentage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_revenue_percentage() const {
  return _internal_has_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_revenue_percentage() {
  revenue_percentage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_revenue_percentage() const {
  return revenue_percentage_;
}
inline float CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::revenue_percentage() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
  return _internal_revenue_percentage();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_revenue_percentage(float value) {
  _has_bits_[0] |= 0x00000004u;
  revenue_percentage_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_revenue_percentage(float value) {
  _internal_set_revenue_percentage(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.revenue_percentage)
}

// optional string rule_description = 3;
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_has_rule_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::has_rule_description() const {
  return _internal_has_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::clear_rule_description() {
  rule_description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::rule_description() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return _internal_rule_description();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const std::string& value) {
  _internal_set_rule_description(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::mutable_rule_description() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  return _internal_mutable_rule_description();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_rule_description() const {
  return rule_description_.Get();
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_set_rule_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_rule_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  rule_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::_internal_mutable_rule_description() {
  _has_bits_[0] |= 0x00000001u;
  return rule_description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::release_rule_description() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
  if (!_internal_has_rule_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return rule_description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule::set_allocated_rule_description(std::string* rule_description) {
  if (rule_description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rule_description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), rule_description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule.rule_description)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Request

// optional uint32 appid = 1;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::appid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.appid)
  return _internal_appid();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  appid_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.appid)
}

// optional uint32 gameitemid = 2;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_gameitemid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_gameitemid() const {
  return _internal_has_gameitemid();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_gameitemid() {
  gameitemid_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::_internal_gameitemid() const {
  return gameitemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CWorkshop_SetItemPaymentRules_Request::gameitemid() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.gameitemid)
  return _internal_gameitemid();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  gameitemid_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_gameitemid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gameitemid(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.gameitemid)
}

// repeated .CWorkshop_SetItemPaymentRules_Request.WorkshopItemPaymentRule associated_workshop_files = 3;
inline int CWorkshop_SetItemPaymentRules_Request::_internal_associated_workshop_files_size() const {
  return associated_workshop_files_.size();
}
inline int CWorkshop_SetItemPaymentRules_Request::associated_workshop_files_size() const {
  return _internal_associated_workshop_files_size();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_associated_workshop_files() {
  associated_workshop_files_.Clear();
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_files() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return &associated_workshop_files_;
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::_internal_associated_workshop_files(int index) const {
  return associated_workshop_files_.Get(index);
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::associated_workshop_files(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return _internal_associated_workshop_files(index);
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::_internal_add_associated_workshop_files() {
  return associated_workshop_files_.Add();
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_associated_workshop_files() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return _internal_add_associated_workshop_files();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::associated_workshop_files() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.associated_workshop_files)
  return associated_workshop_files_;
}

// repeated .CWorkshop_SetItemPaymentRules_Request.PartnerItemPaymentRule partner_accounts = 4;
inline int CWorkshop_SetItemPaymentRules_Request::_internal_partner_accounts_size() const {
  return partner_accounts_.size();
}
inline int CWorkshop_SetItemPaymentRules_Request::partner_accounts_size() const {
  return _internal_partner_accounts_size();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_partner_accounts() {
  partner_accounts_.Clear();
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >*
CWorkshop_SetItemPaymentRules_Request::mutable_partner_accounts() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return &partner_accounts_;
}
inline const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::_internal_partner_accounts(int index) const {
  return partner_accounts_.Get(index);
}
inline const ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule& CWorkshop_SetItemPaymentRules_Request::partner_accounts(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return _internal_partner_accounts(index);
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::_internal_add_partner_accounts() {
  return partner_accounts_.Add();
}
inline ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule* CWorkshop_SetItemPaymentRules_Request::add_partner_accounts() {
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return _internal_add_partner_accounts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule >&
CWorkshop_SetItemPaymentRules_Request::partner_accounts() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Request.partner_accounts)
  return partner_accounts_;
}

// optional bool validate_only = 5;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_validate_only() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_validate_only() const {
  return _internal_has_validate_only();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_validate_only() {
  validate_only_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_validate_only() const {
  return validate_only_;
}
inline bool CWorkshop_SetItemPaymentRules_Request::validate_only() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.validate_only)
  return _internal_validate_only();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_validate_only(bool value) {
  _has_bits_[0] |= 0x00000008u;
  validate_only_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_validate_only(bool value) {
  _internal_set_validate_only(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.validate_only)
}

// optional bool make_workshop_files_subscribable = 6;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_make_workshop_files_subscribable() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_make_workshop_files_subscribable() const {
  return _internal_has_make_workshop_files_subscribable();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_make_workshop_files_subscribable() {
  make_workshop_files_subscribable_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_make_workshop_files_subscribable() const {
  return make_workshop_files_subscribable_;
}
inline bool CWorkshop_SetItemPaymentRules_Request::make_workshop_files_subscribable() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.make_workshop_files_subscribable)
  return _internal_make_workshop_files_subscribable();
}
inline void CWorkshop_SetItemPaymentRules_Request::_internal_set_make_workshop_files_subscribable(bool value) {
  _has_bits_[0] |= 0x00000010u;
  make_workshop_files_subscribable_ = value;
}
inline void CWorkshop_SetItemPaymentRules_Request::set_make_workshop_files_subscribable(bool value) {
  _internal_set_make_workshop_files_subscribable(value);
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Request.make_workshop_files_subscribable)
}

// optional .CWorkshop_SetItemPaymentRules_Request.WorkshopDirectPaymentRule associated_workshop_file_for_direct_payments = 7;
inline bool CWorkshop_SetItemPaymentRules_Request::_internal_has_associated_workshop_file_for_direct_payments() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || associated_workshop_file_for_direct_payments_ != nullptr);
  return value;
}
inline bool CWorkshop_SetItemPaymentRules_Request::has_associated_workshop_file_for_direct_payments() const {
  return _internal_has_associated_workshop_file_for_direct_payments();
}
inline void CWorkshop_SetItemPaymentRules_Request::clear_associated_workshop_file_for_direct_payments() {
  if (associated_workshop_file_for_direct_payments_ != nullptr) associated_workshop_file_for_direct_payments_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& CWorkshop_SetItemPaymentRules_Request::_internal_associated_workshop_file_for_direct_payments() const {
  const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* p = associated_workshop_file_for_direct_payments_;
  return p != nullptr ? *p : reinterpret_cast<const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule&>(
      ::_CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule_default_instance_);
}
inline const ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule& CWorkshop_SetItemPaymentRules_Request::associated_workshop_file_for_direct_payments() const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  return _internal_associated_workshop_file_for_direct_payments();
}
inline void CWorkshop_SetItemPaymentRules_Request::unsafe_arena_set_allocated_associated_workshop_file_for_direct_payments(
    ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(associated_workshop_file_for_direct_payments_);
  }
  associated_workshop_file_for_direct_payments_ = associated_workshop_file_for_direct_payments;
  if (associated_workshop_file_for_direct_payments) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::release_associated_workshop_file_for_direct_payments() {
  _has_bits_[0] &= ~0x00000001u;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* temp = associated_workshop_file_for_direct_payments_;
  associated_workshop_file_for_direct_payments_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::unsafe_arena_release_associated_workshop_file_for_direct_payments() {
  // @@protoc_insertion_point(field_release:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  _has_bits_[0] &= ~0x00000001u;
  ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* temp = associated_workshop_file_for_direct_payments_;
  associated_workshop_file_for_direct_payments_ = nullptr;
  return temp;
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::_internal_mutable_associated_workshop_file_for_direct_payments() {
  _has_bits_[0] |= 0x00000001u;
  if (associated_workshop_file_for_direct_payments_ == nullptr) {
    auto* p = CreateMaybeMessage<::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule>(GetArena());
    associated_workshop_file_for_direct_payments_ = p;
  }
  return associated_workshop_file_for_direct_payments_;
}
inline ::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* CWorkshop_SetItemPaymentRules_Request::mutable_associated_workshop_file_for_direct_payments() {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
  return _internal_mutable_associated_workshop_file_for_direct_payments();
}
inline void CWorkshop_SetItemPaymentRules_Request::set_allocated_associated_workshop_file_for_direct_payments(::CWorkshop_SetItemPaymentRules_Request_WorkshopDirectPaymentRule* associated_workshop_file_for_direct_payments) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete associated_workshop_file_for_direct_payments_;
  }
  if (associated_workshop_file_for_direct_payments) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(associated_workshop_file_for_direct_payments);
    if (message_arena != submessage_arena) {
      associated_workshop_file_for_direct_payments = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, associated_workshop_file_for_direct_payments, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  associated_workshop_file_for_direct_payments_ = associated_workshop_file_for_direct_payments;
  // @@protoc_insertion_point(field_set_allocated:CWorkshop_SetItemPaymentRules_Request.associated_workshop_file_for_direct_payments)
}

// -------------------------------------------------------------------

// CWorkshop_SetItemPaymentRules_Response

// repeated string validation_errors = 1;
inline int CWorkshop_SetItemPaymentRules_Response::_internal_validation_errors_size() const {
  return validation_errors_.size();
}
inline int CWorkshop_SetItemPaymentRules_Response::validation_errors_size() const {
  return _internal_validation_errors_size();
}
inline void CWorkshop_SetItemPaymentRules_Response::clear_validation_errors() {
  validation_errors_.Clear();
}
inline std::string* CWorkshop_SetItemPaymentRules_Response::add_validation_errors() {
  // @@protoc_insertion_point(field_add_mutable:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  return _internal_add_validation_errors();
}
inline const std::string& CWorkshop_SetItemPaymentRules_Response::_internal_validation_errors(int index) const {
  return validation_errors_.Get(index);
}
inline const std::string& CWorkshop_SetItemPaymentRules_Response::validation_errors(int index) const {
  // @@protoc_insertion_point(field_get:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  return _internal_validation_errors(index);
}
inline std::string* CWorkshop_SetItemPaymentRules_Response::mutable_validation_errors(int index) {
  // @@protoc_insertion_point(field_mutable:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  return validation_errors_.Mutable(index);
}
inline void CWorkshop_SetItemPaymentRules_Response::set_validation_errors(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  validation_errors_.Mutable(index)->assign(value);
}
inline void CWorkshop_SetItemPaymentRules_Response::set_validation_errors(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  validation_errors_.Mutable(index)->assign(std::move(value));
}
inline void CWorkshop_SetItemPaymentRules_Response::set_validation_errors(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  validation_errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline void CWorkshop_SetItemPaymentRules_Response::set_validation_errors(int index, const char* value, size_t size) {
  validation_errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline std::string* CWorkshop_SetItemPaymentRules_Response::_internal_add_validation_errors() {
  return validation_errors_.Add();
}
inline void CWorkshop_SetItemPaymentRules_Response::add_validation_errors(const std::string& value) {
  validation_errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline void CWorkshop_SetItemPaymentRules_Response::add_validation_errors(std::string&& value) {
  validation_errors_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline void CWorkshop_SetItemPaymentRules_Response::add_validation_errors(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  validation_errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline void CWorkshop_SetItemPaymentRules_Response::add_validation_errors(const char* value, size_t size) {
  validation_errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CWorkshop_SetItemPaymentRules_Response.validation_errors)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CWorkshop_SetItemPaymentRules_Response::validation_errors() const {
  // @@protoc_insertion_point(field_list:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  return validation_errors_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CWorkshop_SetItemPaymentRules_Response::mutable_validation_errors() {
  // @@protoc_insertion_point(field_mutable_list:CWorkshop_SetItemPaymentRules_Response.validation_errors)
  return &validation_errors_;
}

// -------------------------------------------------------------------

// CCommunity_GetClanAnnouncements_Request

// optional uint64 steamid = 1;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetClanAnnouncements_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CCommunity_GetClanAnnouncements_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.steamid)
  return _internal_steamid();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  steamid_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.steamid)
}

// optional uint32 offset = 2;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_offset() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_offset() const {
  return _internal_has_offset();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_offset() {
  offset_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::offset() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.offset)
  return _internal_offset();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  offset_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_offset(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.offset)
}

// optional uint32 count = 3;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_count() const {
  return _internal_has_count();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_count() {
  count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::count() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.count)
  return _internal_count();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  count_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.count)
}

// optional uint32 maxchars = 4;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_maxchars() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_maxchars() const {
  return _internal_has_maxchars();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_maxchars() {
  maxchars_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::_internal_maxchars() const {
  return maxchars_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::maxchars() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.maxchars)
  return _internal_maxchars();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  maxchars_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxchars(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.maxchars)
}

// optional bool strip_html = 5;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_strip_html() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_strip_html() const {
  return _internal_has_strip_html();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_strip_html() {
  strip_html_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_strip_html() const {
  return strip_html_;
}
inline bool CCommunity_GetClanAnnouncements_Request::strip_html() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.strip_html)
  return _internal_strip_html();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_strip_html(bool value) {
  _has_bits_[0] |= 0x00000010u;
  strip_html_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_strip_html(bool value) {
  _internal_set_strip_html(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.strip_html)
}

// repeated string required_tags = 6;
inline int CCommunity_GetClanAnnouncements_Request::_internal_required_tags_size() const {
  return required_tags_.size();
}
inline int CCommunity_GetClanAnnouncements_Request::required_tags_size() const {
  return _internal_required_tags_size();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_required_tags() {
  required_tags_.Clear();
}
inline std::string* CCommunity_GetClanAnnouncements_Request::add_required_tags() {
  // @@protoc_insertion_point(field_add_mutable:CCommunity_GetClanAnnouncements_Request.required_tags)
  return _internal_add_required_tags();
}
inline const std::string& CCommunity_GetClanAnnouncements_Request::_internal_required_tags(int index) const {
  return required_tags_.Get(index);
}
inline const std::string& CCommunity_GetClanAnnouncements_Request::required_tags(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.required_tags)
  return _internal_required_tags(index);
}
inline std::string* CCommunity_GetClanAnnouncements_Request::mutable_required_tags(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetClanAnnouncements_Request.required_tags)
  return required_tags_.Mutable(index);
}
inline void CCommunity_GetClanAnnouncements_Request::set_required_tags(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.required_tags)
  required_tags_.Mutable(index)->assign(value);
}
inline void CCommunity_GetClanAnnouncements_Request::set_required_tags(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.required_tags)
  required_tags_.Mutable(index)->assign(std::move(value));
}
inline void CCommunity_GetClanAnnouncements_Request::set_required_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  required_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline void CCommunity_GetClanAnnouncements_Request::set_required_tags(int index, const char* value, size_t size) {
  required_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline std::string* CCommunity_GetClanAnnouncements_Request::_internal_add_required_tags() {
  return required_tags_.Add();
}
inline void CCommunity_GetClanAnnouncements_Request::add_required_tags(const std::string& value) {
  required_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline void CCommunity_GetClanAnnouncements_Request::add_required_tags(std::string&& value) {
  required_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline void CCommunity_GetClanAnnouncements_Request::add_required_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  required_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline void CCommunity_GetClanAnnouncements_Request::add_required_tags(const char* value, size_t size) {
  required_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CCommunity_GetClanAnnouncements_Request.required_tags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CCommunity_GetClanAnnouncements_Request::required_tags() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetClanAnnouncements_Request.required_tags)
  return required_tags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CCommunity_GetClanAnnouncements_Request::mutable_required_tags() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetClanAnnouncements_Request.required_tags)
  return &required_tags_;
}

// optional bool require_no_tags = 7;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_require_no_tags() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_require_no_tags() const {
  return _internal_has_require_no_tags();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_require_no_tags() {
  require_no_tags_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_require_no_tags() const {
  return require_no_tags_;
}
inline bool CCommunity_GetClanAnnouncements_Request::require_no_tags() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.require_no_tags)
  return _internal_require_no_tags();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_require_no_tags(bool value) {
  _has_bits_[0] |= 0x00000020u;
  require_no_tags_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_require_no_tags(bool value) {
  _internal_set_require_no_tags(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.require_no_tags)
}

// repeated uint32 language_preference = 8;
inline int CCommunity_GetClanAnnouncements_Request::_internal_language_preference_size() const {
  return language_preference_.size();
}
inline int CCommunity_GetClanAnnouncements_Request::language_preference_size() const {
  return _internal_language_preference_size();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_language_preference() {
  language_preference_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::_internal_language_preference(int index) const {
  return language_preference_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::language_preference(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.language_preference)
  return _internal_language_preference(index);
}
inline void CCommunity_GetClanAnnouncements_Request::set_language_preference(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  language_preference_.Set(index, value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.language_preference)
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  language_preference_.Add(value);
}
inline void CCommunity_GetClanAnnouncements_Request::add_language_preference(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_language_preference(value);
  // @@protoc_insertion_point(field_add:CCommunity_GetClanAnnouncements_Request.language_preference)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetClanAnnouncements_Request::_internal_language_preference() const {
  return language_preference_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CCommunity_GetClanAnnouncements_Request::language_preference() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetClanAnnouncements_Request.language_preference)
  return _internal_language_preference();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetClanAnnouncements_Request::_internal_mutable_language_preference() {
  return &language_preference_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CCommunity_GetClanAnnouncements_Request::mutable_language_preference() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetClanAnnouncements_Request.language_preference)
  return _internal_mutable_language_preference();
}

// optional bool hidden_only = 9;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_hidden_only() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_hidden_only() const {
  return _internal_has_hidden_only();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_hidden_only() {
  hidden_only_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_hidden_only() const {
  return hidden_only_;
}
inline bool CCommunity_GetClanAnnouncements_Request::hidden_only() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.hidden_only)
  return _internal_hidden_only();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_hidden_only(bool value) {
  _has_bits_[0] |= 0x00000040u;
  hidden_only_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_hidden_only(bool value) {
  _internal_set_hidden_only(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.hidden_only)
}

// optional bool only_gid = 10;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_only_gid() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_only_gid() const {
  return _internal_has_only_gid();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_only_gid() {
  only_gid_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_only_gid() const {
  return only_gid_;
}
inline bool CCommunity_GetClanAnnouncements_Request::only_gid() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.only_gid)
  return _internal_only_gid();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_only_gid(bool value) {
  _has_bits_[0] |= 0x00000080u;
  only_gid_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_only_gid(bool value) {
  _internal_set_only_gid(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.only_gid)
}

// optional uint32 rtime_oldest_date = 11;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_rtime_oldest_date() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_rtime_oldest_date() const {
  return _internal_has_rtime_oldest_date();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_rtime_oldest_date() {
  rtime_oldest_date_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::_internal_rtime_oldest_date() const {
  return rtime_oldest_date_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Request::rtime_oldest_date() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.rtime_oldest_date)
  return _internal_rtime_oldest_date();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_rtime_oldest_date(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  rtime_oldest_date_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_rtime_oldest_date(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_rtime_oldest_date(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.rtime_oldest_date)
}

// optional bool include_hidden = 12;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_include_hidden() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_include_hidden() const {
  return _internal_has_include_hidden();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_include_hidden() {
  include_hidden_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_include_hidden() const {
  return include_hidden_;
}
inline bool CCommunity_GetClanAnnouncements_Request::include_hidden() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.include_hidden)
  return _internal_include_hidden();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_include_hidden(bool value) {
  _has_bits_[0] |= 0x00000200u;
  include_hidden_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_include_hidden(bool value) {
  _internal_set_include_hidden(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.include_hidden)
}

// optional bool include_partner_events = 13;
inline bool CCommunity_GetClanAnnouncements_Request::_internal_has_include_partner_events() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Request::has_include_partner_events() const {
  return _internal_has_include_partner_events();
}
inline void CCommunity_GetClanAnnouncements_Request::clear_include_partner_events() {
  include_partner_events_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CCommunity_GetClanAnnouncements_Request::_internal_include_partner_events() const {
  return include_partner_events_;
}
inline bool CCommunity_GetClanAnnouncements_Request::include_partner_events() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Request.include_partner_events)
  return _internal_include_partner_events();
}
inline void CCommunity_GetClanAnnouncements_Request::_internal_set_include_partner_events(bool value) {
  _has_bits_[0] |= 0x00000400u;
  include_partner_events_ = value;
}
inline void CCommunity_GetClanAnnouncements_Request::set_include_partner_events(bool value) {
  _internal_set_include_partner_events(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Request.include_partner_events)
}

// -------------------------------------------------------------------

// CCommunity_GetClanAnnouncements_Response

// optional uint32 maxchars = 1;
inline bool CCommunity_GetClanAnnouncements_Response::_internal_has_maxchars() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Response::has_maxchars() const {
  return _internal_has_maxchars();
}
inline void CCommunity_GetClanAnnouncements_Response::clear_maxchars() {
  maxchars_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Response::_internal_maxchars() const {
  return maxchars_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CCommunity_GetClanAnnouncements_Response::maxchars() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Response.maxchars)
  return _internal_maxchars();
}
inline void CCommunity_GetClanAnnouncements_Response::_internal_set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  maxchars_ = value;
}
inline void CCommunity_GetClanAnnouncements_Response::set_maxchars(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_maxchars(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Response.maxchars)
}

// optional bool strip_html = 2;
inline bool CCommunity_GetClanAnnouncements_Response::_internal_has_strip_html() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CCommunity_GetClanAnnouncements_Response::has_strip_html() const {
  return _internal_has_strip_html();
}
inline void CCommunity_GetClanAnnouncements_Response::clear_strip_html() {
  strip_html_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CCommunity_GetClanAnnouncements_Response::_internal_strip_html() const {
  return strip_html_;
}
inline bool CCommunity_GetClanAnnouncements_Response::strip_html() const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Response.strip_html)
  return _internal_strip_html();
}
inline void CCommunity_GetClanAnnouncements_Response::_internal_set_strip_html(bool value) {
  _has_bits_[0] |= 0x00000002u;
  strip_html_ = value;
}
inline void CCommunity_GetClanAnnouncements_Response::set_strip_html(bool value) {
  _internal_set_strip_html(value);
  // @@protoc_insertion_point(field_set:CCommunity_GetClanAnnouncements_Response.strip_html)
}

// repeated .CCommunity_ClanAnnouncementInfo announcements = 3;
inline int CCommunity_GetClanAnnouncements_Response::_internal_announcements_size() const {
  return announcements_.size();
}
inline int CCommunity_GetClanAnnouncements_Response::announcements_size() const {
  return _internal_announcements_size();
}
inline ::CCommunity_ClanAnnouncementInfo* CCommunity_GetClanAnnouncements_Response::mutable_announcements(int index) {
  // @@protoc_insertion_point(field_mutable:CCommunity_GetClanAnnouncements_Response.announcements)
  return announcements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_ClanAnnouncementInfo >*
CCommunity_GetClanAnnouncements_Response::mutable_announcements() {
  // @@protoc_insertion_point(field_mutable_list:CCommunity_GetClanAnnouncements_Response.announcements)
  return &announcements_;
}
inline const ::CCommunity_ClanAnnouncementInfo& CCommunity_GetClanAnnouncements_Response::_internal_announcements(int index) const {
  return announcements_.Get(index);
}
inline const ::CCommunity_ClanAnnouncementInfo& CCommunity_GetClanAnnouncements_Response::announcements(int index) const {
  // @@protoc_insertion_point(field_get:CCommunity_GetClanAnnouncements_Response.announcements)
  return _internal_announcements(index);
}
inline ::CCommunity_ClanAnnouncementInfo* CCommunity_GetClanAnnouncements_Response::_internal_add_announcements() {
  return announcements_.Add();
}
inline ::CCommunity_ClanAnnouncementInfo* CCommunity_GetClanAnnouncements_Response::add_announcements() {
  // @@protoc_insertion_point(field_add:CCommunity_GetClanAnnouncements_Response.announcements)
  return _internal_add_announcements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CCommunity_ClanAnnouncementInfo >&
CCommunity_GetClanAnnouncements_Response::announcements() const {
  // @@protoc_insertion_point(field_list:CCommunity_GetClanAnnouncements_Response.announcements)
  return announcements_;
}

// -------------------------------------------------------------------

// CBroadcast_PostGameDataFrame_Request

// optional uint32 appid = 1;
inline bool CBroadcast_PostGameDataFrame_Request::_internal_has_appid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CBroadcast_PostGameDataFrame_Request::has_appid() const {
  return _internal_has_appid();
}
inline void CBroadcast_PostGameDataFrame_Request::clear_appid() {
  appid_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CBroadcast_PostGameDataFrame_Request::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CBroadcast_PostGameDataFrame_Request::appid() const {
  // @@protoc_insertion_point(field_get:CBroadcast_PostGameDataFrame_Request.appid)
  return _internal_appid();
}
inline void CBroadcast_PostGameDataFrame_Request::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  appid_ = value;
}
inline void CBroadcast_PostGameDataFrame_Request::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:CBroadcast_PostGameDataFrame_Request.appid)
}

// optional fixed64 steamid = 2;
inline bool CBroadcast_PostGameDataFrame_Request::_internal_has_steamid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CBroadcast_PostGameDataFrame_Request::has_steamid() const {
  return _internal_has_steamid();
}
inline void CBroadcast_PostGameDataFrame_Request::clear_steamid() {
  steamid_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CBroadcast_PostGameDataFrame_Request::_internal_steamid() const {
  return steamid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CBroadcast_PostGameDataFrame_Request::steamid() const {
  // @@protoc_insertion_point(field_get:CBroadcast_PostGameDataFrame_Request.steamid)
  return _internal_steamid();
}
inline void CBroadcast_PostGameDataFrame_Request::_internal_set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  steamid_ = value;
}
inline void CBroadcast_PostGameDataFrame_Request::set_steamid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_steamid(value);
  // @@protoc_insertion_point(field_set:CBroadcast_PostGameDataFrame_Request.steamid)
}

// optional fixed64 broadcast_id = 3;
inline bool CBroadcast_PostGameDataFrame_Request::_internal_has_broadcast_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CBroadcast_PostGameDataFrame_Request::has_broadcast_id() const {
  return _internal_has_broadcast_id();
}
inline void CBroadcast_PostGameDataFrame_Request::clear_broadcast_id() {
  broadcast_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CBroadcast_PostGameDataFrame_Request::_internal_broadcast_id() const {
  return broadcast_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CBroadcast_PostGameDataFrame_Request::broadcast_id() const {
  // @@protoc_insertion_point(field_get:CBroadcast_PostGameDataFrame_Request.broadcast_id)
  return _internal_broadcast_id();
}
inline void CBroadcast_PostGameDataFrame_Request::_internal_set_broadcast_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  broadcast_id_ = value;
}
inline void CBroadcast_PostGameDataFrame_Request::set_broadcast_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_broadcast_id(value);
  // @@protoc_insertion_point(field_set:CBroadcast_PostGameDataFrame_Request.broadcast_id)
}

// optional bytes frame_data = 4;
inline bool CBroadcast_PostGameDataFrame_Request::_internal_has_frame_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CBroadcast_PostGameDataFrame_Request::has_frame_data() const {
  return _internal_has_frame_data();
}
inline void CBroadcast_PostGameDataFrame_Request::clear_frame_data() {
  frame_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CBroadcast_PostGameDataFrame_Request::frame_data() const {
  // @@protoc_insertion_point(field_get:CBroadcast_PostGameDataFrame_Request.frame_data)
  return _internal_frame_data();
}
inline void CBroadcast_PostGameDataFrame_Request::set_frame_data(const std::string& value) {
  _internal_set_frame_data(value);
  // @@protoc_insertion_point(field_set:CBroadcast_PostGameDataFrame_Request.frame_data)
}
inline std::string* CBroadcast_PostGameDataFrame_Request::mutable_frame_data() {
  // @@protoc_insertion_point(field_mutable:CBroadcast_PostGameDataFrame_Request.frame_data)
  return _internal_mutable_frame_data();
}
inline const std::string& CBroadcast_PostGameDataFrame_Request::_internal_frame_data() const {
  return frame_data_.Get();
}
inline void CBroadcast_PostGameDataFrame_Request::_internal_set_frame_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  frame_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CBroadcast_PostGameDataFrame_Request::set_frame_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  frame_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CBroadcast_PostGameDataFrame_Request.frame_data)
}
inline void CBroadcast_PostGameDataFrame_Request::set_frame_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  frame_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CBroadcast_PostGameDataFrame_Request.frame_data)
}
inline void CBroadcast_PostGameDataFrame_Request::set_frame_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  frame_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CBroadcast_PostGameDataFrame_Request.frame_data)
}
inline std::string* CBroadcast_PostGameDataFrame_Request::_internal_mutable_frame_data() {
  _has_bits_[0] |= 0x00000001u;
  return frame_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CBroadcast_PostGameDataFrame_Request::release_frame_data() {
  // @@protoc_insertion_point(field_release:CBroadcast_PostGameDataFrame_Request.frame_data)
  if (!_internal_has_frame_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return frame_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CBroadcast_PostGameDataFrame_Request::set_allocated_frame_data(std::string* frame_data) {
  if (frame_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  frame_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CBroadcast_PostGameDataFrame_Request.frame_data)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_TypeCache

// optional uint32 type = 1;
inline bool CMsgSerializedSOCache_TypeCache::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_TypeCache::has_type() const {
  return _internal_has_type();
}
inline void CMsgSerializedSOCache_TypeCache::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_TypeCache::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_TypeCache::type() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.type)
  return _internal_type();
}
inline void CMsgSerializedSOCache_TypeCache::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  type_ = value;
}
inline void CMsgSerializedSOCache_TypeCache::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.type)
}

// repeated bytes objects = 2;
inline int CMsgSerializedSOCache_TypeCache::_internal_objects_size() const {
  return objects_.size();
}
inline int CMsgSerializedSOCache_TypeCache::objects_size() const {
  return _internal_objects_size();
}
inline void CMsgSerializedSOCache_TypeCache::clear_objects() {
  objects_.Clear();
}
inline std::string* CMsgSerializedSOCache_TypeCache::add_objects() {
  // @@protoc_insertion_point(field_add_mutable:CMsgSerializedSOCache.TypeCache.objects)
  return _internal_add_objects();
}
inline const std::string& CMsgSerializedSOCache_TypeCache::_internal_objects(int index) const {
  return objects_.Get(index);
}
inline const std::string& CMsgSerializedSOCache_TypeCache::objects(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.objects)
  return _internal_objects(index);
}
inline std::string* CMsgSerializedSOCache_TypeCache::mutable_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.TypeCache.objects)
  return objects_.Mutable(index);
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.objects)
  objects_.Mutable(index)->assign(value);
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.objects)
  objects_.Mutable(index)->assign(std::move(value));
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  objects_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::set_objects(int index, const void* value, size_t size) {
  objects_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgSerializedSOCache.TypeCache.objects)
}
inline std::string* CMsgSerializedSOCache_TypeCache::_internal_add_objects() {
  return objects_.Add();
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const std::string& value) {
  objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(std::string&& value) {
  objects_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  objects_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgSerializedSOCache.TypeCache.objects)
}
inline void CMsgSerializedSOCache_TypeCache::add_objects(const void* value, size_t size) {
  objects_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgSerializedSOCache.TypeCache.objects)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgSerializedSOCache_TypeCache::objects() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.TypeCache.objects)
  return objects_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgSerializedSOCache_TypeCache::mutable_objects() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.TypeCache.objects)
  return &objects_;
}

// optional uint32 service_id = 3;
inline bool CMsgSerializedSOCache_TypeCache::_internal_has_service_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_TypeCache::has_service_id() const {
  return _internal_has_service_id();
}
inline void CMsgSerializedSOCache_TypeCache::clear_service_id() {
  service_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_TypeCache::_internal_service_id() const {
  return service_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_TypeCache::service_id() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.TypeCache.service_id)
  return _internal_service_id();
}
inline void CMsgSerializedSOCache_TypeCache::_internal_set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  service_id_ = value;
}
inline void CMsgSerializedSOCache_TypeCache::set_service_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service_id(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.TypeCache.service_id)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_Cache_Version

// optional uint32 service = 1;
inline bool CMsgSerializedSOCache_Cache_Version::_internal_has_service() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_Cache_Version::has_service() const {
  return _internal_has_service();
}
inline void CMsgSerializedSOCache_Cache_Version::clear_service() {
  service_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_Cache_Version::_internal_service() const {
  return service_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_Cache_Version::service() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.Version.service)
  return _internal_service();
}
inline void CMsgSerializedSOCache_Cache_Version::_internal_set_service(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  service_ = value;
}
inline void CMsgSerializedSOCache_Cache_Version::set_service(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_service(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.Version.service)
}

// optional uint64 version = 2;
inline bool CMsgSerializedSOCache_Cache_Version::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_Cache_Version::has_version() const {
  return _internal_has_version();
}
inline void CMsgSerializedSOCache_Cache_Version::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSerializedSOCache_Cache_Version::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSerializedSOCache_Cache_Version::version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.Version.version)
  return _internal_version();
}
inline void CMsgSerializedSOCache_Cache_Version::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  version_ = value;
}
inline void CMsgSerializedSOCache_Cache_Version::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.Version.version)
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache_Cache

// optional uint32 type = 1;
inline bool CMsgSerializedSOCache_Cache::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_Cache::has_type() const {
  return _internal_has_type();
}
inline void CMsgSerializedSOCache_Cache::clear_type() {
  type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_Cache::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache_Cache::type() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.type)
  return _internal_type();
}
inline void CMsgSerializedSOCache_Cache::_internal_set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void CMsgSerializedSOCache_Cache::set_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.type)
}

// optional uint64 id = 2;
inline bool CMsgSerializedSOCache_Cache::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache_Cache::has_id() const {
  return _internal_has_id();
}
inline void CMsgSerializedSOCache_Cache::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSerializedSOCache_Cache::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSerializedSOCache_Cache::id() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.id)
  return _internal_id();
}
inline void CMsgSerializedSOCache_Cache::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  id_ = value;
}
inline void CMsgSerializedSOCache_Cache::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.Cache.id)
}

// repeated .CMsgSerializedSOCache.Cache.Version versions = 3;
inline int CMsgSerializedSOCache_Cache::_internal_versions_size() const {
  return versions_.size();
}
inline int CMsgSerializedSOCache_Cache::versions_size() const {
  return _internal_versions_size();
}
inline void CMsgSerializedSOCache_Cache::clear_versions() {
  versions_.Clear();
}
inline ::CMsgSerializedSOCache_Cache_Version* CMsgSerializedSOCache_Cache::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.Cache.versions)
  return versions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >*
CMsgSerializedSOCache_Cache::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.Cache.versions)
  return &versions_;
}
inline const ::CMsgSerializedSOCache_Cache_Version& CMsgSerializedSOCache_Cache::_internal_versions(int index) const {
  return versions_.Get(index);
}
inline const ::CMsgSerializedSOCache_Cache_Version& CMsgSerializedSOCache_Cache::versions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.versions)
  return _internal_versions(index);
}
inline ::CMsgSerializedSOCache_Cache_Version* CMsgSerializedSOCache_Cache::_internal_add_versions() {
  return versions_.Add();
}
inline ::CMsgSerializedSOCache_Cache_Version* CMsgSerializedSOCache_Cache::add_versions() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.Cache.versions)
  return _internal_add_versions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache_Version >&
CMsgSerializedSOCache_Cache::versions() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.Cache.versions)
  return versions_;
}

// repeated .CMsgSerializedSOCache.TypeCache type_caches = 4;
inline int CMsgSerializedSOCache_Cache::_internal_type_caches_size() const {
  return type_caches_.size();
}
inline int CMsgSerializedSOCache_Cache::type_caches_size() const {
  return _internal_type_caches_size();
}
inline void CMsgSerializedSOCache_Cache::clear_type_caches() {
  type_caches_.Clear();
}
inline ::CMsgSerializedSOCache_TypeCache* CMsgSerializedSOCache_Cache::mutable_type_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >*
CMsgSerializedSOCache_Cache::mutable_type_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.Cache.type_caches)
  return &type_caches_;
}
inline const ::CMsgSerializedSOCache_TypeCache& CMsgSerializedSOCache_Cache::_internal_type_caches(int index) const {
  return type_caches_.Get(index);
}
inline const ::CMsgSerializedSOCache_TypeCache& CMsgSerializedSOCache_Cache::type_caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.Cache.type_caches)
  return _internal_type_caches(index);
}
inline ::CMsgSerializedSOCache_TypeCache* CMsgSerializedSOCache_Cache::_internal_add_type_caches() {
  return type_caches_.Add();
}
inline ::CMsgSerializedSOCache_TypeCache* CMsgSerializedSOCache_Cache::add_type_caches() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.Cache.type_caches)
  return _internal_add_type_caches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_TypeCache >&
CMsgSerializedSOCache_Cache::type_caches() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.Cache.type_caches)
  return type_caches_;
}

// -------------------------------------------------------------------

// CMsgSerializedSOCache

// optional uint32 file_version = 1;
inline bool CMsgSerializedSOCache::_internal_has_file_version() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache::has_file_version() const {
  return _internal_has_file_version();
}
inline void CMsgSerializedSOCache::clear_file_version() {
  file_version_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache::_internal_file_version() const {
  return file_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache::file_version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.file_version)
  return _internal_file_version();
}
inline void CMsgSerializedSOCache::_internal_set_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  file_version_ = value;
}
inline void CMsgSerializedSOCache::set_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_file_version(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.file_version)
}

// repeated .CMsgSerializedSOCache.Cache caches = 2;
inline int CMsgSerializedSOCache::_internal_caches_size() const {
  return caches_.size();
}
inline int CMsgSerializedSOCache::caches_size() const {
  return _internal_caches_size();
}
inline void CMsgSerializedSOCache::clear_caches() {
  caches_.Clear();
}
inline ::CMsgSerializedSOCache_Cache* CMsgSerializedSOCache::mutable_caches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSerializedSOCache.caches)
  return caches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >*
CMsgSerializedSOCache::mutable_caches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSerializedSOCache.caches)
  return &caches_;
}
inline const ::CMsgSerializedSOCache_Cache& CMsgSerializedSOCache::_internal_caches(int index) const {
  return caches_.Get(index);
}
inline const ::CMsgSerializedSOCache_Cache& CMsgSerializedSOCache::caches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.caches)
  return _internal_caches(index);
}
inline ::CMsgSerializedSOCache_Cache* CMsgSerializedSOCache::_internal_add_caches() {
  return caches_.Add();
}
inline ::CMsgSerializedSOCache_Cache* CMsgSerializedSOCache::add_caches() {
  // @@protoc_insertion_point(field_add:CMsgSerializedSOCache.caches)
  return _internal_add_caches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSerializedSOCache_Cache >&
CMsgSerializedSOCache::caches() const {
  // @@protoc_insertion_point(field_list:CMsgSerializedSOCache.caches)
  return caches_;
}

// optional uint32 gc_socache_file_version = 3;
inline bool CMsgSerializedSOCache::_internal_has_gc_socache_file_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSerializedSOCache::has_gc_socache_file_version() const {
  return _internal_has_gc_socache_file_version();
}
inline void CMsgSerializedSOCache::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache::_internal_gc_socache_file_version() const {
  return gc_socache_file_version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSerializedSOCache::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:CMsgSerializedSOCache.gc_socache_file_version)
  return _internal_gc_socache_file_version();
}
inline void CMsgSerializedSOCache::_internal_set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gc_socache_file_version_ = value;
}
inline void CMsgSerializedSOCache::set_gc_socache_file_version(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gc_socache_file_version(value);
  // @@protoc_insertion_point(field_set:CMsgSerializedSOCache.gc_socache_file_version)
}

// -------------------------------------------------------------------

// CMsgGCToClientPollConvarRequest

// optional string convar_name = 1;
inline bool CMsgGCToClientPollConvarRequest::_internal_has_convar_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientPollConvarRequest::has_convar_name() const {
  return _internal_has_convar_name();
}
inline void CMsgGCToClientPollConvarRequest::clear_convar_name() {
  convar_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientPollConvarRequest::convar_name() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollConvarRequest.convar_name)
  return _internal_convar_name();
}
inline void CMsgGCToClientPollConvarRequest::set_convar_name(const std::string& value) {
  _internal_set_convar_name(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollConvarRequest.convar_name)
}
inline std::string* CMsgGCToClientPollConvarRequest::mutable_convar_name() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPollConvarRequest.convar_name)
  return _internal_mutable_convar_name();
}
inline const std::string& CMsgGCToClientPollConvarRequest::_internal_convar_name() const {
  return convar_name_.Get();
}
inline void CMsgGCToClientPollConvarRequest::_internal_set_convar_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  convar_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCToClientPollConvarRequest::set_convar_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  convar_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCToClientPollConvarRequest.convar_name)
}
inline void CMsgGCToClientPollConvarRequest::set_convar_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  convar_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientPollConvarRequest.convar_name)
}
inline void CMsgGCToClientPollConvarRequest::set_convar_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  convar_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientPollConvarRequest.convar_name)
}
inline std::string* CMsgGCToClientPollConvarRequest::_internal_mutable_convar_name() {
  _has_bits_[0] |= 0x00000001u;
  return convar_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCToClientPollConvarRequest::release_convar_name() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPollConvarRequest.convar_name)
  if (!_internal_has_convar_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return convar_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCToClientPollConvarRequest::set_allocated_convar_name(std::string* convar_name) {
  if (convar_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  convar_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), convar_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPollConvarRequest.convar_name)
}

// optional uint32 poll_id = 2;
inline bool CMsgGCToClientPollConvarRequest::_internal_has_poll_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientPollConvarRequest::has_poll_id() const {
  return _internal_has_poll_id();
}
inline void CMsgGCToClientPollConvarRequest::clear_poll_id() {
  poll_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientPollConvarRequest::_internal_poll_id() const {
  return poll_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientPollConvarRequest::poll_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollConvarRequest.poll_id)
  return _internal_poll_id();
}
inline void CMsgGCToClientPollConvarRequest::_internal_set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  poll_id_ = value;
}
inline void CMsgGCToClientPollConvarRequest::set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poll_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollConvarRequest.poll_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPollConvarResponse

// optional uint32 poll_id = 1;
inline bool CMsgGCToClientPollConvarResponse::_internal_has_poll_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToClientPollConvarResponse::has_poll_id() const {
  return _internal_has_poll_id();
}
inline void CMsgGCToClientPollConvarResponse::clear_poll_id() {
  poll_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientPollConvarResponse::_internal_poll_id() const {
  return poll_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToClientPollConvarResponse::poll_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollConvarResponse.poll_id)
  return _internal_poll_id();
}
inline void CMsgGCToClientPollConvarResponse::_internal_set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  poll_id_ = value;
}
inline void CMsgGCToClientPollConvarResponse::set_poll_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_poll_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollConvarResponse.poll_id)
}

// optional string convar_value = 2;
inline bool CMsgGCToClientPollConvarResponse::_internal_has_convar_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToClientPollConvarResponse::has_convar_value() const {
  return _internal_has_convar_value();
}
inline void CMsgGCToClientPollConvarResponse::clear_convar_value() {
  convar_value_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToClientPollConvarResponse::convar_value() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPollConvarResponse.convar_value)
  return _internal_convar_value();
}
inline void CMsgGCToClientPollConvarResponse::set_convar_value(const std::string& value) {
  _internal_set_convar_value(value);
  // @@protoc_insertion_point(field_set:CMsgGCToClientPollConvarResponse.convar_value)
}
inline std::string* CMsgGCToClientPollConvarResponse::mutable_convar_value() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPollConvarResponse.convar_value)
  return _internal_mutable_convar_value();
}
inline const std::string& CMsgGCToClientPollConvarResponse::_internal_convar_value() const {
  return convar_value_.Get();
}
inline void CMsgGCToClientPollConvarResponse::_internal_set_convar_value(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  convar_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCToClientPollConvarResponse::set_convar_value(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  convar_value_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCToClientPollConvarResponse.convar_value)
}
inline void CMsgGCToClientPollConvarResponse::set_convar_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  convar_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCToClientPollConvarResponse.convar_value)
}
inline void CMsgGCToClientPollConvarResponse::set_convar_value(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  convar_value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToClientPollConvarResponse.convar_value)
}
inline std::string* CMsgGCToClientPollConvarResponse::_internal_mutable_convar_value() {
  _has_bits_[0] |= 0x00000001u;
  return convar_value_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCToClientPollConvarResponse::release_convar_value() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPollConvarResponse.convar_value)
  if (!_internal_has_convar_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return convar_value_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCToClientPollConvarResponse::set_allocated_convar_value(std::string* convar_value) {
  if (convar_value != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  convar_value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), convar_value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPollConvarResponse.convar_value)
}

// -------------------------------------------------------------------

// CGCMsgCompressedMsgToClient

// optional uint32 msg_id = 1;
inline bool CGCMsgCompressedMsgToClient::_internal_has_msg_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CGCMsgCompressedMsgToClient::has_msg_id() const {
  return _internal_has_msg_id();
}
inline void CGCMsgCompressedMsgToClient::clear_msg_id() {
  msg_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCMsgCompressedMsgToClient::_internal_msg_id() const {
  return msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CGCMsgCompressedMsgToClient::msg_id() const {
  // @@protoc_insertion_point(field_get:CGCMsgCompressedMsgToClient.msg_id)
  return _internal_msg_id();
}
inline void CGCMsgCompressedMsgToClient::_internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  msg_id_ = value;
}
inline void CGCMsgCompressedMsgToClient::set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:CGCMsgCompressedMsgToClient.msg_id)
}

// optional bytes compressed_msg = 2;
inline bool CGCMsgCompressedMsgToClient::_internal_has_compressed_msg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CGCMsgCompressedMsgToClient::has_compressed_msg() const {
  return _internal_has_compressed_msg();
}
inline void CGCMsgCompressedMsgToClient::clear_compressed_msg() {
  compressed_msg_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CGCMsgCompressedMsgToClient::compressed_msg() const {
  // @@protoc_insertion_point(field_get:CGCMsgCompressedMsgToClient.compressed_msg)
  return _internal_compressed_msg();
}
inline void CGCMsgCompressedMsgToClient::set_compressed_msg(const std::string& value) {
  _internal_set_compressed_msg(value);
  // @@protoc_insertion_point(field_set:CGCMsgCompressedMsgToClient.compressed_msg)
}
inline std::string* CGCMsgCompressedMsgToClient::mutable_compressed_msg() {
  // @@protoc_insertion_point(field_mutable:CGCMsgCompressedMsgToClient.compressed_msg)
  return _internal_mutable_compressed_msg();
}
inline const std::string& CGCMsgCompressedMsgToClient::_internal_compressed_msg() const {
  return compressed_msg_.Get();
}
inline void CGCMsgCompressedMsgToClient::_internal_set_compressed_msg(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  compressed_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CGCMsgCompressedMsgToClient::set_compressed_msg(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  compressed_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CGCMsgCompressedMsgToClient.compressed_msg)
}
inline void CGCMsgCompressedMsgToClient::set_compressed_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  compressed_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CGCMsgCompressedMsgToClient.compressed_msg)
}
inline void CGCMsgCompressedMsgToClient::set_compressed_msg(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  compressed_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CGCMsgCompressedMsgToClient.compressed_msg)
}
inline std::string* CGCMsgCompressedMsgToClient::_internal_mutable_compressed_msg() {
  _has_bits_[0] |= 0x00000001u;
  return compressed_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CGCMsgCompressedMsgToClient::release_compressed_msg() {
  // @@protoc_insertion_point(field_release:CGCMsgCompressedMsgToClient.compressed_msg)
  if (!_internal_has_compressed_msg()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return compressed_msg_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CGCMsgCompressedMsgToClient::set_allocated_compressed_msg(std::string* compressed_msg) {
  if (compressed_msg != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  compressed_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), compressed_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CGCMsgCompressedMsgToClient.compressed_msg)
}

// -------------------------------------------------------------------

// CMsgGCToGCMasterBroadcastMessage

// optional uint32 users_per_second = 1;
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_has_users_per_second() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterBroadcastMessage::has_users_per_second() const {
  return _internal_has_users_per_second();
}
inline void CMsgGCToGCMasterBroadcastMessage::clear_users_per_second() {
  users_per_second_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterBroadcastMessage::_internal_users_per_second() const {
  return users_per_second_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterBroadcastMessage::users_per_second() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterBroadcastMessage.users_per_second)
  return _internal_users_per_second();
}
inline void CMsgGCToGCMasterBroadcastMessage::_internal_set_users_per_second(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  users_per_second_ = value;
}
inline void CMsgGCToGCMasterBroadcastMessage::set_users_per_second(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_users_per_second(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterBroadcastMessage.users_per_second)
}

// optional bool send_to_users = 2;
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_has_send_to_users() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterBroadcastMessage::has_send_to_users() const {
  return _internal_has_send_to_users();
}
inline void CMsgGCToGCMasterBroadcastMessage::clear_send_to_users() {
  send_to_users_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_send_to_users() const {
  return send_to_users_;
}
inline bool CMsgGCToGCMasterBroadcastMessage::send_to_users() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterBroadcastMessage.send_to_users)
  return _internal_send_to_users();
}
inline void CMsgGCToGCMasterBroadcastMessage::_internal_set_send_to_users(bool value) {
  _has_bits_[0] |= 0x00000004u;
  send_to_users_ = value;
}
inline void CMsgGCToGCMasterBroadcastMessage::set_send_to_users(bool value) {
  _internal_set_send_to_users(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterBroadcastMessage.send_to_users)
}

// optional bool send_to_servers = 3;
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_has_send_to_servers() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterBroadcastMessage::has_send_to_servers() const {
  return _internal_has_send_to_servers();
}
inline void CMsgGCToGCMasterBroadcastMessage::clear_send_to_servers() {
  send_to_servers_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_send_to_servers() const {
  return send_to_servers_;
}
inline bool CMsgGCToGCMasterBroadcastMessage::send_to_servers() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterBroadcastMessage.send_to_servers)
  return _internal_send_to_servers();
}
inline void CMsgGCToGCMasterBroadcastMessage::_internal_set_send_to_servers(bool value) {
  _has_bits_[0] |= 0x00000008u;
  send_to_servers_ = value;
}
inline void CMsgGCToGCMasterBroadcastMessage::set_send_to_servers(bool value) {
  _internal_set_send_to_servers(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterBroadcastMessage.send_to_servers)
}

// optional uint32 msg_id = 4;
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_has_msg_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterBroadcastMessage::has_msg_id() const {
  return _internal_has_msg_id();
}
inline void CMsgGCToGCMasterBroadcastMessage::clear_msg_id() {
  msg_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterBroadcastMessage::_internal_msg_id() const {
  return msg_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterBroadcastMessage::msg_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterBroadcastMessage.msg_id)
  return _internal_msg_id();
}
inline void CMsgGCToGCMasterBroadcastMessage::_internal_set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  msg_id_ = value;
}
inline void CMsgGCToGCMasterBroadcastMessage::set_msg_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterBroadcastMessage.msg_id)
}

// optional bytes msg_data = 5;
inline bool CMsgGCToGCMasterBroadcastMessage::_internal_has_msg_data() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterBroadcastMessage::has_msg_data() const {
  return _internal_has_msg_data();
}
inline void CMsgGCToGCMasterBroadcastMessage::clear_msg_data() {
  msg_data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgGCToGCMasterBroadcastMessage::msg_data() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterBroadcastMessage.msg_data)
  return _internal_msg_data();
}
inline void CMsgGCToGCMasterBroadcastMessage::set_msg_data(const std::string& value) {
  _internal_set_msg_data(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterBroadcastMessage.msg_data)
}
inline std::string* CMsgGCToGCMasterBroadcastMessage::mutable_msg_data() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCMasterBroadcastMessage.msg_data)
  return _internal_mutable_msg_data();
}
inline const std::string& CMsgGCToGCMasterBroadcastMessage::_internal_msg_data() const {
  return msg_data_.Get();
}
inline void CMsgGCToGCMasterBroadcastMessage::_internal_set_msg_data(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgGCToGCMasterBroadcastMessage::set_msg_data(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  msg_data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgGCToGCMasterBroadcastMessage.msg_data)
}
inline void CMsgGCToGCMasterBroadcastMessage::set_msg_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  msg_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgGCToGCMasterBroadcastMessage.msg_data)
}
inline void CMsgGCToGCMasterBroadcastMessage::set_msg_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  msg_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgGCToGCMasterBroadcastMessage.msg_data)
}
inline std::string* CMsgGCToGCMasterBroadcastMessage::_internal_mutable_msg_data() {
  _has_bits_[0] |= 0x00000001u;
  return msg_data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgGCToGCMasterBroadcastMessage::release_msg_data() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCMasterBroadcastMessage.msg_data)
  if (!_internal_has_msg_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return msg_data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgGCToGCMasterBroadcastMessage::set_allocated_msg_data(std::string* msg_data) {
  if (msg_data != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  msg_data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), msg_data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCMasterBroadcastMessage.msg_data)
}

// -------------------------------------------------------------------

// CMsgGCToGCMasterSubscribeToCache

// optional uint32 soid_type = 1;
inline bool CMsgGCToGCMasterSubscribeToCache::_internal_has_soid_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterSubscribeToCache::has_soid_type() const {
  return _internal_has_soid_type();
}
inline void CMsgGCToGCMasterSubscribeToCache::clear_soid_type() {
  soid_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterSubscribeToCache::_internal_soid_type() const {
  return soid_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterSubscribeToCache::soid_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterSubscribeToCache.soid_type)
  return _internal_soid_type();
}
inline void CMsgGCToGCMasterSubscribeToCache::_internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  soid_type_ = value;
}
inline void CMsgGCToGCMasterSubscribeToCache::set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soid_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterSubscribeToCache.soid_type)
}

// optional fixed64 soid_id = 2;
inline bool CMsgGCToGCMasterSubscribeToCache::_internal_has_soid_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterSubscribeToCache::has_soid_id() const {
  return _internal_has_soid_id();
}
inline void CMsgGCToGCMasterSubscribeToCache::clear_soid_id() {
  soid_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterSubscribeToCache::_internal_soid_id() const {
  return soid_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterSubscribeToCache::soid_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterSubscribeToCache.soid_id)
  return _internal_soid_id();
}
inline void CMsgGCToGCMasterSubscribeToCache::_internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  soid_id_ = value;
}
inline void CMsgGCToGCMasterSubscribeToCache::set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_soid_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterSubscribeToCache.soid_id)
}

// repeated uint32 account_ids = 3;
inline int CMsgGCToGCMasterSubscribeToCache::_internal_account_ids_size() const {
  return account_ids_.size();
}
inline int CMsgGCToGCMasterSubscribeToCache::account_ids_size() const {
  return _internal_account_ids_size();
}
inline void CMsgGCToGCMasterSubscribeToCache::clear_account_ids() {
  account_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterSubscribeToCache::_internal_account_ids(int index) const {
  return account_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterSubscribeToCache::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterSubscribeToCache.account_ids)
  return _internal_account_ids(index);
}
inline void CMsgGCToGCMasterSubscribeToCache::set_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterSubscribeToCache.account_ids)
}
inline void CMsgGCToGCMasterSubscribeToCache::_internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  account_ids_.Add(value);
}
inline void CMsgGCToGCMasterSubscribeToCache::add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_account_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCMasterSubscribeToCache.account_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCToGCMasterSubscribeToCache::_internal_account_ids() const {
  return account_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCToGCMasterSubscribeToCache::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCMasterSubscribeToCache.account_ids)
  return _internal_account_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCToGCMasterSubscribeToCache::_internal_mutable_account_ids() {
  return &account_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCToGCMasterSubscribeToCache::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCMasterSubscribeToCache.account_ids)
  return _internal_mutable_account_ids();
}

// repeated fixed64 steam_ids = 4;
inline int CMsgGCToGCMasterSubscribeToCache::_internal_steam_ids_size() const {
  return steam_ids_.size();
}
inline int CMsgGCToGCMasterSubscribeToCache::steam_ids_size() const {
  return _internal_steam_ids_size();
}
inline void CMsgGCToGCMasterSubscribeToCache::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterSubscribeToCache::_internal_steam_ids(int index) const {
  return steam_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterSubscribeToCache::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterSubscribeToCache.steam_ids)
  return _internal_steam_ids(index);
}
inline void CMsgGCToGCMasterSubscribeToCache::set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterSubscribeToCache.steam_ids)
}
inline void CMsgGCToGCMasterSubscribeToCache::_internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Add(value);
}
inline void CMsgGCToGCMasterSubscribeToCache::add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steam_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCMasterSubscribeToCache.steam_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCToGCMasterSubscribeToCache::_internal_steam_ids() const {
  return steam_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCToGCMasterSubscribeToCache::steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCMasterSubscribeToCache.steam_ids)
  return _internal_steam_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCToGCMasterSubscribeToCache::_internal_mutable_steam_ids() {
  return &steam_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCToGCMasterSubscribeToCache::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCMasterSubscribeToCache.steam_ids)
  return _internal_mutable_steam_ids();
}

// -------------------------------------------------------------------

// CMsgGCToGCMasterSubscribeToCacheResponse

// -------------------------------------------------------------------

// CMsgGCToGCMasterSubscribeToCacheAsync

// optional .CMsgGCToGCMasterSubscribeToCache subscribe_msg = 1;
inline bool CMsgGCToGCMasterSubscribeToCacheAsync::_internal_has_subscribe_msg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || subscribe_msg_ != nullptr);
  return value;
}
inline bool CMsgGCToGCMasterSubscribeToCacheAsync::has_subscribe_msg() const {
  return _internal_has_subscribe_msg();
}
inline void CMsgGCToGCMasterSubscribeToCacheAsync::clear_subscribe_msg() {
  if (subscribe_msg_ != nullptr) subscribe_msg_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgGCToGCMasterSubscribeToCache& CMsgGCToGCMasterSubscribeToCacheAsync::_internal_subscribe_msg() const {
  const ::CMsgGCToGCMasterSubscribeToCache* p = subscribe_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgGCToGCMasterSubscribeToCache&>(
      ::_CMsgGCToGCMasterSubscribeToCache_default_instance_);
}
inline const ::CMsgGCToGCMasterSubscribeToCache& CMsgGCToGCMasterSubscribeToCacheAsync::subscribe_msg() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg)
  return _internal_subscribe_msg();
}
inline void CMsgGCToGCMasterSubscribeToCacheAsync::unsafe_arena_set_allocated_subscribe_msg(
    ::CMsgGCToGCMasterSubscribeToCache* subscribe_msg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(subscribe_msg_);
  }
  subscribe_msg_ = subscribe_msg;
  if (subscribe_msg) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg)
}
inline ::CMsgGCToGCMasterSubscribeToCache* CMsgGCToGCMasterSubscribeToCacheAsync::release_subscribe_msg() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCToGCMasterSubscribeToCache* temp = subscribe_msg_;
  subscribe_msg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgGCToGCMasterSubscribeToCache* CMsgGCToGCMasterSubscribeToCacheAsync::unsafe_arena_release_subscribe_msg() {
  // @@protoc_insertion_point(field_release:CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgGCToGCMasterSubscribeToCache* temp = subscribe_msg_;
  subscribe_msg_ = nullptr;
  return temp;
}
inline ::CMsgGCToGCMasterSubscribeToCache* CMsgGCToGCMasterSubscribeToCacheAsync::_internal_mutable_subscribe_msg() {
  _has_bits_[0] |= 0x00000001u;
  if (subscribe_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgGCToGCMasterSubscribeToCache>(GetArena());
    subscribe_msg_ = p;
  }
  return subscribe_msg_;
}
inline ::CMsgGCToGCMasterSubscribeToCache* CMsgGCToGCMasterSubscribeToCacheAsync::mutable_subscribe_msg() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg)
  return _internal_mutable_subscribe_msg();
}
inline void CMsgGCToGCMasterSubscribeToCacheAsync::set_allocated_subscribe_msg(::CMsgGCToGCMasterSubscribeToCache* subscribe_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete subscribe_msg_;
  }
  if (subscribe_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(subscribe_msg);
    if (message_arena != submessage_arena) {
      subscribe_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, subscribe_msg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  subscribe_msg_ = subscribe_msg;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToGCMasterSubscribeToCacheAsync.subscribe_msg)
}

// -------------------------------------------------------------------

// CMsgGCToGCMasterUnsubscribeFromCache

// optional uint32 soid_type = 1;
inline bool CMsgGCToGCMasterUnsubscribeFromCache::_internal_has_soid_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterUnsubscribeFromCache::has_soid_type() const {
  return _internal_has_soid_type();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::clear_soid_type() {
  soid_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterUnsubscribeFromCache::_internal_soid_type() const {
  return soid_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterUnsubscribeFromCache::soid_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterUnsubscribeFromCache.soid_type)
  return _internal_soid_type();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::_internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  soid_type_ = value;
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soid_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterUnsubscribeFromCache.soid_type)
}

// optional fixed64 soid_id = 2;
inline bool CMsgGCToGCMasterUnsubscribeFromCache::_internal_has_soid_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterUnsubscribeFromCache::has_soid_id() const {
  return _internal_has_soid_id();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::clear_soid_id() {
  soid_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterUnsubscribeFromCache::_internal_soid_id() const {
  return soid_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterUnsubscribeFromCache::soid_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterUnsubscribeFromCache.soid_id)
  return _internal_soid_id();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::_internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  soid_id_ = value;
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_soid_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterUnsubscribeFromCache.soid_id)
}

// repeated uint32 account_ids = 3;
inline int CMsgGCToGCMasterUnsubscribeFromCache::_internal_account_ids_size() const {
  return account_ids_.size();
}
inline int CMsgGCToGCMasterUnsubscribeFromCache::account_ids_size() const {
  return _internal_account_ids_size();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::clear_account_ids() {
  account_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterUnsubscribeFromCache::_internal_account_ids(int index) const {
  return account_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterUnsubscribeFromCache::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterUnsubscribeFromCache.account_ids)
  return _internal_account_ids(index);
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::set_account_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterUnsubscribeFromCache.account_ids)
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::_internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  account_ids_.Add(value);
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::add_account_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_account_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCMasterUnsubscribeFromCache.account_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCToGCMasterUnsubscribeFromCache::_internal_account_ids() const {
  return account_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgGCToGCMasterUnsubscribeFromCache::account_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCMasterUnsubscribeFromCache.account_ids)
  return _internal_account_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCToGCMasterUnsubscribeFromCache::_internal_mutable_account_ids() {
  return &account_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgGCToGCMasterUnsubscribeFromCache::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCMasterUnsubscribeFromCache.account_ids)
  return _internal_mutable_account_ids();
}

// repeated fixed64 steam_ids = 4;
inline int CMsgGCToGCMasterUnsubscribeFromCache::_internal_steam_ids_size() const {
  return steam_ids_.size();
}
inline int CMsgGCToGCMasterUnsubscribeFromCache::steam_ids_size() const {
  return _internal_steam_ids_size();
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::clear_steam_ids() {
  steam_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterUnsubscribeFromCache::_internal_steam_ids(int index) const {
  return steam_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterUnsubscribeFromCache::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterUnsubscribeFromCache.steam_ids)
  return _internal_steam_ids(index);
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::set_steam_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterUnsubscribeFromCache.steam_ids)
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::_internal_add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  steam_ids_.Add(value);
}
inline void CMsgGCToGCMasterUnsubscribeFromCache::add_steam_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_steam_ids(value);
  // @@protoc_insertion_point(field_add:CMsgGCToGCMasterUnsubscribeFromCache.steam_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCToGCMasterUnsubscribeFromCache::_internal_steam_ids() const {
  return steam_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CMsgGCToGCMasterUnsubscribeFromCache::steam_ids() const {
  // @@protoc_insertion_point(field_list:CMsgGCToGCMasterUnsubscribeFromCache.steam_ids)
  return _internal_steam_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCToGCMasterUnsubscribeFromCache::_internal_mutable_steam_ids() {
  return &steam_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CMsgGCToGCMasterUnsubscribeFromCache::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:CMsgGCToGCMasterUnsubscribeFromCache.steam_ids)
  return _internal_mutable_steam_ids();
}

// -------------------------------------------------------------------

// CMsgGCToGCMasterDestroyCache

// optional uint32 soid_type = 1;
inline bool CMsgGCToGCMasterDestroyCache::_internal_has_soid_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterDestroyCache::has_soid_type() const {
  return _internal_has_soid_type();
}
inline void CMsgGCToGCMasterDestroyCache::clear_soid_type() {
  soid_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterDestroyCache::_internal_soid_type() const {
  return soid_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgGCToGCMasterDestroyCache::soid_type() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterDestroyCache.soid_type)
  return _internal_soid_type();
}
inline void CMsgGCToGCMasterDestroyCache::_internal_set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  soid_type_ = value;
}
inline void CMsgGCToGCMasterDestroyCache::set_soid_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soid_type(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterDestroyCache.soid_type)
}

// optional fixed64 soid_id = 2;
inline bool CMsgGCToGCMasterDestroyCache::_internal_has_soid_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgGCToGCMasterDestroyCache::has_soid_id() const {
  return _internal_has_soid_id();
}
inline void CMsgGCToGCMasterDestroyCache::clear_soid_id() {
  soid_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterDestroyCache::_internal_soid_id() const {
  return soid_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgGCToGCMasterDestroyCache::soid_id() const {
  // @@protoc_insertion_point(field_get:CMsgGCToGCMasterDestroyCache.soid_id)
  return _internal_soid_id();
}
inline void CMsgGCToGCMasterDestroyCache::_internal_set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  soid_id_ = value;
}
inline void CMsgGCToGCMasterDestroyCache::set_soid_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_soid_id(value);
  // @@protoc_insertion_point(field_set:CMsgGCToGCMasterDestroyCache.soid_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ESourceEngine> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESourceEngine>() {
  return ::ESourceEngine_descriptor();
}
template <> struct is_proto_enum< ::PartnerAccountType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PartnerAccountType>() {
  return ::PartnerAccountType_descriptor();
}
template <> struct is_proto_enum< ::GCConnectionStatus> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GCConnectionStatus>() {
  return ::GCConnectionStatus_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gcsdk_5fgcmessages_2eproto
