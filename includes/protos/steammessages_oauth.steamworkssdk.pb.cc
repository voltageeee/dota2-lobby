// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_oauth.steamworkssdk.proto

#include "steammessages_oauth.steamworkssdk.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : clientid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal {
  constexpr COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal() {}
  union {
    COAuthToken_ImplicitGrantNoPrompt_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT COAuthToken_ImplicitGrantNoPrompt_RequestDefaultTypeInternal _COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_;
constexpr COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : access_token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , redirect_uri_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal {
  constexpr COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal() {}
  union {
    COAuthToken_ImplicitGrantNoPrompt_Response _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT COAuthToken_ImplicitGrantNoPrompt_ResponseDefaultTypeInternal _COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Request, clientid_),
  0,
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, access_token_),
  PROTOBUF_FIELD_OFFSET(::COAuthToken_ImplicitGrantNoPrompt_Response, redirect_uri_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::COAuthToken_ImplicitGrantNoPrompt_Request)},
  { 7, 14, sizeof(::COAuthToken_ImplicitGrantNoPrompt_Response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_COAuthToken_ImplicitGrantNoPrompt_Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_COAuthToken_ImplicitGrantNoPrompt_Response_default_instance_),
};

const char descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'steammessages_oauth.steamworkssdk.prot"
  "o\032.steammessages_unified_base.steamworks"
  "sdk.proto\"{\n)COAuthToken_ImplicitGrantNo"
  "Prompt_Request\022N\n\010clientid\030\001 \001(\tB<\202\265\0308Cl"
  "ient ID for which to count the number of"
  " issued tokens\"\267\001\n*COAuthToken_ImplicitG"
  "rantNoPrompt_Response\0229\n\014access_token\030\001 "
  "\001(\tB#\202\265\030\037OAuth Token, granted on success"
  "\022N\n\014redirect_uri\030\002 \001(\tB8\202\265\0304Redirection "
  "URI provided during client registration."
  "2\261\002\n\nOAuthToken\022\353\001\n\025ImplicitGrantNoPromp"
  "t\022*.COAuthToken_ImplicitGrantNoPrompt_Re"
  "quest\032+.COAuthToken_ImplicitGrantNoPromp"
  "t_Response\"y\202\265\030uGrants an implicit OAuth"
  " token (grant type \'token\') for the spec"
  "ified client ID on behalf of a user with"
  "out prompting\0325\202\265\0301Service containing me"
  "thods to manage OAuth tokens"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_deps[1] = {
  &::descriptor_table_steammessages_5funified_5fbase_2esteamworkssdk_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto = {
  false, false, 708, descriptor_table_protodef_steammessages_5foauth_2esteamworkssdk_2eproto, "steammessages_oauth.steamworkssdk.proto", 
  &descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_once, descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_steammessages_5foauth_2esteamworkssdk_2eproto::offsets,
  file_level_metadata_steammessages_5foauth_2esteamworkssdk_2eproto, file_level_enum_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto, file_level_service_descriptors_steammessages_5foauth_2esteamworkssdk_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto);
  return descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_steammessages_5foauth_2esteamworkssdk_2eproto(&descriptor_table_steammessages_5foauth_2esteamworkssdk_2eproto);

// ===================================================================

class COAuthToken_ImplicitGrantNoPrompt_Request::_Internal {
 public:
  using HasBits = decltype(std::declval<COAuthToken_ImplicitGrantNoPrompt_Request>()._has_bits_);
  static void set_has_clientid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}
COAuthToken_ImplicitGrantNoPrompt_Request::COAuthToken_ImplicitGrantNoPrompt_Request(const COAuthToken_ImplicitGrantNoPrompt_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_clientid()) {
    clientid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clientid(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Request)
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedCtor() {
clientid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

COAuthToken_ImplicitGrantNoPrompt_Request::~COAuthToken_ImplicitGrantNoPrompt_Request() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void COAuthToken_ImplicitGrantNoPrompt_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  clientid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void COAuthToken_ImplicitGrantNoPrompt_Request::ArenaDtor(void* object) {
  COAuthToken_ImplicitGrantNoPrompt_Request* _this = reinterpret_cast< COAuthToken_ImplicitGrantNoPrompt_Request* >(object);
  (void)_this;
}
void COAuthToken_ImplicitGrantNoPrompt_Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void COAuthToken_ImplicitGrantNoPrompt_Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    clientid_.ClearNonDefaultToEmpty();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COAuthToken_ImplicitGrantNoPrompt_Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_clientid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COAuthToken_ImplicitGrantNoPrompt_Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_clientid().data(), static_cast<int>(this->_internal_clientid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Request.clientid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_clientid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Request)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string clientid = 1 [(.description) = "Client ID for which to count the number of issued tokens"];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clientid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COAuthToken_ImplicitGrantNoPrompt_Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COAuthToken_ImplicitGrantNoPrompt_Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COAuthToken_ImplicitGrantNoPrompt_Request)
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_clientid()) {
    _internal_set_clientid(from._internal_clientid());
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Request::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Request::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Request::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  clientid_.Swap(&other->clientid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata COAuthToken_ImplicitGrantNoPrompt_Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class COAuthToken_ImplicitGrantNoPrompt_Response::_Internal {
 public:
  using HasBits = decltype(std::declval<COAuthToken_ImplicitGrantNoPrompt_Response>()._has_bits_);
  static void set_has_access_token(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_redirect_uri(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}
COAuthToken_ImplicitGrantNoPrompt_Response::COAuthToken_ImplicitGrantNoPrompt_Response(const COAuthToken_ImplicitGrantNoPrompt_Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  access_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_access_token()) {
    access_token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_access_token(), 
      GetArena());
  }
  redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_redirect_uri()) {
    redirect_uri_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_redirect_uri(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:COAuthToken_ImplicitGrantNoPrompt_Response)
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedCtor() {
access_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
redirect_uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

COAuthToken_ImplicitGrantNoPrompt_Response::~COAuthToken_ImplicitGrantNoPrompt_Response() {
  // @@protoc_insertion_point(destructor:COAuthToken_ImplicitGrantNoPrompt_Response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void COAuthToken_ImplicitGrantNoPrompt_Response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  access_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  redirect_uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void COAuthToken_ImplicitGrantNoPrompt_Response::ArenaDtor(void* object) {
  COAuthToken_ImplicitGrantNoPrompt_Response* _this = reinterpret_cast< COAuthToken_ImplicitGrantNoPrompt_Response* >(object);
  (void)_this;
}
void COAuthToken_ImplicitGrantNoPrompt_Response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void COAuthToken_ImplicitGrantNoPrompt_Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      access_token_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      redirect_uri_.ClearNonDefaultToEmpty();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* COAuthToken_ImplicitGrantNoPrompt_Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_access_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_redirect_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* COAuthToken_ImplicitGrantNoPrompt_Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_access_token().data(), static_cast<int>(this->_internal_access_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Response.access_token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_access_token(), target);
  }

  // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_redirect_uri().data(), static_cast<int>(this->_internal_redirect_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "COAuthToken_ImplicitGrantNoPrompt_Response.redirect_uri");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_redirect_uri(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:COAuthToken_ImplicitGrantNoPrompt_Response)
  return target;
}

size_t COAuthToken_ImplicitGrantNoPrompt_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string access_token = 1 [(.description) = "OAuth Token, granted on success"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_access_token());
    }

    // optional string redirect_uri = 2 [(.description) = "Redirection URI provided during client registration."];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_redirect_uri());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const COAuthToken_ImplicitGrantNoPrompt_Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<COAuthToken_ImplicitGrantNoPrompt_Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:COAuthToken_ImplicitGrantNoPrompt_Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:COAuthToken_ImplicitGrantNoPrompt_Response)
    MergeFrom(*source);
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::MergeFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_access_token(from._internal_access_token());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_redirect_uri(from._internal_redirect_uri());
    }
  }
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void COAuthToken_ImplicitGrantNoPrompt_Response::CopyFrom(const COAuthToken_ImplicitGrantNoPrompt_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:COAuthToken_ImplicitGrantNoPrompt_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool COAuthToken_ImplicitGrantNoPrompt_Response::IsInitialized() const {
  return true;
}

void COAuthToken_ImplicitGrantNoPrompt_Response::InternalSwap(COAuthToken_ImplicitGrantNoPrompt_Response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  access_token_.Swap(&other->access_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  redirect_uri_.Swap(&other->redirect_uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata COAuthToken_ImplicitGrantNoPrompt_Response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::COAuthToken_ImplicitGrantNoPrompt_Request* Arena::CreateMaybeMessage< ::COAuthToken_ImplicitGrantNoPrompt_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::COAuthToken_ImplicitGrantNoPrompt_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::COAuthToken_ImplicitGrantNoPrompt_Response* Arena::CreateMaybeMessage< ::COAuthToken_ImplicitGrantNoPrompt_Response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::COAuthToken_ImplicitGrantNoPrompt_Response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
