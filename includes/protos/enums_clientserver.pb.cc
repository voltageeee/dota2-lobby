// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums_clientserver.proto

#include "enums_clientserver.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_enums_5fclientserver_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enums_5fclientserver_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enums_5fclientserver_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enums_5fclientserver_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enums_5fclientserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030enums_clientserver.proto*\351\235\003\n\004EMsg\022\021\n\r"
  "k_EMsgInvalid\020\000\022\017\n\013k_EMsgMulti\020\001\022\031\n\025k_EM"
  "sgProtobufWrapped\020\002\022\025\n\021k_EMsgBaseGeneral"
  "\020d\022\026\n\022k_EMsgGenericReply\020d\022\027\n\023k_EMsgDest"
  "JobFailed\020q\022\017\n\013k_EMsgAlert\020s\022\025\n\021k_EMsgSC"
  "IDRequest\020x\022\026\n\022k_EMsgSCIDResponse\020y\022\026\n\022k"
  "_EMsgJobHeartbeat\020{\022\024\n\020k_EMsgHubConnect\020"
  "|\022\023\n\017k_EMsgSubscribe\020~\022\024\n\020k_EMRouteMessa"
  "ge\020\177\022\024\n\017k_EMsgWGRequest\020\202\001\022\025\n\020k_EMsgWGRe"
  "sponse\020\203\001\022\024\n\017k_EMsgKeepAlive\020\204\001\022\033\n\026k_EMs"
  "gWebAPIJobRequest\020\205\001\022\034\n\027k_EMsgWebAPIJobR"
  "esponse\020\206\001\022\035\n\030k_EMsgClientSessionStart\020\207"
  "\001\022\033\n\026k_EMsgClientSessionEnd\020\210\001\022\036\n\031k_EMsg"
  "ClientSessionUpdate\020\211\001\022\032\n\025k_EMsgStatsDep"
  "recated\020\212\001\022\017\n\nk_EMsgPing\020\213\001\022\027\n\022k_EMsgPin"
  "gResponse\020\214\001\022\020\n\013k_EMsgStats\020\215\001\022 \n\033k_EMsg"
  "RequestFullStatsBlock\020\216\001\022\033\n\026k_EMsgLoadDB"
  "OCacheItem\020\217\001\022#\n\036k_EMsgLoadDBOCacheItemR"
  "esponse\020\220\001\022\"\n\035k_EMsgInvalidateDBOCacheIt"
  "ems\020\221\001\022\030\n\023k_EMsgServiceMethod\020\222\001\022 \n\033k_EM"
  "sgServiceMethodResponse\020\223\001\022 \n\033k_EMsgClie"
  "ntPackageVersions\020\224\001\022\033\n\026k_EMsgTimestampR"
  "equest\020\225\001\022\034\n\027k_EMsgTimestampResponse\020\226\001\022"
  "&\n!k_EMsgServiceMethodCallFromClient\020\227\001\022"
  "$\n\037k_EMsgServiceMethodSendToClient\020\230\001\022\024\n"
  "\017k_EMsgBaseShell\020\310\001\022\026\n\021k_EMsgAssignSysID"
  "\020\310\001\022\017\n\nk_EMsgExit\020\311\001\022\025\n\020k_EMsgDirRequest"
  "\020\312\001\022\026\n\021k_EMsgDirResponse\020\313\001\022\025\n\020k_EMsgZip"
  "Request\020\314\001\022\026\n\021k_EMsgZipResponse\020\315\001\022\037\n\032k_"
  "EMsgUpdateRecordResponse\020\327\001\022\"\n\035k_EMsgUpd"
  "ateCreditCardRequest\020\335\001\022 \n\033k_EMsgUpdateU"
  "serBanResponse\020\341\001\022\030\n\023k_EMsgPrepareToExit"
  "\020\342\001\022#\n\036k_EMsgContentDescriptionUpdate\020\343\001"
  "\022\032\n\025k_EMsgTestResetServer\020\344\001\022\032\n\025k_EMsgUn"
  "iverseChanged\020\345\001\022 \n\033k_EMsgShellConfigInf"
  "oUpdate\020\346\001\022(\n#k_EMsgRequestWindowsEventL"
  "ogEntries\020\351\001\022(\n#k_EMsgProvideWindowsEven"
  "tLogEntries\020\352\001\022\032\n\025k_EMsgShellSearchLogs\020"
  "\353\001\022\"\n\035k_EMsgShellSearchLogsResponse\020\354\001\022#"
  "\n\036k_EMsgShellCheckWindowsUpdates\020\355\001\022+\n&k"
  "_EMsgShellCheckWindowsUpdatesResponse\020\356\001"
  "\022\036\n\031k_EMsgTestFlushDelayedSQL\020\360\001\022&\n!k_EM"
  "sgTestFlushDelayedSQLResponse\020\361\001\022*\n%k_EM"
  "sgEnsureExecuteScheduledTask_TEST\020\362\001\0222\n-"
  "k_EMsgEnsureExecuteScheduledTaskResponse"
  "_TEST\020\363\001\022.\n)k_EMsgUpdateScheduledTaskEna"
  "bleState_TEST\020\364\001\0226\n1k_EMsgUpdateSchedule"
  "dTaskEnableStateResponse_TEST\020\365\001\022(\n#k_EM"
  "sgContentDescriptionDeltaUpdate\020\366\001\022)\n$k_"
  "EMsgGMShellAndServerAddressUpdates\020\367\001\022\021\n"
  "\014k_EMsgBaseGM\020\254\002\022\024\n\017k_EMsgHeartbeat\020\254\002\022\026"
  "\n\021k_EMsgShellFailed\020\255\002\022\025\n\020k_EMsgExitShel"
  "ls\020\263\002\022\024\n\017k_EMsgExitShell\020\264\002\022\034\n\027k_EMsgGra"
  "cefulExitShell\020\265\002\022$\n\037k_EMsgLicenseProces"
  "singComplete\020\274\002\022\026\n\021k_EMsgSetTestFlag\020\275\002\022"
  "\037\n\032k_EMsgQueuedEmailsComplete\020\276\002\022\033\n\026k_EM"
  "sgGMReportPHPError\020\277\002\022\024\n\017k_EMsgGMDRMSync"
  "\020\300\002\022\037\n\032k_EMsgPhysicalBoxInventory\020\301\002\022\033\n\026"
  "k_EMsgUpdateConfigFile\020\302\002\022\025\n\020k_EMsgTestI"
  "nitDB\020\303\002\022\035\n\030k_EMsgGMWriteConfigToSQL\020\304\002\022"
  " \n\033k_EMsgGMLoadActivationCodes\020\305\002\022\030\n\023k_E"
  "MsgGMQueueForFBS\020\306\002\022$\n\037k_EMsgGMSchemaCon"
  "versionResults\020\307\002\022#\n\036k_EMsgGMWriteShellF"
  "ailureToSQL\020\311\002\022\034\n\027k_EMsgGMWriteStatsToSO"
  "S\020\312\002\022$\n\037k_EMsgGMGetServiceMethodRouting\020"
  "\313\002\022,\n\'k_EMsgGMGetServiceMethodRoutingRes"
  "ponse\020\314\002\022*\n%k_EMsgGMTestNextBuildSchemaC"
  "onversion\020\316\002\0222\n-k_EMsgGMTestNextBuildSch"
  "emaConversionResponse\020\317\002\022\035\n\030k_EMsgExpect"
  "ShellRestart\020\320\002\022\031\n\024k_EMsgHotFixProgress\020"
  "\321\002\022+\n&k_EMsgGMStatsForwardToAdminConnect"
  "ions\020\322\002\022\022\n\rk_EMsgBaseAIS\020\220\003\022\'\n\"k_EMsgAIS"
  "RequestContentDescription\020\222\003\022\033\n\026k_EMsgAI"
  "SUpdateAppInfo\020\223\003\022$\n\037k_EMsgAISGetPackage"
  "ChangeNumber\020\225\003\022,\n\'k_EMsgAISGetPackageCh"
  "angeNumberResponse\020\226\003\022\032\n\025k_EMsgAIGetAppG"
  "CFlags\020\247\003\022\"\n\035k_EMsgAIGetAppGCFlagsRespon"
  "se\020\250\003\022\027\n\022k_EMsgAIGetAppList\020\251\003\022\037\n\032k_EMsg"
  "AIGetAppListResponse\020\252\003\022!\n\034k_EMsgAISGetC"
  "ouponDefinition\020\255\003\022)\n$k_EMsgAISGetCoupon"
  "DefinitionResponse\020\256\003\022+\n&k_EMsgAISUpdate"
  "SlaveContentDescription\020\257\003\0223\n.k_EMsgAISU"
  "pdateSlaveContentDescriptionResponse\020\260\003\022"
  "\032\n\025k_EMsgAISTestEnableGC\020\261\003\022\021\n\014k_EMsgBas"
  "eAM\020\364\003\022!\n\034k_EMsgAMUpdateUserBanRequest\020\370"
  "\003\022\027\n\022k_EMsgAMAddLicense\020\371\003\022\037\n\032k_EMsgAMSe"
  "ndSystemIMToUser\020\374\003\022\032\n\025k_EMsgAMExtendLic"
  "ense\020\375\003\022 \n\033k_EMsgAMAddMinutesToLicense\020\376"
  "\003\022\032\n\025k_EMsgAMCancelLicense\020\377\003\022\031\n\024k_EMsgA"
  "MInitPurchase\020\200\004\022\035\n\030k_EMsgAMPurchaseResp"
  "onse\020\201\004\022\032\n\025k_EMsgAMGetFinalPrice\020\202\004\022\"\n\035k"
  "_EMsgAMGetFinalPriceResponse\020\203\004\022\035\n\030k_EMs"
  "gAMGetLegacyGameKey\020\204\004\022%\n k_EMsgAMGetLeg"
  "acyGameKeyResponse\020\205\004\022!\n\034k_EMsgAMFindHun"
  "gTransactions\020\206\004\022%\n k_EMsgAMSetAccountTr"
  "ustedRequest\020\207\004\022\033\n\026k_EMsgAMCancelPurchas"
  "e\020\212\004\022\031\n\024k_EMsgAMNewChallenge\020\213\004\022\033\n\026k_EMs"
  "gAMLoadOEMTickets\020\214\004\022\037\n\032k_EMsgAMFixPendi"
  "ngPurchase\020\215\004\022\'\n\"k_EMsgAMFixPendingPurch"
  "aseResponse\020\216\004\022\031\n\024k_EMsgAMIsUserBanned\020\217"
  "\004\022\030\n\023k_EMsgAMRegisterKey\020\220\004\022 \n\033k_EMsgAML"
  "oadActivationCodes\020\221\004\022(\n#k_EMsgAMLoadAct"
  "ivationCodesResponse\020\222\004\022\036\n\031k_EMsgAMLooku"
  "pKeyResponse\020\223\004\022\026\n\021k_EMsgAMLookupKey\020\224\004\022"
  "\030\n\023k_EMsgAMChatCleanup\020\225\004\022\030\n\023k_EMsgAMCla"
  "nCleanup\020\226\004\022\035\n\030k_EMsgAMFixPendingRefund\020"
  "\227\004\022\036\n\031k_EMsgAMReverseChargeback\020\230\004\022&\n!k_"
  "EMsgAMReverseChargebackResponse\020\231\004\022\034\n\027k_"
  "EMsgAMClanCleanupList\020\232\004\022\030\n\023k_EMsgAMGetL"
  "icenses\020\233\004\022 \n\033k_EMsgAMGetLicensesRespons"
  "e\020\234\004\022\037\n\032k_EMsgAMSendCartRepurchase\020\235\004\022\'\n"
  "\"k_EMsgAMSendCartRepurchaseResponse\020\236\004\022\037"
  "\n\032k_EMsgAllowUserToPlayQuery\020\246\004\022\"\n\035k_EMs"
  "gAllowUserToPlayResponse\020\247\004\022\027\n\022k_EMsgAMV"
  "erfiyUser\020\250\004\022\035\n\030k_EMsgAMClientNotPlaying"
  "\020\251\004\022$\n\037k_EMsgAMClientRequestFriendship\020\252"
  "\004\022\037\n\032k_EMsgAMRelayPublishStatus\020\253\004\022!\n\034k_"
  "EMsgAMInitPurchaseResponse\020\260\004\022#\n\036k_EMsgA"
  "MRevokePurchaseResponse\020\261\004\022\037\n\032k_EMsgAMRe"
  "freshGuestPasses\020\263\004\022\035\n\030k_EMsgAMGrantGues"
  "tPasses\020\266\004\022\034\n\027k_EMsgAMClanDataUpdated\020\267\004"
  "\022\032\n\025k_EMsgAMReloadAccount\020\270\004\022\037\n\032k_EMsgAM"
  "ClientChatMsgRelay\020\271\004\022\026\n\021k_EMsgAMChatMul"
  "ti\020\272\004\022\"\n\035k_EMsgAMClientChatInviteRelay\020\273"
  "\004\022\027\n\022k_EMsgAMChatInvite\020\274\004\022 \n\033k_EMsgAMCl"
  "ientJoinChatRelay\020\275\004\022&\n!k_EMsgAMClientCh"
  "atMemberInfoRelay\020\276\004\022\"\n\035k_EMsgAMPublishC"
  "hatMemberInfo\020\277\004\022%\n k_EMsgAMClientAccept"
  "FriendInvite\020\300\004\022\026\n\021k_EMsgAMChatEnter\020\301\004\022"
  "+\n&k_EMsgAMClientPublishRemovalFromSourc"
  "e\020\302\004\022\035\n\030k_EMsgAMChatActionResult\020\303\004\022\031\n\024k"
  "_EMsgAMFindAccounts\020\304\004\022!\n\034k_EMsgAMFindAc"
  "countsResponse\020\305\004\022\037\n\032k_EMsgAMIsAccountNa"
  "meInUse\020\306\004\022\'\n\"k_EMsgAMIsAccountNameInUse"
  "Response\020\307\004\022\034\n\027k_EMsgAMSetAccountFlags\020\310"
  "\004\022\027\n\022k_EMsgAMCreateClan\020\312\004\022\037\n\032k_EMsgAMCr"
  "eateClanResponse\020\313\004\022\033\n\026k_EMsgAMGetClanDe"
  "tails\020\314\004\022#\n\036k_EMsgAMGetClanDetailsRespon"
  "se\020\315\004\022\033\n\026k_EMsgAMSetPersonaName\020\316\004\022\026\n\021k_"
  "EMsgAMSetAvatar\020\317\004\022\035\n\030k_EMsgAMAuthentica"
  "teUser\020\320\004\022%\n k_EMsgAMAuthenticateUserRes"
  "ponse\020\321\004\022!\n\034k_EMsgAMP2PIntroducerMessage"
  "\020\324\004\022\033\n\026k_EMsgClientChatAction\020\325\004\022\"\n\035k_EM"
  "sgAMClientChatActionRelay\020\326\004\022\021\n\014k_EMsgBa"
  "seVS\020\330\004\022\027\n\022k_EMsgReqChallenge\020\330\004\022\026\n\021k_EM"
  "sgVACResponse\020\331\004\022\033\n\026k_EMsgReqChallengeTe"
  "st\020\332\004\022\026\n\021k_EMsgVSMarkCheat\020\334\004\022\025\n\020k_EMsgV"
  "SAddCheat\020\335\004\022\033\n\026k_EMsgVSPurgeCodeModDB\020\336"
  "\004\022 \n\033k_EMsgVSGetChallengeResults\020\337\004\022 \n\033k"
  "_EMsgVSChallengeResultText\020\340\004\022\033\n\026k_EMsgV"
  "SReportLingerer\020\341\004\022$\n\037k_EMsgVSRequestMan"
  "agedChallenge\020\342\004\022\033\n\026k_EMsgVSLoadDBFinish"
  "ed\020\343\004\022\023\n\016k_EMsgBaseDRMS\020\361\004\022\036\n\031k_EMsgDRMB"
  "uildBlobRequest\020\364\004\022\037\n\032k_EMsgDRMBuildBlob"
  "Response\020\365\004\022 \n\033k_EMsgDRMResolveGuidReque"
  "st\020\366\004\022!\n\034k_EMsgDRMResolveGuidResponse\020\367\004"
  "\022\037\n\032k_EMsgDRMVariabilityReport\020\371\004\022\'\n\"k_E"
  "MsgDRMVariabilityReportResponse\020\372\004\022\035\n\030k_"
  "EMsgDRMStabilityReport\020\373\004\022%\n k_EMsgDRMSt"
  "abilityReportResponse\020\374\004\022\"\n\035k_EMsgDRMDet"
  "ailsReportRequest\020\375\004\022#\n\036k_EMsgDRMDetails"
  "ReportResponse\020\376\004\022\031\n\024k_EMsgDRMProcessFil"
  "e\020\377\004\022\031\n\024k_EMsgDRMAdminUpdate\020\200\005\022!\n\034k_EMs"
  "gDRMAdminUpdateResponse\020\201\005\022\022\n\rk_EMsgDRMS"
  "ync\020\202\005\022\032\n\025k_EMsgDRMSyncResponse\020\203\005\022!\n\034k_"
  "EMsgDRMProcessFileResponse\020\204\005\022\034\n\027k_EMsgD"
  "RMEmptyGuidCache\020\205\005\022$\n\037k_EMsgDRMEmptyGui"
  "dCacheResponse\020\206\005\022\021\n\014k_EMsgBaseCS\020\212\005\022\025\n\020"
  "k_EMsgBaseClient\020\274\005\022!\n\034k_EMsgClientLogOn"
  "_Deprecated\020\275\005\022%\n k_EMsgClientAnonLogOn_"
  "Deprecated\020\276\005\022\032\n\025k_EMsgClientHeartBeat\020\277"
  "\005\022\034\n\027k_EMsgClientVACResponse\020\300\005\022%\n k_EMs"
  "gClientGamesPlayed_obsolete\020\301\005\022\027\n\022k_EMsg"
  "ClientLogOff\020\302\005\022\"\n\035k_EMsgClientNoUDPConn"
  "ectivity\020\303\005\022 \n\033k_EMsgClientConnectionSta"
  "ts\020\306\005\022\035\n\030k_EMsgClientPingResponse\020\310\005\022\035\n\030"
  "k_EMsgClientRemoveFriend\020\312\005\022&\n!k_EMsgCli"
  "entGamesPlayedNoDataBlob\020\313\005\022\035\n\030k_EMsgCli"
  "entChangeStatus\020\314\005\022\"\n\035k_EMsgClientVacSta"
  "tusResponse\020\315\005\022\032\n\025k_EMsgClientFriendMsg\020"
  "\316\005\022%\n k_EMsgClientGameConnect_obsolete\020\317"
  "\005\022&\n!k_EMsgClientGamesPlayed2_obsolete\020\320"
  "\005\022#\n\036k_EMsgClientGameEnded_obsolete\020\321\005\022\031"
  "\n\024k_EMsgClientSystemIM\020\326\005\022\034\n\027k_EMsgClien"
  "tSystemIMAck\020\327\005\022\034\n\027k_EMsgClientGetLicens"
  "es\020\330\005\022!\n\034k_EMsgClientGetLegacyGameKey\020\332\005"
  "\022.\n)k_EMsgClientContentServerLogOn_Depre"
  "cated\020\333\005\022\033\n\026k_EMsgClientAckVACBan2\020\334\005\022$\n"
  "\037k_EMsgClientGetPurchaseReceipts\020\340\005\022&\n!k"
  "_EMsgClientGamesPlayed3_obsolete\020\342\005\022\035\n\030k"
  "_EMsgClientAckGuestPass\020\344\005\022 \n\033k_EMsgClie"
  "ntRedeemGuestPass\020\345\005\022\034\n\027k_EMsgClientGame"
  "sPlayed\020\346\005\022\034\n\027k_EMsgClientRegisterKey\020\347\005"
  "\022!\n\034k_EMsgClientInviteUserToClan\020\350\005\022&\n!k"
  "_EMsgClientAcknowledgeClanInvite\020\351\005\022&\n!k"
  "_EMsgClientPurchaseWithMachineID\020\352\005\022\036\n\031k"
  "_EMsgClientAppUsageEvent\020\353\005\022\036\n\031k_EMsgCli"
  "entLogOnResponse\020\357\005\022!\n\034k_EMsgClientSetHe"
  "artbeatRate\020\363\005\022&\n!k_EMsgClientNotLoggedO"
  "nDeprecated\020\364\005\022\032\n\025k_EMsgClientLoggedOff\020"
  "\365\005\022\024\n\017k_EMsgGSApprove\020\366\005\022\021\n\014k_EMsgGSDeny"
  "\020\367\005\022\021\n\014k_EMsgGSKick\020\370\005\022#\n\036k_EMsgClientCr"
  "eateAcctResponse\020\371\005\022!\n\034k_EMsgClientPurch"
  "aseResponse\020\373\005\022\025\n\020k_EMsgClientPing\020\374\005\022\024\n"
  "\017k_EMsgClientNOP\020\375\005\022\035\n\030k_EMsgClientPerso"
  "naState\020\376\005\022\034\n\027k_EMsgClientFriendsList\020\377\005"
  "\022\034\n\027k_EMsgClientAccountInfo\020\200\006\022\033\n\026k_EMsg"
  "ClientNewsUpdate\020\203\006\022 \n\033k_EMsgClientGameC"
  "onnectDeny\020\205\006\022\030\n\023k_EMsgGSStatusReply\020\206\006\022"
  "\"\n\035k_EMsgClientGameConnectTokens\020\213\006\022\034\n\027k"
  "_EMsgClientLicenseList\020\214\006\022\035\n\030k_EMsgClien"
  "tVACBanStatus\020\216\006\022\027\n\022k_EMsgClientCMList\020\217"
  "\006\022\033\n\026k_EMsgClientEncryptPct\020\220\006\022)\n$k_EMsg"
  "ClientGetLegacyGameKeyResponse\020\221\006\022\032\n\025k_E"
  "MsgClientAddFriend\020\227\006\022\"\n\035k_EMsgClientAdd"
  "FriendResponse\020\230\006\022%\n k_EMsgClientAckGues"
  "tPassResponse\020\234\006\022(\n#k_EMsgClientRedeemGu"
  "estPassResponse\020\235\006\022&\n!k_EMsgClientUpdate"
  "GuestPassesList\020\236\006\022\030\n\023k_EMsgClientChatMs"
  "g\020\237\006\022\033\n\026k_EMsgClientChatInvite\020\240\006\022\031\n\024k_E"
  "MsgClientJoinChat\020\241\006\022\037\n\032k_EMsgClientChat"
  "MemberInfo\020\242\006\0220\n+k_EMsgClientLogOnWithCr"
  "edentials_Deprecated\020\243\006\022\'\n\"k_EMsgClientP"
  "asswordChangeResponse\020\245\006\022\032\n\025k_EMsgClient"
  "ChatEnter\020\247\006\022(\n#k_EMsgClientFriendRemove"
  "dFromSource\020\250\006\022\033\n\026k_EMsgClientCreateChat"
  "\020\251\006\022#\n\036k_EMsgClientCreateChatResponse\020\252\006"
  "\022%\n k_EMsgClientP2PIntroducerMessage\020\255\006\022"
  "!\n\034k_EMsgClientChatActionResult\020\256\006\022\"\n\035k_"
  "EMsgClientRequestFriendData\020\257\006\022\035\n\030k_EMsg"
  "ClientGetUserStats\020\262\006\022%\n k_EMsgClientGet"
  "UserStatsResponse\020\263\006\022\037\n\032k_EMsgClientStor"
  "eUserStats\020\264\006\022\'\n\"k_EMsgClientStoreUserSt"
  "atsResponse\020\265\006\022\032\n\025k_EMsgClientClanState\020"
  "\266\006\022\036\n\031k_EMsgClientServiceModule\020\276\006\022\034\n\027k_"
  "EMsgClientServiceCall\020\277\006\022$\n\037k_EMsgClient"
  "ServiceCallResponse\020\300\006\022&\n!k_EMsgClientNa"
  "tTraversalStatEvent\020\307\006\022 \n\033k_EMsgClientSt"
  "eamUsageEvent\020\312\006\022\036\n\031k_EMsgClientCheckPas"
  "sword\020\315\006\022\036\n\031k_EMsgClientResetPassword\020\316\006"
  "\022&\n!k_EMsgClientCheckPasswordResponse\020\320\006"
  "\022&\n!k_EMsgClientResetPasswordResponse\020\321\006"
  "\022\035\n\030k_EMsgClientSessionToken\020\322\006\022!\n\034k_EMs"
  "gClientDRMProblemReport\020\323\006\022 \n\033k_EMsgClie"
  "ntSetIgnoreFriend\020\327\006\022(\n#k_EMsgClientSetI"
  "gnoreFriendResponse\020\330\006\022&\n!k_EMsgClientGe"
  "tAppOwnershipTicket\020\331\006\022.\n)k_EMsgClientGe"
  "tAppOwnershipTicketResponse\020\332\006\022%\n k_EMsg"
  "ClientGetLobbyListResponse\020\334\006\022\033\n\026k_EMsgC"
  "lientServerList\020\360\006\022\037\n\032k_EMsgClientDRMBlo"
  "bRequest\020\200\007\022 \n\033k_EMsgClientDRMBlobRespon"
  "se\020\201\007\022\031\n\024k_EMsgBaseGameServer\020\204\007\022\035\n\030k_EM"
  "sgGSDisconnectNotice\020\205\007\022\023\n\016k_EMsgGSStatu"
  "s\020\207\007\022\030\n\023k_EMsgGSUserPlaying\020\211\007\022\024\n\017k_EMsg"
  "GSStatus2\020\212\007\022 \n\033k_EMsgGSStatusUpdate_Unu"
  "sed\020\213\007\022\027\n\022k_EMsgGSServerType\020\214\007\022\027\n\022k_EMs"
  "gGSPlayerList\020\215\007\022%\n k_EMsgGSGetUserAchie"
  "vementStatus\020\216\007\022-\n(k_EMsgGSGetUserAchiev"
  "ementStatusResponse\020\217\007\022\031\n\024k_EMsgGSGetPla"
  "yStats\020\226\007\022!\n\034k_EMsgGSGetPlayStatsRespons"
  "e\020\227\007\022\037\n\032k_EMsgGSGetUserGroupStatus\020\230\007\022\037\n"
  "\032k_EMsgAMGetUserGroupStatus\020\231\007\022\'\n\"k_EMsg"
  "AMGetUserGroupStatusResponse\020\232\007\022\'\n\"k_EMs"
  "gGSGetUserGroupStatusResponse\020\233\007\022\032\n\025k_EM"
  "sgGSGetReputation\020\250\007\022\"\n\035k_EMsgGSGetReput"
  "ationResponse\020\251\007\022\036\n\031k_EMsgGSAssociateWit"
  "hClan\020\252\007\022&\n!k_EMsgGSAssociateWithClanRes"
  "ponse\020\253\007\022*\n%k_EMsgGSComputeNewPlayerComp"
  "atibility\020\254\007\0222\n-k_EMsgGSComputeNewPlayer"
  "CompatibilityResponse\020\255\007\022\024\n\017k_EMsgBaseAd"
  "min\020\350\007\022\023\n\016k_EMsgAdminCmd\020\350\007\022\033\n\026k_EMsgAdm"
  "inCmdResponse\020\354\007\022 \n\033k_EMsgAdminLogListen"
  "Request\020\355\007\022\030\n\023k_EMsgAdminLogEvent\020\356\007\022\027\n\022"
  "k_EMsgUniverseData\020\362\007\022\024\n\017k_EMsgAdminSpew"
  "\020\373\007\022\034\n\027k_EMsgAdminConsoleTitle\020\374\007\022\026\n\021k_E"
  "MsgAdminGCSpew\020\377\007\022\031\n\024k_EMsgAdminGCComman"
  "d\020\200\010\022 \n\033k_EMsgAdminGCGetCommandList\020\201\010\022("
  "\n#k_EMsgAdminGCGetCommandListResponse\020\202\010"
  "\022\034\n\027k_EMsgFBSConnectionData\020\203\010\022\027\n\022k_EMsg"
  "AdminMsgSpew\020\204\010\022\022\n\rk_EMsgBaseFBS\020\314\010\022\030\n\023k"
  "_EMsgFBSReqVersion\020\314\010\022\031\n\024k_EMsgFBSVersio"
  "nInfo\020\315\010\022\032\n\025k_EMsgFBSForceRefresh\020\316\010\022\031\n\024"
  "k_EMsgFBSForceBounce\020\317\010\022\033\n\026k_EMsgFBSDepl"
  "oyPackage\020\320\010\022\034\n\027k_EMsgFBSDeployResponse\020"
  "\321\010\022 \n\033k_EMsgFBSUpdateBootstrapper\020\322\010\022\026\n\021"
  "k_EMsgFBSSetState\020\323\010\022\034\n\027k_EMsgFBSApplyOS"
  "Updates\020\324\010\022\032\n\025k_EMsgFBSRunCMDScript\020\325\010\022\027"
  "\n\022k_EMsgFBSRebootBox\020\326\010\022\037\n\032k_EMsgFBSSetB"
  "igBrotherMode\020\327\010\022\034\n\027k_EMsgFBSMinidumpSer"
  "ver\020\330\010\022!\n\034k_EMsgFBSDeployHotFixPackage\020\332"
  "\010\022\"\n\035k_EMsgFBSDeployHotFixResponse\020\333\010\022\034\n"
  "\027k_EMsgFBSDownloadHotFix\020\334\010\022$\n\037k_EMsgFBS"
  "DownloadHotFixResponse\020\335\010\022$\n\037k_EMsgFBSUp"
  "dateTargetConfigFile\020\336\010\022\036\n\031k_EMsgFBSAppl"
  "yAccountCred\020\337\010\022&\n!k_EMsgFBSApplyAccount"
  "CredResponse\020\340\010\022\033\n\026k_EMsgFBSSetShellCoun"
  "t\020\341\010\022\034\n\027k_EMsgFBSTerminateShell\020\342\010\022\037\n\032k_"
  "EMsgFBSQueryGMForRequest\020\343\010\022\035\n\030k_EMsgFBS"
  "QueryGMResponse\020\344\010\022\036\n\031k_EMsgFBSTerminate"
  "Zombies\020\345\010\022\"\n\035k_EMsgFBSInfoFromBootstrap"
  "per\020\346\010\022\037\n\032k_EMsgFBSRebootBoxResponse\020\347\010\022"
  "(\n#k_EMsgFBSBootstrapperPackageRequest\020\350"
  "\010\022)\n$k_EMsgFBSBootstrapperPackageRespons"
  "e\020\351\010\022)\n$k_EMsgFBSBootstrapperGetPackageC"
  "hunk\020\352\010\0221\n,k_EMsgFBSBootstrapperGetPacka"
  "geChunkResponse\020\353\010\0221\n,k_EMsgFBSBootstrap"
  "perPackageTransferProgress\020\354\010\022!\n\034k_EMsgF"
  "BSRestartBootstrapper\020\355\010\022\036\n\031k_EMsgFBSPau"
  "seFrozenDumps\020\356\010\022\027\n\022k_EMsgBaseFileXfer\020\260"
  "\t\022\032\n\025k_EMsgFileXferRequest\020\260\t\022\033\n\026k_EMsgF"
  "ileXferResponse\020\261\t\022\027\n\022k_EMsgFileXferData"
  "\020\262\t\022\026\n\021k_EMsgFileXferEnd\020\263\t\022\032\n\025k_EMsgFil"
  "eXferDataAck\020\264\t\022\032\n\025k_EMsgBaseChannelAuth"
  "\020\224\n\022\037\n\032k_EMsgChannelAuthChallenge\020\224\n\022\036\n\031"
  "k_EMsgChannelAuthResponse\020\225\n\022\034\n\027k_EMsgCh"
  "annelAuthResult\020\226\n\022 \n\033k_EMsgChannelEncry"
  "ptRequest\020\227\n\022!\n\034k_EMsgChannelEncryptResp"
  "onse\020\230\n\022\037\n\032k_EMsgChannelEncryptResult\020\231\n"
  "\022\021\n\014k_EMsgBaseBS\020\370\n\022\032\n\025k_EMsgBSPurchaseS"
  "tart\020\371\n\022\035\n\030k_EMsgBSPurchaseResponse\020\372\n\022 "
  "\n\033k_EMsgBSAuthenticateCCTrans\020\373\n\022(\n#k_EM"
  "sgBSAuthenticateCCTransResponse\020\374\n\022\033\n\026k_"
  "EMsgBSSettleComplete\020\376\n\022\032\n\025k_EMsgBSInitP"
  "ayPalTxn\020\200\013\022\"\n\035k_EMsgBSInitPayPalTxnResp"
  "onse\020\201\013\022\036\n\031k_EMsgBSGetPayPalUserInfo\020\202\013\022"
  "&\n!k_EMsgBSGetPayPalUserInfoResponse\020\203\013\022"
  "\034\n\027k_EMsgBSPaymentInstrBan\020\211\013\022$\n\037k_EMsgB"
  "SPaymentInstrBanResponse\020\212\013\022\036\n\031k_EMsgBSI"
  "nitGCBankXferTxn\020\215\013\022&\n!k_EMsgBSInitGCBan"
  "kXferTxnResponse\020\216\013\022\030\n\023k_EMsgBSCommitGCT"
  "xn\020\221\013\022#\n\036k_EMsgBSQueryTransactionStatus\020"
  "\222\013\022+\n&k_EMsgBSQueryTransactionStatusResp"
  "onse\020\223\013\022\"\n\035k_EMsgBSQueryPaymentInstUsage"
  "\020\227\013\022%\n k_EMsgBSQueryPaymentInstResponse\020"
  "\230\013\022!\n\034k_EMsgBSQueryTxnExtendedInfo\020\231\013\022)\n"
  "$k_EMsgBSQueryTxnExtendedInfoResponse\020\232\013"
  "\022\"\n\035k_EMsgBSUpdateConversionRates\020\233\013\022#\n\036"
  "k_EMsgBSPurchaseRunFraudChecks\020\235\013\022+\n&k_E"
  "MsgBSPurchaseRunFraudChecksResponse\020\236\013\022!"
  "\n\034k_EMsgBSQueryBankInformation\020\240\013\022)\n$k_E"
  "MsgBSQueryBankInformationResponse\020\241\013\022$\n\037"
  "k_EMsgBSValidateXsollaSignature\020\245\013\022,\n\'k_"
  "EMsgBSValidateXsollaSignatureResponse\020\246\013"
  "\022\036\n\031k_EMsgBSQiwiWalletInvoice\020\250\013\022&\n!k_EM"
  "sgBSQiwiWalletInvoiceResponse\020\251\013\022\'\n\"k_EM"
  "sgBSUpdateInventoryFromProPack\020\252\013\022/\n*k_E"
  "MsgBSUpdateInventoryFromProPackResponse\020"
  "\253\013\022 \n\033k_EMsgBSSendShippingRequest\020\254\013\022(\n#"
  "k_EMsgBSSendShippingRequestResponse\020\255\013\022\""
  "\n\035k_EMsgBSGetProPackOrderStatus\020\256\013\022*\n%k_"
  "EMsgBSGetProPackOrderStatusResponse\020\257\013\022\034"
  "\n\027k_EMsgBSCheckJobRunning\020\260\013\022$\n\037k_EMsgBS"
  "CheckJobRunningResponse\020\261\013\022*\n%k_EMsgBSRe"
  "setPackagePurchaseRateLimit\020\262\013\0222\n-k_EMsg"
  "BSResetPackagePurchaseRateLimitResponse\020"
  "\263\013\022\036\n\031k_EMsgBSUpdatePaymentData\020\264\013\022&\n!k_"
  "EMsgBSUpdatePaymentDataResponse\020\265\013\022\036\n\031k_"
  "EMsgBSGetBillingAddress\020\266\013\022&\n!k_EMsgBSGe"
  "tBillingAddressResponse\020\267\013\022\036\n\031k_EMsgBSGe"
  "tCreditCardInfo\020\270\013\022&\n!k_EMsgBSGetCreditC"
  "ardInfoResponse\020\271\013\022%\n k_EMsgBSRemoveExpi"
  "redPaymentData\020\274\013\022-\n(k_EMsgBSRemoveExpir"
  "edPaymentDataResponse\020\275\013\022!\n\034k_EMsgBSConv"
  "ertToCurrentKeys\020\276\013\022)\n$k_EMsgBSConvertTo"
  "CurrentKeysResponse\020\277\013\022\031\n\024k_EMsgBSInitPu"
  "rchase\020\300\013\022!\n\034k_EMsgBSInitPurchaseRespons"
  "e\020\301\013\022\035\n\030k_EMsgBSCompletePurchase\020\302\013\022%\n k"
  "_EMsgBSCompletePurchaseResponse\020\303\013\022 \n\033k_"
  "EMsgBSPruneCardUsageStats\020\304\013\022(\n#k_EMsgBS"
  "PruneCardUsageStatsResponse\020\305\013\022!\n\034k_EMsg"
  "BSStoreBankInformation\020\306\013\022)\n$k_EMsgBSSto"
  "reBankInformationResponse\020\307\013\022\032\n\025k_EMsgBS"
  "VerifyPOSAKey\020\310\013\022\"\n\035k_EMsgBSVerifyPOSAKe"
  "yResponse\020\311\013\022!\n\034k_EMsgBSReverseRedeemPOS"
  "AKey\020\312\013\022)\n$k_EMsgBSReverseRedeemPOSAKeyR"
  "esponse\020\313\013\022 \n\033k_EMsgBSQueryFindCreditCar"
  "d\020\314\013\022(\n#k_EMsgBSQueryFindCreditCardRespo"
  "nse\020\315\013\022!\n\034k_EMsgBSStatusInquiryPOSAKey\020\316"
  "\013\022)\n$k_EMsgBSStatusInquiryPOSAKeyRespons"
  "e\020\317\013\022,\n\'k_EMsgBSBoaCompraConfirmProductD"
  "elivery\020\326\013\0224\n/k_EMsgBSBoaCompraConfirmPr"
  "oductDeliveryResponse\020\327\013\022!\n\034k_EMsgBSGene"
  "rateBoaCompraMD5\020\330\013\022)\n$k_EMsgBSGenerateB"
  "oaCompraMD5Response\020\331\013\022\030\n\023k_EMsgBSCommit"
  "WPTxn\020\332\013\022\033\n\026k_EMsgBSCommitAdyenTxn\020\333\013\022\022\n"
  "\rk_EMsgBaseATS\020\334\013\022\035\n\030k_EMsgATSStartStres"
  "sTest\020\335\013\022\034\n\027k_EMsgATSStopStressTest\020\336\013\022\037"
  "\n\032k_EMsgATSRunFailServerTest\020\337\013\022\035\n\030k_EMs"
  "gATSUFSPerfTestTask\020\340\013\022!\n\034k_EMsgATSUFSPe"
  "rfTestResponse\020\341\013\022\026\n\021k_EMsgATSCycleTCM\020\342"
  "\013\022 \n\033k_EMsgATSInitDRMSStressTest\020\343\013\022\026\n\021k"
  "_EMsgATSCallTest\020\344\013\022\033\n\026k_EMsgATSCallTest"
  "Reply\020\345\013\022!\n\034k_EMsgATSStartExternalStress"
  "\020\346\013\022$\n\037k_EMsgATSExternalStressJobStart\020\347"
  "\013\022%\n k_EMsgATSExternalStressJobQueued\020\350\013"
  "\022&\n!k_EMsgATSExternalStressJobRunning\020\351\013"
  "\022&\n!k_EMsgATSExternalStressJobStopped\020\352\013"
  "\022&\n!k_EMsgATSExternalStressJobStopAll\020\353\013"
  "\022(\n#k_EMsgATSExternalStressActionResult\020"
  "\354\013\022\025\n\020k_EMsgATSStarted\020\355\013\022\034\n\027k_EMsgATSCS"
  "PerfTestTask\020\356\013\022 \n\033k_EMsgATSCSPerfTestRe"
  "sponse\020\357\013\022\021\n\014k_EMsgBaseDP\020\300\014\022\037\n\032k_EMsgDP"
  "SetPublishingState\020\301\014\022\036\n\031k_EMsgDPUniqueP"
  "layersStat\020\303\014\022\'\n\"k_EMsgDPStreamingUnique"
  "PlayersStat\020\304\014\022\032\n\025k_EMsgDPBlockingStats\020"
  "\307\014\022\036\n\031k_EMsgDPNatTraversalStats\020\310\014\022\027\n\022k_"
  "EMsgDPCloudStats\020\314\014\022\033\n\026k_EMsgDPGetPlayer"
  "Count\020\317\014\022#\n\036k_EMsgDPGetPlayerCountRespon"
  "se\020\320\014\022$\n\037k_EMsgDPGameServersPlayersStats"
  "\020\321\014\022%\n k_EMsgClientDPCheckSpecialSurvey\020"
  "\324\014\022-\n(k_EMsgClientDPCheckSpecialSurveyRe"
  "sponse\020\325\014\022,\n\'k_EMsgClientDPSendSpecialSu"
  "rveyResponse\020\326\014\0221\n,k_EMsgClientDPSendSpe"
  "cialSurveyResponseReply\020\327\014\022 \n\033k_EMsgDPSt"
  "oreSaleStatistics\020\330\014\022%\n k_EMsgClientDPUp"
  "dateAppJobReport\020\331\014\022(\n#k_EMsgClientDPUns"
  "ignedInstallScript\020\333\014\022\035\n\030k_EMsgDPPartner"
  "MicroTxns\020\334\014\022%\n k_EMsgDPPartnerMicroTxns"
  "Response\020\335\014\022%\n k_EMsgClientDPContentStat"
  "sReport\020\336\014\022 \n\033k_EMsgDPVRUniquePlayersSta"
  "t\020\337\014\022\021\n\014k_EMsgBaseCM\020\244\r\022\032\n\025k_EMsgCMSetAl"
  "lowState\020\245\r\022\033\n\026k_EMsgCMSpewAllowState\020\246\r"
  "\022\034\n\027k_EMsgCMSessionRejected\020\247\r\022\027\n\022k_EMsg"
  "CMSetSecrets\020\250\r\022\027\n\022k_EMsgCMGetSecrets\020\251\r"
  "\022\021\n\014k_EMsgBaseGC\020\230\021\022\026\n\021k_EMsgGCCmdRevive"
  "\020\233\021\022\024\n\017k_EMsgGCCmdDown\020\236\021\022\026\n\021k_EMsgGCCmd"
  "Deploy\020\237\021\022\036\n\031k_EMsgGCCmdDeployResponse\020\240"
  "\021\022\026\n\021k_EMsgGCCmdSwitch\020\241\021\022\034\n\027k_EMsgAMRef"
  "reshSessions\020\242\021\022\037\n\032k_EMsgGCAchievementAw"
  "arded\020\244\021\022\026\n\021k_EMsgGCCmdStatus\020\250\021\022-\n(k_EM"
  "sgGCRegisterWebInterfaces_Deprecated\020\251\021\022"
  ")\n$k_EMsgGCGetAccountDetails_DEPRECATED\020"
  "\252\021\022\034\n\027k_EMsgGCInterAppMessage\020\253\021\022\035\n\030k_EM"
  "sgGCGetEmailTemplate\020\254\021\022%\n k_EMsgGCGetEm"
  "ailTemplateResponse\020\255\021\022\023\n\016k_EMsgGCHRelay"
  "\020\256\021\022\033\n\026k_EMsgGCHRelayToClient\020\257\021\022\033\n\026k_EM"
  "sgGCHUpdateSession\020\260\021\022\"\n\035k_EMsgGCHReques"
  "tUpdateSession\020\261\021\022\033\n\026k_EMsgGCHRequestSta"
  "tus\020\262\021\022#\n\036k_EMsgGCHRequestStatusResponse"
  "\020\263\021\022$\n\037k_EMsgGCHAccountVacStatusChange\020\264"
  "\021\022\025\n\020k_EMsgGCHSpawnGC\020\265\021\022\035\n\030k_EMsgGCHSpa"
  "wnGCResponse\020\266\021\022\024\n\017k_EMsgGCHKillGC\020\267\021\022\034\n"
  "\027k_EMsgGCHKillGCResponse\020\270\021\022)\n$k_EMsgGCH"
  "AccountTradeBanStatusChange\020\271\021\022%\n k_EMsg"
  "GCHAccountLockStatusChange\020\272\021\022#\n\036k_EMsgG"
  "CHVacVerificationChange\020\273\021\022&\n!k_EMsgGCHA"
  "ccountPhoneNumberChange\020\274\021\022$\n\037k_EMsgGCHA"
  "ccountTwoFactorChange\020\275\021\022\037\n\032k_EMsgGCHInv"
  "iteUserToLobby\020\276\021\022$\n\037k_EMsgGCHUpdateMult"
  "ipleSessions\020\277\021\022*\n%k_EMsgGCHMarkAppSessi"
  "onsAuthoritative\020\300\021\022/\n*k_EMsgGCHRecurrin"
  "gSubscriptionStatusChange\020\301\021\022\022\n\rk_EMsgBa"
  "seP2P\020\304\023\022\037\n\032k_EMsgP2PIntroducerMessage\020\306"
  "\023\022\021\n\014k_EMsgBaseSM\020\324\026\022\034\n\027k_EMsgSMExpensiv"
  "eReport\020\326\026\022\031\n\024k_EMsgSMHourlyReport\020\327\026\022\035\n"
  "\030k_EMsgSMPartitionRenames\020\331\026\022\031\n\024k_EMsgSM"
  "MonitorSpace\020\332\026\022*\n%k_EMsgSMTestNextBuild"
  "SchemaConversion\020\333\026\0222\n-k_EMsgSMTestNextB"
  "uildSchemaConversionResponse\020\334\026\022\023\n\016k_EMs"
  "gBaseTest\020\270\027\022\025\n\020k_EMsgFailServer\020\270\027\022\033\n\026k"
  "_EMsgJobHeartbeatTest\020\271\027\022#\n\036k_EMsgJobHea"
  "rtbeatTestResponse\020\272\027\022\027\n\022k_EMsgBaseFTSRa"
  "nge\020\234\030\022\027\n\022k_EMsgBaseCCSRange\020\316\030\022\'\n\"k_EMs"
  "gCCSDeleteAllCommentsByAuthor\020\331\030\022/\n*k_EM"
  "sgCCSDeleteAllCommentsByAuthorResponse\020\332"
  "\030\022\027\n\022k_EMsgBaseLBSRange\020\200\031\022\026\n\021k_EMsgLBSS"
  "etScore\020\201\031\022\036\n\031k_EMsgLBSSetScoreResponse\020"
  "\202\031\022\034\n\027k_EMsgLBSFindOrCreateLB\020\203\031\022$\n\037k_EM"
  "sgLBSFindOrCreateLBResponse\020\204\031\022\032\n\025k_EMsg"
  "LBSGetLBEntries\020\205\031\022\"\n\035k_EMsgLBSGetLBEntr"
  "iesResponse\020\206\031\022\027\n\022k_EMsgLBSGetLBList\020\207\031\022"
  "\037\n\032k_EMsgLBSGetLBListResponse\020\210\031\022\032\n\025k_EM"
  "sgLBSSetLBDetails\020\211\031\022\026\n\021k_EMsgLBSDeleteL"
  "B\020\212\031\022\033\n\026k_EMsgLBSDeleteLBEntry\020\213\031\022\025\n\020k_E"
  "MsgLBSResetLB\020\214\031\022\035\n\030k_EMsgLBSResetLBResp"
  "onse\020\215\031\022\036\n\031k_EMsgLBSDeleteLBResponse\020\216\031\022"
  "\022\n\rk_EMsgBaseOGS\020\310\032\022\032\n\025k_EMsgOGSBeginSes"
  "sion\020\311\032\022\"\n\035k_EMsgOGSBeginSessionResponse"
  "\020\312\032\022\030\n\023k_EMsgOGSEndSession\020\313\032\022 \n\033k_EMsgO"
  "GSEndSessionResponse\020\314\032\022 \n\033k_EMsgOGSWrit"
  "eAppSessionRow\020\316\032\022\022\n\rk_EMsgBaseBRP\020\220\034\022 \n"
  "\033k_EMsgBRPPostTransactionTax\020\255\034\022(\n#k_EMs"
  "gBRPPostTransactionTaxResponse\020\256\034\022\027\n\022k_E"
  "MsgBaseAMRange2\020\240\037\022\027\n\022k_EMsgAMCreateChat"
  "\020\241\037\022\037\n\032k_EMsgAMCreateChatResponse\020\242\037\022\032\n\025"
  "k_EMsgAMSetProfileURL\020\245\037\022#\n\036k_EMsgAMGetA"
  "ccountEmailAddress\020\246\037\022+\n&k_EMsgAMGetAcco"
  "untEmailAddressResponse\020\247\037\022\034\n\027k_EMsgAMRe"
  "questClanData\020\250\037\022\033\n\026k_EMsgAMRouteToClien"
  "ts\020\251\037\022\026\n\021k_EMsgAMLeaveClan\020\252\037\022\034\n\027k_EMsgA"
  "MClanPermissions\020\253\037\022$\n\037k_EMsgAMClanPermi"
  "ssionsResponse\020\254\037\0220\n+k_EMsgAMCreateClanE"
  "ventDummyForRateLimiting\020\255\037\0220\n+k_EMsgAMU"
  "pdateClanEventDummyForRateLimiting\020\257\037\022&\n"
  "!k_EMsgAMSetClanPermissionSettings\020\265\037\022.\n"
  ")k_EMsgAMSetClanPermissionSettingsRespon"
  "se\020\266\037\022&\n!k_EMsgAMGetClanPermissionSettin"
  "gs\020\267\037\022.\n)k_EMsgAMGetClanPermissionSettin"
  "gsResponse\020\270\037\022 \n\033k_EMsgAMPublishChatRoom"
  "Info\020\271\037\022\035\n\030k_EMsgClientChatRoomInfo\020\272\037\022\033"
  "\n\026k_EMsgAMGetClanHistory\020\307\037\022#\n\036k_EMsgAMG"
  "etClanHistoryResponse\020\310\037\022\"\n\035k_EMsgAMGetC"
  "lanPermissionBits\020\311\037\022*\n%k_EMsgAMGetClanP"
  "ermissionBitsResponse\020\312\037\022\"\n\035k_EMsgAMSetC"
  "lanPermissionBits\020\313\037\022*\n%k_EMsgAMSetClanP"
  "ermissionBitsResponse\020\314\037\022\037\n\032k_EMsgAMSess"
  "ionInfoRequest\020\315\037\022 \n\033k_EMsgAMSessionInfo"
  "Response\020\316\037\022\034\n\027k_EMsgAMValidateWGToken\020\317"
  "\037\022\030\n\023k_EMsgAMGetClanRank\020\322\037\022 \n\033k_EMsgAMG"
  "etClanRankResponse\020\323\037\022\030\n\023k_EMsgAMSetClan"
  "Rank\020\324\037\022 \n\033k_EMsgAMSetClanRankResponse\020\325"
  "\037\022\030\n\023k_EMsgAMGetClanPOTW\020\326\037\022 \n\033k_EMsgAMG"
  "etClanPOTWResponse\020\327\037\022\030\n\023k_EMsgAMSetClan"
  "POTW\020\330\037\022 \n\033k_EMsgAMSetClanPOTWResponse\020\331"
  "\037\022\025\n\020k_EMsgAMDumpUser\020\333\037\022\035\n\030k_EMsgAMKick"
  "UserFromClan\020\334\037\022\035\n\030k_EMsgAMAddFounderToC"
  "lan\020\335\037\022$\n\037k_EMsgAMValidateWGTokenRespons"
  "e\020\336\037\022\036\n\031k_EMsgAMSetAccountDetails\020\340\037\022\033\n\026"
  "k_EMsgAMGetChatBanList\020\341\037\022#\n\036k_EMsgAMGet"
  "ChatBanListResponse\020\342\037\022\032\n\025k_EMsgAMUnBanF"
  "romChat\020\343\037\022\033\n\026k_EMsgAMSetClanDetails\020\344\037\022"
  "\034\n\027k_EMsgAMGetAccountLinks\020\345\037\022$\n\037k_EMsgA"
  "MGetAccountLinksResponse\020\346\037\022\034\n\027k_EMsgAMS"
  "etAccountLinks\020\347\037\022$\n\037k_EMsgAMSetAccountL"
  "inksResponse\020\350\037\022\036\n\031k_EMsgUGSGetUserGameS"
  "tats\020\351\037\022&\n!k_EMsgUGSGetUserGameStatsResp"
  "onse\020\352\037\022 \n\033k_EMsgAMCheckClanMembership\020\353"
  "\037\022\033\n\026k_EMsgAMGetClanMembers\020\354\037\022#\n\036k_EMsg"
  "AMGetClanMembersResponse\020\355\037\022#\n\036k_EMsgAMN"
  "otifyChatOfClanChange\020\357\037\022\035\n\030k_EMsgAMResu"
  "bmitPurchase\020\360\037\022\026\n\021k_EMsgAMAddFriend\020\361\037\022"
  "\036\n\031k_EMsgAMAddFriendResponse\020\362\037\022\031\n\024k_EMs"
  "gAMRemoveFriend\020\363\037\022\025\n\020k_EMsgAMDumpClan\020\364"
  "\037\022\034\n\027k_EMsgAMChangeClanOwner\020\365\037\022\036\n\031k_EMs"
  "gAMCancelEasyCollect\020\366\037\022&\n!k_EMsgAMCance"
  "lEasyCollectResponse\020\367\037\022\032\n\025k_EMsgAMClans"
  "InCommon\020\372\037\022\"\n\035k_EMsgAMClansInCommonResp"
  "onse\020\373\037\022\035\n\030k_EMsgAMIsValidAccountID\020\374\037\022\034"
  "\n\027k_EMsgAMWipeFriendsList\020\377\037\022\027\n\022k_EMsgAM"
  "SetIgnored\020\200 \022\'\n\"k_EMsgAMClansInCommonCo"
  "untResponse\020\201 \022\030\n\023k_EMsgAMFriendsList\020\202 "
  "\022 \n\033k_EMsgAMFriendsListResponse\020\203 \022\034\n\027k_"
  "EMsgAMFriendsInCommon\020\204 \022$\n\037k_EMsgAMFrie"
  "ndsInCommonResponse\020\205 \022)\n$k_EMsgAMFriend"
  "sInCommonCountResponse\020\206 \022\037\n\032k_EMsgAMCla"
  "nsInCommonCount\020\207 \022\035\n\030k_EMsgAMChallengeV"
  "erdict\020\210 \022\"\n\035k_EMsgAMChallengeNotificati"
  "on\020\211 \022\027\n\022k_EMsgAMFindGSByIP\020\212 \022\030\n\023k_EMsg"
  "AMFoundGSByIP\020\213 \022\030\n\023k_EMsgAMGiftRevoked\020"
  "\214 \022\031\n\024k_EMsgAMUserClanList\020\216 \022!\n\034k_EMsgA"
  "MUserClanListResponse\020\217 \022\037\n\032k_EMsgAMGetA"
  "ccountDetails2\020\220 \022\'\n\"k_EMsgAMGetAccountD"
  "etailsResponse2\020\221 \022(\n#k_EMsgAMSetCommuni"
  "tyProfileSettings\020\222 \0220\n+k_EMsgAMSetCommu"
  "nityProfileSettingsResponse\020\223 \022%\n k_EMsg"
  "AMGetCommunityPrivacyState\020\224 \022-\n(k_EMsgA"
  "MGetCommunityPrivacyStateResponse\020\225 \022(\n#"
  "k_EMsgAMCheckClanInviteRateLimiting\020\226 \022&"
  "\n!k_EMsgUGSGetUserAchievementStatus\020\227 \022\027"
  "\n\022k_EMsgAMGetIgnored\020\230 \022\037\n\032k_EMsgAMGetIg"
  "noredResponse\020\231 \022\037\n\032k_EMsgAMSetIgnoredRe"
  "sponse\020\232 \022&\n!k_EMsgAMSetFriendRelationsh"
  "ipNone\020\233 \022\"\n\035k_EMsgAMGetFriendRelationsh"
  "ip\020\234 \022*\n%k_EMsgAMGetFriendRelationshipRe"
  "sponse\020\235 \022 \n\033k_EMsgAMServiceModulesCache"
  "\020\236 \022\037\n\032k_EMsgAMServiceModulesCall\020\237 \022\'\n\""
  "k_EMsgAMServiceModulesCallResponse\020\240 \022!\n"
  "\034k_EMsgCommunityAddFriendNews\020\254 \022\031\n\024k_EM"
  "sgAMFindClanUser\020\257 \022!\n\034k_EMsgAMFindClanU"
  "serResponse\020\260 \022\030\n\023k_EMsgAMBanFromChat\020\261 "
  "\022%\n k_EMsgAMGetUserNewsSubscriptions\020\263 \022"
  "-\n(k_EMsgAMGetUserNewsSubscriptionsRespo"
  "nse\020\264 \022%\n k_EMsgAMSetUserNewsSubscriptio"
  "ns\020\265 \022\035\n\030k_EMsgAMSendQueuedEmails\020\270 \022\034\n\027"
  "k_EMsgAMSetLicenseFlags\020\271 \022\"\n\035k_EMsgComm"
  "unityDeleteUserNews\020\273 \022\"\n\035k_EMsgAMAllowU"
  "serFilesRequest\020\274 \022#\n\036k_EMsgAMAllowUserF"
  "ilesResponse\020\275 \022\035\n\030k_EMsgAMGetAccountSta"
  "tus\020\276 \022%\n k_EMsgAMGetAccountStatusRespon"
  "se\020\277 \022\032\n\025k_EMsgAMEditBanReason\020\300 \022(\n#k_E"
  "MsgAMCheckClanMembershipResponse\020\301 \022$\n\037k"
  "_EMsgAMProbeClanMembershipList\020\302 \022,\n\'k_E"
  "MsgAMProbeClanMembershipListResponse\020\303 \022"
  ".\n)k_EMsgUGSGetUserAchievementStatusResp"
  "onse\020\304 \022\036\n\031k_EMsgAMGetFriendsLobbies\020\305 \022"
  "&\n!k_EMsgAMGetFriendsLobbiesResponse\020\306 \022"
  "&\n!k_EMsgAMGetUserFriendNewsResponse\020\314 \022"
  "%\n k_EMsgCommunityGetUserFriendNews\020\315 \022%"
  "\n k_EMsgAMGetUserClansNewsResponse\020\316 \022\035\n"
  "\030k_EMsgAMGetUserClansNews\020\317 \022!\n\034k_EMsgAM"
  "GetPreviousCBAccount\020\330 \022)\n$k_EMsgAMGetPr"
  "eviousCBAccountResponse\020\331 \022\"\n\035k_EMsgAMGe"
  "tUserLicenseHistory\020\336 \022*\n%k_EMsgAMGetUse"
  "rLicenseHistoryResponse\020\337 \022\"\n\035k_EMsgAMSu"
  "pportChangePassword\020\342 \022\037\n\032k_EMsgAMSuppor"
  "tChangeEmail\020\343 \022(\n#k_EMsgAMResetUserVeri"
  "ficationGSByIP\020\345 \022\036\n\031k_EMsgAMUpdateGSPla"
  "yStats\020\346 \022#\n\036k_EMsgAMSupportEnableOrDisa"
  "ble\020\347 \022\036\n\031k_EMsgAMGetPurchaseStatus\020\356 \022$"
  "\n\037k_EMsgAMSupportIsAccountEnabled\020\361 \022,\n\'"
  "k_EMsgAMSupportIsAccountEnabledResponse\020"
  "\362 \022\032\n\025k_EMsgUGSGetUserStats\020\363 \022\037\n\032k_EMsg"
  "AMSupportKickSession\020\364 \022\025\n\020k_EMsgAMGSSea"
  "rch\020\365 \022!\n\034k_EMsgMarketingMessageUpdate\020\370"
  " \022#\n\036k_EMsgChatServerRouteFriendMsg\020\373 \022("
  "\n#k_EMsgAMTicketAuthRequestOrResponse\020\374 "
  "\022\033\n\026k_EMsgAMAddFreeLicense\020\200!\022\036\n\031k_EMsgA"
  "MValidateEmailLink\020\207!\022&\n!k_EMsgAMValidat"
  "eEmailLinkResponse\020\210!\022\034\n\027k_EMsgUGSStoreU"
  "serStats\020\214!\022\035\n\030k_EMsgAMDeleteStoredCard\020"
  "\221!\022!\n\034k_EMsgAMRevokeLegacyGameKeys\020\222!\022\035\n"
  "\030k_EMsgAMGetWalletDetails\020\224!\022%\n k_EMsgAM"
  "GetWalletDetailsResponse\020\225!\022$\n\037k_EMsgAMD"
  "eleteStoredPaymentInfo\020\226!\022$\n\037k_EMsgAMGet"
  "StoredPaymentSummary\020\227!\022,\n\'k_EMsgAMGetSt"
  "oredPaymentSummaryResponse\020\230!\022$\n\037k_EMsgA"
  "MGetWalletConversionRate\020\231!\022,\n\'k_EMsgAMG"
  "etWalletConversionRateResponse\020\232!\022\032\n\025k_E"
  "MsgAMConvertWallet\020\233!\022\"\n\035k_EMsgAMConvert"
  "WalletResponse\020\234!\022\033\n\026k_EMsgAMSetPreAppro"
  "val\020\237!\022#\n\036k_EMsgAMSetPreApprovalResponse"
  "\020\240!\022\031\n\024k_EMsgAMCreateRefund\020\242!\022\035\n\030k_EMsg"
  "AMCreateChargeback\020\244!\022\032\n\025k_EMsgAMCreateD"
  "ispute\020\246!\022\031\n\024k_EMsgAMClearDispute\020\250!\022&\n!"
  "k_EMsgAMCreateFinancialAdjustment\020\251!\022\037\n\032"
  "k_EMsgAMPlayerNicknameList\020\252!\022\'\n\"k_EMsgA"
  "MPlayerNicknameListResponse\020\253!\022\035\n\030k_EMsg"
  "AMSetDRMTestConfig\020\254!\022#\n\036k_EMsgAMGetUser"
  "CurrentGameInfo\020\255!\022+\n&k_EMsgAMGetUserCur"
  "rentGameInfoResponse\020\256!\022\034\n\027k_EMsgAMGetGS"
  "PlayerList\020\257!\022$\n\037k_EMsgAMGetGSPlayerList"
  "Response\020\260!\022\"\n\035k_EMsgAMGetSteamIDForMicr"
  "oTxn\020\266!\022*\n%k_EMsgAMGetSteamIDForMicroTxn"
  "Response\020\267!\022\035\n\030k_EMsgAMSetPartnerMember\020"
  "\270!\022 \n\033k_EMsgAMRemovePublisherUser\020\271!\022\037\n\032"
  "k_EMsgAMGetUserLicenseList\020\272!\022\'\n\"k_EMsgA"
  "MGetUserLicenseListResponse\020\273!\022\"\n\035k_EMsg"
  "AMReloadGameGroupPolicy\020\274!\022#\n\036k_EMsgAMAd"
  "dFreeLicenseResponse\020\275!\022\034\n\027k_EMsgAMVACSt"
  "atusUpdate\020\276!\022\036\n\031k_EMsgAMGetAccountDetai"
  "ls\020\277!\022&\n!k_EMsgAMGetAccountDetailsRespon"
  "se\020\300!\022!\n\034k_EMsgAMGetPlayerLinkDetails\020\301!"
  "\022)\n$k_EMsgAMGetPlayerLinkDetailsResponse"
  "\020\302!\022)\n$k_EMsgAMGetAccountFlagsForWGSpoof"
  "ing\020\306!\0221\n,k_EMsgAMGetAccountFlagsForWGSp"
  "oofingResponse\020\307!\022\034\n\027k_EMsgAMGetClanOffi"
  "cers\020\312!\022$\n\037k_EMsgAMGetClanOfficersRespon"
  "se\020\313!\022\027\n\022k_EMsgAMNameChange\020\314!\022\033\n\026k_EMsg"
  "AMGetNameHistory\020\315!\022#\n\036k_EMsgAMGetNameHi"
  "storyResponse\020\316!\022!\n\034k_EMsgAMUpdateProvid"
  "erStatus\020\321!\022)\n$k_EMsgAMSupportRemoveAcco"
  "untSecurity\020\323!\022*\n%k_EMsgAMIsAccountInCap"
  "tchaGracePeriod\020\324!\0222\n-k_EMsgAMIsAccountI"
  "nCaptchaGracePeriodResponse\020\325!\022\035\n\030k_EMsg"
  "AMAccountPS3Unlink\020\326!\022%\n k_EMsgAMAccount"
  "PS3UnlinkResponse\020\327!\022$\n\037k_EMsgUGSStoreUs"
  "erStatsResponse\020\330!\022\036\n\031k_EMsgAMGetAccount"
  "PSNInfo\020\331!\022&\n!k_EMsgAMGetAccountPSNInfoR"
  "esponse\020\332!\022$\n\037k_EMsgAMAuthenticatedPlaye"
  "rList\020\333!\022\031\n\024k_EMsgAMGetUserGifts\020\334!\022!\n\034k"
  "_EMsgAMGetUserGiftsResponse\020\335!\022 \n\033k_EMsg"
  "AMTransferLockedGifts\020\340!\022(\n#k_EMsgAMTran"
  "sferLockedGiftsResponse\020\341!\022%\n k_EMsgAMPl"
  "ayerHostedOnGameServer\020\342!\022\036\n\031k_EMsgAMGet"
  "AccountBanInfo\020\343!\022&\n!k_EMsgAMGetAccountB"
  "anInfoResponse\020\344!\022!\n\034k_EMsgAMRecordBanEn"
  "forcement\020\345!\022!\n\034k_EMsgAMRollbackGiftTran"
  "sfer\020\346!\022)\n$k_EMsgAMRollbackGiftTransferR"
  "esponse\020\347!\022%\n k_EMsgAMHandlePendingTrans"
  "action\020\350!\022\037\n\032k_EMsgAMRequestClanDetails\020"
  "\351!\022(\n#k_EMsgAMDeleteStoredPaypalAgreemen"
  "t\020\352!\022\035\n\030k_EMsgAMGameServerUpdate\020\353!\022\035\n\030k"
  "_EMsgAMGameServerRemove\020\354!\022 \n\033k_EMsgAMGe"
  "tPaypalAgreements\020\355!\022(\n#k_EMsgAMGetPaypa"
  "lAgreementsResponse\020\356!\022/\n*k_EMsgAMGameSe"
  "rverPlayerCompatibilityCheck\020\357!\0227\n2k_EMs"
  "gAMGameServerPlayerCompatibilityCheckRes"
  "ponse\020\360!\022\031\n\024k_EMsgAMRenewLicense\020\361!\022\'\n\"k"
  "_EMsgAMGetAccountCommunityBanInfo\020\362!\022/\n*"
  "k_EMsgAMGetAccountCommunityBanInfoRespon"
  "se\020\363!\022,\n\'k_EMsgAMGameServerAccountChange"
  "Password\020\364!\022+\n&k_EMsgAMGameServerAccount"
  "DeleteAccount\020\365!\022\033\n\026k_EMsgAMRenewAgreeme"
  "nt\020\366!\022\032\n\025k_EMsgAMXsollaPayment\020\370!\022\"\n\035k_E"
  "MsgAMXsollaPaymentResponse\020\371!\022\"\n\035k_EMsgA"
  "MAcctAllowedToPurchase\020\372!\022*\n%k_EMsgAMAcc"
  "tAllowedToPurchaseResponse\020\373!\022\035\n\030k_EMsgA"
  "MSwapKioskDeposit\020\374!\022%\n k_EMsgAMSwapKios"
  "kDepositResponse\020\375!\022\037\n\032k_EMsgAMSetUserGi"
  "ftUnowned\020\376!\022\'\n\"k_EMsgAMSetUserGiftUnown"
  "edResponse\020\377!\022!\n\034k_EMsgAMClaimUnownedUse"
  "rGift\020\200\"\022)\n$k_EMsgAMClaimUnownedUserGift"
  "Response\020\201\"\022\030\n\023k_EMsgAMSetClanName\020\202\"\022 \n"
  "\033k_EMsgAMSetClanNameResponse\020\203\"\022\030\n\023k_EMs"
  "gAMGrantCoupon\020\204\"\022 \n\033k_EMsgAMGrantCoupon"
  "Response\020\205\"\022-\n(k_EMsgAMIsPackageRestrict"
  "edInUserCountry\020\206\"\0225\n0k_EMsgAMIsPackageR"
  "estrictedInUserCountryResponse\020\207\"\022-\n(k_E"
  "MsgAMHandlePendingTransactionResponse\020\210\""
  "\022\036\n\031k_EMsgAMGrantGuestPasses2\020\211\"\022&\n!k_EM"
  "sgAMGrantGuestPasses2Response\020\212\"\022 \n\033k_EM"
  "sgAMGetPlayerBanDetails\020\215\"\022(\n#k_EMsgAMGe"
  "tPlayerBanDetailsResponse\020\216\"\022\035\n\030k_EMsgAM"
  "FinalizePurchase\020\217\"\022%\n k_EMsgAMFinalizeP"
  "urchaseResponse\020\220\"\022\"\n\035k_EMsgAMPersonaCha"
  "ngeResponse\020\224\"\022+\n&k_EMsgAMGetClanDetails"
  "ForForumCreation\020\225\"\0223\n.k_EMsgAMGetClanDe"
  "tailsForForumCreationResponse\020\226\"\022(\n#k_EM"
  "sgAMGetPendingNotificationCount\020\227\"\0220\n+k_"
  "EMsgAMGetPendingNotificationCountRespons"
  "e\020\230\"\022 \n\033k_EMsgAMPasswordHashUpgrade\020\231\"\022\035"
  "\n\030k_EMsgAMBoaCompraPayment\020\234\"\022%\n k_EMsgA"
  "MBoaCompraPaymentResponse\020\235\"\022%\n k_EMsgAM"
  "CompleteExternalPurchase\020\237\"\022-\n(k_EMsgAMC"
  "ompleteExternalPurchaseResponse\020\240\"\022)\n$k_"
  "EMsgAMResolveNegativeWalletCredits\020\241\"\0221\n"
  ",k_EMsgAMResolveNegativeWalletCreditsRes"
  "ponse\020\242\"\022&\n!k_EMsgAMPlayerGetClanBasicDe"
  "tails\020\245\"\022.\n)k_EMsgAMPlayerGetClanBasicDe"
  "tailsResponse\020\246\"\022\027\n\022k_EMsgAMMOLPayment\020\247"
  "\"\022\037\n\032k_EMsgAMMOLPaymentResponse\020\250\"\022\033\n\026k_"
  "EMsgGetUserIPCountry\020\251\"\022#\n\036k_EMsgGetUser"
  "IPCountryResponse\020\252\"\022+\n&k_EMsgNotificati"
  "onOfSuspiciousActivity\020\253\"\022\032\n\025k_EMsgAMDeg"
  "icaPayment\020\254\"\022\"\n\035k_EMsgAMDegicaPaymentRe"
  "sponse\020\255\"\022\031\n\024k_EMsgAMEClubPayment\020\256\"\022!\n\034"
  "k_EMsgAMEClubPaymentResponse\020\257\"\022%\n k_EMs"
  "gAMPayPalPaymentsHubPayment\020\260\"\022-\n(k_EMsg"
  "AMPayPalPaymentsHubPaymentResponse\020\261\"\0221\n"
  ",k_EMsgAMTwoFactorRecoverAuthenticatorRe"
  "quest\020\262\"\0222\n-k_EMsgAMTwoFactorRecoverAuth"
  "enticatorResponse\020\263\"\022\035\n\030k_EMsgAMSmart2Pa"
  "yPayment\020\264\"\022%\n k_EMsgAMSmart2PayPaymentR"
  "esponse\020\265\"\0227\n2k_EMsgAMValidatePasswordRe"
  "setCodeAndSendSmsRequest\020\266\"\0228\n3k_EMsgAMV"
  "alidatePasswordResetCodeAndSendSmsRespon"
  "se\020\267\"\022*\n%k_EMsgAMGetAccountResetDetailsR"
  "equest\020\270\"\022+\n&k_EMsgAMGetAccountResetDeta"
  "ilsResponse\020\271\"\022\032\n\025k_EMsgAMBitPayPayment\020"
  "\272\"\022\"\n\035k_EMsgAMBitPayPaymentResponse\020\273\"\022\""
  "\n\035k_EMsgAMSendAccountInfoUpdate\020\274\"\022\036\n\031k_"
  "EMsgAMSendScheduledGift\020\275\"\022\032\n\025k_EMsgAMNo"
  "dwinPayment\020\276\"\022\"\n\035k_EMsgAMNodwinPaymentR"
  "esponse\020\277\"\022 \n\033k_EMsgAMResolveWalletRevok"
  "e\020\300\"\022\'\n\"k_EMsgAMResolveWalletReverseRevo"
  "ke\020\301\"\022\032\n\025k_EMsgAMFundedPayment\020\302\"\022\"\n\035k_E"
  "MsgAMFundedPaymentResponse\020\303\"\022.\n)k_EMsgA"
  "MRequestPersonaUpdateForChatServer\020\304\"\022 \n"
  "\033k_EMsgAMPerfectWorldPayment\020\305\"\022(\n#k_EMs"
  "gAMPerfectWorldPaymentResponse\020\306\"\022\026\n\021k_E"
  "MsgBasePSRange\020\210\'\022\037\n\032k_EMsgPSCreateShopp"
  "ingCart\020\211\'\022\'\n\"k_EMsgPSCreateShoppingCart"
  "Response\020\212\'\022 \n\033k_EMsgPSIsValidShoppingCa"
  "rt\020\213\'\022(\n#k_EMsgPSIsValidShoppingCartResp"
  "onse\020\214\'\022+\n&k_EMsgPSRemoveLineItemFromSho"
  "ppingCart\020\217\'\0223\n.k_EMsgPSRemoveLineItemFr"
  "omShoppingCartResponse\020\220\'\022$\n\037k_EMsgPSGet"
  "ShoppingCartContents\020\221\'\022,\n\'k_EMsgPSGetSh"
  "oppingCartContentsResponse\020\222\'\022*\n%k_EMsgP"
  "SAddWalletCreditToShoppingCart\020\223\'\0222\n-k_E"
  "MsgPSAddWalletCreditToShoppingCartRespon"
  "se\020\224\'\022\027\n\022k_EMsgBaseUFSRange\020\320(\022%\n k_EMsg"
  "ClientUFSUploadFileRequest\020\322(\022&\n!k_EMsgC"
  "lientUFSUploadFileResponse\020\323(\022#\n\036k_EMsgC"
  "lientUFSUploadFileChunk\020\324(\022&\n!k_EMsgClie"
  "ntUFSUploadFileFinished\020\325(\022%\n k_EMsgClie"
  "ntUFSGetFileListForApp\020\326(\022-\n(k_EMsgClien"
  "tUFSGetFileListForAppResponse\020\327(\022#\n\036k_EM"
  "sgClientUFSDownloadRequest\020\332(\022$\n\037k_EMsgC"
  "lientUFSDownloadResponse\020\333(\022!\n\034k_EMsgCli"
  "entUFSDownloadChunk\020\334(\022 \n\033k_EMsgClientUF"
  "SLoginRequest\020\335(\022!\n\034k_EMsgClientUFSLogin"
  "Response\020\336(\022!\n\034k_EMsgUFSReloadPartitionI"
  "nfo\020\337(\022%\n k_EMsgClientUFSTransferHeartbe"
  "at\020\340(\022\035\n\030k_EMsgUFSSynchronizeFile\020\341(\022%\n "
  "k_EMsgUFSSynchronizeFileResponse\020\342(\022%\n k"
  "_EMsgClientUFSDeleteFileRequest\020\343(\022&\n!k_"
  "EMsgClientUFSDeleteFileResponse\020\344(\022!\n\034k_"
  "EMsgClientUFSGetUGCDetails\020\352(\022)\n$k_EMsgC"
  "lientUFSGetUGCDetailsResponse\020\353(\022\035\n\030k_EM"
  "sgUFSUpdateFileFlags\020\354(\022%\n k_EMsgUFSUpda"
  "teFileFlagsResponse\020\355(\022%\n k_EMsgClientUF"
  "SGetSingleFileInfo\020\356(\022-\n(k_EMsgClientUFS"
  "GetSingleFileInfoResponse\020\357(\022\035\n\030k_EMsgCl"
  "ientUFSShareFile\020\360(\022%\n k_EMsgClientUFSSh"
  "areFileResponse\020\361(\022\033\n\026k_EMsgUFSReloadAcc"
  "ount\020\362(\022#\n\036k_EMsgUFSReloadAccountRespons"
  "e\020\363(\022!\n\034k_EMsgUFSUpdateRecordBatched\020\364(\022"
  ")\n$k_EMsgUFSUpdateRecordBatchedResponse\020"
  "\365(\022\031\n\024k_EMsgUFSMigrateFile\020\366(\022!\n\034k_EMsgU"
  "FSMigrateFileResponse\020\367(\022\030\n\023k_EMsgUFSGet"
  "UGCURLs\020\370(\022 \n\033k_EMsgUFSGetUGCURLsRespons"
  "e\020\371(\022)\n$k_EMsgUFSHttpUploadFileFinishReq"
  "uest\020\372(\022*\n%k_EMsgUFSHttpUploadFileFinish"
  "Response\020\373(\022\"\n\035k_EMsgUFSDownloadStartReq"
  "uest\020\374(\022#\n\036k_EMsgUFSDownloadStartRespons"
  "e\020\375(\022\"\n\035k_EMsgUFSDownloadChunkRequest\020\376("
  "\022#\n\036k_EMsgUFSDownloadChunkResponse\020\377(\022#\n"
  "\036k_EMsgUFSDownloadFinishRequest\020\200)\022$\n\037k_"
  "EMsgUFSDownloadFinishResponse\020\201)\022\033\n\026k_EM"
  "sgUFSFlushURLCache\020\202)\022 \n\033k_EMsgClientUFS"
  "UploadCommit\020\203)\022(\n#k_EMsgClientUFSUpload"
  "CommitResponse\020\204)\022\036\n\031k_EMsgUFSMigrateFil"
  "eAppID\020\205)\022&\n!k_EMsgUFSMigrateFileAppIDRe"
  "sponse\020\206)\022\026\n\021k_EMsgBaseClient2\020\230*\022.\n)k_E"
  "MsgClientRequestForgottenPasswordEmail\020\231"
  "*\0226\n1k_EMsgClientRequestForgottenPasswor"
  "dEmailResponse\020\232*\022&\n!k_EMsgClientCreateA"
  "ccountResponse\020\233*\022\'\n\"k_EMsgClientResetFo"
  "rgottenPassword\020\234*\022/\n*k_EMsgClientResetF"
  "orgottenPasswordResponse\020\235*\022/\n*k_EMsgCli"
  "entInformOfResetForgottenPassword\020\237*\0227\n2"
  "k_EMsgClientInformOfResetForgottenPasswo"
  "rdResponse\020\240*\022)\n$k_EMsgClientAnonUserLog"
  "On_Deprecated\020\241*\022(\n#k_EMsgClientGamesPla"
  "yedWithDataBlob\020\242*\022#\n\036k_EMsgClientUpdate"
  "UserGameInfo\020\243*\022\037\n\032k_EMsgClientFileToDow"
  "nload\020\244*\022\'\n\"k_EMsgClientFileToDownloadRe"
  "sponse\020\245*\022\034\n\027k_EMsgClientLBSSetScore\020\246*\022"
  "$\n\037k_EMsgClientLBSSetScoreResponse\020\247*\022\"\n"
  "\035k_EMsgClientLBSFindOrCreateLB\020\250*\022*\n%k_E"
  "MsgClientLBSFindOrCreateLBResponse\020\251*\022 \n"
  "\033k_EMsgClientLBSGetLBEntries\020\252*\022(\n#k_EMs"
  "gClientLBSGetLBEntriesResponse\020\253*\022\035\n\030k_E"
  "MsgClientChatDeclined\020\262*\022\"\n\035k_EMsgClient"
  "FriendMsgIncoming\020\263*\022$\n\037k_EMsgClientAuth"
  "List_Deprecated\020\264*\022#\n\036k_EMsgClientTicket"
  "AuthComplete\020\265*\022!\n\034k_EMsgClientIsLimited"
  "Account\020\266*\022 \n\033k_EMsgClientRequestAuthLis"
  "t\020\267*\022\031\n\024k_EMsgClientAuthList\020\270*\022\025\n\020k_EMs"
  "gClientStat\020\271*\022\"\n\035k_EMsgClientP2PConnect"
  "ionInfo\020\272*\022&\n!k_EMsgClientP2PConnectionF"
  "ailInfo\020\273*\022&\n!k_EMsgClientGetDepotDecryp"
  "tionKey\020\276*\022.\n)k_EMsgClientGetDepotDecryp"
  "tionKeyResponse\020\277*\022\"\n\035k_EMsgGSPerformHar"
  "dwareSurvey\020\300*\022\"\n\035k_EMsgClientEnableTest"
  "License\020\303*\022*\n%k_EMsgClientEnableTestLice"
  "nseResponse\020\304*\022#\n\036k_EMsgClientDisableTes"
  "tLicense\020\305*\022+\n&k_EMsgClientDisableTestLi"
  "censeResponse\020\306*\022&\n!k_EMsgClientRequestV"
  "alidationMail\020\310*\022.\n)k_EMsgClientRequestV"
  "alidationMailResponse\020\311*\022%\n k_EMsgClient"
  "CheckAppBetaPassword\020\312*\022-\n(k_EMsgClientC"
  "heckAppBetaPasswordResponse\020\313*\022\025\n\020k_EMsg"
  "ClientToGC\020\314*\022\027\n\022k_EMsgClientFromGC\020\315*\022\036"
  "\n\031k_EMsgClientEmailAddrInfo\020\320*\022 \n\033k_EMsg"
  "ClientPasswordChange3\020\321*\022\035\n\030k_EMsgClient"
  "EmailChange3\020\322*\022\"\n\035k_EMsgClientPersonalQ"
  "AChange3\020\323*\022(\n#k_EMsgClientResetForgotte"
  "nPassword3\020\324*\022/\n*k_EMsgClientRequestForg"
  "ottenPasswordEmail3\020\325*\022\034\n\027k_EMsgClientNe"
  "wLoginKey\020\327*\022$\n\037k_EMsgClientNewLoginKeyA"
  "ccepted\020\330*\022)\n$k_EMsgClientLogOnWithHash_"
  "Deprecated\020\331*\022 \n\033k_EMsgClientStoreUserSt"
  "ats2\020\332*\022\035\n\030k_EMsgClientStatsUpdated\020\333*\022#"
  "\n\036k_EMsgClientActivateOEMLicense\020\334*\022#\n\036k"
  "_EMsgClientRegisterOEMMachine\020\335*\022+\n&k_EM"
  "sgClientRegisterOEMMachineResponse\020\336*\022%\n"
  " k_EMsgClientRequestedClientStats\020\350*\022\033\n\026"
  "k_EMsgClientStat2Int32\020\351*\022\026\n\021k_EMsgClien"
  "tStat2\020\352*\022\037\n\032k_EMsgClientVerifyPassword\020"
  "\353*\022\'\n\"k_EMsgClientVerifyPasswordResponse"
  "\020\354*\022#\n\036k_EMsgClientDRMDownloadRequest\020\355*"
  "\022$\n\037k_EMsgClientDRMDownloadResponse\020\356*\022\037"
  "\n\032k_EMsgClientDRMFinalResult\020\357*\022&\n!k_EMs"
  "gClientGetFriendsWhoPlayGame\020\360*\022.\n)k_EMs"
  "gClientGetFriendsWhoPlayGameResponse\020\361*\022"
  " \n\033k_EMsgClientOGSBeginSession\020\362*\022(\n#k_E"
  "MsgClientOGSBeginSessionResponse\020\363*\022\036\n\031k"
  "_EMsgClientOGSEndSession\020\364*\022&\n!k_EMsgCli"
  "entOGSEndSessionResponse\020\365*\022\034\n\027k_EMsgCli"
  "entOGSWriteRow\020\366*\022\030\n\023k_EMsgClientDRMTest"
  "\020\367*\022\036\n\031k_EMsgClientDRMTestResult\020\370*\022\"\n\035k"
  "_EMsgClientServerUnavailable\020\374*\022!\n\034k_EMs"
  "gClientServersAvailable\020\375*\022)\n$k_EMsgClie"
  "ntRegisterAuthTicketWithCM\020\376*\022\034\n\027k_EMsgC"
  "lientGCMsgFailed\020\377*\022$\n\037k_EMsgClientMicro"
  "TxnAuthRequest\020\200+\022\"\n\035k_EMsgClientMicroTx"
  "nAuthorize\020\201+\022*\n%k_EMsgClientMicroTxnAut"
  "horizeResponse\020\202+\022 \n\033k_EMsgClientGetMicr"
  "oTxnInfo\020\204+\022(\n#k_EMsgClientGetMicroTxnIn"
  "foResponse\020\205+\022(\n#k_EMsgClientMarketingMe"
  "ssageUpdate2\020\206+\022%\n k_EMsgClientDeregiste"
  "rWithServer\020\207+\022\'\n\"k_EMsgClientSubscribeT"
  "oPersonaFeed\020\210+\022\026\n\021k_EMsgClientLogon\020\212+\022"
  "!\n\034k_EMsgClientGetClientDetails\020\213+\022)\n$k_"
  "EMsgClientGetClientDetailsResponse\020\214+\022+\n"
  "&k_EMsgClientReportOverlayDetourFailure\020"
  "\215+\022!\n\034k_EMsgClientGetClientAppList\020\216+\022)\n"
  "$k_EMsgClientGetClientAppListResponse\020\217+"
  "\022!\n\034k_EMsgClientInstallClientApp\020\220+\022)\n$k"
  "_EMsgClientInstallClientAppResponse\020\221+\022#"
  "\n\036k_EMsgClientUninstallClientApp\020\222+\022+\n&k"
  "_EMsgClientUninstallClientAppResponse\020\223+"
  "\022(\n#k_EMsgClientSetClientAppUpdateState\020"
  "\224+\0220\n+k_EMsgClientSetClientAppUpdateStat"
  "eResponse\020\225+\022*\n%k_EMsgClientRequestEncry"
  "ptedAppTicket\020\226+\0222\n-k_EMsgClientRequestE"
  "ncryptedAppTicketResponse\020\227+\022!\n\034k_EMsgCl"
  "ientWalletInfoUpdate\020\230+\022\032\n\025k_EMsgClientL"
  "BSSetUGC\020\231+\022\"\n\035k_EMsgClientLBSSetUGCResp"
  "onse\020\232+\022\"\n\035k_EMsgClientAMGetClanOfficers"
  "\020\233+\022*\n%k_EMsgClientAMGetClanOfficersResp"
  "onse\020\234+\022\"\n\035k_EMsgClientFriendProfileInfo"
  "\020\237+\022*\n%k_EMsgClientFriendProfileInfoResp"
  "onse\020\240+\022\"\n\035k_EMsgClientUpdateMachineAuth"
  "\020\241+\022*\n%k_EMsgClientUpdateMachineAuthResp"
  "onse\020\242+\022 \n\033k_EMsgClientReadMachineAuth\020\243"
  "+\022(\n#k_EMsgClientReadMachineAuthResponse"
  "\020\244+\022#\n\036k_EMsgClientRequestMachineAuth\020\245+"
  "\022+\n&k_EMsgClientRequestMachineAuthRespon"
  "se\020\246+\022#\n\036k_EMsgClientScreenshotsChanged\020"
  "\247+\022 \n\033k_EMsgClientGetCDNAuthToken\020\252+\022(\n#"
  "k_EMsgClientGetCDNAuthTokenResponse\020\253+\022\'"
  "\n\"k_EMsgClientDownloadRateStatistics\020\254+\022"
  "#\n\036k_EMsgClientRequestAccountData\020\255+\022+\n&"
  "k_EMsgClientRequestAccountDataResponse\020\256"
  "+\022(\n#k_EMsgClientResetForgottenPassword4"
  "\020\257+\022\033\n\026k_EMsgClientHideFriend\020\260+\022\"\n\035k_EM"
  "sgClientFriendsGroupsList\020\261+\022&\n!k_EMsgCl"
  "ientGetClanActivityCounts\020\262+\022.\n)k_EMsgCl"
  "ientGetClanActivityCountsResponse\020\263+\022 \n\033"
  "k_EMsgClientOGSReportString\020\264+\022\035\n\030k_EMsg"
  "ClientOGSReportBug\020\265+\022\031\n\024k_EMsgClientSen"
  "tLogs\020\266+\022 \n\033k_EMsgClientLogonGameServer\020"
  "\267+\022%\n k_EMsgAMClientCreateFriendsGroup\020\270"
  "+\022-\n(k_EMsgAMClientCreateFriendsGroupRes"
  "ponse\020\271+\022%\n k_EMsgAMClientDeleteFriendsG"
  "roup\020\272+\022-\n(k_EMsgAMClientDeleteFriendsGr"
  "oupResponse\020\273+\022%\n k_EMsgAMClientManageFr"
  "iendsGroup\020\274+\022-\n(k_EMsgAMClientManageFri"
  "endsGroupResponse\020\275+\022#\n\036k_EMsgAMClientAd"
  "dFriendToGroup\020\276+\022+\n&k_EMsgAMClientAddFr"
  "iendToGroupResponse\020\277+\022(\n#k_EMsgAMClient"
  "RemoveFriendFromGroup\020\300+\0220\n+k_EMsgAMClie"
  "ntRemoveFriendFromGroupResponse\020\301+\022(\n#k_"
  "EMsgClientAMGetPersonaNameHistory\020\302+\0220\n+"
  "k_EMsgClientAMGetPersonaNameHistoryRespo"
  "nse\020\303+\022#\n\036k_EMsgClientRequestFreeLicense"
  "\020\304+\022+\n&k_EMsgClientRequestFreeLicenseRes"
  "ponse\020\305+\0220\n+k_EMsgClientDRMDownloadReque"
  "stWithCrashData\020\306+\022\034\n\027k_EMsgClientAuthLi"
  "stAck\020\307+\022\"\n\035k_EMsgClientItemAnnouncement"
  "s\020\310+\022)\n$k_EMsgClientRequestItemAnnouncem"
  "ents\020\311+\022&\n!k_EMsgClientFriendMsgEchoToSe"
  "nder\020\312+\022%\n k_EMsgClientCommentNotificati"
  "ons\020\316+\022,\n\'k_EMsgClientRequestCommentNoti"
  "fications\020\317+\022&\n!k_EMsgClientPersonaChang"
  "eResponse\020\320+\0223\n.k_EMsgClientRequestWebAP"
  "IAuthenticateUserNonce\020\321+\022;\n6k_EMsgClien"
  "tRequestWebAPIAuthenticateUserNonceRespo"
  "nse\020\322+\022#\n\036k_EMsgClientPlayerNicknameList"
  "\020\323+\022$\n\037k_EMsgAMClientSetPlayerNickname\020\324"
  "+\022,\n\'k_EMsgAMClientSetPlayerNicknameResp"
  "onse\020\325+\022,\n\'k_EMsgClientGetNumberOfCurren"
  "tPlayersDP\020\330+\0224\n/k_EMsgClientGetNumberOf"
  "CurrentPlayersDPResponse\020\331+\022$\n\037k_EMsgCli"
  "entServiceMethodLegacy\020\332+\022,\n\'k_EMsgClien"
  "tServiceMethodLegacyResponse\020\333+\022*\n%k_EMs"
  "gClientFriendUserStatusPublished\020\334+\022\036\n\031k"
  "_EMsgClientCurrentUIMode\020\335+\022-\n(k_EMsgCli"
  "entVanityURLChangedNotification\020\336+\022\"\n\035k_"
  "EMsgClientUserNotifications\020\337+\022\022\n\rk_EMsg"
  "BaseDFS\020\340+\022\025\n\020k_EMsgDFSGetFile\020\341+\022\036\n\031k_E"
  "MsgDFSInstallLocalFile\020\342+\022\030\n\023k_EMsgDFSCo"
  "nnection\020\343+\022\035\n\030k_EMsgDFSConnectionReply\020"
  "\344+\022\'\n\"k_EMsgClientDFSAuthenticateRequest"
  "\020\345+\022(\n#k_EMsgClientDFSAuthenticateRespon"
  "se\020\346+\022\036\n\031k_EMsgClientDFSEndSession\020\347+\022\027\n"
  "\022k_EMsgDFSPurgeFile\020\350+\022\027\n\022k_EMsgDFSRoute"
  "File\020\351+\022\037\n\032k_EMsgDFSGetFileFromServer\020\352+"
  "\022\036\n\031k_EMsgDFSAcceptedResponse\020\353+\022\035\n\030k_EM"
  "sgDFSRequestPingback\020\354+\022\036\n\031k_EMsgDFSRecv"
  "TransmitFile\020\355+\022\036\n\031k_EMsgDFSSendTransmit"
  "File\020\356+\022\036\n\031k_EMsgDFSRequestPingback2\020\357+\022"
  "\037\n\032k_EMsgDFSResponsePingback2\020\360+\022\"\n\035k_EM"
  "sgClientDFSDownloadStatus\020\361+\022\033\n\026k_EMsgDF"
  "SStartTransfer\020\362+\022\036\n\031k_EMsgDFSTransferCo"
  "mplete\020\363+\022\037\n\032k_EMsgDFSRouteFileResponse\020"
  "\364+\022&\n!k_EMsgClientNetworkingCertRequest\020"
  "\365+\022.\n)k_EMsgClientNetworkingCertRequestR"
  "esponse\020\366+\022!\n\034k_EMsgClientChallengeReque"
  "st\020\367+\022\"\n\035k_EMsgClientChallengeResponse\020\370"
  "+\022#\n\036k_EMsgBadgeCraftedNotification\020\371+\022,"
  "\n\'k_EMsgClientNetworkingMobileCertReques"
  "t\020\372+\0224\n/k_EMsgClientNetworkingMobileCert"
  "RequestResponse\020\373+\022\022\n\rk_EMsgBaseMDS\020\250-\022\'"
  "\n\"k_EMsgAMToMDSGetDepotDecryptionKey\020\264-\022"
  "/\n*k_EMsgMDSToAMGetDepotDecryptionKeyRes"
  "ponse\020\265-\022(\n#k_EMsgMDSContentServerConfig"
  "Request\020\303-\022!\n\034k_EMsgMDSContentServerConf"
  "ig\020\304-\022\036\n\031k_EMsgMDSGetDepotManifest\020\305-\022&\n"
  "!k_EMsgMDSGetDepotManifestResponse\020\306-\022#\n"
  "\036k_EMsgMDSGetDepotManifestChunk\020\307-\022\033\n\026k_"
  "EMsgMDSGetDepotChunk\020\310-\022#\n\036k_EMsgMDSGetD"
  "epotChunkResponse\020\311-\022 \n\033k_EMsgMDSGetDepo"
  "tChunkChunk\020\312-\022\034\n\027k_EMsgMDSToCSFlushChun"
  "k\020\324-\022\032\n\025k_EMsgMDSMigrateChunk\020\327-\022\"\n\035k_EM"
  "sgMDSMigrateChunkResponse\020\330-\022\037\n\032k_EMsgMD"
  "SToCSFlushManifest\020\331-\022\021\n\014k_EMsgCSBase\020\2700"
  "\022\021\n\014k_EMsgCSPing\020\2710\022\031\n\024k_EMsgCSPingRespo"
  "nse\020\2720\022\022\n\rk_EMsgGMSBase\020\2002\022!\n\034k_EMsgGMSG"
  "ameServerReplicate\020\2012\022\037\n\032k_EMsgClientGMS"
  "ServerQuery\020\2032\022\'\n\"k_EMsgGMSClientServerQ"
  "ueryResponse\020\2042\022 \n\033k_EMsgAMGMSGameServer"
  "Update\020\2052\022 \n\033k_EMsgAMGMSGameServerRemove"
  "\020\2062\022\036\n\031k_EMsgGameServerOutOfDate\020\2072\022\"\n\035k"
  "_EMsgDeviceAuthorizationBase\020\3442\022,\n\'k_EMs"
  "gClientAuthorizeLocalDeviceRequest\020\3452\022-\n"
  "(k_EMsgClientAuthorizeLocalDeviceRespons"
  "e\020\3462\022)\n$k_EMsgClientDeauthorizeDeviceReq"
  "uest\020\3472\022\"\n\035k_EMsgClientDeauthorizeDevice"
  "\020\3502\022-\n(k_EMsgClientUseLocalDeviceAuthori"
  "zations\020\3512\022%\n k_EMsgClientGetAuthorizedD"
  "evices\020\3522\022-\n(k_EMsgClientGetAuthorizedDe"
  "vicesResponse\020\3532\022*\n%k_EMsgAMNotifySessio"
  "nDeviceAuthorized\020\3542\0221\n,k_EMsgClientAuth"
  "orizeLocalDeviceNotification\020\3552\022\022\n\rk_EMs"
  "gMMSBase\020\3103\022\037\n\032k_EMsgClientMMSCreateLobb"
  "y\020\3113\022\'\n\"k_EMsgClientMMSCreateLobbyRespon"
  "se\020\3123\022\035\n\030k_EMsgClientMMSJoinLobby\020\3133\022%\n "
  "k_EMsgClientMMSJoinLobbyResponse\020\3143\022\036\n\031k"
  "_EMsgClientMMSLeaveLobby\020\3153\022&\n!k_EMsgCli"
  "entMMSLeaveLobbyResponse\020\3163\022 \n\033k_EMsgCli"
  "entMMSGetLobbyList\020\3173\022(\n#k_EMsgClientMMS"
  "GetLobbyListResponse\020\3203\022 \n\033k_EMsgClientM"
  "MSSetLobbyData\020\3213\022(\n#k_EMsgClientMMSSetL"
  "obbyDataResponse\020\3223\022 \n\033k_EMsgClientMMSGe"
  "tLobbyData\020\3233\022\035\n\030k_EMsgClientMMSLobbyDat"
  "a\020\3243\022$\n\037k_EMsgClientMMSSendLobbyChatMsg\020"
  "\3253\022 \n\033k_EMsgClientMMSLobbyChatMsg\020\3263\022!\n\034"
  "k_EMsgClientMMSSetLobbyOwner\020\3273\022)\n$k_EMs"
  "gClientMMSSetLobbyOwnerResponse\020\3303\022&\n!k_"
  "EMsgClientMMSSetLobbyGameServer\020\3313\022&\n!k_"
  "EMsgClientMMSLobbyGameServerSet\020\3323\022#\n\036k_"
  "EMsgClientMMSUserJoinedLobby\020\3333\022!\n\034k_EMs"
  "gClientMMSUserLeftLobby\020\3343\022!\n\034k_EMsgClie"
  "ntMMSInviteToLobby\020\3353\022)\n$k_EMsgClientMMS"
  "FlushFrenemyListCache\020\3363\0221\n,k_EMsgClient"
  "MMSFlushFrenemyListCacheResponse\020\3373\022\"\n\035k"
  "_EMsgClientMMSSetLobbyLinked\020\3403\022.\n)k_EMs"
  "gClientMMSSetRatelimitPolicyOnClient\020\3413\022"
  "\"\n\035k_EMsgClientMMSGetLobbyStatus\020\3423\022*\n%k"
  "_EMsgClientMMSGetLobbyStatusResponse\020\3433\022"
  "\032\n\025k_EMsgMMSGetLobbyList\020\3443\022\"\n\035k_EMsgMMS"
  "GetLobbyListResponse\020\3453\022\030\n\023k_EMsgNonStdM"
  "sgBase\020\2205\022\035\n\030k_EMsgNonStdMsgMemcached\020\2215"
  "\022\036\n\031k_EMsgNonStdMsgHTTPServer\020\2225\022\036\n\031k_EM"
  "sgNonStdMsgHTTPClient\020\2235\022\036\n\031k_EMsgNonStd"
  "MsgWGResponse\020\2245\022 \n\033k_EMsgNonStdMsgPHPSi"
  "mulator\020\2255\022\031\n\024k_EMsgNonStdMsgChase\020\2265\022\037\n"
  "\032k_EMsgNonStdMsgDFSTransfer\020\2275\022\031\n\024k_EMsg"
  "NonStdMsgTests\020\2305\022\037\n\032k_EMsgNonStdMsgUMQp"
  "ipeAAPL\020\2315\022\032\n\025k_EMSgNonStdMsgSyslog\020\2325\022\033"
  "\n\026k_EMsgNonStdMsgLogsink\020\2335\022\"\n\035k_EMsgNon"
  "StdMsgSteam2Emulator\020\2345\022\036\n\031k_EMsgNonStdM"
  "sgRTMPServer\020\2355\022\035\n\030k_EMsgNonStdMsgWebSoc"
  "ket\020\2365\022\031\n\024k_EMsgNonStdMsgRedis\020\2375\022\022\n\rk_E"
  "MsgUDSBase\020\3306\022%\n k_EMsgClientUDSP2PSessi"
  "onStarted\020\3316\022#\n\036k_EMsgClientUDSP2PSessio"
  "nEnded\020\3326\022\034\n\027k_EMsgUDSRenderUserAuth\020\3336\022"
  "$\n\037k_EMsgUDSRenderUserAuthResponse\020\3346\022\035\n"
  "\030k_EMsgClientInviteToGame\020\3356\022\030\n\023k_EMsgUD"
  "SHasSession\020\3366\022 \n\033k_EMsgUDSHasSessionRes"
  "ponse\020\3376\022\023\n\016k_EMsgMPASBase\020\2747\022\032\n\025k_EMsgM"
  "PASVacBanReset\020\2757\022\022\n\rk_EMsgKGSBase\020\2408\022\022\n"
  "\rk_EMsgUCMBase\020\2049\022!\n\034k_EMsgClientUCMAddS"
  "creenshot\020\2059\022)\n$k_EMsgClientUCMAddScreen"
  "shotResponse\020\2069\022#\n\036k_EMsgUCMResetCommuni"
  "tyContent\020\2139\022+\n&k_EMsgUCMResetCommunityC"
  "ontentResponse\020\2149\022$\n\037k_EMsgClientUCMDele"
  "teScreenshot\020\2159\022,\n\'k_EMsgClientUCMDelete"
  "ScreenshotResponse\020\2169\022\037\n\032k_EMsgClientUCM"
  "PublishFile\020\2179\022\'\n\"k_EMsgClientUCMPublish"
  "FileResponse\020\2209\022\'\n\"k_EMsgClientUCMDelete"
  "PublishedFile\020\2239\022/\n*k_EMsgClientUCMDelet"
  "ePublishedFileResponse\020\2249\022\'\n\"k_EMsgClien"
  "tUCMUpdatePublishedFile\020\2359\022/\n*k_EMsgClie"
  "ntUCMUpdatePublishedFileResponse\020\2369\022!\n\034k"
  "_EMsgUCMUpdatePublishedFile\020\2379\022)\n$k_EMsg"
  "UCMUpdatePublishedFileResponse\020\2409\022!\n\034k_E"
  "MsgUCMDeletePublishedFile\020\2419\022)\n$k_EMsgUC"
  "MDeletePublishedFileResponse\020\2429\022%\n k_EMs"
  "gUCMUpdatePublishedFileStat\020\2439\022!\n\034k_EMsg"
  "UCMReloadPublishedFile\020\2519\022&\n!k_EMsgUCMRe"
  "loadUserFileListCaches\020\2529\022#\n\036k_EMsgUCMPu"
  "blishedFileReported\020\2539\022%\n k_EMsgUCMPubli"
  "shedFilePreviewAdd\020\2559\022-\n(k_EMsgUCMPublis"
  "hedFilePreviewAddResponse\020\2569\022(\n#k_EMsgUC"
  "MPublishedFilePreviewRemove\020\2579\0220\n+k_EMsg"
  "UCMPublishedFilePreviewRemoveResponse\020\2609"
  "\022%\n k_EMsgUCMPublishedFileSubscribed\020\2659\022"
  "\'\n\"k_EMsgUCMPublishedFileUnsubscribed\020\2669"
  "\022\031\n\024k_EMsgUCMPublishFile\020\2679\022!\n\034k_EMsgUCM"
  "PublishFileResponse\020\2709\022#\n\036k_EMsgUCMPubli"
  "shedFileChildAdd\020\2719\022+\n&k_EMsgUCMPublishe"
  "dFileChildAddResponse\020\2729\022&\n!k_EMsgUCMPub"
  "lishedFileChildRemove\020\2739\022.\n)k_EMsgUCMPub"
  "lishedFileChildRemoveResponse\020\2749\022(\n#k_EM"
  "sgUCMPublishedFileParentChanged\020\2779\022.\n)k_"
  "EMsgClientUCMSetUserPublishedFileAction\020"
  "\3049\0226\n1k_EMsgClientUCMSetUserPublishedFil"
  "eActionResponse\020\3059\0227\n2k_EMsgClientUCMEnu"
  "meratePublishedFilesByUserAction\020\3069\022\?\n:k"
  "_EMsgClientUCMEnumeratePublishedFilesByU"
  "serActionResponse\020\3079\022$\n\037k_EMsgUCMGetUser"
  "SubscribedFiles\020\3119\022,\n\'k_EMsgUCMGetUserSu"
  "bscribedFilesResponse\020\3129\022#\n\036k_EMsgUCMFix"
  "StatsPublishedFile\020\3139\022;\n6k_EMsgClientUCM"
  "EnumerateUserSubscribedFilesWithUpdates\020"
  "\3229\022C\n>k_EMsgClientUCMEnumerateUserSubscr"
  "ibedFilesWithUpdatesResponse\020\3239\022)\n$k_EMs"
  "gUCMPublishedFileContentUpdated\020\3249\022(\n#k_"
  "EMsgClientUCMPublishedFileUpdated\020\3259\022+\n&"
  "k_EMsgClientWorkshopItemChangesRequest\020\326"
  "9\022,\n\'k_EMsgClientWorkshopItemChangesResp"
  "onse\020\3279\022\021\n\014k_EMsgFSBase\020\314:\022#\n\036k_EMsgClie"
  "ntRichPresenceUpload\020\315:\022$\n\037k_EMsgClientR"
  "ichPresenceRequest\020\316:\022!\n\034k_EMsgClientRic"
  "hPresenceInfo\020\317:\022 \n\033k_EMsgFSRichPresence"
  "Request\020\320:\022!\n\034k_EMsgFSRichPresenceRespon"
  "se\020\321:\022\037\n\032k_EMsgFSComputeFrenematrix\020\322:\022\'"
  "\n\"k_EMsgFSComputeFrenematrixResponse\020\323:\022"
  "#\n\036k_EMsgFSPlayStatusNotification\020\324:\022 \n\033"
  "k_EMsgFSAddOrRemoveFollower\020\326:\022(\n#k_EMsg"
  "FSAddOrRemoveFollowerResponse\020\327:\022 \n\033k_EM"
  "sgFSUpdateFollowingList\020\330:\022 \n\033k_EMsgFSCo"
  "mmentNotification\020\331:\022&\n!k_EMsgFSCommentN"
  "otificationViewed\020\332:\022#\n\036k_EMsgClientFSGe"
  "tFollowerCount\020\333:\022+\n&k_EMsgClientFSGetFo"
  "llowerCountResponse\020\334:\022!\n\034k_EMsgClientFS"
  "GetIsFollowing\020\335:\022)\n$k_EMsgClientFSGetIs"
  "FollowingResponse\020\336:\022)\n$k_EMsgClientFSEn"
  "umerateFollowingList\020\337:\0221\n,k_EMsgClientF"
  "SEnumerateFollowingListResponse\020\340:\022(\n#k_"
  "EMsgFSGetPendingNotificationCount\020\341:\0220\n+"
  "k_EMsgFSGetPendingNotificationCountRespo"
  "nse\020\342:\022/\n*k_EMsgClientChatOfflineMessage"
  "Notification\020\343:\022/\n*k_EMsgClientChatReque"
  "stOfflineMessageCount\020\344:\022,\n\'k_EMsgClient"
  "ChatGetFriendMessageHistory\020\345:\0224\n/k_EMsg"
  "ClientChatGetFriendMessageHistoryRespons"
  "e\020\346:\022>\n9k_EMsgClientChatGetFriendMessage"
  "HistoryForOfflineMessages\020\347:\022(\n#k_EMsgCl"
  "ientFSGetFriendsSteamLevels\020\350:\0220\n+k_EMsg"
  "ClientFSGetFriendsSteamLevelsResponse\020\351:"
  "\022\036\n\031k_EMsgAMRequestFriendData\020\352:\022\024\n\017k_EM"
  "sgDRMRange2\020\260;\022,\n\'k_EMsgCEGVersionSetEna"
  "bleDisableRequest\020\260;\022-\n(k_EMsgCEGVersion"
  "SetEnableDisableResponse\020\261;\022#\n\036k_EMsgCEG"
  "PropStatusDRMSRequest\020\262;\022$\n\037k_EMsgCEGPro"
  "pStatusDRMSResponse\020\263;\022\'\n\"k_EMsgCEGWhack"
  "FailureReportRequest\020\264;\022(\n#k_EMsgCEGWhac"
  "kFailureReportResponse\020\265;\022\036\n\031k_EMsgDRMSF"
  "etchVersionSet\020\266;\022&\n!k_EMsgDRMSFetchVers"
  "ionSetResponse\020\267;\022\023\n\016k_EMsgEconBase\020\224<\022+"
  "\n&k_EMsgEconTrading_InitiateTradeRequest"
  "\020\225<\022,\n\'k_EMsgEconTrading_InitiateTradePr"
  "oposed\020\226<\022,\n\'k_EMsgEconTrading_InitiateT"
  "radeResponse\020\227<\022*\n%k_EMsgEconTrading_Ini"
  "tiateTradeResult\020\230<\022#\n\036k_EMsgEconTrading"
  "_StartSession\020\231<\022)\n$k_EMsgEconTrading_Ca"
  "ncelTradeRequest\020\232<\022\"\n\035k_EMsgEconFlushIn"
  "ventoryCache\020\233<\022*\n%k_EMsgEconFlushInvent"
  "oryCacheResponse\020\234<\022&\n!k_EMsgEconCDKeyPr"
  "ocessTransaction\020\237<\022.\n)k_EMsgEconCDKeyPr"
  "ocessTransactionResponse\020\240<\022\033\n\026k_EMsgEco"
  "nGetErrorLogs\020\241<\022#\n\036k_EMsgEconGetErrorLo"
  "gsResponse\020\242<\022\022\n\rk_EMsgRMRange\020\370<\022\034\n\027k_E"
  "MsgRMTestVerisignOTP\020\370<\022$\n\037k_EMsgRMTestV"
  "erisignOTPResponse\020\371<\022 \n\033k_EMsgRMDeleteM"
  "emcachedKeys\020\373<\022\031\n\024k_EMsgRMRemoteInvoke\020"
  "\374<\022\031\n\024k_EMsgBadLoginIPList\020\375<\022\037\n\032k_EMsgR"
  "MMsgTraceAddTrigger\020\376<\022\"\n\035k_EMsgRMMsgTra"
  "ceRemoveTrigger\020\377<\022\032\n\025k_EMsgRMMsgTraceEv"
  "ent\020\200=\022\022\n\rk_EMsgUGSBase\020\334=\022\037\n\032k_EMsgUGSU"
  "pdateGlobalStats\020\334=\022\"\n\035k_EMsgClientUGSGe"
  "tGlobalStats\020\335=\022*\n%k_EMsgClientUGSGetGlo"
  "balStatsResponse\020\336=\022\024\n\017k_EMsgStoreBase\020\300"
  ">\022\022\n\rk_EMsgUMQBase\020\244\?\022\032\n\025k_EMsgUMQLogonR"
  "equest\020\244\?\022\033\n\026k_EMsgUMQLogonResponse\020\245\?\022\033"
  "\n\026k_EMsgUMQLogoffRequest\020\246\?\022\034\n\027k_EMsgUMQ"
  "LogoffResponse\020\247\?\022\035\n\030k_EMsgUMQSendChatMe"
  "ssage\020\250\?\022!\n\034k_EMsgUMQIncomingChatMessage"
  "\020\251\?\022\022\n\rk_EMsgUMQPoll\020\252\?\022\031\n\024k_EMsgUMQPoll"
  "Results\020\253\?\022 \n\033k_EMsgUMQ2AM_ClientMsgBatc"
  "h\020\254\?\022\027\n\022k_EMsgWorkshopBase\020\210@\022\025\n\020k_EMsgW"
  "ebAPIBase\020\354@\022$\n\037k_EMsgWebAPIValidateOAut"
  "h2Token\020\354@\022,\n\'k_EMsgWebAPIValidateOAuth2"
  "TokenResponse\020\355@\022%\n k_EMsgWebAPIRegister"
  "GCInterfaces\020\357@\022+\n&k_EMsgWebAPIInvalidat"
  "eOAuthClientCache\020\360@\022*\n%k_EMsgWebAPIInva"
  "lidateOAuthTokenCache\020\361@\022\033\n\026k_EMsgWebAPI"
  "SetSecrets\020\362@\022\027\n\022k_EMsgBackpackBase\020\320A\022 "
  "\n\033k_EMsgBackpackAddToCurrency\020\321A\022(\n#k_EM"
  "sgBackpackAddToCurrencyResponse\020\322A\022\022\n\rk_"
  "EMsgCREBase\020\264B\022\035\n\030k_EMsgCREItemVoteSumma"
  "ry\020\267B\022%\n k_EMsgCREItemVoteSummaryRespons"
  "e\020\270B\022)\n$k_EMsgCREUpdateUserPublishedItem"
  "Vote\020\273B\0221\n,k_EMsgCREUpdateUserPublishedI"
  "temVoteResponse\020\274B\022-\n(k_EMsgCREGetUserPu"
  "blishedItemVoteDetails\020\275B\0225\n0k_EMsgCREGe"
  "tUserPublishedItemVoteDetailsResponse\020\276B"
  "\022\026\n\021k_EMsgSecretsBase\020\230C\022\'\n\"k_EMsgSecret"
  "sRequestCredentialPair\020\230C\022(\n#k_EMsgSecre"
  "tsCredentialPairResponse\020\231C\022\031\n\024k_EMsgBox"
  "MonitorBase\020\374C\022\"\n\035k_EMsgBoxMonitorReport"
  "Request\020\374C\022#\n\036k_EMsgBoxMonitorReportResp"
  "onse\020\375C\022\026\n\021k_EMsgLogsinkBase\020\340D\022\035\n\030k_EMs"
  "gLogsinkWriteReport\020\340D\022\023\n\016k_EMsgPICSBase"
  "\020\304E\022(\n#k_EMsgClientPICSChangesSinceReque"
  "st\020\305E\022)\n$k_EMsgClientPICSChangesSinceRes"
  "ponse\020\306E\022\'\n\"k_EMsgClientPICSProductInfoR"
  "equest\020\307E\022(\n#k_EMsgClientPICSProductInfo"
  "Response\020\310E\022\'\n\"k_EMsgClientPICSAccessTok"
  "enRequest\020\311E\022(\n#k_EMsgClientPICSAccessTo"
  "kenResponse\020\312E\022\030\n\023k_EMsgWorkerProcess\020\250F"
  "\022#\n\036k_EMsgWorkerProcessPingRequest\020\250F\022$\n"
  "\037k_EMsgWorkerProcessPingResponse\020\251F\022 \n\033k"
  "_EMsgWorkerProcessShutdown\020\252F\022\033\n\026k_EMsgD"
  "RMWorkerProcess\020\214G\022%\n k_EMsgDRMWorkerPro"
  "cessDRMAndSign\020\214G\022-\n(k_EMsgDRMWorkerProc"
  "essDRMAndSignResponse\020\215G\0220\n+k_EMsgDRMWor"
  "kerProcessSteamworksInfoRequest\020\216G\0221\n,k_"
  "EMsgDRMWorkerProcessSteamworksInfoRespon"
  "se\020\217G\022/\n*k_EMsgDRMWorkerProcessInstallDR"
  "MDLLRequest\020\220G\0220\n+k_EMsgDRMWorkerProcess"
  "InstallDRMDLLResponse\020\221G\0220\n+k_EMsgDRMWor"
  "kerProcessSecretIdStringRequest\020\222G\0221\n,k_"
  "EMsgDRMWorkerProcessSecretIdStringRespon"
  "se\020\223G\0227\n2k_EMsgDRMWorkerProcessInstallPr"
  "ocessedFilesRequest\020\226G\0228\n3k_EMsgDRMWorke"
  "rProcessInstallProcessedFilesResponse\020\227G"
  "\022-\n(k_EMsgDRMWorkerProcessExamineBlobReq"
  "uest\020\230G\022.\n)k_EMsgDRMWorkerProcessExamine"
  "BlobResponse\020\231G\0220\n+k_EMsgDRMWorkerProces"
  "sDescribeSecretRequest\020\232G\0221\n,k_EMsgDRMWo"
  "rkerProcessDescribeSecretResponse\020\233G\0222\n-"
  "k_EMsgDRMWorkerProcessBackfillOriginalRe"
  "quest\020\234G\0223\n.k_EMsgDRMWorkerProcessBackfi"
  "llOriginalResponse\020\235G\0220\n+k_EMsgDRMWorker"
  "ProcessValidateDRMDLLRequest\020\236G\0221\n,k_EMs"
  "gDRMWorkerProcessValidateDRMDLLResponse\020"
  "\237G\022.\n)k_EMsgDRMWorkerProcessValidateFile"
  "Request\020\240G\022/\n*k_EMsgDRMWorkerProcessVali"
  "dateFileResponse\020\241G\0221\n,k_EMsgDRMWorkerPr"
  "ocessSplitAndInstallRequest\020\242G\0222\n-k_EMsg"
  "DRMWorkerProcessSplitAndInstallResponse\020"
  "\243G\022)\n$k_EMsgDRMWorkerProcessGetBlobReque"
  "st\020\244G\022*\n%k_EMsgDRMWorkerProcessGetBlobRe"
  "sponse\020\245G\022/\n*k_EMsgDRMWorkerProcessEvalu"
  "ateCrashRequest\020\246G\0220\n+k_EMsgDRMWorkerPro"
  "cessEvaluateCrashResponse\020\247G\022-\n(k_EMsgDR"
  "MWorkerProcessAnalyzeFileRequest\020\250G\022.\n)k"
  "_EMsgDRMWorkerProcessAnalyzeFileResponse"
  "\020\251G\022,\n\'k_EMsgDRMWorkerProcessUnpackBlobR"
  "equest\020\252G\022-\n(k_EMsgDRMWorkerProcessUnpac"
  "kBlobResponse\020\253G\022,\n\'k_EMsgDRMWorkerProce"
  "ssInstallAllRequest\020\254G\022-\n(k_EMsgDRMWorke"
  "rProcessInstallAllResponse\020\255G\022\034\n\027k_EMsgT"
  "estWorkerProcess\020\360G\0223\n.k_EMsgTestWorkerP"
  "rocessLoadUnloadModuleRequest\020\360G\0224\n/k_EM"
  "sgTestWorkerProcessLoadUnloadModuleRespo"
  "nse\020\361G\0224\n/k_EMsgTestWorkerProcessService"
  "ModuleCallRequest\020\362G\0225\n0k_EMsgTestWorker"
  "ProcessServiceModuleCallResponse\020\363G\022\032\n\025k"
  "_EMsgQuestServerBase\020\324H\022 \n\033k_EMsgClientG"
  "etEmoticonList\020\362H\022\035\n\030k_EMsgClientEmotico"
  "nList\020\363H\022\022\n\rk_EMsgSLCBase\020\270I\022\037\n\032k_EMsgSL"
  "CUserSessionStatus\020\270I\022&\n!k_EMsgSLCReques"
  "tUserSessionStatus\020\271I\022&\n!k_EMsgSLCShared"
  "LicensesLockStatus\020\272I\022(\n#k_EMsgClientSha"
  "redLibraryLockStatus\020\275I\022)\n$k_EMsgClientS"
  "haredLibraryStopPlaying\020\276I\022!\n\034k_EMsgSLCO"
  "wnerLibraryChanged\020\277I\022\"\n\035k_EMsgSLCShared"
  "LibraryChanged\020\300I\022\033\n\026k_EMsgRemoteClientB"
  "ase\020\234J\022$\n\037k_EMsgRemoteClientAuth_OBSOLET"
  "E\020\234J\022,\n\'k_EMsgRemoteClientAuthResponse_O"
  "BSOLETE\020\235J\022 \n\033k_EMsgRemoteClientAppStatu"
  "s\020\236J\022\"\n\035k_EMsgRemoteClientStartStream\020\237J"
  "\022*\n%k_EMsgRemoteClientStartStreamRespons"
  "e\020\240J\022\033\n\026k_EMsgRemoteClientPing\020\241J\022#\n\036k_E"
  "MsgRemoteClientPingResponse\020\242J\022 \n\033k_EMsg"
  "ClientUnlockStreaming\020\243J\022(\n#k_EMsgClient"
  "UnlockStreamingResponse\020\244J\022!\n\034k_EMsgRemo"
  "teClientAcceptEULA\020\245J\022*\n%k_EMsgRemoteCli"
  "entGetControllerConfig\020\246J\0222\n-k_EMsgRemot"
  "eClientGetControllerConfigResponse\020\247J\022\'\n"
  "\"k_EMsgRemoteClientStreamingEnabled\020\250J\022\033"
  "\n\026k_EMsgClientUnlockHEVC\020\251J\022#\n\036k_EMsgCli"
  "entUnlockHEVCResponse\020\252J\022$\n\037k_EMsgRemote"
  "ClientStatusRequest\020\253J\022%\n k_EMsgRemoteCl"
  "ientStatusResponse\020\254J\022\'\n\"k_EMsgClientCon"
  "currentSessionsBase\020\200K\022$\n\037k_EMsgClientPl"
  "ayingSessionState\020\200K\022#\n\036k_EMsgClientKick"
  "PlayingSession\020\201K\022\036\n\031k_EMsgClientBroadca"
  "stBase\020\344K\022\036\n\031k_EMsgClientBroadcastInit\020\344"
  "K\022 \n\033k_EMsgClientBroadcastFrames\020\345K\022$\n\037k"
  "_EMsgClientBroadcastDisconnect\020\346K\022$\n\037k_E"
  "MsgClientBroadcastScreenshot\020\347K\022&\n!k_EMs"
  "gClientBroadcastUploadConfig\020\350K\022\026\n\021k_EMs"
  "gBaseClient3\020\310L\022&\n!k_EMsgClientVoiceCall"
  "PreAuthorize\020\310L\022.\n)k_EMsgClientVoiceCall"
  "PreAuthorizeResponse\020\311L\022\'\n\"k_EMsgClientS"
  "erverTimestampRequest\020\312L\022(\n#k_EMsgClient"
  "ServerTimestampResponse\020\313L\022\033\n\026k_EMsgClie"
  "ntLANP2PBase\020\254M\022#\n\036k_EMsgClientLANP2PReq"
  "uestChunk\020\254M\022+\n&k_EMsgClientLANP2PReques"
  "tChunkResponse\020\255M\022\032\n\025k_EMsgClientLANP2PM"
  "ax\020\217N\022\035\n\030k_EMsgBaseWatchdogServer\020\220N\022\031\n\024"
  "k_EMsgNotifyWatchdog\020\220N\022 \n\033k_EMsgClientS"
  "iteLicenseBase\020\364N\0220\n+k_EMsgClientSiteLic"
  "enseSiteInfoNotification\020\364N\022$\n\037k_EMsgCli"
  "entSiteLicenseCheckout\020\365N\022,\n\'k_EMsgClien"
  "tSiteLicenseCheckoutResponse\020\366N\022-\n(k_EMs"
  "gClientSiteLicenseGetAvailableSeats\020\367N\0225"
  "\n0k_EMsgClientSiteLicenseGetAvailableSea"
  "tsResponse\020\370N\022/\n*k_EMsgClientSiteLicense"
  "GetContentCacheInfo\020\371N\0227\n2k_EMsgClientSi"
  "teLicenseGetContentCacheInfoResponse\020\372N\022"
  "\031\n\024k_EMsgBaseChatServer\020\340]\0220\n+k_EMsgChat"
  "ServerGetPendingNotificationCount\020\340]\0228\n3"
  "k_EMsgChatServerGetPendingNotificationCo"
  "untResponse\020\341]\022\033\n\026k_EMsgBaseSecretServer"
  "\020\304^\022\036\n\031k_EMsgServerSecretChanged\020\304^\032\002\020\001*"
  "\317\004\n\027EClientPersonaStateFlag\022#\n\037k_EClient"
  "PersonaStateFlagStatus\020\001\022\'\n#k_EClientPer"
  "sonaStateFlagPlayerName\020\002\022&\n\"k_EClientPe"
  "rsonaStateFlagQueryPort\020\004\022%\n!k_EClientPe"
  "rsonaStateFlagSourceID\020\010\022%\n!k_EClientPer"
  "sonaStateFlagPresence\020\020\022%\n!k_EClientPers"
  "onaStateFlagLastSeen\020@\022*\n%k_EClientPerso"
  "naStateFlagUserClanRank\020\200\001\022\'\n\"k_EClientP"
  "ersonaStateGameExtraInfo\020\200\002\022&\n!k_EClient"
  "PersonaStateGameDataBlob\020\200\004\022&\n!k_EClient"
  "PersonaStateFlagClanData\020\200\010\022&\n!k_EClient"
  "PersonaStateFlagFacebook\020\200\020\022*\n%k_EClient"
  "PersonaStateFlagRichPresence\020\200 \022\'\n\"k_ECl"
  "ientPersonaStateFlagBroadcast\020\200@\022\'\n!k_EC"
  "lientPersonaStateFlagWatching\020\200\200\001*\271\001\n\024EM"
  "sgClanAccountFlags\022\037\n\033k_EMsgClanAccountF"
  "lagPublic\020\001\022\036\n\032k_EMsgClanAccountFlagLarg"
  "e\020\002\022\037\n\033k_EMsgClanAccountFlagLocked\020\004\022!\n\035"
  "k_EMsgClanAccountFlagDisabled\020\010\022\034\n\030k_EMs"
  "gClanAccountFlagOGG\020\020*\220\003\n\021ESteamReviewSc"
  "ore\022.\n*k_ESteamReviewScore_Overwhelmingl"
  "yPositive\020\t\022$\n k_ESteamReviewScore_VeryP"
  "ositive\020\010\022 \n\034k_ESteamReviewScore_Positiv"
  "e\020\007\022&\n\"k_ESteamReviewScore_MostlyPositiv"
  "e\020\006\022\035\n\031k_ESteamReviewScore_Mixed\020\005\022&\n\"k_"
  "ESteamReviewScore_MostlyNegative\020\004\022 \n\034k_"
  "ESteamReviewScore_Negative\020\003\022$\n k_ESteam"
  "ReviewScore_VeryNegative\020\002\022.\n*k_ESteamRe"
  "viewScore_OverwhelminglyNegative\020\001\022\034\n\030k_"
  "ESteamReviewScore_None\020\000B\005H\001\200\001\000"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enums_5fclientserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enums_5fclientserver_2eproto = {
  false, false, 54191, descriptor_table_protodef_enums_5fclientserver_2eproto, "enums_clientserver.proto", 
  &descriptor_table_enums_5fclientserver_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_enums_5fclientserver_2eproto::offsets,
  file_level_metadata_enums_5fclientserver_2eproto, file_level_enum_descriptors_enums_5fclientserver_2eproto, file_level_service_descriptors_enums_5fclientserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_enums_5fclientserver_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return descriptor_table_enums_5fclientserver_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enums_5fclientserver_2eproto(&descriptor_table_enums_5fclientserver_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[0];
}
bool EMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 100:
    case 113:
    case 115:
    case 120:
    case 121:
    case 123:
    case 124:
    case 126:
    case 127:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 215:
    case 221:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 300:
    case 301:
    case 307:
    case 308:
    case 309:
    case 316:
    case 317:
    case 318:
    case 319:
    case 320:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 329:
    case 330:
    case 331:
    case 332:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 400:
    case 402:
    case 403:
    case 405:
    case 406:
    case 423:
    case 424:
    case 425:
    case 426:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 500:
    case 504:
    case 505:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
    case 541:
    case 542:
    case 550:
    case 551:
    case 552:
    case 553:
    case 554:
    case 555:
    case 560:
    case 561:
    case 563:
    case 566:
    case 567:
    case 568:
    case 569:
    case 570:
    case 571:
    case 572:
    case 573:
    case 574:
    case 575:
    case 576:
    case 577:
    case 578:
    case 579:
    case 580:
    case 581:
    case 582:
    case 583:
    case 584:
    case 586:
    case 587:
    case 588:
    case 589:
    case 590:
    case 591:
    case 592:
    case 593:
    case 596:
    case 597:
    case 598:
    case 600:
    case 601:
    case 602:
    case 604:
    case 605:
    case 606:
    case 607:
    case 608:
    case 609:
    case 610:
    case 611:
    case 625:
    case 628:
    case 629:
    case 630:
    case 631:
    case 633:
    case 634:
    case 635:
    case 636:
    case 637:
    case 638:
    case 639:
    case 640:
    case 641:
    case 642:
    case 643:
    case 644:
    case 645:
    case 646:
    case 650:
    case 700:
    case 701:
    case 702:
    case 703:
    case 704:
    case 705:
    case 706:
    case 707:
    case 710:
    case 712:
    case 714:
    case 715:
    case 716:
    case 717:
    case 718:
    case 719:
    case 720:
    case 721:
    case 726:
    case 727:
    case 728:
    case 730:
    case 731:
    case 732:
    case 736:
    case 738:
    case 740:
    case 741:
    case 742:
    case 743:
    case 744:
    case 745:
    case 746:
    case 747:
    case 751:
    case 755:
    case 756:
    case 757:
    case 758:
    case 759:
    case 760:
    case 761:
    case 763:
    case 764:
    case 765:
    case 766:
    case 767:
    case 768:
    case 771:
    case 773:
    case 774:
    case 779:
    case 780:
    case 782:
    case 783:
    case 784:
    case 785:
    case 791:
    case 792:
    case 796:
    case 797:
    case 798:
    case 799:
    case 800:
    case 801:
    case 802:
    case 803:
    case 805:
    case 807:
    case 808:
    case 809:
    case 810:
    case 813:
    case 814:
    case 815:
    case 818:
    case 819:
    case 820:
    case 821:
    case 822:
    case 830:
    case 831:
    case 832:
    case 839:
    case 842:
    case 845:
    case 846:
    case 848:
    case 849:
    case 850:
    case 851:
    case 855:
    case 856:
    case 857:
    case 858:
    case 860:
    case 880:
    case 896:
    case 897:
    case 900:
    case 901:
    case 903:
    case 905:
    case 906:
    case 907:
    case 908:
    case 909:
    case 910:
    case 911:
    case 918:
    case 919:
    case 920:
    case 921:
    case 922:
    case 923:
    case 936:
    case 937:
    case 938:
    case 939:
    case 940:
    case 941:
    case 1000:
    case 1004:
    case 1005:
    case 1006:
    case 1010:
    case 1019:
    case 1020:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1028:
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1114:
    case 1115:
    case 1116:
    case 1117:
    case 1118:
    case 1119:
    case 1120:
    case 1121:
    case 1122:
    case 1123:
    case 1124:
    case 1125:
    case 1126:
    case 1127:
    case 1128:
    case 1129:
    case 1130:
    case 1131:
    case 1132:
    case 1133:
    case 1134:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1406:
    case 1408:
    case 1409:
    case 1410:
    case 1411:
    case 1417:
    case 1418:
    case 1421:
    case 1422:
    case 1425:
    case 1426:
    case 1427:
    case 1431:
    case 1432:
    case 1433:
    case 1434:
    case 1435:
    case 1437:
    case 1438:
    case 1440:
    case 1441:
    case 1445:
    case 1446:
    case 1448:
    case 1449:
    case 1450:
    case 1451:
    case 1452:
    case 1453:
    case 1454:
    case 1455:
    case 1456:
    case 1457:
    case 1458:
    case 1459:
    case 1460:
    case 1461:
    case 1462:
    case 1463:
    case 1464:
    case 1465:
    case 1468:
    case 1469:
    case 1470:
    case 1471:
    case 1472:
    case 1473:
    case 1474:
    case 1475:
    case 1476:
    case 1477:
    case 1478:
    case 1479:
    case 1480:
    case 1481:
    case 1482:
    case 1483:
    case 1484:
    case 1485:
    case 1486:
    case 1487:
    case 1494:
    case 1495:
    case 1496:
    case 1497:
    case 1498:
    case 1499:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1504:
    case 1505:
    case 1506:
    case 1507:
    case 1508:
    case 1509:
    case 1510:
    case 1511:
    case 1512:
    case 1513:
    case 1514:
    case 1515:
    case 1516:
    case 1517:
    case 1518:
    case 1519:
    case 1600:
    case 1601:
    case 1603:
    case 1604:
    case 1607:
    case 1608:
    case 1612:
    case 1615:
    case 1616:
    case 1617:
    case 1620:
    case 1621:
    case 1622:
    case 1623:
    case 1624:
    case 1625:
    case 1627:
    case 1628:
    case 1629:
    case 1630:
    case 1631:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1704:
    case 1705:
    case 2200:
    case 2203:
    case 2206:
    case 2207:
    case 2208:
    case 2209:
    case 2210:
    case 2212:
    case 2216:
    case 2217:
    case 2218:
    case 2219:
    case 2220:
    case 2221:
    case 2222:
    case 2223:
    case 2224:
    case 2225:
    case 2226:
    case 2227:
    case 2228:
    case 2229:
    case 2230:
    case 2231:
    case 2232:
    case 2233:
    case 2234:
    case 2235:
    case 2236:
    case 2237:
    case 2238:
    case 2239:
    case 2240:
    case 2241:
    case 2500:
    case 2502:
    case 2900:
    case 2902:
    case 2903:
    case 2905:
    case 2906:
    case 2907:
    case 2908:
    case 3000:
    case 3001:
    case 3002:
    case 3100:
    case 3150:
    case 3161:
    case 3162:
    case 3200:
    case 3201:
    case 3202:
    case 3203:
    case 3204:
    case 3205:
    case 3206:
    case 3207:
    case 3208:
    case 3209:
    case 3210:
    case 3211:
    case 3212:
    case 3213:
    case 3214:
    case 3400:
    case 3401:
    case 3402:
    case 3403:
    case 3404:
    case 3406:
    case 3600:
    case 3629:
    case 3630:
    case 4000:
    case 4001:
    case 4002:
    case 4005:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4015:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4069:
    case 4070:
    case 4071:
    case 4072:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4079:
    case 4080:
    case 4081:
    case 4082:
    case 4083:
    case 4084:
    case 4085:
    case 4086:
    case 4087:
    case 4090:
    case 4091:
    case 4092:
    case 4095:
    case 4096:
    case 4097:
    case 4098:
    case 4099:
    case 4100:
    case 4101:
    case 4102:
    case 4103:
    case 4104:
    case 4105:
    case 4106:
    case 4107:
    case 4108:
    case 4110:
    case 4111:
    case 4112:
    case 4113:
    case 4114:
    case 4115:
    case 4116:
    case 4117:
    case 4118:
    case 4119:
    case 4120:
    case 4121:
    case 4122:
    case 4123:
    case 4124:
    case 4125:
    case 4126:
    case 4127:
    case 4128:
    case 4140:
    case 4143:
    case 4144:
    case 4145:
    case 4147:
    case 4148:
    case 4149:
    case 4152:
    case 4153:
    case 4155:
    case 4156:
    case 4157:
    case 4158:
    case 4159:
    case 4160:
    case 4161:
    case 4162:
    case 4163:
    case 4164:
    case 4165:
    case 4166:
    case 4172:
    case 4173:
    case 4174:
    case 4175:
    case 4184:
    case 4185:
    case 4190:
    case 4191:
    case 4194:
    case 4195:
    case 4197:
    case 4198:
    case 4199:
    case 4206:
    case 4209:
    case 4210:
    case 4211:
    case 4212:
    case 4213:
    case 4216:
    case 4219:
    case 4220:
    case 4224:
    case 4231:
    case 4232:
    case 4236:
    case 4241:
    case 4242:
    case 4244:
    case 4245:
    case 4246:
    case 4247:
    case 4248:
    case 4249:
    case 4250:
    case 4251:
    case 4252:
    case 4255:
    case 4256:
    case 4258:
    case 4260:
    case 4262:
    case 4264:
    case 4265:
    case 4266:
    case 4267:
    case 4268:
    case 4269:
    case 4270:
    case 4271:
    case 4272:
    case 4278:
    case 4279:
    case 4280:
    case 4281:
    case 4282:
    case 4283:
    case 4284:
    case 4285:
    case 4286:
    case 4287:
    case 4288:
    case 4289:
    case 4290:
    case 4294:
    case 4295:
    case 4298:
    case 4299:
    case 4300:
    case 4301:
    case 4302:
    case 4305:
    case 4307:
    case 4308:
    case 4309:
    case 4310:
    case 4311:
    case 4312:
    case 4313:
    case 4314:
    case 4315:
    case 4316:
    case 4317:
    case 4320:
    case 4321:
    case 4322:
    case 4323:
    case 4324:
    case 4325:
    case 4326:
    case 4327:
    case 4328:
    case 4329:
    case 4330:
    case 4331:
    case 4332:
    case 4333:
    case 4334:
    case 4335:
    case 4336:
    case 4337:
    case 4338:
    case 4339:
    case 4340:
    case 4341:
    case 4342:
    case 4344:
    case 4345:
    case 4346:
    case 4347:
    case 4348:
    case 4349:
    case 4350:
    case 4351:
    case 4352:
    case 4353:
    case 4354:
    case 4355:
    case 4356:
    case 4357:
    case 4358:
    case 4359:
    case 4360:
    case 4361:
    case 4362:
    case 4365:
    case 4366:
    case 4367:
    case 4368:
    case 4372:
    case 4373:
    case 4374:
    case 4375:
    case 4376:
    case 4377:
    case 4380:
    case 4381:
    case 4383:
    case 4384:
    case 4385:
    case 4386:
    case 4389:
    case 4390:
    case 4391:
    case 4392:
    case 4393:
    case 4394:
    case 4395:
    case 4396:
    case 4397:
    case 4398:
    case 4399:
    case 4400:
    case 4401:
    case 4402:
    case 4403:
    case 4404:
    case 4405:
    case 4406:
    case 4407:
    case 4408:
    case 4409:
    case 4410:
    case 4411:
    case 4412:
    case 4413:
    case 4414:
    case 4415:
    case 4416:
    case 4417:
    case 4418:
    case 4419:
    case 4420:
    case 4421:
    case 4422:
    case 5000:
    case 5001:
    case 5002:
    case 5003:
    case 5004:
    case 5007:
    case 5008:
    case 5009:
    case 5010:
    case 5011:
    case 5012:
    case 5200:
    case 5202:
    case 5203:
    case 5204:
    case 5205:
    case 5206:
    case 5207:
    case 5210:
    case 5211:
    case 5212:
    case 5213:
    case 5214:
    case 5215:
    case 5216:
    case 5217:
    case 5218:
    case 5219:
    case 5220:
    case 5226:
    case 5227:
    case 5228:
    case 5229:
    case 5230:
    case 5231:
    case 5232:
    case 5233:
    case 5234:
    case 5235:
    case 5236:
    case 5237:
    case 5238:
    case 5239:
    case 5240:
    case 5241:
    case 5242:
    case 5243:
    case 5244:
    case 5245:
    case 5246:
    case 5247:
    case 5248:
    case 5249:
    case 5250:
    case 5251:
    case 5252:
    case 5253:
    case 5254:
    case 5400:
    case 5401:
    case 5402:
    case 5403:
    case 5404:
    case 5405:
    case 5407:
    case 5408:
    case 5409:
    case 5410:
    case 5411:
    case 5412:
    case 5413:
    case 5414:
    case 5415:
    case 5416:
    case 5417:
    case 5418:
    case 5419:
    case 5426:
    case 5427:
    case 5428:
    case 5429:
    case 5430:
    case 5431:
    case 5432:
    case 5433:
    case 5434:
    case 5435:
    case 5438:
    case 5439:
    case 5440:
    case 5443:
    case 5444:
    case 5445:
    case 5446:
    case 5448:
    case 5449:
    case 5450:
    case 5451:
    case 5452:
    case 5453:
    case 5456:
    case 5457:
    case 5458:
    case 5459:
    case 5460:
    case 5461:
    case 5463:
    case 5464:
    case 5465:
    case 5466:
    case 5467:
    case 5468:
    case 5469:
    case 5470:
    case 5480:
    case 5481:
    case 5482:
    case 5483:
    case 5484:
    case 5485:
    case 5486:
    case 5487:
    case 5488:
    case 5489:
    case 5490:
    case 5491:
    case 5492:
    case 5493:
    case 5494:
    case 5495:
    case 5496:
    case 5500:
    case 5501:
    case 5502:
    case 5503:
    case 5504:
    case 5505:
    case 5506:
    case 5508:
    case 5509:
    case 5510:
    case 5511:
    case 5512:
    case 5514:
    case 5515:
    case 5516:
    case 5517:
    case 5518:
    case 5519:
    case 5520:
    case 5521:
    case 5522:
    case 5523:
    case 5524:
    case 5525:
    case 5526:
    case 5527:
    case 5528:
    case 5529:
    case 5530:
    case 5531:
    case 5532:
    case 5535:
    case 5536:
    case 5537:
    case 5538:
    case 5539:
    case 5540:
    case 5541:
    case 5542:
    case 5543:
    case 5546:
    case 5547:
    case 5548:
    case 5549:
    case 5550:
    case 5551:
    case 5552:
    case 5553:
    case 5554:
    case 5555:
    case 5556:
    case 5557:
    case 5558:
    case 5559:
    case 5560:
    case 5561:
    case 5562:
    case 5563:
    case 5564:
    case 5565:
    case 5566:
    case 5567:
    case 5568:
    case 5569:
    case 5570:
    case 5571:
    case 5572:
    case 5573:
    case 5574:
    case 5575:
    case 5576:
    case 5577:
    case 5578:
    case 5582:
    case 5583:
    case 5584:
    case 5585:
    case 5586:
    case 5587:
    case 5588:
    case 5589:
    case 5592:
    case 5593:
    case 5594:
    case 5595:
    case 5596:
    case 5597:
    case 5598:
    case 5599:
    case 5600:
    case 5601:
    case 5602:
    case 5603:
    case 5604:
    case 5605:
    case 5606:
    case 5607:
    case 5608:
    case 5609:
    case 5610:
    case 5611:
    case 5612:
    case 5613:
    case 5614:
    case 5615:
    case 5616:
    case 5617:
    case 5618:
    case 5619:
    case 5620:
    case 5621:
    case 5622:
    case 5623:
    case 5624:
    case 5625:
    case 5626:
    case 5627:
    case 5800:
    case 5812:
    case 5813:
    case 5827:
    case 5828:
    case 5829:
    case 5830:
    case 5831:
    case 5832:
    case 5833:
    case 5834:
    case 5844:
    case 5847:
    case 5848:
    case 5849:
    case 6200:
    case 6201:
    case 6202:
    case 6400:
    case 6401:
    case 6403:
    case 6404:
    case 6405:
    case 6406:
    case 6407:
    case 6500:
    case 6501:
    case 6502:
    case 6503:
    case 6504:
    case 6505:
    case 6506:
    case 6507:
    case 6508:
    case 6509:
    case 6600:
    case 6601:
    case 6602:
    case 6603:
    case 6604:
    case 6605:
    case 6606:
    case 6607:
    case 6608:
    case 6609:
    case 6610:
    case 6611:
    case 6612:
    case 6613:
    case 6614:
    case 6615:
    case 6616:
    case 6617:
    case 6618:
    case 6619:
    case 6620:
    case 6621:
    case 6622:
    case 6623:
    case 6624:
    case 6625:
    case 6626:
    case 6627:
    case 6628:
    case 6629:
    case 6800:
    case 6801:
    case 6802:
    case 6803:
    case 6804:
    case 6805:
    case 6806:
    case 6807:
    case 6808:
    case 6809:
    case 6810:
    case 6811:
    case 6812:
    case 6813:
    case 6814:
    case 6815:
    case 7000:
    case 7001:
    case 7002:
    case 7003:
    case 7004:
    case 7005:
    case 7006:
    case 7007:
    case 7100:
    case 7101:
    case 7200:
    case 7300:
    case 7301:
    case 7302:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7311:
    case 7312:
    case 7315:
    case 7316:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7329:
    case 7330:
    case 7331:
    case 7337:
    case 7338:
    case 7339:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7359:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7369:
    case 7370:
    case 7371:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7508:
    case 7510:
    case 7511:
    case 7512:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7700:
    case 7701:
    case 7702:
    case 7703:
    case 7704:
    case 7705:
    case 7706:
    case 7707:
    case 7708:
    case 7711:
    case 7712:
    case 7713:
    case 7714:
    case 7800:
    case 7801:
    case 7803:
    case 7804:
    case 7805:
    case 7806:
    case 7807:
    case 7808:
    case 7900:
    case 7901:
    case 7902:
    case 8000:
    case 8100:
    case 8101:
    case 8102:
    case 8103:
    case 8104:
    case 8105:
    case 8106:
    case 8107:
    case 8108:
    case 8200:
    case 8300:
    case 8301:
    case 8303:
    case 8304:
    case 8305:
    case 8306:
    case 8400:
    case 8401:
    case 8402:
    case 8500:
    case 8503:
    case 8504:
    case 8507:
    case 8508:
    case 8509:
    case 8510:
    case 8600:
    case 8601:
    case 8700:
    case 8701:
    case 8800:
    case 8900:
    case 8901:
    case 8902:
    case 8903:
    case 8904:
    case 8905:
    case 8906:
    case 9000:
    case 9001:
    case 9002:
    case 9100:
    case 9101:
    case 9102:
    case 9103:
    case 9104:
    case 9105:
    case 9106:
    case 9107:
    case 9110:
    case 9111:
    case 9112:
    case 9113:
    case 9114:
    case 9115:
    case 9116:
    case 9117:
    case 9118:
    case 9119:
    case 9120:
    case 9121:
    case 9122:
    case 9123:
    case 9124:
    case 9125:
    case 9126:
    case 9127:
    case 9128:
    case 9129:
    case 9130:
    case 9131:
    case 9132:
    case 9133:
    case 9200:
    case 9201:
    case 9202:
    case 9203:
    case 9300:
    case 9330:
    case 9331:
    case 9400:
    case 9401:
    case 9402:
    case 9405:
    case 9406:
    case 9407:
    case 9408:
    case 9500:
    case 9501:
    case 9502:
    case 9503:
    case 9504:
    case 9505:
    case 9506:
    case 9507:
    case 9508:
    case 9509:
    case 9510:
    case 9511:
    case 9512:
    case 9513:
    case 9514:
    case 9515:
    case 9516:
    case 9600:
    case 9601:
    case 9700:
    case 9701:
    case 9702:
    case 9703:
    case 9704:
    case 9800:
    case 9801:
    case 9802:
    case 9803:
    case 9900:
    case 9901:
    case 9999:
    case 10000:
    case 10100:
    case 10101:
    case 10102:
    case 10103:
    case 10104:
    case 10105:
    case 10106:
    case 12000:
    case 12001:
    case 12100:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EClientPersonaStateFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[1];
}
bool EClientPersonaStateFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMsgClanAccountFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[2];
}
bool EMsgClanAccountFlags_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ESteamReviewScore_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enums_5fclientserver_2eproto);
  return file_level_enum_descriptors_enums_5fclientserver_2eproto[3];
}
bool ESteamReviewScore_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
