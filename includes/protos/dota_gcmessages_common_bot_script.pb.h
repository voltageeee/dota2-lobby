// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_common_bot_script.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "valveextensions.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[60]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(int index);
class CMsgBotWorldState;
struct CMsgBotWorldStateDefaultTypeInternal;
extern CMsgBotWorldStateDefaultTypeInternal _CMsgBotWorldState_default_instance_;
class CMsgBotWorldState_Ability;
struct CMsgBotWorldState_AbilityDefaultTypeInternal;
extern CMsgBotWorldState_AbilityDefaultTypeInternal _CMsgBotWorldState_Ability_default_instance_;
class CMsgBotWorldState_Action;
struct CMsgBotWorldState_ActionDefaultTypeInternal;
extern CMsgBotWorldState_ActionDefaultTypeInternal _CMsgBotWorldState_Action_default_instance_;
class CMsgBotWorldState_Action_AttackMove;
struct CMsgBotWorldState_Action_AttackMoveDefaultTypeInternal;
extern CMsgBotWorldState_Action_AttackMoveDefaultTypeInternal _CMsgBotWorldState_Action_AttackMove_default_instance_;
class CMsgBotWorldState_Action_AttackTarget;
struct CMsgBotWorldState_Action_AttackTargetDefaultTypeInternal;
extern CMsgBotWorldState_Action_AttackTargetDefaultTypeInternal _CMsgBotWorldState_Action_AttackTarget_default_instance_;
class CMsgBotWorldState_Action_Buyback;
struct CMsgBotWorldState_Action_BuybackDefaultTypeInternal;
extern CMsgBotWorldState_Action_BuybackDefaultTypeInternal _CMsgBotWorldState_Action_Buyback_default_instance_;
class CMsgBotWorldState_Action_Cast;
struct CMsgBotWorldState_Action_CastDefaultTypeInternal;
extern CMsgBotWorldState_Action_CastDefaultTypeInternal _CMsgBotWorldState_Action_Cast_default_instance_;
class CMsgBotWorldState_Action_CastLocation;
struct CMsgBotWorldState_Action_CastLocationDefaultTypeInternal;
extern CMsgBotWorldState_Action_CastLocationDefaultTypeInternal _CMsgBotWorldState_Action_CastLocation_default_instance_;
class CMsgBotWorldState_Action_CastTarget;
struct CMsgBotWorldState_Action_CastTargetDefaultTypeInternal;
extern CMsgBotWorldState_Action_CastTargetDefaultTypeInternal _CMsgBotWorldState_Action_CastTarget_default_instance_;
class CMsgBotWorldState_Action_CastToggle;
struct CMsgBotWorldState_Action_CastToggleDefaultTypeInternal;
extern CMsgBotWorldState_Action_CastToggleDefaultTypeInternal _CMsgBotWorldState_Action_CastToggle_default_instance_;
class CMsgBotWorldState_Action_CastTree;
struct CMsgBotWorldState_Action_CastTreeDefaultTypeInternal;
extern CMsgBotWorldState_Action_CastTreeDefaultTypeInternal _CMsgBotWorldState_Action_CastTree_default_instance_;
class CMsgBotWorldState_Action_Chat;
struct CMsgBotWorldState_Action_ChatDefaultTypeInternal;
extern CMsgBotWorldState_Action_ChatDefaultTypeInternal _CMsgBotWorldState_Action_Chat_default_instance_;
class CMsgBotWorldState_Action_Courier;
struct CMsgBotWorldState_Action_CourierDefaultTypeInternal;
extern CMsgBotWorldState_Action_CourierDefaultTypeInternal _CMsgBotWorldState_Action_Courier_default_instance_;
class CMsgBotWorldState_Action_DisassembleItem;
struct CMsgBotWorldState_Action_DisassembleItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_DisassembleItemDefaultTypeInternal _CMsgBotWorldState_Action_DisassembleItem_default_instance_;
class CMsgBotWorldState_Action_DropItem;
struct CMsgBotWorldState_Action_DropItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_DropItemDefaultTypeInternal _CMsgBotWorldState_Action_DropItem_default_instance_;
class CMsgBotWorldState_Action_GetActualIncomingDamage;
struct CMsgBotWorldState_Action_GetActualIncomingDamageDefaultTypeInternal;
extern CMsgBotWorldState_Action_GetActualIncomingDamageDefaultTypeInternal _CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_;
class CMsgBotWorldState_Action_GetEstimatedDamageToTarget;
struct CMsgBotWorldState_Action_GetEstimatedDamageToTargetDefaultTypeInternal;
extern CMsgBotWorldState_Action_GetEstimatedDamageToTargetDefaultTypeInternal _CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_;
class CMsgBotWorldState_Action_Glyph;
struct CMsgBotWorldState_Action_GlyphDefaultTypeInternal;
extern CMsgBotWorldState_Action_GlyphDefaultTypeInternal _CMsgBotWorldState_Action_Glyph_default_instance_;
class CMsgBotWorldState_Action_HoldLocation;
struct CMsgBotWorldState_Action_HoldLocationDefaultTypeInternal;
extern CMsgBotWorldState_Action_HoldLocationDefaultTypeInternal _CMsgBotWorldState_Action_HoldLocation_default_instance_;
class CMsgBotWorldState_Action_MoveToLocation;
struct CMsgBotWorldState_Action_MoveToLocationDefaultTypeInternal;
extern CMsgBotWorldState_Action_MoveToLocationDefaultTypeInternal _CMsgBotWorldState_Action_MoveToLocation_default_instance_;
class CMsgBotWorldState_Action_MoveToTarget;
struct CMsgBotWorldState_Action_MoveToTargetDefaultTypeInternal;
extern CMsgBotWorldState_Action_MoveToTargetDefaultTypeInternal _CMsgBotWorldState_Action_MoveToTarget_default_instance_;
class CMsgBotWorldState_Action_OceanReplayCorrectTime;
struct CMsgBotWorldState_Action_OceanReplayCorrectTimeDefaultTypeInternal;
extern CMsgBotWorldState_Action_OceanReplayCorrectTimeDefaultTypeInternal _CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_;
class CMsgBotWorldState_Action_OceanWinGame;
struct CMsgBotWorldState_Action_OceanWinGameDefaultTypeInternal;
extern CMsgBotWorldState_Action_OceanWinGameDefaultTypeInternal _CMsgBotWorldState_Action_OceanWinGame_default_instance_;
class CMsgBotWorldState_Action_PickUpItem;
struct CMsgBotWorldState_Action_PickUpItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_PickUpItemDefaultTypeInternal _CMsgBotWorldState_Action_PickUpItem_default_instance_;
class CMsgBotWorldState_Action_PickupRune;
struct CMsgBotWorldState_Action_PickupRuneDefaultTypeInternal;
extern CMsgBotWorldState_Action_PickupRuneDefaultTypeInternal _CMsgBotWorldState_Action_PickupRune_default_instance_;
class CMsgBotWorldState_Action_PurchaseItem;
struct CMsgBotWorldState_Action_PurchaseItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_PurchaseItemDefaultTypeInternal _CMsgBotWorldState_Action_PurchaseItem_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawBox;
struct CMsgBotWorldState_Action_ScriptingDebugDrawBoxDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawBoxDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawCircle;
struct CMsgBotWorldState_Action_ScriptingDebugDrawCircleDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawCircleDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawClear;
struct CMsgBotWorldState_Action_ScriptingDebugDrawClearDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawClearDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawLine;
struct CMsgBotWorldState_Action_ScriptingDebugDrawLineDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawLineDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawScreenText;
struct CMsgBotWorldState_Action_ScriptingDebugDrawScreenTextDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawScreenTextDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugDrawText;
struct CMsgBotWorldState_Action_ScriptingDebugDrawTextDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugDrawTextDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_;
class CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty;
struct CMsgBotWorldState_Action_ScriptingDebugScreenTextPrettyDefaultTypeInternal;
extern CMsgBotWorldState_Action_ScriptingDebugScreenTextPrettyDefaultTypeInternal _CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_;
class CMsgBotWorldState_Action_SellItem;
struct CMsgBotWorldState_Action_SellItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_SellItemDefaultTypeInternal _CMsgBotWorldState_Action_SellItem_default_instance_;
class CMsgBotWorldState_Action_SetCombineLockItem;
struct CMsgBotWorldState_Action_SetCombineLockItemDefaultTypeInternal;
extern CMsgBotWorldState_Action_SetCombineLockItemDefaultTypeInternal _CMsgBotWorldState_Action_SetCombineLockItem_default_instance_;
class CMsgBotWorldState_Action_SoftReset;
struct CMsgBotWorldState_Action_SoftResetDefaultTypeInternal;
extern CMsgBotWorldState_Action_SoftResetDefaultTypeInternal _CMsgBotWorldState_Action_SoftReset_default_instance_;
class CMsgBotWorldState_Action_Stop;
struct CMsgBotWorldState_Action_StopDefaultTypeInternal;
extern CMsgBotWorldState_Action_StopDefaultTypeInternal _CMsgBotWorldState_Action_Stop_default_instance_;
class CMsgBotWorldState_Action_SwapItems;
struct CMsgBotWorldState_Action_SwapItemsDefaultTypeInternal;
extern CMsgBotWorldState_Action_SwapItemsDefaultTypeInternal _CMsgBotWorldState_Action_SwapItems_default_instance_;
class CMsgBotWorldState_Action_TrainAbility;
struct CMsgBotWorldState_Action_TrainAbilityDefaultTypeInternal;
extern CMsgBotWorldState_Action_TrainAbilityDefaultTypeInternal _CMsgBotWorldState_Action_TrainAbility_default_instance_;
class CMsgBotWorldState_Action_UseShrine;
struct CMsgBotWorldState_Action_UseShrineDefaultTypeInternal;
extern CMsgBotWorldState_Action_UseShrineDefaultTypeInternal _CMsgBotWorldState_Action_UseShrine_default_instance_;
class CMsgBotWorldState_Actions;
struct CMsgBotWorldState_ActionsDefaultTypeInternal;
extern CMsgBotWorldState_ActionsDefaultTypeInternal _CMsgBotWorldState_Actions_default_instance_;
class CMsgBotWorldState_Actions_Header;
struct CMsgBotWorldState_Actions_HeaderDefaultTypeInternal;
extern CMsgBotWorldState_Actions_HeaderDefaultTypeInternal _CMsgBotWorldState_Actions_Header_default_instance_;
class CMsgBotWorldState_Actions_OceanAnnotation;
struct CMsgBotWorldState_Actions_OceanAnnotationDefaultTypeInternal;
extern CMsgBotWorldState_Actions_OceanAnnotationDefaultTypeInternal _CMsgBotWorldState_Actions_OceanAnnotation_default_instance_;
class CMsgBotWorldState_Actions_OceanAnnotation_Hero;
struct CMsgBotWorldState_Actions_OceanAnnotation_HeroDefaultTypeInternal;
extern CMsgBotWorldState_Actions_OceanAnnotation_HeroDefaultTypeInternal _CMsgBotWorldState_Actions_OceanAnnotation_Hero_default_instance_;
class CMsgBotWorldState_AvoidanceZone;
struct CMsgBotWorldState_AvoidanceZoneDefaultTypeInternal;
extern CMsgBotWorldState_AvoidanceZoneDefaultTypeInternal _CMsgBotWorldState_AvoidanceZone_default_instance_;
class CMsgBotWorldState_Courier;
struct CMsgBotWorldState_CourierDefaultTypeInternal;
extern CMsgBotWorldState_CourierDefaultTypeInternal _CMsgBotWorldState_Courier_default_instance_;
class CMsgBotWorldState_DroppedItem;
struct CMsgBotWorldState_DroppedItemDefaultTypeInternal;
extern CMsgBotWorldState_DroppedItemDefaultTypeInternal _CMsgBotWorldState_DroppedItem_default_instance_;
class CMsgBotWorldState_EventAbility;
struct CMsgBotWorldState_EventAbilityDefaultTypeInternal;
extern CMsgBotWorldState_EventAbilityDefaultTypeInternal _CMsgBotWorldState_EventAbility_default_instance_;
class CMsgBotWorldState_EventCourierKilled;
struct CMsgBotWorldState_EventCourierKilledDefaultTypeInternal;
extern CMsgBotWorldState_EventCourierKilledDefaultTypeInternal _CMsgBotWorldState_EventCourierKilled_default_instance_;
class CMsgBotWorldState_EventDamage;
struct CMsgBotWorldState_EventDamageDefaultTypeInternal;
extern CMsgBotWorldState_EventDamageDefaultTypeInternal _CMsgBotWorldState_EventDamage_default_instance_;
class CMsgBotWorldState_EventRoshanKilled;
struct CMsgBotWorldState_EventRoshanKilledDefaultTypeInternal;
extern CMsgBotWorldState_EventRoshanKilledDefaultTypeInternal _CMsgBotWorldState_EventRoshanKilled_default_instance_;
class CMsgBotWorldState_EventTree;
struct CMsgBotWorldState_EventTreeDefaultTypeInternal;
extern CMsgBotWorldState_EventTreeDefaultTypeInternal _CMsgBotWorldState_EventTree_default_instance_;
class CMsgBotWorldState_LinearProjectile;
struct CMsgBotWorldState_LinearProjectileDefaultTypeInternal;
extern CMsgBotWorldState_LinearProjectileDefaultTypeInternal _CMsgBotWorldState_LinearProjectile_default_instance_;
class CMsgBotWorldState_Modifier;
struct CMsgBotWorldState_ModifierDefaultTypeInternal;
extern CMsgBotWorldState_ModifierDefaultTypeInternal _CMsgBotWorldState_Modifier_default_instance_;
class CMsgBotWorldState_Player;
struct CMsgBotWorldState_PlayerDefaultTypeInternal;
extern CMsgBotWorldState_PlayerDefaultTypeInternal _CMsgBotWorldState_Player_default_instance_;
class CMsgBotWorldState_RuneInfo;
struct CMsgBotWorldState_RuneInfoDefaultTypeInternal;
extern CMsgBotWorldState_RuneInfoDefaultTypeInternal _CMsgBotWorldState_RuneInfo_default_instance_;
class CMsgBotWorldState_TeleportInfo;
struct CMsgBotWorldState_TeleportInfoDefaultTypeInternal;
extern CMsgBotWorldState_TeleportInfoDefaultTypeInternal _CMsgBotWorldState_TeleportInfo_default_instance_;
class CMsgBotWorldState_TrackingProjectile;
struct CMsgBotWorldState_TrackingProjectileDefaultTypeInternal;
extern CMsgBotWorldState_TrackingProjectileDefaultTypeInternal _CMsgBotWorldState_TrackingProjectile_default_instance_;
class CMsgBotWorldState_Unit;
struct CMsgBotWorldState_UnitDefaultTypeInternal;
extern CMsgBotWorldState_UnitDefaultTypeInternal _CMsgBotWorldState_Unit_default_instance_;
class CMsgBotWorldState_Vector;
struct CMsgBotWorldState_VectorDefaultTypeInternal;
extern CMsgBotWorldState_VectorDefaultTypeInternal _CMsgBotWorldState_Vector_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgBotWorldState* Arena::CreateMaybeMessage<::CMsgBotWorldState>(Arena*);
template<> ::CMsgBotWorldState_Ability* Arena::CreateMaybeMessage<::CMsgBotWorldState_Ability>(Arena*);
template<> ::CMsgBotWorldState_Action* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action>(Arena*);
template<> ::CMsgBotWorldState_Action_AttackMove* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_AttackMove>(Arena*);
template<> ::CMsgBotWorldState_Action_AttackTarget* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_AttackTarget>(Arena*);
template<> ::CMsgBotWorldState_Action_Buyback* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Buyback>(Arena*);
template<> ::CMsgBotWorldState_Action_Cast* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Cast>(Arena*);
template<> ::CMsgBotWorldState_Action_CastLocation* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_CastLocation>(Arena*);
template<> ::CMsgBotWorldState_Action_CastTarget* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_CastTarget>(Arena*);
template<> ::CMsgBotWorldState_Action_CastToggle* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_CastToggle>(Arena*);
template<> ::CMsgBotWorldState_Action_CastTree* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_CastTree>(Arena*);
template<> ::CMsgBotWorldState_Action_Chat* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Chat>(Arena*);
template<> ::CMsgBotWorldState_Action_Courier* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Courier>(Arena*);
template<> ::CMsgBotWorldState_Action_DisassembleItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_DisassembleItem>(Arena*);
template<> ::CMsgBotWorldState_Action_DropItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_DropItem>(Arena*);
template<> ::CMsgBotWorldState_Action_GetActualIncomingDamage* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_GetActualIncomingDamage>(Arena*);
template<> ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_GetEstimatedDamageToTarget>(Arena*);
template<> ::CMsgBotWorldState_Action_Glyph* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Glyph>(Arena*);
template<> ::CMsgBotWorldState_Action_HoldLocation* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_HoldLocation>(Arena*);
template<> ::CMsgBotWorldState_Action_MoveToLocation* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_MoveToLocation>(Arena*);
template<> ::CMsgBotWorldState_Action_MoveToTarget* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_MoveToTarget>(Arena*);
template<> ::CMsgBotWorldState_Action_OceanReplayCorrectTime* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_OceanReplayCorrectTime>(Arena*);
template<> ::CMsgBotWorldState_Action_OceanWinGame* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_OceanWinGame>(Arena*);
template<> ::CMsgBotWorldState_Action_PickUpItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_PickUpItem>(Arena*);
template<> ::CMsgBotWorldState_Action_PickupRune* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_PickupRune>(Arena*);
template<> ::CMsgBotWorldState_Action_PurchaseItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_PurchaseItem>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawBox>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawCircle>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawClear>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawLine>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugDrawText* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugDrawText>(Arena*);
template<> ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty>(Arena*);
template<> ::CMsgBotWorldState_Action_SellItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_SellItem>(Arena*);
template<> ::CMsgBotWorldState_Action_SetCombineLockItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_SetCombineLockItem>(Arena*);
template<> ::CMsgBotWorldState_Action_SoftReset* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_SoftReset>(Arena*);
template<> ::CMsgBotWorldState_Action_Stop* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_Stop>(Arena*);
template<> ::CMsgBotWorldState_Action_SwapItems* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_SwapItems>(Arena*);
template<> ::CMsgBotWorldState_Action_TrainAbility* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_TrainAbility>(Arena*);
template<> ::CMsgBotWorldState_Action_UseShrine* Arena::CreateMaybeMessage<::CMsgBotWorldState_Action_UseShrine>(Arena*);
template<> ::CMsgBotWorldState_Actions* Arena::CreateMaybeMessage<::CMsgBotWorldState_Actions>(Arena*);
template<> ::CMsgBotWorldState_Actions_Header* Arena::CreateMaybeMessage<::CMsgBotWorldState_Actions_Header>(Arena*);
template<> ::CMsgBotWorldState_Actions_OceanAnnotation* Arena::CreateMaybeMessage<::CMsgBotWorldState_Actions_OceanAnnotation>(Arena*);
template<> ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* Arena::CreateMaybeMessage<::CMsgBotWorldState_Actions_OceanAnnotation_Hero>(Arena*);
template<> ::CMsgBotWorldState_AvoidanceZone* Arena::CreateMaybeMessage<::CMsgBotWorldState_AvoidanceZone>(Arena*);
template<> ::CMsgBotWorldState_Courier* Arena::CreateMaybeMessage<::CMsgBotWorldState_Courier>(Arena*);
template<> ::CMsgBotWorldState_DroppedItem* Arena::CreateMaybeMessage<::CMsgBotWorldState_DroppedItem>(Arena*);
template<> ::CMsgBotWorldState_EventAbility* Arena::CreateMaybeMessage<::CMsgBotWorldState_EventAbility>(Arena*);
template<> ::CMsgBotWorldState_EventCourierKilled* Arena::CreateMaybeMessage<::CMsgBotWorldState_EventCourierKilled>(Arena*);
template<> ::CMsgBotWorldState_EventDamage* Arena::CreateMaybeMessage<::CMsgBotWorldState_EventDamage>(Arena*);
template<> ::CMsgBotWorldState_EventRoshanKilled* Arena::CreateMaybeMessage<::CMsgBotWorldState_EventRoshanKilled>(Arena*);
template<> ::CMsgBotWorldState_EventTree* Arena::CreateMaybeMessage<::CMsgBotWorldState_EventTree>(Arena*);
template<> ::CMsgBotWorldState_LinearProjectile* Arena::CreateMaybeMessage<::CMsgBotWorldState_LinearProjectile>(Arena*);
template<> ::CMsgBotWorldState_Modifier* Arena::CreateMaybeMessage<::CMsgBotWorldState_Modifier>(Arena*);
template<> ::CMsgBotWorldState_Player* Arena::CreateMaybeMessage<::CMsgBotWorldState_Player>(Arena*);
template<> ::CMsgBotWorldState_RuneInfo* Arena::CreateMaybeMessage<::CMsgBotWorldState_RuneInfo>(Arena*);
template<> ::CMsgBotWorldState_TeleportInfo* Arena::CreateMaybeMessage<::CMsgBotWorldState_TeleportInfo>(Arena*);
template<> ::CMsgBotWorldState_TrackingProjectile* Arena::CreateMaybeMessage<::CMsgBotWorldState_TrackingProjectile>(Arena*);
template<> ::CMsgBotWorldState_Unit* Arena::CreateMaybeMessage<::CMsgBotWorldState_Unit>(Arena*);
template<> ::CMsgBotWorldState_Vector* Arena::CreateMaybeMessage<::CMsgBotWorldState_Vector>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgBotWorldState_Action_Type : int {
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_NONE = 0,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_POSITION = 1,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_TARGET = 2,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_ATTACK_MOVE = 3,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_ATTACK_TARGET = 4,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_POSITION = 5,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TARGET = 6,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TARGET_TREE = 7,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_NO_TARGET = 8,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TOGGLE = 9,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_HOLD_POSITION = 10,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_TRAIN_ABILITY = 11,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_DROP_ITEM = 12,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_GIVE_ITEM = 13,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PICKUP_ITEM = 14,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PICKUP_RUNE = 15,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PURCHASE_ITEM = 16,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_SELL_ITEM = 17,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_DISASSEMBLE_ITEM = 18,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_ITEM = 19,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO = 20,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_STOP = 21,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_TAUNT = 22,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_BUYBACK = 23,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_GLYPH = 24,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH = 25,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_RUNE = 26,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PING_ABILITY = 27,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_DIRECTION = 28,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PATROL = 29,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION = 30,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_RADAR = 31,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK = 32,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CONTINUE = 33,
  CMsgBotWorldState_Action_Type_ACTION_CHAT = 40,
  CMsgBotWorldState_Action_Type_ACTION_SWAP_ITEMS = 41,
  CMsgBotWorldState_Action_Type_ACTION_USE_SHRINE = 42,
  CMsgBotWorldState_Action_Type_ACTION_COURIER = 43,
  CMsgBotWorldState_Action_Type_RPC_GET_ACTUAL_INCOMING_DAMAGE = 44,
  CMsgBotWorldState_Action_Type_RPC_GET_ESTIMATED_DAMAGE_TO_TARGET = 45,
  CMsgBotWorldState_Action_Type_OCEAN_FULL_UPDATE = 50,
  CMsgBotWorldState_Action_Type_OCEAN_RELOAD_CODE = 51,
  CMsgBotWorldState_Action_Type_OCEAN_SOFT_RESET = 52,
  CMsgBotWorldState_Action_Type_OCEAN_HOLD_FRAMESKIP = 54,
  CMsgBotWorldState_Action_Type_OCEAN_WIN_GAME = 63,
  CMsgBotWorldState_Action_Type_OCEAN_REPLAY_CORRECT_TIME = 64,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_TEXT = 55,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_LINE = 56,
  CMsgBotWorldState_Action_Type_SCRIPTING_DOTA_UNIT_ORDER_MOVE_TO_POSITION = 57,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_SCREEN_TEXT = 58,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_BOX = 59,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_CIRCLE = 60,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_CLEAR = 61,
  CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY = 65,
  CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_DIRECTLY = 62
};
bool CMsgBotWorldState_Action_Type_IsValid(int value);
constexpr CMsgBotWorldState_Action_Type CMsgBotWorldState_Action_Type_Type_MIN = CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_NONE;
constexpr CMsgBotWorldState_Action_Type CMsgBotWorldState_Action_Type_Type_MAX = CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY;
constexpr int CMsgBotWorldState_Action_Type_Type_ARRAYSIZE = CMsgBotWorldState_Action_Type_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgBotWorldState_Action_Type_descriptor();
template<typename T>
inline const std::string& CMsgBotWorldState_Action_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgBotWorldState_Action_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgBotWorldState_Action_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgBotWorldState_Action_Type_descriptor(), enum_t_value);
}
inline bool CMsgBotWorldState_Action_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgBotWorldState_Action_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgBotWorldState_Action_Type>(
    CMsgBotWorldState_Action_Type_descriptor(), name, value);
}
enum CMsgBotWorldState_UnitType : int {
  CMsgBotWorldState_UnitType_INVALID = 0,
  CMsgBotWorldState_UnitType_HERO = 1,
  CMsgBotWorldState_UnitType_CREEP_HERO = 2,
  CMsgBotWorldState_UnitType_LANE_CREEP = 3,
  CMsgBotWorldState_UnitType_JUNGLE_CREEP = 4,
  CMsgBotWorldState_UnitType_ROSHAN = 5,
  CMsgBotWorldState_UnitType_TOWER = 6,
  CMsgBotWorldState_UnitType_BARRACKS = 7,
  CMsgBotWorldState_UnitType_SHRINE = 8,
  CMsgBotWorldState_UnitType_FORT = 9,
  CMsgBotWorldState_UnitType_BUILDING = 10,
  CMsgBotWorldState_UnitType_COURIER = 11,
  CMsgBotWorldState_UnitType_WARD = 12
};
bool CMsgBotWorldState_UnitType_IsValid(int value);
constexpr CMsgBotWorldState_UnitType CMsgBotWorldState_UnitType_UnitType_MIN = CMsgBotWorldState_UnitType_INVALID;
constexpr CMsgBotWorldState_UnitType CMsgBotWorldState_UnitType_UnitType_MAX = CMsgBotWorldState_UnitType_WARD;
constexpr int CMsgBotWorldState_UnitType_UnitType_ARRAYSIZE = CMsgBotWorldState_UnitType_UnitType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgBotWorldState_UnitType_descriptor();
template<typename T>
inline const std::string& CMsgBotWorldState_UnitType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgBotWorldState_UnitType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgBotWorldState_UnitType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgBotWorldState_UnitType_descriptor(), enum_t_value);
}
inline bool CMsgBotWorldState_UnitType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgBotWorldState_UnitType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgBotWorldState_UnitType>(
    CMsgBotWorldState_UnitType_descriptor(), name, value);
}
enum CMsgBotWorldState_CourierState : int {
  CMsgBotWorldState_CourierState_COURIER_STATE_INIT = -1,
  CMsgBotWorldState_CourierState_COURIER_STATE_IDLE = 0,
  CMsgBotWorldState_CourierState_COURIER_STATE_AT_BASE = 1,
  CMsgBotWorldState_CourierState_COURIER_STATE_MOVING = 2,
  CMsgBotWorldState_CourierState_COURIER_STATE_DELIVERING_ITEMS = 3,
  CMsgBotWorldState_CourierState_COURIER_STATE_RETURNING_TO_BASE = 4,
  CMsgBotWorldState_CourierState_COURIER_STATE_DEAD = 5
};
bool CMsgBotWorldState_CourierState_IsValid(int value);
constexpr CMsgBotWorldState_CourierState CMsgBotWorldState_CourierState_CourierState_MIN = CMsgBotWorldState_CourierState_COURIER_STATE_INIT;
constexpr CMsgBotWorldState_CourierState CMsgBotWorldState_CourierState_CourierState_MAX = CMsgBotWorldState_CourierState_COURIER_STATE_DEAD;
constexpr int CMsgBotWorldState_CourierState_CourierState_ARRAYSIZE = CMsgBotWorldState_CourierState_CourierState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgBotWorldState_CourierState_descriptor();
template<typename T>
inline const std::string& CMsgBotWorldState_CourierState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgBotWorldState_CourierState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgBotWorldState_CourierState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgBotWorldState_CourierState_descriptor(), enum_t_value);
}
inline bool CMsgBotWorldState_CourierState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgBotWorldState_CourierState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgBotWorldState_CourierState>(
    CMsgBotWorldState_CourierState_descriptor(), name, value);
}
// ===================================================================

class CMsgBotWorldState_Vector PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Vector) */ {
 public:
  inline CMsgBotWorldState_Vector() : CMsgBotWorldState_Vector(nullptr) {}
  virtual ~CMsgBotWorldState_Vector();
  explicit constexpr CMsgBotWorldState_Vector(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Vector(const CMsgBotWorldState_Vector& from);
  CMsgBotWorldState_Vector(CMsgBotWorldState_Vector&& from) noexcept
    : CMsgBotWorldState_Vector() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Vector& operator=(const CMsgBotWorldState_Vector& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Vector& operator=(CMsgBotWorldState_Vector&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Vector& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Vector* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Vector*>(
               &_CMsgBotWorldState_Vector_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgBotWorldState_Vector& a, CMsgBotWorldState_Vector& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Vector* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Vector* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Vector* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Vector>(nullptr);
  }

  CMsgBotWorldState_Vector* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Vector>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Vector& from);
  void MergeFrom(const CMsgBotWorldState_Vector& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Vector* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Vector";
  }
  protected:
  explicit CMsgBotWorldState_Vector(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // optional float x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // optional float y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // optional float z = 3;
  bool has_z() const;
  private:
  bool _internal_has_z() const;
  public:
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Vector)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float x_;
  float y_;
  float z_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Player PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Player) */ {
 public:
  inline CMsgBotWorldState_Player() : CMsgBotWorldState_Player(nullptr) {}
  virtual ~CMsgBotWorldState_Player();
  explicit constexpr CMsgBotWorldState_Player(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Player(const CMsgBotWorldState_Player& from);
  CMsgBotWorldState_Player(CMsgBotWorldState_Player&& from) noexcept
    : CMsgBotWorldState_Player() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Player& operator=(const CMsgBotWorldState_Player& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Player& operator=(CMsgBotWorldState_Player&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Player& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Player*>(
               &_CMsgBotWorldState_Player_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgBotWorldState_Player& a, CMsgBotWorldState_Player& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Player* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Player* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Player* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Player>(nullptr);
  }

  CMsgBotWorldState_Player* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Player>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Player& from);
  void MergeFrom(const CMsgBotWorldState_Player& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Player* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Player";
  }
  protected:
  explicit CMsgBotWorldState_Player(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 11,
    kPlayerIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kIsAliveFieldNumber = 3,
    kRespawnTimeFieldNumber = 4,
    kKillsFieldNumber = 5,
    kDeathsFieldNumber = 6,
    kAssistsFieldNumber = 7,
    kTeamIdFieldNumber = 8,
    kPrimaryUnitHandleFieldNumber = 9,
    kMmrFieldNumber = 10,
  };
  // optional .CMsgBotWorldState.Vector location = 11;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional int32 player_id = 1 [(.map_key) = true];
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id() const;
  void set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_id() const;
  void _internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_alive = 3;
  bool has_is_alive() const;
  private:
  bool _internal_has_is_alive() const;
  public:
  void clear_is_alive();
  bool is_alive() const;
  void set_is_alive(bool value);
  private:
  bool _internal_is_alive() const;
  void _internal_set_is_alive(bool value);
  public:

  // optional float respawn_time = 4;
  bool has_respawn_time() const;
  private:
  bool _internal_has_respawn_time() const;
  public:
  void clear_respawn_time();
  float respawn_time() const;
  void set_respawn_time(float value);
  private:
  float _internal_respawn_time() const;
  void _internal_set_respawn_time(float value);
  public:

  // optional uint32 kills = 5;
  bool has_kills() const;
  private:
  bool _internal_has_kills() const;
  public:
  void clear_kills();
  ::PROTOBUF_NAMESPACE_ID::uint32 kills() const;
  void set_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_kills() const;
  void _internal_set_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 deaths = 6;
  bool has_deaths() const;
  private:
  bool _internal_has_deaths() const;
  public:
  void clear_deaths();
  ::PROTOBUF_NAMESPACE_ID::uint32 deaths() const;
  void set_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deaths() const;
  void _internal_set_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 assists = 7;
  bool has_assists() const;
  private:
  bool _internal_has_assists() const;
  public:
  void clear_assists();
  ::PROTOBUF_NAMESPACE_ID::uint32 assists() const;
  void set_assists(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_assists() const;
  void _internal_set_assists(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team_id = 8;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 primary_unit_handle = 9;
  bool has_primary_unit_handle() const;
  private:
  bool _internal_has_primary_unit_handle() const;
  public:
  void clear_primary_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 primary_unit_handle() const;
  void set_primary_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_primary_unit_handle() const;
  void _internal_set_primary_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 mmr = 10;
  bool has_mmr() const;
  private:
  bool _internal_has_mmr() const;
  public:
  void clear_mmr();
  ::PROTOBUF_NAMESPACE_ID::int32 mmr() const;
  void set_mmr(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mmr() const;
  void _internal_set_mmr(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Player)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id_;
  bool is_alive_;
  float respawn_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 kills_;
  ::PROTOBUF_NAMESPACE_ID::uint32 deaths_;
  ::PROTOBUF_NAMESPACE_ID::uint32 assists_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 primary_unit_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 mmr_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Ability PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Ability) */ {
 public:
  inline CMsgBotWorldState_Ability() : CMsgBotWorldState_Ability(nullptr) {}
  virtual ~CMsgBotWorldState_Ability();
  explicit constexpr CMsgBotWorldState_Ability(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Ability(const CMsgBotWorldState_Ability& from);
  CMsgBotWorldState_Ability(CMsgBotWorldState_Ability&& from) noexcept
    : CMsgBotWorldState_Ability() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Ability& operator=(const CMsgBotWorldState_Ability& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Ability& operator=(CMsgBotWorldState_Ability&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Ability& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Ability* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Ability*>(
               &_CMsgBotWorldState_Ability_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgBotWorldState_Ability& a, CMsgBotWorldState_Ability& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Ability* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Ability* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Ability* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Ability>(nullptr);
  }

  CMsgBotWorldState_Ability* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Ability>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Ability& from);
  void MergeFrom(const CMsgBotWorldState_Ability& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Ability* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Ability";
  }
  protected:
  explicit CMsgBotWorldState_Ability(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
    kAbilityIdFieldNumber = 2,
    kSlotFieldNumber = 3,
    kCasterHandleFieldNumber = 5,
    kLevelFieldNumber = 6,
    kCastRangeFieldNumber = 10,
    kChannelTimeFieldNumber = 11,
    kCooldownRemainingFieldNumber = 12,
    kIsActivatedFieldNumber = 20,
    kIsToggledFieldNumber = 21,
    kIsInAbilityPhaseFieldNumber = 22,
    kIsChannelingFieldNumber = 23,
    kIsStolenFieldNumber = 24,
    kIsFullyCastableFieldNumber = 25,
    kIsCombinedLockedFieldNumber = 40,
    kChargesFieldNumber = 30,
    kSecondaryChargesFieldNumber = 31,
    kPowerTreadsStatFieldNumber = 50,
  };
  // optional uint32 handle = 1 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 slot = 3;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::uint32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 caster_handle = 5;
  bool has_caster_handle() const;
  private:
  bool _internal_has_caster_handle() const;
  public:
  void clear_caster_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle() const;
  void set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_caster_handle() const;
  void _internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 6;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cast_range = 10;
  bool has_cast_range() const;
  private:
  bool _internal_has_cast_range() const;
  public:
  void clear_cast_range();
  ::PROTOBUF_NAMESPACE_ID::uint32 cast_range() const;
  void set_cast_range(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cast_range() const;
  void _internal_set_cast_range(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float channel_time = 11;
  bool has_channel_time() const;
  private:
  bool _internal_has_channel_time() const;
  public:
  void clear_channel_time();
  float channel_time() const;
  void set_channel_time(float value);
  private:
  float _internal_channel_time() const;
  void _internal_set_channel_time(float value);
  public:

  // optional float cooldown_remaining = 12 [default = 0];
  bool has_cooldown_remaining() const;
  private:
  bool _internal_has_cooldown_remaining() const;
  public:
  void clear_cooldown_remaining();
  float cooldown_remaining() const;
  void set_cooldown_remaining(float value);
  private:
  float _internal_cooldown_remaining() const;
  void _internal_set_cooldown_remaining(float value);
  public:

  // optional bool is_activated = 20;
  bool has_is_activated() const;
  private:
  bool _internal_has_is_activated() const;
  public:
  void clear_is_activated();
  bool is_activated() const;
  void set_is_activated(bool value);
  private:
  bool _internal_is_activated() const;
  void _internal_set_is_activated(bool value);
  public:

  // optional bool is_toggled = 21;
  bool has_is_toggled() const;
  private:
  bool _internal_has_is_toggled() const;
  public:
  void clear_is_toggled();
  bool is_toggled() const;
  void set_is_toggled(bool value);
  private:
  bool _internal_is_toggled() const;
  void _internal_set_is_toggled(bool value);
  public:

  // optional bool is_in_ability_phase = 22;
  bool has_is_in_ability_phase() const;
  private:
  bool _internal_has_is_in_ability_phase() const;
  public:
  void clear_is_in_ability_phase();
  bool is_in_ability_phase() const;
  void set_is_in_ability_phase(bool value);
  private:
  bool _internal_is_in_ability_phase() const;
  void _internal_set_is_in_ability_phase(bool value);
  public:

  // optional bool is_channeling = 23;
  bool has_is_channeling() const;
  private:
  bool _internal_has_is_channeling() const;
  public:
  void clear_is_channeling();
  bool is_channeling() const;
  void set_is_channeling(bool value);
  private:
  bool _internal_is_channeling() const;
  void _internal_set_is_channeling(bool value);
  public:

  // optional bool is_stolen = 24;
  bool has_is_stolen() const;
  private:
  bool _internal_has_is_stolen() const;
  public:
  void clear_is_stolen();
  bool is_stolen() const;
  void set_is_stolen(bool value);
  private:
  bool _internal_is_stolen() const;
  void _internal_set_is_stolen(bool value);
  public:

  // optional bool is_fully_castable = 25;
  bool has_is_fully_castable() const;
  private:
  bool _internal_has_is_fully_castable() const;
  public:
  void clear_is_fully_castable();
  bool is_fully_castable() const;
  void set_is_fully_castable(bool value);
  private:
  bool _internal_is_fully_castable() const;
  void _internal_set_is_fully_castable(bool value);
  public:

  // optional bool is_combined_locked = 40;
  bool has_is_combined_locked() const;
  private:
  bool _internal_has_is_combined_locked() const;
  public:
  void clear_is_combined_locked();
  bool is_combined_locked() const;
  void set_is_combined_locked(bool value);
  private:
  bool _internal_is_combined_locked() const;
  void _internal_set_is_combined_locked(bool value);
  public:

  // optional uint32 charges = 30;
  bool has_charges() const;
  private:
  bool _internal_has_charges() const;
  public:
  void clear_charges();
  ::PROTOBUF_NAMESPACE_ID::uint32 charges() const;
  void set_charges(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_charges() const;
  void _internal_set_charges(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 secondary_charges = 31;
  bool has_secondary_charges() const;
  private:
  bool _internal_has_secondary_charges() const;
  public:
  void clear_secondary_charges();
  ::PROTOBUF_NAMESPACE_ID::uint32 secondary_charges() const;
  void set_secondary_charges(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_secondary_charges() const;
  void _internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 power_treads_stat = 50 [default = -1];
  bool has_power_treads_stat() const;
  private:
  bool _internal_has_power_treads_stat() const;
  public:
  void clear_power_treads_stat();
  ::PROTOBUF_NAMESPACE_ID::int32 power_treads_stat() const;
  void set_power_treads_stat(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_power_treads_stat() const;
  void _internal_set_power_treads_stat(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Ability)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slot_;
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cast_range_;
  float channel_time_;
  float cooldown_remaining_;
  bool is_activated_;
  bool is_toggled_;
  bool is_in_ability_phase_;
  bool is_channeling_;
  bool is_stolen_;
  bool is_fully_castable_;
  bool is_combined_locked_;
  ::PROTOBUF_NAMESPACE_ID::uint32 charges_;
  ::PROTOBUF_NAMESPACE_ID::uint32 secondary_charges_;
  ::PROTOBUF_NAMESPACE_ID::int32 power_treads_stat_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_DroppedItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.DroppedItem) */ {
 public:
  inline CMsgBotWorldState_DroppedItem() : CMsgBotWorldState_DroppedItem(nullptr) {}
  virtual ~CMsgBotWorldState_DroppedItem();
  explicit constexpr CMsgBotWorldState_DroppedItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_DroppedItem(const CMsgBotWorldState_DroppedItem& from);
  CMsgBotWorldState_DroppedItem(CMsgBotWorldState_DroppedItem&& from) noexcept
    : CMsgBotWorldState_DroppedItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_DroppedItem& operator=(const CMsgBotWorldState_DroppedItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_DroppedItem& operator=(CMsgBotWorldState_DroppedItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_DroppedItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_DroppedItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_DroppedItem*>(
               &_CMsgBotWorldState_DroppedItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgBotWorldState_DroppedItem& a, CMsgBotWorldState_DroppedItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_DroppedItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_DroppedItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_DroppedItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_DroppedItem>(nullptr);
  }

  CMsgBotWorldState_DroppedItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_DroppedItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_DroppedItem& from);
  void MergeFrom(const CMsgBotWorldState_DroppedItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_DroppedItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.DroppedItem";
  }
  protected:
  explicit CMsgBotWorldState_DroppedItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 2,
    kItemIdFieldNumber = 1,
  };
  // optional .CMsgBotWorldState.Vector location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 item_id = 1;
  bool has_item_id() const;
  private:
  bool _internal_has_item_id() const;
  public:
  void clear_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_id() const;
  void set_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_id() const;
  void _internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.DroppedItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_RuneInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.RuneInfo) */ {
 public:
  inline CMsgBotWorldState_RuneInfo() : CMsgBotWorldState_RuneInfo(nullptr) {}
  virtual ~CMsgBotWorldState_RuneInfo();
  explicit constexpr CMsgBotWorldState_RuneInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_RuneInfo(const CMsgBotWorldState_RuneInfo& from);
  CMsgBotWorldState_RuneInfo(CMsgBotWorldState_RuneInfo&& from) noexcept
    : CMsgBotWorldState_RuneInfo() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_RuneInfo& operator=(const CMsgBotWorldState_RuneInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_RuneInfo& operator=(CMsgBotWorldState_RuneInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_RuneInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_RuneInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_RuneInfo*>(
               &_CMsgBotWorldState_RuneInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgBotWorldState_RuneInfo& a, CMsgBotWorldState_RuneInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_RuneInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_RuneInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_RuneInfo* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_RuneInfo>(nullptr);
  }

  CMsgBotWorldState_RuneInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_RuneInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_RuneInfo& from);
  void MergeFrom(const CMsgBotWorldState_RuneInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_RuneInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.RuneInfo";
  }
  protected:
  explicit CMsgBotWorldState_RuneInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 2,
    kTypeFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTimeSinceSeenFieldNumber = 4,
  };
  // optional .CMsgBotWorldState.Vector location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional int32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 status = 3;
  bool has_status() const;
  private:
  bool _internal_has_status() const;
  public:
  void clear_status();
  ::PROTOBUF_NAMESPACE_ID::uint32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_status() const;
  void _internal_set_status(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float time_since_seen = 4;
  bool has_time_since_seen() const;
  private:
  bool _internal_has_time_since_seen() const;
  public:
  void clear_time_since_seen();
  float time_since_seen() const;
  void set_time_since_seen(float value);
  private:
  float _internal_time_since_seen() const;
  void _internal_set_time_since_seen(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.RuneInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 status_;
  float time_since_seen_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_TeleportInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.TeleportInfo) */ {
 public:
  inline CMsgBotWorldState_TeleportInfo() : CMsgBotWorldState_TeleportInfo(nullptr) {}
  virtual ~CMsgBotWorldState_TeleportInfo();
  explicit constexpr CMsgBotWorldState_TeleportInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_TeleportInfo(const CMsgBotWorldState_TeleportInfo& from);
  CMsgBotWorldState_TeleportInfo(CMsgBotWorldState_TeleportInfo&& from) noexcept
    : CMsgBotWorldState_TeleportInfo() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_TeleportInfo& operator=(const CMsgBotWorldState_TeleportInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_TeleportInfo& operator=(CMsgBotWorldState_TeleportInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_TeleportInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_TeleportInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_TeleportInfo*>(
               &_CMsgBotWorldState_TeleportInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgBotWorldState_TeleportInfo& a, CMsgBotWorldState_TeleportInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_TeleportInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_TeleportInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_TeleportInfo* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_TeleportInfo>(nullptr);
  }

  CMsgBotWorldState_TeleportInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_TeleportInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_TeleportInfo& from);
  void MergeFrom(const CMsgBotWorldState_TeleportInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_TeleportInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.TeleportInfo";
  }
  protected:
  explicit CMsgBotWorldState_TeleportInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
    kTimeRemainingFieldNumber = 3,
  };
  // optional .CMsgBotWorldState.Vector location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float time_remaining = 3;
  bool has_time_remaining() const;
  private:
  bool _internal_has_time_remaining() const;
  public:
  void clear_time_remaining();
  float time_remaining() const;
  void set_time_remaining(float value);
  private:
  float _internal_time_remaining() const;
  void _internal_set_time_remaining(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.TeleportInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  float time_remaining_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Modifier PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Modifier) */ {
 public:
  inline CMsgBotWorldState_Modifier() : CMsgBotWorldState_Modifier(nullptr) {}
  virtual ~CMsgBotWorldState_Modifier();
  explicit constexpr CMsgBotWorldState_Modifier(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Modifier(const CMsgBotWorldState_Modifier& from);
  CMsgBotWorldState_Modifier(CMsgBotWorldState_Modifier&& from) noexcept
    : CMsgBotWorldState_Modifier() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Modifier& operator=(const CMsgBotWorldState_Modifier& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Modifier& operator=(CMsgBotWorldState_Modifier&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Modifier& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Modifier* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Modifier*>(
               &_CMsgBotWorldState_Modifier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgBotWorldState_Modifier& a, CMsgBotWorldState_Modifier& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Modifier* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Modifier* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Modifier* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Modifier>(nullptr);
  }

  CMsgBotWorldState_Modifier* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Modifier>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Modifier& from);
  void MergeFrom(const CMsgBotWorldState_Modifier& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Modifier* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Modifier";
  }
  protected:
  explicit CMsgBotWorldState_Modifier(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAuxiliaryUnitsHandlesFieldNumber = 6,
    kNameFieldNumber = 1,
    kStackCountFieldNumber = 2,
    kAbilityHandleFieldNumber = 3,
    kAbilityIdFieldNumber = 4,
    kRemainingDurationFieldNumber = 5,
    kHandleFieldNumber = 7,
  };
  // repeated uint32 auxiliary_units_handles = 6;
  int auxiliary_units_handles_size() const;
  private:
  int _internal_auxiliary_units_handles_size() const;
  public:
  void clear_auxiliary_units_handles();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_auxiliary_units_handles(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_auxiliary_units_handles() const;
  void _internal_add_auxiliary_units_handles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_auxiliary_units_handles();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 auxiliary_units_handles(int index) const;
  void set_auxiliary_units_handles(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_auxiliary_units_handles(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      auxiliary_units_handles() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_auxiliary_units_handles();

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional uint32 stack_count = 2;
  bool has_stack_count() const;
  private:
  bool _internal_has_stack_count() const;
  public:
  void clear_stack_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_count() const;
  void set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stack_count() const;
  void _internal_set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_handle = 3;
  bool has_ability_handle() const;
  private:
  bool _internal_has_ability_handle() const;
  public:
  void clear_ability_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle() const;
  void set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_handle() const;
  void _internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 4;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float remaining_duration = 5;
  bool has_remaining_duration() const;
  private:
  bool _internal_has_remaining_duration() const;
  public:
  void clear_remaining_duration();
  float remaining_duration() const;
  void set_remaining_duration(float value);
  private:
  float _internal_remaining_duration() const;
  void _internal_set_remaining_duration(float value);
  public:

  // optional uint32 handle = 7 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Modifier)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > auxiliary_units_handles_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  float remaining_duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_LinearProjectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.LinearProjectile) */ {
 public:
  inline CMsgBotWorldState_LinearProjectile() : CMsgBotWorldState_LinearProjectile(nullptr) {}
  virtual ~CMsgBotWorldState_LinearProjectile();
  explicit constexpr CMsgBotWorldState_LinearProjectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_LinearProjectile(const CMsgBotWorldState_LinearProjectile& from);
  CMsgBotWorldState_LinearProjectile(CMsgBotWorldState_LinearProjectile&& from) noexcept
    : CMsgBotWorldState_LinearProjectile() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_LinearProjectile& operator=(const CMsgBotWorldState_LinearProjectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_LinearProjectile& operator=(CMsgBotWorldState_LinearProjectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_LinearProjectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_LinearProjectile* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_LinearProjectile*>(
               &_CMsgBotWorldState_LinearProjectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgBotWorldState_LinearProjectile& a, CMsgBotWorldState_LinearProjectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_LinearProjectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_LinearProjectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_LinearProjectile* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_LinearProjectile>(nullptr);
  }

  CMsgBotWorldState_LinearProjectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_LinearProjectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_LinearProjectile& from);
  void MergeFrom(const CMsgBotWorldState_LinearProjectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_LinearProjectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.LinearProjectile";
  }
  protected:
  explicit CMsgBotWorldState_LinearProjectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 6,
    kVelocityFieldNumber = 7,
    kHandleFieldNumber = 1,
    kCasterHandleFieldNumber = 2,
    kCasterPlayerIdFieldNumber = 3,
    kAbilityHandleFieldNumber = 4,
    kAbilityIdFieldNumber = 5,
    kRadiusFieldNumber = 8,
    kCasterUnitTypeFieldNumber = 9,
  };
  // optional .CMsgBotWorldState.Vector location = 6;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional .CMsgBotWorldState.Vector velocity = 7;
  bool has_velocity() const;
  private:
  bool _internal_has_velocity() const;
  public:
  void clear_velocity();
  const ::CMsgBotWorldState_Vector& velocity() const;
  ::CMsgBotWorldState_Vector* release_velocity();
  ::CMsgBotWorldState_Vector* mutable_velocity();
  void set_allocated_velocity(::CMsgBotWorldState_Vector* velocity);
  private:
  const ::CMsgBotWorldState_Vector& _internal_velocity() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_velocity();
  public:
  void unsafe_arena_set_allocated_velocity(
      ::CMsgBotWorldState_Vector* velocity);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_velocity();

  // optional uint32 handle = 1 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 caster_handle = 2;
  bool has_caster_handle() const;
  private:
  bool _internal_has_caster_handle() const;
  public:
  void clear_caster_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle() const;
  void set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_caster_handle() const;
  void _internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 caster_player_id = 3;
  bool has_caster_player_id() const;
  private:
  bool _internal_has_caster_player_id() const;
  public:
  void clear_caster_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id() const;
  void set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caster_player_id() const;
  void _internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 ability_handle = 4;
  bool has_ability_handle() const;
  private:
  bool _internal_has_ability_handle() const;
  public:
  void clear_ability_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle() const;
  void set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_handle() const;
  void _internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 5;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 radius = 8;
  bool has_radius() const;
  private:
  bool _internal_has_radius() const;
  public:
  void clear_radius();
  ::PROTOBUF_NAMESPACE_ID::uint32 radius() const;
  void set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_radius() const;
  void _internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  bool has_caster_unit_type() const;
  private:
  bool _internal_has_caster_unit_type() const;
  public:
  void clear_caster_unit_type();
  ::CMsgBotWorldState_UnitType caster_unit_type() const;
  void set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  private:
  ::CMsgBotWorldState_UnitType _internal_caster_unit_type() const;
  void _internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.LinearProjectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::CMsgBotWorldState_Vector* velocity_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 radius_;
  int caster_unit_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_TrackingProjectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.TrackingProjectile) */ {
 public:
  inline CMsgBotWorldState_TrackingProjectile() : CMsgBotWorldState_TrackingProjectile(nullptr) {}
  virtual ~CMsgBotWorldState_TrackingProjectile();
  explicit constexpr CMsgBotWorldState_TrackingProjectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_TrackingProjectile(const CMsgBotWorldState_TrackingProjectile& from);
  CMsgBotWorldState_TrackingProjectile(CMsgBotWorldState_TrackingProjectile&& from) noexcept
    : CMsgBotWorldState_TrackingProjectile() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_TrackingProjectile& operator=(const CMsgBotWorldState_TrackingProjectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_TrackingProjectile& operator=(CMsgBotWorldState_TrackingProjectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_TrackingProjectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_TrackingProjectile* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_TrackingProjectile*>(
               &_CMsgBotWorldState_TrackingProjectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgBotWorldState_TrackingProjectile& a, CMsgBotWorldState_TrackingProjectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_TrackingProjectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_TrackingProjectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_TrackingProjectile* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_TrackingProjectile>(nullptr);
  }

  CMsgBotWorldState_TrackingProjectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_TrackingProjectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_TrackingProjectile& from);
  void MergeFrom(const CMsgBotWorldState_TrackingProjectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_TrackingProjectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.TrackingProjectile";
  }
  protected:
  explicit CMsgBotWorldState_TrackingProjectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 5,
    kCasterHandleFieldNumber = 1,
    kCasterPlayerIdFieldNumber = 2,
    kAbilityHandleFieldNumber = 3,
    kAbilityIdFieldNumber = 4,
    kVelocityFieldNumber = 6,
    kIsDodgeableFieldNumber = 7,
    kIsAttackFieldNumber = 8,
    kCasterUnitTypeFieldNumber = 9,
    kHandleFieldNumber = 10,
  };
  // optional .CMsgBotWorldState.Vector location = 5;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 caster_handle = 1;
  bool has_caster_handle() const;
  private:
  bool _internal_has_caster_handle() const;
  public:
  void clear_caster_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle() const;
  void set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_caster_handle() const;
  void _internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 caster_player_id = 2;
  bool has_caster_player_id() const;
  private:
  bool _internal_has_caster_player_id() const;
  public:
  void clear_caster_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id() const;
  void set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caster_player_id() const;
  void _internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 ability_handle = 3;
  bool has_ability_handle() const;
  private:
  bool _internal_has_ability_handle() const;
  public:
  void clear_ability_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle() const;
  void set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_handle() const;
  void _internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 4;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 velocity = 6;
  bool has_velocity() const;
  private:
  bool _internal_has_velocity() const;
  public:
  void clear_velocity();
  ::PROTOBUF_NAMESPACE_ID::uint32 velocity() const;
  void set_velocity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_velocity() const;
  void _internal_set_velocity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_dodgeable = 7;
  bool has_is_dodgeable() const;
  private:
  bool _internal_has_is_dodgeable() const;
  public:
  void clear_is_dodgeable();
  bool is_dodgeable() const;
  void set_is_dodgeable(bool value);
  private:
  bool _internal_is_dodgeable() const;
  void _internal_set_is_dodgeable(bool value);
  public:

  // optional bool is_attack = 8;
  bool has_is_attack() const;
  private:
  bool _internal_has_is_attack() const;
  public:
  void clear_is_attack();
  bool is_attack() const;
  void set_is_attack(bool value);
  private:
  bool _internal_is_attack() const;
  void _internal_set_is_attack(bool value);
  public:

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
  bool has_caster_unit_type() const;
  private:
  bool _internal_has_caster_unit_type() const;
  public:
  void clear_caster_unit_type();
  ::CMsgBotWorldState_UnitType caster_unit_type() const;
  void set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  private:
  ::CMsgBotWorldState_UnitType _internal_caster_unit_type() const;
  void _internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  public:

  // optional uint32 handle = 10 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.TrackingProjectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 velocity_;
  bool is_dodgeable_;
  bool is_attack_;
  int caster_unit_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_AvoidanceZone PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.AvoidanceZone) */ {
 public:
  inline CMsgBotWorldState_AvoidanceZone() : CMsgBotWorldState_AvoidanceZone(nullptr) {}
  virtual ~CMsgBotWorldState_AvoidanceZone();
  explicit constexpr CMsgBotWorldState_AvoidanceZone(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_AvoidanceZone(const CMsgBotWorldState_AvoidanceZone& from);
  CMsgBotWorldState_AvoidanceZone(CMsgBotWorldState_AvoidanceZone&& from) noexcept
    : CMsgBotWorldState_AvoidanceZone() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_AvoidanceZone& operator=(const CMsgBotWorldState_AvoidanceZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_AvoidanceZone& operator=(CMsgBotWorldState_AvoidanceZone&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_AvoidanceZone& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_AvoidanceZone* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_AvoidanceZone*>(
               &_CMsgBotWorldState_AvoidanceZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgBotWorldState_AvoidanceZone& a, CMsgBotWorldState_AvoidanceZone& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_AvoidanceZone* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_AvoidanceZone* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_AvoidanceZone* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_AvoidanceZone>(nullptr);
  }

  CMsgBotWorldState_AvoidanceZone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_AvoidanceZone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_AvoidanceZone& from);
  void MergeFrom(const CMsgBotWorldState_AvoidanceZone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_AvoidanceZone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.AvoidanceZone";
  }
  protected:
  explicit CMsgBotWorldState_AvoidanceZone(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kCasterHandleFieldNumber = 2,
    kCasterPlayerIdFieldNumber = 3,
    kAbilityHandleFieldNumber = 4,
    kAbilityIdFieldNumber = 5,
    kRadiusFieldNumber = 6,
    kCasterUnitTypeFieldNumber = 7,
  };
  // optional .CMsgBotWorldState.Vector location = 1;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 caster_handle = 2;
  bool has_caster_handle() const;
  private:
  bool _internal_has_caster_handle() const;
  public:
  void clear_caster_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle() const;
  void set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_caster_handle() const;
  void _internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 caster_player_id = 3;
  bool has_caster_player_id() const;
  private:
  bool _internal_has_caster_player_id() const;
  public:
  void clear_caster_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id() const;
  void set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caster_player_id() const;
  void _internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 ability_handle = 4;
  bool has_ability_handle() const;
  private:
  bool _internal_has_ability_handle() const;
  public:
  void clear_ability_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle() const;
  void set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_handle() const;
  void _internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 5;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 radius = 6;
  bool has_radius() const;
  private:
  bool _internal_has_radius() const;
  public:
  void clear_radius();
  ::PROTOBUF_NAMESPACE_ID::uint32 radius() const;
  void set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_radius() const;
  void _internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
  bool has_caster_unit_type() const;
  private:
  bool _internal_has_caster_unit_type() const;
  public:
  void clear_caster_unit_type();
  ::CMsgBotWorldState_UnitType caster_unit_type() const;
  void set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  private:
  ::CMsgBotWorldState_UnitType _internal_caster_unit_type() const;
  void _internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.AvoidanceZone)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 caster_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 radius_;
  int caster_unit_type_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Courier PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Courier) */ {
 public:
  inline CMsgBotWorldState_Courier() : CMsgBotWorldState_Courier(nullptr) {}
  virtual ~CMsgBotWorldState_Courier();
  explicit constexpr CMsgBotWorldState_Courier(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Courier(const CMsgBotWorldState_Courier& from);
  CMsgBotWorldState_Courier(CMsgBotWorldState_Courier&& from) noexcept
    : CMsgBotWorldState_Courier() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Courier& operator=(const CMsgBotWorldState_Courier& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Courier& operator=(CMsgBotWorldState_Courier&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Courier& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Courier* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Courier*>(
               &_CMsgBotWorldState_Courier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgBotWorldState_Courier& a, CMsgBotWorldState_Courier& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Courier* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Courier* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Courier* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Courier>(nullptr);
  }

  CMsgBotWorldState_Courier* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Courier>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Courier& from);
  void MergeFrom(const CMsgBotWorldState_Courier& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Courier* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Courier";
  }
  protected:
  explicit CMsgBotWorldState_Courier(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
    kPlayerIdFieldNumber = 3,
    kStateFieldNumber = 2,
  };
  // optional uint32 handle = 1 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 player_id = 3;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::CMsgBotWorldState_CourierState state() const;
  void set_state(::CMsgBotWorldState_CourierState value);
  private:
  ::CMsgBotWorldState_CourierState _internal_state() const;
  void _internal_set_state(::CMsgBotWorldState_CourierState value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Courier)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  int state_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_EventAbility PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.EventAbility) */ {
 public:
  inline CMsgBotWorldState_EventAbility() : CMsgBotWorldState_EventAbility(nullptr) {}
  virtual ~CMsgBotWorldState_EventAbility();
  explicit constexpr CMsgBotWorldState_EventAbility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_EventAbility(const CMsgBotWorldState_EventAbility& from);
  CMsgBotWorldState_EventAbility(CMsgBotWorldState_EventAbility&& from) noexcept
    : CMsgBotWorldState_EventAbility() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_EventAbility& operator=(const CMsgBotWorldState_EventAbility& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_EventAbility& operator=(CMsgBotWorldState_EventAbility&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_EventAbility& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_EventAbility* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_EventAbility*>(
               &_CMsgBotWorldState_EventAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgBotWorldState_EventAbility& a, CMsgBotWorldState_EventAbility& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_EventAbility* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_EventAbility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_EventAbility* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventAbility>(nullptr);
  }

  CMsgBotWorldState_EventAbility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventAbility>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_EventAbility& from);
  void MergeFrom(const CMsgBotWorldState_EventAbility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_EventAbility* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.EventAbility";
  }
  protected:
  explicit CMsgBotWorldState_EventAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 4,
    kAbilityIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kUnitHandleFieldNumber = 3,
    kIsChannelStartFieldNumber = 5,
  };
  // optional .CMsgBotWorldState.Vector location = 4;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 player_id = 2;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 unit_handle = 3;
  bool has_unit_handle() const;
  private:
  bool _internal_has_unit_handle() const;
  public:
  void clear_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 unit_handle() const;
  void set_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unit_handle() const;
  void _internal_set_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_channel_start = 5;
  bool has_is_channel_start() const;
  private:
  bool _internal_has_is_channel_start() const;
  public:
  void clear_is_channel_start();
  bool is_channel_start() const;
  void set_is_channel_start(bool value);
  private:
  bool _internal_is_channel_start() const;
  void _internal_set_is_channel_start(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.EventAbility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 unit_handle_;
  bool is_channel_start_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_EventDamage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.EventDamage) */ {
 public:
  inline CMsgBotWorldState_EventDamage() : CMsgBotWorldState_EventDamage(nullptr) {}
  virtual ~CMsgBotWorldState_EventDamage();
  explicit constexpr CMsgBotWorldState_EventDamage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_EventDamage(const CMsgBotWorldState_EventDamage& from);
  CMsgBotWorldState_EventDamage(CMsgBotWorldState_EventDamage&& from) noexcept
    : CMsgBotWorldState_EventDamage() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_EventDamage& operator=(const CMsgBotWorldState_EventDamage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_EventDamage& operator=(CMsgBotWorldState_EventDamage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_EventDamage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_EventDamage* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_EventDamage*>(
               &_CMsgBotWorldState_EventDamage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgBotWorldState_EventDamage& a, CMsgBotWorldState_EventDamage& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_EventDamage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_EventDamage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_EventDamage* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventDamage>(nullptr);
  }

  CMsgBotWorldState_EventDamage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventDamage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_EventDamage& from);
  void MergeFrom(const CMsgBotWorldState_EventDamage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_EventDamage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.EventDamage";
  }
  protected:
  explicit CMsgBotWorldState_EventDamage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDamageFieldNumber = 1,
    kVictimPlayerIdFieldNumber = 2,
    kVictimUnitHandleFieldNumber = 3,
    kAttackerPlayerIdFieldNumber = 4,
    kAttackerUnitHandleFieldNumber = 5,
    kAbilityIdFieldNumber = 6,
  };
  // optional uint32 damage = 1;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage() const;
  void set_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage() const;
  void _internal_set_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 victim_player_id = 2;
  bool has_victim_player_id() const;
  private:
  bool _internal_has_victim_player_id() const;
  public:
  void clear_victim_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 victim_player_id() const;
  void set_victim_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_victim_player_id() const;
  void _internal_set_victim_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 victim_unit_handle = 3;
  bool has_victim_unit_handle() const;
  private:
  bool _internal_has_victim_unit_handle() const;
  public:
  void clear_victim_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 victim_unit_handle() const;
  void set_victim_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_victim_unit_handle() const;
  void _internal_set_victim_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 attacker_player_id = 4;
  bool has_attacker_player_id() const;
  private:
  bool _internal_has_attacker_player_id() const;
  public:
  void clear_attacker_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 attacker_player_id() const;
  void set_attacker_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attacker_player_id() const;
  void _internal_set_attacker_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 attacker_unit_handle = 5;
  bool has_attacker_unit_handle() const;
  private:
  bool _internal_has_attacker_unit_handle() const;
  public:
  void clear_attacker_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 attacker_unit_handle() const;
  void set_attacker_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attacker_unit_handle() const;
  void _internal_set_attacker_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 6;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.EventDamage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_;
  ::PROTOBUF_NAMESPACE_ID::int32 victim_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 victim_unit_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 attacker_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attacker_unit_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_EventCourierKilled PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.EventCourierKilled) */ {
 public:
  inline CMsgBotWorldState_EventCourierKilled() : CMsgBotWorldState_EventCourierKilled(nullptr) {}
  virtual ~CMsgBotWorldState_EventCourierKilled();
  explicit constexpr CMsgBotWorldState_EventCourierKilled(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_EventCourierKilled(const CMsgBotWorldState_EventCourierKilled& from);
  CMsgBotWorldState_EventCourierKilled(CMsgBotWorldState_EventCourierKilled&& from) noexcept
    : CMsgBotWorldState_EventCourierKilled() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_EventCourierKilled& operator=(const CMsgBotWorldState_EventCourierKilled& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_EventCourierKilled& operator=(CMsgBotWorldState_EventCourierKilled&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_EventCourierKilled& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_EventCourierKilled* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_EventCourierKilled*>(
               &_CMsgBotWorldState_EventCourierKilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgBotWorldState_EventCourierKilled& a, CMsgBotWorldState_EventCourierKilled& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_EventCourierKilled* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_EventCourierKilled* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_EventCourierKilled* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventCourierKilled>(nullptr);
  }

  CMsgBotWorldState_EventCourierKilled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventCourierKilled>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_EventCourierKilled& from);
  void MergeFrom(const CMsgBotWorldState_EventCourierKilled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_EventCourierKilled* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.EventCourierKilled";
  }
  protected:
  explicit CMsgBotWorldState_EventCourierKilled(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kCourierUnitHandleFieldNumber = 2,
    kKillerPlayerIdFieldNumber = 3,
    kKillerUnitHandleFieldNumber = 4,
  };
  // optional uint32 team_id = 1;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 courier_unit_handle = 2;
  bool has_courier_unit_handle() const;
  private:
  bool _internal_has_courier_unit_handle() const;
  public:
  void clear_courier_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 courier_unit_handle() const;
  void set_courier_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_courier_unit_handle() const;
  void _internal_set_courier_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 killer_player_id = 3;
  bool has_killer_player_id() const;
  private:
  bool _internal_has_killer_player_id() const;
  public:
  void clear_killer_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id() const;
  void set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_killer_player_id() const;
  void _internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 killer_unit_handle = 4;
  bool has_killer_unit_handle() const;
  private:
  bool _internal_has_killer_unit_handle() const;
  public:
  void clear_killer_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_unit_handle() const;
  void set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_killer_unit_handle() const;
  void _internal_set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.EventCourierKilled)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 courier_unit_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_unit_handle_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_EventRoshanKilled PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.EventRoshanKilled) */ {
 public:
  inline CMsgBotWorldState_EventRoshanKilled() : CMsgBotWorldState_EventRoshanKilled(nullptr) {}
  virtual ~CMsgBotWorldState_EventRoshanKilled();
  explicit constexpr CMsgBotWorldState_EventRoshanKilled(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_EventRoshanKilled(const CMsgBotWorldState_EventRoshanKilled& from);
  CMsgBotWorldState_EventRoshanKilled(CMsgBotWorldState_EventRoshanKilled&& from) noexcept
    : CMsgBotWorldState_EventRoshanKilled() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_EventRoshanKilled& operator=(const CMsgBotWorldState_EventRoshanKilled& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_EventRoshanKilled& operator=(CMsgBotWorldState_EventRoshanKilled&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_EventRoshanKilled& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_EventRoshanKilled* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_EventRoshanKilled*>(
               &_CMsgBotWorldState_EventRoshanKilled_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgBotWorldState_EventRoshanKilled& a, CMsgBotWorldState_EventRoshanKilled& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_EventRoshanKilled* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_EventRoshanKilled* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_EventRoshanKilled* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventRoshanKilled>(nullptr);
  }

  CMsgBotWorldState_EventRoshanKilled* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventRoshanKilled>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_EventRoshanKilled& from);
  void MergeFrom(const CMsgBotWorldState_EventRoshanKilled& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_EventRoshanKilled* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.EventRoshanKilled";
  }
  protected:
  explicit CMsgBotWorldState_EventRoshanKilled(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillerPlayerIdFieldNumber = 1,
    kKillerUnitHandleFieldNumber = 2,
  };
  // optional int32 killer_player_id = 1;
  bool has_killer_player_id() const;
  private:
  bool _internal_has_killer_player_id() const;
  public:
  void clear_killer_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id() const;
  void set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_killer_player_id() const;
  void _internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 killer_unit_handle = 2;
  bool has_killer_unit_handle() const;
  private:
  bool _internal_has_killer_unit_handle() const;
  public:
  void clear_killer_unit_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_unit_handle() const;
  void set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_killer_unit_handle() const;
  void _internal_set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.EventRoshanKilled)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_unit_handle_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_EventTree PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.EventTree) */ {
 public:
  inline CMsgBotWorldState_EventTree() : CMsgBotWorldState_EventTree(nullptr) {}
  virtual ~CMsgBotWorldState_EventTree();
  explicit constexpr CMsgBotWorldState_EventTree(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_EventTree(const CMsgBotWorldState_EventTree& from);
  CMsgBotWorldState_EventTree(CMsgBotWorldState_EventTree&& from) noexcept
    : CMsgBotWorldState_EventTree() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_EventTree& operator=(const CMsgBotWorldState_EventTree& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_EventTree& operator=(CMsgBotWorldState_EventTree&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_EventTree& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_EventTree* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_EventTree*>(
               &_CMsgBotWorldState_EventTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgBotWorldState_EventTree& a, CMsgBotWorldState_EventTree& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_EventTree* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_EventTree* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_EventTree* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventTree>(nullptr);
  }

  CMsgBotWorldState_EventTree* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_EventTree>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_EventTree& from);
  void MergeFrom(const CMsgBotWorldState_EventTree& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_EventTree* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.EventTree";
  }
  protected:
  explicit CMsgBotWorldState_EventTree(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 4,
    kTreeIdFieldNumber = 1,
    kDestroyedFieldNumber = 2,
    kRespawnedFieldNumber = 3,
    kDelayedFieldNumber = 5,
  };
  // optional .CMsgBotWorldState.Vector location = 4;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 tree_id = 1;
  bool has_tree_id() const;
  private:
  bool _internal_has_tree_id() const;
  public:
  void clear_tree_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 tree_id() const;
  void set_tree_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tree_id() const;
  void _internal_set_tree_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool destroyed = 2;
  bool has_destroyed() const;
  private:
  bool _internal_has_destroyed() const;
  public:
  void clear_destroyed();
  bool destroyed() const;
  void set_destroyed(bool value);
  private:
  bool _internal_destroyed() const;
  void _internal_set_destroyed(bool value);
  public:

  // optional bool respawned = 3;
  bool has_respawned() const;
  private:
  bool _internal_has_respawned() const;
  public:
  void clear_respawned();
  bool respawned() const;
  void set_respawned(bool value);
  private:
  bool _internal_respawned() const;
  void _internal_set_respawned(bool value);
  public:

  // optional bool delayed = 5;
  bool has_delayed() const;
  private:
  bool _internal_has_delayed() const;
  public:
  void clear_delayed();
  bool delayed() const;
  void set_delayed(bool value);
  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.EventTree)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tree_id_;
  bool destroyed_;
  bool respawned_;
  bool delayed_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Unit PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Unit) */ {
 public:
  inline CMsgBotWorldState_Unit() : CMsgBotWorldState_Unit(nullptr) {}
  virtual ~CMsgBotWorldState_Unit();
  explicit constexpr CMsgBotWorldState_Unit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Unit(const CMsgBotWorldState_Unit& from);
  CMsgBotWorldState_Unit(CMsgBotWorldState_Unit&& from) noexcept
    : CMsgBotWorldState_Unit() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Unit& operator=(const CMsgBotWorldState_Unit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Unit& operator=(CMsgBotWorldState_Unit&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Unit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Unit* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Unit*>(
               &_CMsgBotWorldState_Unit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgBotWorldState_Unit& a, CMsgBotWorldState_Unit& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Unit* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Unit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Unit* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Unit>(nullptr);
  }

  CMsgBotWorldState_Unit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Unit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Unit& from);
  void MergeFrom(const CMsgBotWorldState_Unit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Unit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Unit";
  }
  protected:
  explicit CMsgBotWorldState_Unit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilitiesFieldNumber = 90,
    kItemsFieldNumber = 91,
    kModifiersFieldNumber = 92,
    kIncomingTrackingProjectilesFieldNumber = 93,
    kNameFieldNumber = 3,
    kAttackTargetNameFieldNumber = 52,
    kAbilityTargetNameFieldNumber = 103,
    kLocationFieldNumber = 6,
    kHandleFieldNumber = 1,
    kUnitTypeFieldNumber = 2,
    kTeamIdFieldNumber = 4,
    kLevelFieldNumber = 5,
    kPlayerIdFieldNumber = 8,
    kBoundingRadiusFieldNumber = 10,
    kFacingFieldNumber = 11,
    kGroundHeightFieldNumber = 12,
    kVisionRangeDaytimeFieldNumber = 15,
    kVisionRangeNighttimeFieldNumber = 16,
    kHealthFieldNumber = 20,
    kHealthMaxFieldNumber = 21,
    kHealthRegenFieldNumber = 22,
    kManaFieldNumber = 25,
    kManaMaxFieldNumber = 26,
    kManaRegenFieldNumber = 27,
    kBaseMovementSpeedFieldNumber = 30,
    kCurrentMovementSpeedFieldNumber = 31,
    kAnimActivityFieldNumber = 35,
    kAnimCycleFieldNumber = 36,
    kBaseDamageFieldNumber = 40,
    kBaseDamageVarianceFieldNumber = 41,
    kBonusDamageFieldNumber = 42,
    kAttackDamageFieldNumber = 43,
    kAttackRangeFieldNumber = 44,
    kAttackSpeedFieldNumber = 45,
    kAttackAnimPointFieldNumber = 46,
    kAttackAcquisitionRangeFieldNumber = 47,
    kAttackProjectileSpeedFieldNumber = 48,
    kAttackTargetHandleFieldNumber = 49,
    kIsAliveFieldNumber = 7,
    kIsChannelingFieldNumber = 65,
    kIsAttackImmuneFieldNumber = 70,
    kIsBlindFieldNumber = 71,
    kBountyXpFieldNumber = 60,
    kBountyGoldMinFieldNumber = 61,
    kBountyGoldMaxFieldNumber = 62,
    kActiveAbilityHandleFieldNumber = 66,
    kIsBlockDisabledFieldNumber = 72,
    kIsDisarmedFieldNumber = 73,
    kIsDominatedFieldNumber = 74,
    kIsEvadeDisabledFieldNumber = 75,
    kIsHexedFieldNumber = 76,
    kIsInvisibleFieldNumber = 77,
    kIsInvulnerableFieldNumber = 78,
    kIsMagicImmuneFieldNumber = 79,
    kIsMutedFieldNumber = 80,
    kIsNightmaredFieldNumber = 82,
    kIsRootedFieldNumber = 83,
    kIsSilencedFieldNumber = 84,
    kIsSpeciallyDeniableFieldNumber = 85,
    kIsStunnedFieldNumber = 86,
    kIsUnableToMissFieldNumber = 87,
    kHasScepterFieldNumber = 88,
    kActionTypeFieldNumber = 100,
    kIsShrineHealingFieldNumber = 151,
    kAbilityTargetHandleFieldNumber = 101,
    kPrimaryAttributeFieldNumber = 110,
    kIsSpeciallyUndeniableFieldNumber = 94,
    kIsUsingAbilityFieldNumber = 102,
    kIsIllusionFieldNumber = 111,
    kFlyingCourierFieldNumber = 140,
    kRespawnTimeFieldNumber = 112,
    kBuybackCostFieldNumber = 113,
    kBuybackCooldownFieldNumber = 114,
    kSpellAmplificationFieldNumber = 115,
    kArmorFieldNumber = 116,
    kMagicResistFieldNumber = 117,
    kEvasionFieldNumber = 118,
    kXpNeededToLevelFieldNumber = 120,
    kAbilityPointsFieldNumber = 121,
    kLastHitsFieldNumber = 124,
    kDeniesFieldNumber = 125,
    kNetWorthFieldNumber = 126,
    kStrengthFieldNumber = 127,
    kAgilityFieldNumber = 128,
    kIntelligenceFieldNumber = 129,
    kRemainingLifespanFieldNumber = 130,
    kShrineCooldownFieldNumber = 150,
    kAttacksPerSecondFieldNumber = 50,
    kLastAttackTimeFieldNumber = 51,
    kReliableGoldFieldNumber = 122,
    kUnreliableGoldFieldNumber = 123,
  };
  // repeated .CMsgBotWorldState.Ability abilities = 90 [(.map_field) = true];
  int abilities_size() const;
  private:
  int _internal_abilities_size() const;
  public:
  void clear_abilities();
  ::CMsgBotWorldState_Ability* mutable_abilities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >*
      mutable_abilities();
  private:
  const ::CMsgBotWorldState_Ability& _internal_abilities(int index) const;
  ::CMsgBotWorldState_Ability* _internal_add_abilities();
  public:
  const ::CMsgBotWorldState_Ability& abilities(int index) const;
  ::CMsgBotWorldState_Ability* add_abilities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >&
      abilities() const;

  // repeated .CMsgBotWorldState.Ability items = 91 [(.map_field) = true];
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::CMsgBotWorldState_Ability* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >*
      mutable_items();
  private:
  const ::CMsgBotWorldState_Ability& _internal_items(int index) const;
  ::CMsgBotWorldState_Ability* _internal_add_items();
  public:
  const ::CMsgBotWorldState_Ability& items(int index) const;
  ::CMsgBotWorldState_Ability* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >&
      items() const;

  // repeated .CMsgBotWorldState.Modifier modifiers = 92 [(.map_field) = true];
  int modifiers_size() const;
  private:
  int _internal_modifiers_size() const;
  public:
  void clear_modifiers();
  ::CMsgBotWorldState_Modifier* mutable_modifiers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Modifier >*
      mutable_modifiers();
  private:
  const ::CMsgBotWorldState_Modifier& _internal_modifiers(int index) const;
  ::CMsgBotWorldState_Modifier* _internal_add_modifiers();
  public:
  const ::CMsgBotWorldState_Modifier& modifiers(int index) const;
  ::CMsgBotWorldState_Modifier* add_modifiers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Modifier >&
      modifiers() const;

  // repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93 [(.map_field) = true];
  int incoming_tracking_projectiles_size() const;
  private:
  int _internal_incoming_tracking_projectiles_size() const;
  public:
  void clear_incoming_tracking_projectiles();
  ::CMsgBotWorldState_TrackingProjectile* mutable_incoming_tracking_projectiles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TrackingProjectile >*
      mutable_incoming_tracking_projectiles();
  private:
  const ::CMsgBotWorldState_TrackingProjectile& _internal_incoming_tracking_projectiles(int index) const;
  ::CMsgBotWorldState_TrackingProjectile* _internal_add_incoming_tracking_projectiles();
  public:
  const ::CMsgBotWorldState_TrackingProjectile& incoming_tracking_projectiles(int index) const;
  ::CMsgBotWorldState_TrackingProjectile* add_incoming_tracking_projectiles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TrackingProjectile >&
      incoming_tracking_projectiles() const;

  // optional string name = 3;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string attack_target_name = 52;
  bool has_attack_target_name() const;
  private:
  bool _internal_has_attack_target_name() const;
  public:
  void clear_attack_target_name();
  const std::string& attack_target_name() const;
  void set_attack_target_name(const std::string& value);
  void set_attack_target_name(std::string&& value);
  void set_attack_target_name(const char* value);
  void set_attack_target_name(const char* value, size_t size);
  std::string* mutable_attack_target_name();
  std::string* release_attack_target_name();
  void set_allocated_attack_target_name(std::string* attack_target_name);
  private:
  const std::string& _internal_attack_target_name() const;
  void _internal_set_attack_target_name(const std::string& value);
  std::string* _internal_mutable_attack_target_name();
  public:

  // optional string ability_target_name = 103;
  bool has_ability_target_name() const;
  private:
  bool _internal_has_ability_target_name() const;
  public:
  void clear_ability_target_name();
  const std::string& ability_target_name() const;
  void set_ability_target_name(const std::string& value);
  void set_ability_target_name(std::string&& value);
  void set_ability_target_name(const char* value);
  void set_ability_target_name(const char* value, size_t size);
  std::string* mutable_ability_target_name();
  std::string* release_ability_target_name();
  void set_allocated_ability_target_name(std::string* ability_target_name);
  private:
  const std::string& _internal_ability_target_name() const;
  void _internal_set_ability_target_name(const std::string& value);
  std::string* _internal_mutable_ability_target_name();
  public:

  // optional .CMsgBotWorldState.Vector location = 6;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional uint32 handle = 1 [(.map_key) = true];
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
  bool has_unit_type() const;
  private:
  bool _internal_has_unit_type() const;
  public:
  void clear_unit_type();
  ::CMsgBotWorldState_UnitType unit_type() const;
  void set_unit_type(::CMsgBotWorldState_UnitType value);
  private:
  ::CMsgBotWorldState_UnitType _internal_unit_type() const;
  void _internal_set_unit_type(::CMsgBotWorldState_UnitType value);
  public:

  // optional uint32 team_id = 4;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 5;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 player_id = 8;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 bounding_radius = 10;
  bool has_bounding_radius() const;
  private:
  bool _internal_has_bounding_radius() const;
  public:
  void clear_bounding_radius();
  ::PROTOBUF_NAMESPACE_ID::int32 bounding_radius() const;
  void set_bounding_radius(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bounding_radius() const;
  void _internal_set_bounding_radius(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 facing = 11;
  bool has_facing() const;
  private:
  bool _internal_has_facing() const;
  public:
  void clear_facing();
  ::PROTOBUF_NAMESPACE_ID::int32 facing() const;
  void set_facing(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_facing() const;
  void _internal_set_facing(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 ground_height = 12;
  bool has_ground_height() const;
  private:
  bool _internal_has_ground_height() const;
  public:
  void clear_ground_height();
  ::PROTOBUF_NAMESPACE_ID::uint32 ground_height() const;
  void set_ground_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ground_height() const;
  void _internal_set_ground_height(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 vision_range_daytime = 15;
  bool has_vision_range_daytime() const;
  private:
  bool _internal_has_vision_range_daytime() const;
  public:
  void clear_vision_range_daytime();
  ::PROTOBUF_NAMESPACE_ID::uint32 vision_range_daytime() const;
  void set_vision_range_daytime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vision_range_daytime() const;
  void _internal_set_vision_range_daytime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 vision_range_nighttime = 16;
  bool has_vision_range_nighttime() const;
  private:
  bool _internal_has_vision_range_nighttime() const;
  public:
  void clear_vision_range_nighttime();
  ::PROTOBUF_NAMESPACE_ID::uint32 vision_range_nighttime() const;
  void set_vision_range_nighttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_vision_range_nighttime() const;
  void _internal_set_vision_range_nighttime(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 health = 20;
  bool has_health() const;
  private:
  bool _internal_has_health() const;
  public:
  void clear_health();
  ::PROTOBUF_NAMESPACE_ID::int32 health() const;
  void set_health(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_health() const;
  void _internal_set_health(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 health_max = 21;
  bool has_health_max() const;
  private:
  bool _internal_has_health_max() const;
  public:
  void clear_health_max();
  ::PROTOBUF_NAMESPACE_ID::int32 health_max() const;
  void set_health_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_health_max() const;
  void _internal_set_health_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float health_regen = 22;
  bool has_health_regen() const;
  private:
  bool _internal_has_health_regen() const;
  public:
  void clear_health_regen();
  float health_regen() const;
  void set_health_regen(float value);
  private:
  float _internal_health_regen() const;
  void _internal_set_health_regen(float value);
  public:

  // optional int32 mana = 25;
  bool has_mana() const;
  private:
  bool _internal_has_mana() const;
  public:
  void clear_mana();
  ::PROTOBUF_NAMESPACE_ID::int32 mana() const;
  void set_mana(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mana() const;
  void _internal_set_mana(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 mana_max = 26;
  bool has_mana_max() const;
  private:
  bool _internal_has_mana_max() const;
  public:
  void clear_mana_max();
  ::PROTOBUF_NAMESPACE_ID::int32 mana_max() const;
  void set_mana_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mana_max() const;
  void _internal_set_mana_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float mana_regen = 27;
  bool has_mana_regen() const;
  private:
  bool _internal_has_mana_regen() const;
  public:
  void clear_mana_regen();
  float mana_regen() const;
  void set_mana_regen(float value);
  private:
  float _internal_mana_regen() const;
  void _internal_set_mana_regen(float value);
  public:

  // optional int32 base_movement_speed = 30;
  bool has_base_movement_speed() const;
  private:
  bool _internal_has_base_movement_speed() const;
  public:
  void clear_base_movement_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 base_movement_speed() const;
  void set_base_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_movement_speed() const;
  void _internal_set_base_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 current_movement_speed = 31;
  bool has_current_movement_speed() const;
  private:
  bool _internal_has_current_movement_speed() const;
  public:
  void clear_current_movement_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 current_movement_speed() const;
  void set_current_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_current_movement_speed() const;
  void _internal_set_current_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 anim_activity = 35;
  bool has_anim_activity() const;
  private:
  bool _internal_has_anim_activity() const;
  public:
  void clear_anim_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 anim_activity() const;
  void set_anim_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_anim_activity() const;
  void _internal_set_anim_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float anim_cycle = 36;
  bool has_anim_cycle() const;
  private:
  bool _internal_has_anim_cycle() const;
  public:
  void clear_anim_cycle();
  float anim_cycle() const;
  void set_anim_cycle(float value);
  private:
  float _internal_anim_cycle() const;
  void _internal_set_anim_cycle(float value);
  public:

  // optional int32 base_damage = 40;
  bool has_base_damage() const;
  private:
  bool _internal_has_base_damage() const;
  public:
  void clear_base_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 base_damage() const;
  void set_base_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_damage() const;
  void _internal_set_base_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 base_damage_variance = 41;
  bool has_base_damage_variance() const;
  private:
  bool _internal_has_base_damage_variance() const;
  public:
  void clear_base_damage_variance();
  ::PROTOBUF_NAMESPACE_ID::int32 base_damage_variance() const;
  void set_base_damage_variance(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_base_damage_variance() const;
  void _internal_set_base_damage_variance(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 bonus_damage = 42;
  bool has_bonus_damage() const;
  private:
  bool _internal_has_bonus_damage() const;
  public:
  void clear_bonus_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 bonus_damage() const;
  void set_bonus_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bonus_damage() const;
  void _internal_set_bonus_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 attack_damage = 43;
  bool has_attack_damage() const;
  private:
  bool _internal_has_attack_damage() const;
  public:
  void clear_attack_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 attack_damage() const;
  void set_attack_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attack_damage() const;
  void _internal_set_attack_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 attack_range = 44;
  bool has_attack_range() const;
  private:
  bool _internal_has_attack_range() const;
  public:
  void clear_attack_range();
  ::PROTOBUF_NAMESPACE_ID::int32 attack_range() const;
  void set_attack_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attack_range() const;
  void _internal_set_attack_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float attack_speed = 45;
  bool has_attack_speed() const;
  private:
  bool _internal_has_attack_speed() const;
  public:
  void clear_attack_speed();
  float attack_speed() const;
  void set_attack_speed(float value);
  private:
  float _internal_attack_speed() const;
  void _internal_set_attack_speed(float value);
  public:

  // optional float attack_anim_point = 46;
  bool has_attack_anim_point() const;
  private:
  bool _internal_has_attack_anim_point() const;
  public:
  void clear_attack_anim_point();
  float attack_anim_point() const;
  void set_attack_anim_point(float value);
  private:
  float _internal_attack_anim_point() const;
  void _internal_set_attack_anim_point(float value);
  public:

  // optional int32 attack_acquisition_range = 47;
  bool has_attack_acquisition_range() const;
  private:
  bool _internal_has_attack_acquisition_range() const;
  public:
  void clear_attack_acquisition_range();
  ::PROTOBUF_NAMESPACE_ID::int32 attack_acquisition_range() const;
  void set_attack_acquisition_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attack_acquisition_range() const;
  void _internal_set_attack_acquisition_range(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 attack_projectile_speed = 48;
  bool has_attack_projectile_speed() const;
  private:
  bool _internal_has_attack_projectile_speed() const;
  public:
  void clear_attack_projectile_speed();
  ::PROTOBUF_NAMESPACE_ID::int32 attack_projectile_speed() const;
  void set_attack_projectile_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attack_projectile_speed() const;
  void _internal_set_attack_projectile_speed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 attack_target_handle = 49;
  bool has_attack_target_handle() const;
  private:
  bool _internal_has_attack_target_handle() const;
  public:
  void clear_attack_target_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 attack_target_handle() const;
  void set_attack_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attack_target_handle() const;
  void _internal_set_attack_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_alive = 7;
  bool has_is_alive() const;
  private:
  bool _internal_has_is_alive() const;
  public:
  void clear_is_alive();
  bool is_alive() const;
  void set_is_alive(bool value);
  private:
  bool _internal_is_alive() const;
  void _internal_set_is_alive(bool value);
  public:

  // optional bool is_channeling = 65;
  bool has_is_channeling() const;
  private:
  bool _internal_has_is_channeling() const;
  public:
  void clear_is_channeling();
  bool is_channeling() const;
  void set_is_channeling(bool value);
  private:
  bool _internal_is_channeling() const;
  void _internal_set_is_channeling(bool value);
  public:

  // optional bool is_attack_immune = 70;
  bool has_is_attack_immune() const;
  private:
  bool _internal_has_is_attack_immune() const;
  public:
  void clear_is_attack_immune();
  bool is_attack_immune() const;
  void set_is_attack_immune(bool value);
  private:
  bool _internal_is_attack_immune() const;
  void _internal_set_is_attack_immune(bool value);
  public:

  // optional bool is_blind = 71;
  bool has_is_blind() const;
  private:
  bool _internal_has_is_blind() const;
  public:
  void clear_is_blind();
  bool is_blind() const;
  void set_is_blind(bool value);
  private:
  bool _internal_is_blind() const;
  void _internal_set_is_blind(bool value);
  public:

  // optional uint32 bounty_xp = 60;
  bool has_bounty_xp() const;
  private:
  bool _internal_has_bounty_xp() const;
  public:
  void clear_bounty_xp();
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_xp() const;
  void set_bounty_xp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bounty_xp() const;
  void _internal_set_bounty_xp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bounty_gold_min = 61;
  bool has_bounty_gold_min() const;
  private:
  bool _internal_has_bounty_gold_min() const;
  public:
  void clear_bounty_gold_min();
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_gold_min() const;
  void set_bounty_gold_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bounty_gold_min() const;
  void _internal_set_bounty_gold_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 bounty_gold_max = 62;
  bool has_bounty_gold_max() const;
  private:
  bool _internal_has_bounty_gold_max() const;
  public:
  void clear_bounty_gold_max();
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_gold_max() const;
  void set_bounty_gold_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bounty_gold_max() const;
  void _internal_set_bounty_gold_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 active_ability_handle = 66;
  bool has_active_ability_handle() const;
  private:
  bool _internal_has_active_ability_handle() const;
  public:
  void clear_active_ability_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 active_ability_handle() const;
  void set_active_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_active_ability_handle() const;
  void _internal_set_active_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_block_disabled = 72;
  bool has_is_block_disabled() const;
  private:
  bool _internal_has_is_block_disabled() const;
  public:
  void clear_is_block_disabled();
  bool is_block_disabled() const;
  void set_is_block_disabled(bool value);
  private:
  bool _internal_is_block_disabled() const;
  void _internal_set_is_block_disabled(bool value);
  public:

  // optional bool is_disarmed = 73;
  bool has_is_disarmed() const;
  private:
  bool _internal_has_is_disarmed() const;
  public:
  void clear_is_disarmed();
  bool is_disarmed() const;
  void set_is_disarmed(bool value);
  private:
  bool _internal_is_disarmed() const;
  void _internal_set_is_disarmed(bool value);
  public:

  // optional bool is_dominated = 74;
  bool has_is_dominated() const;
  private:
  bool _internal_has_is_dominated() const;
  public:
  void clear_is_dominated();
  bool is_dominated() const;
  void set_is_dominated(bool value);
  private:
  bool _internal_is_dominated() const;
  void _internal_set_is_dominated(bool value);
  public:

  // optional bool is_evade_disabled = 75;
  bool has_is_evade_disabled() const;
  private:
  bool _internal_has_is_evade_disabled() const;
  public:
  void clear_is_evade_disabled();
  bool is_evade_disabled() const;
  void set_is_evade_disabled(bool value);
  private:
  bool _internal_is_evade_disabled() const;
  void _internal_set_is_evade_disabled(bool value);
  public:

  // optional bool is_hexed = 76;
  bool has_is_hexed() const;
  private:
  bool _internal_has_is_hexed() const;
  public:
  void clear_is_hexed();
  bool is_hexed() const;
  void set_is_hexed(bool value);
  private:
  bool _internal_is_hexed() const;
  void _internal_set_is_hexed(bool value);
  public:

  // optional bool is_invisible = 77;
  bool has_is_invisible() const;
  private:
  bool _internal_has_is_invisible() const;
  public:
  void clear_is_invisible();
  bool is_invisible() const;
  void set_is_invisible(bool value);
  private:
  bool _internal_is_invisible() const;
  void _internal_set_is_invisible(bool value);
  public:

  // optional bool is_invulnerable = 78;
  bool has_is_invulnerable() const;
  private:
  bool _internal_has_is_invulnerable() const;
  public:
  void clear_is_invulnerable();
  bool is_invulnerable() const;
  void set_is_invulnerable(bool value);
  private:
  bool _internal_is_invulnerable() const;
  void _internal_set_is_invulnerable(bool value);
  public:

  // optional bool is_magic_immune = 79;
  bool has_is_magic_immune() const;
  private:
  bool _internal_has_is_magic_immune() const;
  public:
  void clear_is_magic_immune();
  bool is_magic_immune() const;
  void set_is_magic_immune(bool value);
  private:
  bool _internal_is_magic_immune() const;
  void _internal_set_is_magic_immune(bool value);
  public:

  // optional bool is_muted = 80;
  bool has_is_muted() const;
  private:
  bool _internal_has_is_muted() const;
  public:
  void clear_is_muted();
  bool is_muted() const;
  void set_is_muted(bool value);
  private:
  bool _internal_is_muted() const;
  void _internal_set_is_muted(bool value);
  public:

  // optional bool is_nightmared = 82;
  bool has_is_nightmared() const;
  private:
  bool _internal_has_is_nightmared() const;
  public:
  void clear_is_nightmared();
  bool is_nightmared() const;
  void set_is_nightmared(bool value);
  private:
  bool _internal_is_nightmared() const;
  void _internal_set_is_nightmared(bool value);
  public:

  // optional bool is_rooted = 83;
  bool has_is_rooted() const;
  private:
  bool _internal_has_is_rooted() const;
  public:
  void clear_is_rooted();
  bool is_rooted() const;
  void set_is_rooted(bool value);
  private:
  bool _internal_is_rooted() const;
  void _internal_set_is_rooted(bool value);
  public:

  // optional bool is_silenced = 84;
  bool has_is_silenced() const;
  private:
  bool _internal_has_is_silenced() const;
  public:
  void clear_is_silenced();
  bool is_silenced() const;
  void set_is_silenced(bool value);
  private:
  bool _internal_is_silenced() const;
  void _internal_set_is_silenced(bool value);
  public:

  // optional bool is_specially_deniable = 85;
  bool has_is_specially_deniable() const;
  private:
  bool _internal_has_is_specially_deniable() const;
  public:
  void clear_is_specially_deniable();
  bool is_specially_deniable() const;
  void set_is_specially_deniable(bool value);
  private:
  bool _internal_is_specially_deniable() const;
  void _internal_set_is_specially_deniable(bool value);
  public:

  // optional bool is_stunned = 86;
  bool has_is_stunned() const;
  private:
  bool _internal_has_is_stunned() const;
  public:
  void clear_is_stunned();
  bool is_stunned() const;
  void set_is_stunned(bool value);
  private:
  bool _internal_is_stunned() const;
  void _internal_set_is_stunned(bool value);
  public:

  // optional bool is_unable_to_miss = 87;
  bool has_is_unable_to_miss() const;
  private:
  bool _internal_has_is_unable_to_miss() const;
  public:
  void clear_is_unable_to_miss();
  bool is_unable_to_miss() const;
  void set_is_unable_to_miss(bool value);
  private:
  bool _internal_is_unable_to_miss() const;
  void _internal_set_is_unable_to_miss(bool value);
  public:

  // optional bool has_scepter = 88;
  bool has_has_scepter() const;
  private:
  bool _internal_has_has_scepter() const;
  public:
  void clear_has_scepter();
  bool has_scepter() const;
  void set_has_scepter(bool value);
  private:
  bool _internal_has_scepter() const;
  void _internal_set_has_scepter(bool value);
  public:

  // optional uint32 action_type = 100;
  bool has_action_type() const;
  private:
  bool _internal_has_action_type() const;
  public:
  void clear_action_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 action_type() const;
  void set_action_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_action_type() const;
  void _internal_set_action_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_shrine_healing = 151;
  bool has_is_shrine_healing() const;
  private:
  bool _internal_has_is_shrine_healing() const;
  public:
  void clear_is_shrine_healing();
  bool is_shrine_healing() const;
  void set_is_shrine_healing(bool value);
  private:
  bool _internal_is_shrine_healing() const;
  void _internal_set_is_shrine_healing(bool value);
  public:

  // optional uint32 ability_target_handle = 101;
  bool has_ability_target_handle() const;
  private:
  bool _internal_has_ability_target_handle() const;
  public:
  void clear_ability_target_handle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_target_handle() const;
  void set_ability_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_target_handle() const;
  void _internal_set_ability_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 primary_attribute = 110;
  bool has_primary_attribute() const;
  private:
  bool _internal_has_primary_attribute() const;
  public:
  void clear_primary_attribute();
  ::PROTOBUF_NAMESPACE_ID::uint32 primary_attribute() const;
  void set_primary_attribute(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_primary_attribute() const;
  void _internal_set_primary_attribute(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_specially_undeniable = 94;
  bool has_is_specially_undeniable() const;
  private:
  bool _internal_has_is_specially_undeniable() const;
  public:
  void clear_is_specially_undeniable();
  bool is_specially_undeniable() const;
  void set_is_specially_undeniable(bool value);
  private:
  bool _internal_is_specially_undeniable() const;
  void _internal_set_is_specially_undeniable(bool value);
  public:

  // optional bool is_using_ability = 102;
  bool has_is_using_ability() const;
  private:
  bool _internal_has_is_using_ability() const;
  public:
  void clear_is_using_ability();
  bool is_using_ability() const;
  void set_is_using_ability(bool value);
  private:
  bool _internal_is_using_ability() const;
  void _internal_set_is_using_ability(bool value);
  public:

  // optional bool is_illusion = 111;
  bool has_is_illusion() const;
  private:
  bool _internal_has_is_illusion() const;
  public:
  void clear_is_illusion();
  bool is_illusion() const;
  void set_is_illusion(bool value);
  private:
  bool _internal_is_illusion() const;
  void _internal_set_is_illusion(bool value);
  public:

  // optional bool flying_courier = 140;
  bool has_flying_courier() const;
  private:
  bool _internal_has_flying_courier() const;
  public:
  void clear_flying_courier();
  bool flying_courier() const;
  void set_flying_courier(bool value);
  private:
  bool _internal_flying_courier() const;
  void _internal_set_flying_courier(bool value);
  public:

  // optional float respawn_time = 112;
  bool has_respawn_time() const;
  private:
  bool _internal_has_respawn_time() const;
  public:
  void clear_respawn_time();
  float respawn_time() const;
  void set_respawn_time(float value);
  private:
  float _internal_respawn_time() const;
  void _internal_set_respawn_time(float value);
  public:

  // optional uint32 buyback_cost = 113;
  bool has_buyback_cost() const;
  private:
  bool _internal_has_buyback_cost() const;
  public:
  void clear_buyback_cost();
  ::PROTOBUF_NAMESPACE_ID::uint32 buyback_cost() const;
  void set_buyback_cost(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_buyback_cost() const;
  void _internal_set_buyback_cost(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float buyback_cooldown = 114;
  bool has_buyback_cooldown() const;
  private:
  bool _internal_has_buyback_cooldown() const;
  public:
  void clear_buyback_cooldown();
  float buyback_cooldown() const;
  void set_buyback_cooldown(float value);
  private:
  float _internal_buyback_cooldown() const;
  void _internal_set_buyback_cooldown(float value);
  public:

  // optional float spell_amplification = 115;
  bool has_spell_amplification() const;
  private:
  bool _internal_has_spell_amplification() const;
  public:
  void clear_spell_amplification();
  float spell_amplification() const;
  void set_spell_amplification(float value);
  private:
  float _internal_spell_amplification() const;
  void _internal_set_spell_amplification(float value);
  public:

  // optional float armor = 116;
  bool has_armor() const;
  private:
  bool _internal_has_armor() const;
  public:
  void clear_armor();
  float armor() const;
  void set_armor(float value);
  private:
  float _internal_armor() const;
  void _internal_set_armor(float value);
  public:

  // optional float magic_resist = 117;
  bool has_magic_resist() const;
  private:
  bool _internal_has_magic_resist() const;
  public:
  void clear_magic_resist();
  float magic_resist() const;
  void set_magic_resist(float value);
  private:
  float _internal_magic_resist() const;
  void _internal_set_magic_resist(float value);
  public:

  // optional float evasion = 118;
  bool has_evasion() const;
  private:
  bool _internal_has_evasion() const;
  public:
  void clear_evasion();
  float evasion() const;
  void set_evasion(float value);
  private:
  float _internal_evasion() const;
  void _internal_set_evasion(float value);
  public:

  // optional uint32 xp_needed_to_level = 120;
  bool has_xp_needed_to_level() const;
  private:
  bool _internal_has_xp_needed_to_level() const;
  public:
  void clear_xp_needed_to_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_needed_to_level() const;
  void set_xp_needed_to_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_xp_needed_to_level() const;
  void _internal_set_xp_needed_to_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_points = 121;
  bool has_ability_points() const;
  private:
  bool _internal_has_ability_points() const;
  public:
  void clear_ability_points();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_points() const;
  void set_ability_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_points() const;
  void _internal_set_ability_points(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 last_hits = 124;
  bool has_last_hits() const;
  private:
  bool _internal_has_last_hits() const;
  public:
  void clear_last_hits();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_hits() const;
  void set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_hits() const;
  void _internal_set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 denies = 125;
  bool has_denies() const;
  private:
  bool _internal_has_denies() const;
  public:
  void clear_denies();
  ::PROTOBUF_NAMESPACE_ID::uint32 denies() const;
  void set_denies(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_denies() const;
  void _internal_set_denies(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 net_worth = 126;
  bool has_net_worth() const;
  private:
  bool _internal_has_net_worth() const;
  public:
  void clear_net_worth();
  ::PROTOBUF_NAMESPACE_ID::uint32 net_worth() const;
  void set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_net_worth() const;
  void _internal_set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 strength = 127;
  bool has_strength() const;
  private:
  bool _internal_has_strength() const;
  public:
  void clear_strength();
  ::PROTOBUF_NAMESPACE_ID::uint32 strength() const;
  void set_strength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_strength() const;
  void _internal_set_strength(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 agility = 128;
  bool has_agility() const;
  private:
  bool _internal_has_agility() const;
  public:
  void clear_agility();
  ::PROTOBUF_NAMESPACE_ID::uint32 agility() const;
  void set_agility(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_agility() const;
  void _internal_set_agility(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 intelligence = 129;
  bool has_intelligence() const;
  private:
  bool _internal_has_intelligence() const;
  public:
  void clear_intelligence();
  ::PROTOBUF_NAMESPACE_ID::uint32 intelligence() const;
  void set_intelligence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_intelligence() const;
  void _internal_set_intelligence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float remaining_lifespan = 130;
  bool has_remaining_lifespan() const;
  private:
  bool _internal_has_remaining_lifespan() const;
  public:
  void clear_remaining_lifespan();
  float remaining_lifespan() const;
  void set_remaining_lifespan(float value);
  private:
  float _internal_remaining_lifespan() const;
  void _internal_set_remaining_lifespan(float value);
  public:

  // optional float shrine_cooldown = 150;
  bool has_shrine_cooldown() const;
  private:
  bool _internal_has_shrine_cooldown() const;
  public:
  void clear_shrine_cooldown();
  float shrine_cooldown() const;
  void set_shrine_cooldown(float value);
  private:
  float _internal_shrine_cooldown() const;
  void _internal_set_shrine_cooldown(float value);
  public:

  // optional int32 attacks_per_second = 50 [default = -1];
  bool has_attacks_per_second() const;
  private:
  bool _internal_has_attacks_per_second() const;
  public:
  void clear_attacks_per_second();
  ::PROTOBUF_NAMESPACE_ID::int32 attacks_per_second() const;
  void set_attacks_per_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_attacks_per_second() const;
  void _internal_set_attacks_per_second(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float last_attack_time = 51 [default = -1];
  bool has_last_attack_time() const;
  private:
  bool _internal_has_last_attack_time() const;
  public:
  void clear_last_attack_time();
  float last_attack_time() const;
  void set_last_attack_time(float value);
  private:
  float _internal_last_attack_time() const;
  void _internal_set_last_attack_time(float value);
  public:

  // optional int32 reliable_gold = 122 [default = -1];
  bool has_reliable_gold() const;
  private:
  bool _internal_has_reliable_gold() const;
  public:
  void clear_reliable_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 reliable_gold() const;
  void set_reliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reliable_gold() const;
  void _internal_set_reliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 unreliable_gold = 123 [default = -1];
  bool has_unreliable_gold() const;
  private:
  bool _internal_has_unreliable_gold() const;
  public:
  void clear_unreliable_gold();
  ::PROTOBUF_NAMESPACE_ID::int32 unreliable_gold() const;
  void set_unreliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unreliable_gold() const;
  void _internal_set_unreliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Unit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<3> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability > abilities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability > items_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Modifier > modifiers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TrackingProjectile > incoming_tracking_projectiles_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attack_target_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ability_target_name_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 handle_;
  int unit_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 bounding_radius_;
  ::PROTOBUF_NAMESPACE_ID::int32 facing_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ground_height_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vision_range_daytime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 vision_range_nighttime_;
  ::PROTOBUF_NAMESPACE_ID::int32 health_;
  ::PROTOBUF_NAMESPACE_ID::int32 health_max_;
  float health_regen_;
  ::PROTOBUF_NAMESPACE_ID::int32 mana_;
  ::PROTOBUF_NAMESPACE_ID::int32 mana_max_;
  float mana_regen_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_movement_speed_;
  ::PROTOBUF_NAMESPACE_ID::int32 current_movement_speed_;
  ::PROTOBUF_NAMESPACE_ID::int32 anim_activity_;
  float anim_cycle_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_damage_;
  ::PROTOBUF_NAMESPACE_ID::int32 base_damage_variance_;
  ::PROTOBUF_NAMESPACE_ID::int32 bonus_damage_;
  ::PROTOBUF_NAMESPACE_ID::int32 attack_damage_;
  ::PROTOBUF_NAMESPACE_ID::int32 attack_range_;
  float attack_speed_;
  float attack_anim_point_;
  ::PROTOBUF_NAMESPACE_ID::int32 attack_acquisition_range_;
  ::PROTOBUF_NAMESPACE_ID::int32 attack_projectile_speed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attack_target_handle_;
  bool is_alive_;
  bool is_channeling_;
  bool is_attack_immune_;
  bool is_blind_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_xp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_gold_min_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bounty_gold_max_;
  ::PROTOBUF_NAMESPACE_ID::uint32 active_ability_handle_;
  bool is_block_disabled_;
  bool is_disarmed_;
  bool is_dominated_;
  bool is_evade_disabled_;
  bool is_hexed_;
  bool is_invisible_;
  bool is_invulnerable_;
  bool is_magic_immune_;
  bool is_muted_;
  bool is_nightmared_;
  bool is_rooted_;
  bool is_silenced_;
  bool is_specially_deniable_;
  bool is_stunned_;
  bool is_unable_to_miss_;
  bool has_scepter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 action_type_;
  bool is_shrine_healing_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_target_handle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 primary_attribute_;
  bool is_specially_undeniable_;
  bool is_using_ability_;
  bool is_illusion_;
  bool flying_courier_;
  float respawn_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 buyback_cost_;
  float buyback_cooldown_;
  float spell_amplification_;
  float armor_;
  float magic_resist_;
  float evasion_;
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_needed_to_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_points_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_hits_;
  ::PROTOBUF_NAMESPACE_ID::uint32 denies_;
  ::PROTOBUF_NAMESPACE_ID::uint32 net_worth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 strength_;
  ::PROTOBUF_NAMESPACE_ID::uint32 agility_;
  ::PROTOBUF_NAMESPACE_ID::uint32 intelligence_;
  float remaining_lifespan_;
  float shrine_cooldown_;
  ::PROTOBUF_NAMESPACE_ID::int32 attacks_per_second_;
  float last_attack_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 reliable_gold_;
  ::PROTOBUF_NAMESPACE_ID::int32 unreliable_gold_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Actions_OceanAnnotation_Hero PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Actions.OceanAnnotation.Hero) */ {
 public:
  inline CMsgBotWorldState_Actions_OceanAnnotation_Hero() : CMsgBotWorldState_Actions_OceanAnnotation_Hero(nullptr) {}
  virtual ~CMsgBotWorldState_Actions_OceanAnnotation_Hero();
  explicit constexpr CMsgBotWorldState_Actions_OceanAnnotation_Hero(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Actions_OceanAnnotation_Hero(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from);
  CMsgBotWorldState_Actions_OceanAnnotation_Hero(CMsgBotWorldState_Actions_OceanAnnotation_Hero&& from) noexcept
    : CMsgBotWorldState_Actions_OceanAnnotation_Hero() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Actions_OceanAnnotation_Hero& operator=(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Actions_OceanAnnotation_Hero& operator=(CMsgBotWorldState_Actions_OceanAnnotation_Hero&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Actions_OceanAnnotation_Hero& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Actions_OceanAnnotation_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Actions_OceanAnnotation_Hero*>(
               &_CMsgBotWorldState_Actions_OceanAnnotation_Hero_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgBotWorldState_Actions_OceanAnnotation_Hero& a, CMsgBotWorldState_Actions_OceanAnnotation_Hero& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Actions_OceanAnnotation_Hero* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Actions_OceanAnnotation_Hero* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Actions_OceanAnnotation_Hero* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_OceanAnnotation_Hero>(nullptr);
  }

  CMsgBotWorldState_Actions_OceanAnnotation_Hero* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_OceanAnnotation_Hero>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from);
  void MergeFrom(const CMsgBotWorldState_Actions_OceanAnnotation_Hero& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Actions_OceanAnnotation_Hero* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Actions.OceanAnnotation.Hero";
  }
  protected:
  explicit CMsgBotWorldState_Actions_OceanAnnotation_Hero(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInternalActionFieldNumber = 5,
    kActionNameFieldNumber = 6,
    kDetailedStatsFieldNumber = 7,
    kPlayerIDFieldNumber = 1,
    kValueFunctionFieldNumber = 2,
    kActionLogpFieldNumber = 3,
    kRewardFieldNumber = 4,
  };
  // repeated int32 internalAction = 5;
  int internalaction_size() const;
  private:
  int _internal_internalaction_size() const;
  public:
  void clear_internalaction();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_internalaction(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_internalaction() const;
  void _internal_add_internalaction(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_internalaction();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 internalaction(int index) const;
  void set_internalaction(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_internalaction(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      internalaction() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_internalaction();

  // optional string actionName = 6;
  bool has_actionname() const;
  private:
  bool _internal_has_actionname() const;
  public:
  void clear_actionname();
  const std::string& actionname() const;
  void set_actionname(const std::string& value);
  void set_actionname(std::string&& value);
  void set_actionname(const char* value);
  void set_actionname(const char* value, size_t size);
  std::string* mutable_actionname();
  std::string* release_actionname();
  void set_allocated_actionname(std::string* actionname);
  private:
  const std::string& _internal_actionname() const;
  void _internal_set_actionname(const std::string& value);
  std::string* _internal_mutable_actionname();
  public:

  // optional bytes detailedStats = 7;
  bool has_detailedstats() const;
  private:
  bool _internal_has_detailedstats() const;
  public:
  void clear_detailedstats();
  const std::string& detailedstats() const;
  void set_detailedstats(const std::string& value);
  void set_detailedstats(std::string&& value);
  void set_detailedstats(const char* value);
  void set_detailedstats(const void* value, size_t size);
  std::string* mutable_detailedstats();
  std::string* release_detailedstats();
  void set_allocated_detailedstats(std::string* detailedstats);
  private:
  const std::string& _internal_detailedstats() const;
  void _internal_set_detailedstats(const std::string& value);
  std::string* _internal_mutable_detailedstats();
  public:

  // required int32 playerID = 1;
  bool has_playerid() const;
  private:
  bool _internal_has_playerid() const;
  public:
  void clear_playerid();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid() const;
  void set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid() const;
  void _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float valueFunction = 2;
  bool has_valuefunction() const;
  private:
  bool _internal_has_valuefunction() const;
  public:
  void clear_valuefunction();
  float valuefunction() const;
  void set_valuefunction(float value);
  private:
  float _internal_valuefunction() const;
  void _internal_set_valuefunction(float value);
  public:

  // optional float actionLogp = 3;
  bool has_actionlogp() const;
  private:
  bool _internal_has_actionlogp() const;
  public:
  void clear_actionlogp();
  float actionlogp() const;
  void set_actionlogp(float value);
  private:
  float _internal_actionlogp() const;
  void _internal_set_actionlogp(float value);
  public:

  // optional float reward = 4;
  bool has_reward() const;
  private:
  bool _internal_has_reward() const;
  public:
  void clear_reward();
  float reward() const;
  void set_reward(float value);
  private:
  float _internal_reward() const;
  void _internal_set_reward(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Actions.OceanAnnotation.Hero)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > internalaction_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr actionname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr detailedstats_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_;
  float valuefunction_;
  float actionlogp_;
  float reward_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Actions_OceanAnnotation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Actions.OceanAnnotation) */ {
 public:
  inline CMsgBotWorldState_Actions_OceanAnnotation() : CMsgBotWorldState_Actions_OceanAnnotation(nullptr) {}
  virtual ~CMsgBotWorldState_Actions_OceanAnnotation();
  explicit constexpr CMsgBotWorldState_Actions_OceanAnnotation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Actions_OceanAnnotation(const CMsgBotWorldState_Actions_OceanAnnotation& from);
  CMsgBotWorldState_Actions_OceanAnnotation(CMsgBotWorldState_Actions_OceanAnnotation&& from) noexcept
    : CMsgBotWorldState_Actions_OceanAnnotation() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Actions_OceanAnnotation& operator=(const CMsgBotWorldState_Actions_OceanAnnotation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Actions_OceanAnnotation& operator=(CMsgBotWorldState_Actions_OceanAnnotation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Actions_OceanAnnotation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Actions_OceanAnnotation* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Actions_OceanAnnotation*>(
               &_CMsgBotWorldState_Actions_OceanAnnotation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgBotWorldState_Actions_OceanAnnotation& a, CMsgBotWorldState_Actions_OceanAnnotation& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Actions_OceanAnnotation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Actions_OceanAnnotation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Actions_OceanAnnotation* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_OceanAnnotation>(nullptr);
  }

  CMsgBotWorldState_Actions_OceanAnnotation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_OceanAnnotation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Actions_OceanAnnotation& from);
  void MergeFrom(const CMsgBotWorldState_Actions_OceanAnnotation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Actions_OceanAnnotation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Actions.OceanAnnotation";
  }
  protected:
  explicit CMsgBotWorldState_Actions_OceanAnnotation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgBotWorldState_Actions_OceanAnnotation_Hero Hero;

  // accessors -------------------------------------------------------

  enum : int {
    kHeroesFieldNumber = 1,
    kRewardsFieldNumber = 6,
    kRewardNamesFieldNumber = 7,
    kAgentIDFieldNumber = 5,
  };
  // repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
  int heroes_size() const;
  private:
  int _internal_heroes_size() const;
  public:
  void clear_heroes();
  ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* mutable_heroes(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >*
      mutable_heroes();
  private:
  const ::CMsgBotWorldState_Actions_OceanAnnotation_Hero& _internal_heroes(int index) const;
  ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* _internal_add_heroes();
  public:
  const ::CMsgBotWorldState_Actions_OceanAnnotation_Hero& heroes(int index) const;
  ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* add_heroes();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >&
      heroes() const;

  // repeated float rewards = 6;
  int rewards_size() const;
  private:
  int _internal_rewards_size() const;
  public:
  void clear_rewards();
  private:
  float _internal_rewards(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rewards() const;
  void _internal_add_rewards(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rewards();
  public:
  float rewards(int index) const;
  void set_rewards(int index, float value);
  void add_rewards(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rewards() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rewards();

  // repeated string reward_names = 7;
  int reward_names_size() const;
  private:
  int _internal_reward_names_size() const;
  public:
  void clear_reward_names();
  const std::string& reward_names(int index) const;
  std::string* mutable_reward_names(int index);
  void set_reward_names(int index, const std::string& value);
  void set_reward_names(int index, std::string&& value);
  void set_reward_names(int index, const char* value);
  void set_reward_names(int index, const char* value, size_t size);
  std::string* add_reward_names();
  void add_reward_names(const std::string& value);
  void add_reward_names(std::string&& value);
  void add_reward_names(const char* value);
  void add_reward_names(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& reward_names() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_reward_names();
  private:
  const std::string& _internal_reward_names(int index) const;
  std::string* _internal_add_reward_names();
  public:

  // optional string agentID = 5;
  bool has_agentid() const;
  private:
  bool _internal_has_agentid() const;
  public:
  void clear_agentid();
  const std::string& agentid() const;
  void set_agentid(const std::string& value);
  void set_agentid(std::string&& value);
  void set_agentid(const char* value);
  void set_agentid(const char* value, size_t size);
  std::string* mutable_agentid();
  std::string* release_agentid();
  void set_allocated_agentid(std::string* agentid);
  private:
  const std::string& _internal_agentid() const;
  void _internal_set_agentid(const std::string& value);
  std::string* _internal_mutable_agentid();
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Actions.OceanAnnotation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero > heroes_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rewards_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> reward_names_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr agentid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Actions_Header PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Actions.Header) */ {
 public:
  inline CMsgBotWorldState_Actions_Header() : CMsgBotWorldState_Actions_Header(nullptr) {}
  virtual ~CMsgBotWorldState_Actions_Header();
  explicit constexpr CMsgBotWorldState_Actions_Header(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Actions_Header(const CMsgBotWorldState_Actions_Header& from);
  CMsgBotWorldState_Actions_Header(CMsgBotWorldState_Actions_Header&& from) noexcept
    : CMsgBotWorldState_Actions_Header() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Actions_Header& operator=(const CMsgBotWorldState_Actions_Header& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Actions_Header& operator=(CMsgBotWorldState_Actions_Header&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Actions_Header& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Actions_Header* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Actions_Header*>(
               &_CMsgBotWorldState_Actions_Header_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgBotWorldState_Actions_Header& a, CMsgBotWorldState_Actions_Header& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Actions_Header* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Actions_Header* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Actions_Header* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_Header>(nullptr);
  }

  CMsgBotWorldState_Actions_Header* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions_Header>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Actions_Header& from);
  void MergeFrom(const CMsgBotWorldState_Actions_Header& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Actions_Header* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Actions.Header";
  }
  protected:
  explicit CMsgBotWorldState_Actions_Header(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kStartTimeFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional float startTime = 1;
  bool has_starttime() const;
  private:
  bool _internal_has_starttime() const;
  public:
  void clear_starttime();
  float starttime() const;
  void set_starttime(float value);
  private:
  float _internal_starttime() const;
  void _internal_set_starttime(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Actions.Header)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  float starttime_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Actions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Actions) */ {
 public:
  inline CMsgBotWorldState_Actions() : CMsgBotWorldState_Actions(nullptr) {}
  virtual ~CMsgBotWorldState_Actions();
  explicit constexpr CMsgBotWorldState_Actions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Actions(const CMsgBotWorldState_Actions& from);
  CMsgBotWorldState_Actions(CMsgBotWorldState_Actions&& from) noexcept
    : CMsgBotWorldState_Actions() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Actions& operator=(const CMsgBotWorldState_Actions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Actions& operator=(CMsgBotWorldState_Actions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Actions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Actions* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Actions*>(
               &_CMsgBotWorldState_Actions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgBotWorldState_Actions& a, CMsgBotWorldState_Actions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Actions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Actions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Actions* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions>(nullptr);
  }

  CMsgBotWorldState_Actions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Actions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Actions& from);
  void MergeFrom(const CMsgBotWorldState_Actions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Actions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Actions";
  }
  protected:
  explicit CMsgBotWorldState_Actions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgBotWorldState_Actions_OceanAnnotation OceanAnnotation;
  typedef CMsgBotWorldState_Actions_Header Header;

  // accessors -------------------------------------------------------

  enum : int {
    kActionsFieldNumber = 2,
    kExtraDataFieldNumber = 3,
    kOceanAnnotationFieldNumber = 4,
    kHeaderFieldNumber = 5,
    kDotaTimeFieldNumber = 1,
  };
  // repeated .CMsgBotWorldState.Action actions = 2;
  int actions_size() const;
  private:
  int _internal_actions_size() const;
  public:
  void clear_actions();
  ::CMsgBotWorldState_Action* mutable_actions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Action >*
      mutable_actions();
  private:
  const ::CMsgBotWorldState_Action& _internal_actions(int index) const;
  ::CMsgBotWorldState_Action* _internal_add_actions();
  public:
  const ::CMsgBotWorldState_Action& actions(int index) const;
  ::CMsgBotWorldState_Action* add_actions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Action >&
      actions() const;

  // optional string extraData = 3;
  bool has_extradata() const;
  private:
  bool _internal_has_extradata() const;
  public:
  void clear_extradata();
  const std::string& extradata() const;
  void set_extradata(const std::string& value);
  void set_extradata(std::string&& value);
  void set_extradata(const char* value);
  void set_extradata(const char* value, size_t size);
  std::string* mutable_extradata();
  std::string* release_extradata();
  void set_allocated_extradata(std::string* extradata);
  private:
  const std::string& _internal_extradata() const;
  void _internal_set_extradata(const std::string& value);
  std::string* _internal_mutable_extradata();
  public:

  // optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
  bool has_oceanannotation() const;
  private:
  bool _internal_has_oceanannotation() const;
  public:
  void clear_oceanannotation();
  const ::CMsgBotWorldState_Actions_OceanAnnotation& oceanannotation() const;
  ::CMsgBotWorldState_Actions_OceanAnnotation* release_oceanannotation();
  ::CMsgBotWorldState_Actions_OceanAnnotation* mutable_oceanannotation();
  void set_allocated_oceanannotation(::CMsgBotWorldState_Actions_OceanAnnotation* oceanannotation);
  private:
  const ::CMsgBotWorldState_Actions_OceanAnnotation& _internal_oceanannotation() const;
  ::CMsgBotWorldState_Actions_OceanAnnotation* _internal_mutable_oceanannotation();
  public:
  void unsafe_arena_set_allocated_oceanannotation(
      ::CMsgBotWorldState_Actions_OceanAnnotation* oceanannotation);
  ::CMsgBotWorldState_Actions_OceanAnnotation* unsafe_arena_release_oceanannotation();

  // optional .CMsgBotWorldState.Actions.Header header = 5;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::CMsgBotWorldState_Actions_Header& header() const;
  ::CMsgBotWorldState_Actions_Header* release_header();
  ::CMsgBotWorldState_Actions_Header* mutable_header();
  void set_allocated_header(::CMsgBotWorldState_Actions_Header* header);
  private:
  const ::CMsgBotWorldState_Actions_Header& _internal_header() const;
  ::CMsgBotWorldState_Actions_Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::CMsgBotWorldState_Actions_Header* header);
  ::CMsgBotWorldState_Actions_Header* unsafe_arena_release_header();

  // optional float dota_time = 1 [default = -100];
  bool has_dota_time() const;
  private:
  bool _internal_has_dota_time() const;
  public:
  void clear_dota_time();
  float dota_time() const;
  void set_dota_time(float value);
  private:
  float _internal_dota_time() const;
  void _internal_set_dota_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Actions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Action > actions_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr extradata_;
  ::CMsgBotWorldState_Actions_OceanAnnotation* oceanannotation_;
  ::CMsgBotWorldState_Actions_Header* header_;
  float dota_time_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_MoveToLocation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.MoveToLocation) */ {
 public:
  inline CMsgBotWorldState_Action_MoveToLocation() : CMsgBotWorldState_Action_MoveToLocation(nullptr) {}
  virtual ~CMsgBotWorldState_Action_MoveToLocation();
  explicit constexpr CMsgBotWorldState_Action_MoveToLocation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_MoveToLocation(const CMsgBotWorldState_Action_MoveToLocation& from);
  CMsgBotWorldState_Action_MoveToLocation(CMsgBotWorldState_Action_MoveToLocation&& from) noexcept
    : CMsgBotWorldState_Action_MoveToLocation() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_MoveToLocation& operator=(const CMsgBotWorldState_Action_MoveToLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_MoveToLocation& operator=(CMsgBotWorldState_Action_MoveToLocation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_MoveToLocation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_MoveToLocation* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_MoveToLocation*>(
               &_CMsgBotWorldState_Action_MoveToLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgBotWorldState_Action_MoveToLocation& a, CMsgBotWorldState_Action_MoveToLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_MoveToLocation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_MoveToLocation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_MoveToLocation* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_MoveToLocation>(nullptr);
  }

  CMsgBotWorldState_Action_MoveToLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_MoveToLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_MoveToLocation& from);
  void MergeFrom(const CMsgBotWorldState_Action_MoveToLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_MoveToLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.MoveToLocation";
  }
  protected:
  explicit CMsgBotWorldState_Action_MoveToLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kLocationFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required .CMsgBotWorldState.Vector location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.MoveToLocation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::CMsgBotWorldState_Vector* location_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_MoveToTarget PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.MoveToTarget) */ {
 public:
  inline CMsgBotWorldState_Action_MoveToTarget() : CMsgBotWorldState_Action_MoveToTarget(nullptr) {}
  virtual ~CMsgBotWorldState_Action_MoveToTarget();
  explicit constexpr CMsgBotWorldState_Action_MoveToTarget(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_MoveToTarget(const CMsgBotWorldState_Action_MoveToTarget& from);
  CMsgBotWorldState_Action_MoveToTarget(CMsgBotWorldState_Action_MoveToTarget&& from) noexcept
    : CMsgBotWorldState_Action_MoveToTarget() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_MoveToTarget& operator=(const CMsgBotWorldState_Action_MoveToTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_MoveToTarget& operator=(CMsgBotWorldState_Action_MoveToTarget&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_MoveToTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_MoveToTarget* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_MoveToTarget*>(
               &_CMsgBotWorldState_Action_MoveToTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgBotWorldState_Action_MoveToTarget& a, CMsgBotWorldState_Action_MoveToTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_MoveToTarget* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_MoveToTarget* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_MoveToTarget* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_MoveToTarget>(nullptr);
  }

  CMsgBotWorldState_Action_MoveToTarget* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_MoveToTarget>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_MoveToTarget& from);
  void MergeFrom(const CMsgBotWorldState_Action_MoveToTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_MoveToTarget* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.MoveToTarget";
  }
  protected:
  explicit CMsgBotWorldState_Action_MoveToTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kTargetFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 target = 2;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  ::PROTOBUF_NAMESPACE_ID::int32 target() const;
  void set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target() const;
  void _internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.MoveToTarget)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_AttackMove PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.AttackMove) */ {
 public:
  inline CMsgBotWorldState_Action_AttackMove() : CMsgBotWorldState_Action_AttackMove(nullptr) {}
  virtual ~CMsgBotWorldState_Action_AttackMove();
  explicit constexpr CMsgBotWorldState_Action_AttackMove(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_AttackMove(const CMsgBotWorldState_Action_AttackMove& from);
  CMsgBotWorldState_Action_AttackMove(CMsgBotWorldState_Action_AttackMove&& from) noexcept
    : CMsgBotWorldState_Action_AttackMove() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_AttackMove& operator=(const CMsgBotWorldState_Action_AttackMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_AttackMove& operator=(CMsgBotWorldState_Action_AttackMove&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_AttackMove& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_AttackMove* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_AttackMove*>(
               &_CMsgBotWorldState_Action_AttackMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgBotWorldState_Action_AttackMove& a, CMsgBotWorldState_Action_AttackMove& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_AttackMove* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_AttackMove* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_AttackMove* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_AttackMove>(nullptr);
  }

  CMsgBotWorldState_Action_AttackMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_AttackMove>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_AttackMove& from);
  void MergeFrom(const CMsgBotWorldState_Action_AttackMove& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_AttackMove* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.AttackMove";
  }
  protected:
  explicit CMsgBotWorldState_Action_AttackMove(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kLocationFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required .CMsgBotWorldState.Vector location = 2;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.AttackMove)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::CMsgBotWorldState_Vector* location_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_AttackTarget PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.AttackTarget) */ {
 public:
  inline CMsgBotWorldState_Action_AttackTarget() : CMsgBotWorldState_Action_AttackTarget(nullptr) {}
  virtual ~CMsgBotWorldState_Action_AttackTarget();
  explicit constexpr CMsgBotWorldState_Action_AttackTarget(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_AttackTarget(const CMsgBotWorldState_Action_AttackTarget& from);
  CMsgBotWorldState_Action_AttackTarget(CMsgBotWorldState_Action_AttackTarget&& from) noexcept
    : CMsgBotWorldState_Action_AttackTarget() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_AttackTarget& operator=(const CMsgBotWorldState_Action_AttackTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_AttackTarget& operator=(CMsgBotWorldState_Action_AttackTarget&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_AttackTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_AttackTarget* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_AttackTarget*>(
               &_CMsgBotWorldState_Action_AttackTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgBotWorldState_Action_AttackTarget& a, CMsgBotWorldState_Action_AttackTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_AttackTarget* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_AttackTarget* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_AttackTarget* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_AttackTarget>(nullptr);
  }

  CMsgBotWorldState_Action_AttackTarget* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_AttackTarget>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_AttackTarget& from);
  void MergeFrom(const CMsgBotWorldState_Action_AttackTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_AttackTarget* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.AttackTarget";
  }
  protected:
  explicit CMsgBotWorldState_Action_AttackTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kTargetFieldNumber = 2,
    kOnceFieldNumber = 3,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 target = 2;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  ::PROTOBUF_NAMESPACE_ID::int32 target() const;
  void set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target() const;
  void _internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool once = 3;
  bool has_once() const;
  private:
  bool _internal_has_once() const;
  public:
  void clear_once();
  bool once() const;
  void set_once(bool value);
  private:
  bool _internal_once() const;
  void _internal_set_once(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.AttackTarget)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_;
  bool once_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_HoldLocation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.HoldLocation) */ {
 public:
  inline CMsgBotWorldState_Action_HoldLocation() : CMsgBotWorldState_Action_HoldLocation(nullptr) {}
  virtual ~CMsgBotWorldState_Action_HoldLocation();
  explicit constexpr CMsgBotWorldState_Action_HoldLocation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_HoldLocation(const CMsgBotWorldState_Action_HoldLocation& from);
  CMsgBotWorldState_Action_HoldLocation(CMsgBotWorldState_Action_HoldLocation&& from) noexcept
    : CMsgBotWorldState_Action_HoldLocation() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_HoldLocation& operator=(const CMsgBotWorldState_Action_HoldLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_HoldLocation& operator=(CMsgBotWorldState_Action_HoldLocation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_HoldLocation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_HoldLocation* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_HoldLocation*>(
               &_CMsgBotWorldState_Action_HoldLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgBotWorldState_Action_HoldLocation& a, CMsgBotWorldState_Action_HoldLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_HoldLocation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_HoldLocation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_HoldLocation* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_HoldLocation>(nullptr);
  }

  CMsgBotWorldState_Action_HoldLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_HoldLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_HoldLocation& from);
  void MergeFrom(const CMsgBotWorldState_Action_HoldLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_HoldLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.HoldLocation";
  }
  protected:
  explicit CMsgBotWorldState_Action_HoldLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.HoldLocation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Stop PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Stop) */ {
 public:
  inline CMsgBotWorldState_Action_Stop() : CMsgBotWorldState_Action_Stop(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Stop();
  explicit constexpr CMsgBotWorldState_Action_Stop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Stop(const CMsgBotWorldState_Action_Stop& from);
  CMsgBotWorldState_Action_Stop(CMsgBotWorldState_Action_Stop&& from) noexcept
    : CMsgBotWorldState_Action_Stop() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Stop& operator=(const CMsgBotWorldState_Action_Stop& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Stop& operator=(CMsgBotWorldState_Action_Stop&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Stop& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Stop* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Stop*>(
               &_CMsgBotWorldState_Action_Stop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgBotWorldState_Action_Stop& a, CMsgBotWorldState_Action_Stop& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Stop* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Stop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Stop* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Stop>(nullptr);
  }

  CMsgBotWorldState_Action_Stop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Stop>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Stop& from);
  void MergeFrom(const CMsgBotWorldState_Action_Stop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Stop* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Stop";
  }
  protected:
  explicit CMsgBotWorldState_Action_Stop(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Stop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_CastLocation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.CastLocation) */ {
 public:
  inline CMsgBotWorldState_Action_CastLocation() : CMsgBotWorldState_Action_CastLocation(nullptr) {}
  virtual ~CMsgBotWorldState_Action_CastLocation();
  explicit constexpr CMsgBotWorldState_Action_CastLocation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_CastLocation(const CMsgBotWorldState_Action_CastLocation& from);
  CMsgBotWorldState_Action_CastLocation(CMsgBotWorldState_Action_CastLocation&& from) noexcept
    : CMsgBotWorldState_Action_CastLocation() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_CastLocation& operator=(const CMsgBotWorldState_Action_CastLocation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_CastLocation& operator=(CMsgBotWorldState_Action_CastLocation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_CastLocation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_CastLocation* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_CastLocation*>(
               &_CMsgBotWorldState_Action_CastLocation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgBotWorldState_Action_CastLocation& a, CMsgBotWorldState_Action_CastLocation& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_CastLocation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_CastLocation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_CastLocation* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastLocation>(nullptr);
  }

  CMsgBotWorldState_Action_CastLocation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastLocation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_CastLocation& from);
  void MergeFrom(const CMsgBotWorldState_Action_CastLocation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_CastLocation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.CastLocation";
  }
  protected:
  explicit CMsgBotWorldState_Action_CastLocation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kLocationFieldNumber = 3,
    kAbilitySlotFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required .CMsgBotWorldState.Vector location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // required int32 abilitySlot = 2;
  bool has_abilityslot() const;
  private:
  bool _internal_has_abilityslot() const;
  public:
  void clear_abilityslot();
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot() const;
  void set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_abilityslot() const;
  void _internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.CastLocation)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_CastTarget PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.CastTarget) */ {
 public:
  inline CMsgBotWorldState_Action_CastTarget() : CMsgBotWorldState_Action_CastTarget(nullptr) {}
  virtual ~CMsgBotWorldState_Action_CastTarget();
  explicit constexpr CMsgBotWorldState_Action_CastTarget(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_CastTarget(const CMsgBotWorldState_Action_CastTarget& from);
  CMsgBotWorldState_Action_CastTarget(CMsgBotWorldState_Action_CastTarget&& from) noexcept
    : CMsgBotWorldState_Action_CastTarget() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_CastTarget& operator=(const CMsgBotWorldState_Action_CastTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_CastTarget& operator=(CMsgBotWorldState_Action_CastTarget&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_CastTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_CastTarget* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_CastTarget*>(
               &_CMsgBotWorldState_Action_CastTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgBotWorldState_Action_CastTarget& a, CMsgBotWorldState_Action_CastTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_CastTarget* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_CastTarget* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_CastTarget* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastTarget>(nullptr);
  }

  CMsgBotWorldState_Action_CastTarget* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastTarget>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_CastTarget& from);
  void MergeFrom(const CMsgBotWorldState_Action_CastTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_CastTarget* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.CastTarget";
  }
  protected:
  explicit CMsgBotWorldState_Action_CastTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kAbilitySlotFieldNumber = 2,
    kTargetFieldNumber = 3,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 abilitySlot = 2;
  bool has_abilityslot() const;
  private:
  bool _internal_has_abilityslot() const;
  public:
  void clear_abilityslot();
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot() const;
  void set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_abilityslot() const;
  void _internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 target = 3;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  ::PROTOBUF_NAMESPACE_ID::int32 target() const;
  void set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target() const;
  void _internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.CastTarget)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_CastTree PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.CastTree) */ {
 public:
  inline CMsgBotWorldState_Action_CastTree() : CMsgBotWorldState_Action_CastTree(nullptr) {}
  virtual ~CMsgBotWorldState_Action_CastTree();
  explicit constexpr CMsgBotWorldState_Action_CastTree(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_CastTree(const CMsgBotWorldState_Action_CastTree& from);
  CMsgBotWorldState_Action_CastTree(CMsgBotWorldState_Action_CastTree&& from) noexcept
    : CMsgBotWorldState_Action_CastTree() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_CastTree& operator=(const CMsgBotWorldState_Action_CastTree& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_CastTree& operator=(CMsgBotWorldState_Action_CastTree&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_CastTree& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_CastTree* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_CastTree*>(
               &_CMsgBotWorldState_Action_CastTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgBotWorldState_Action_CastTree& a, CMsgBotWorldState_Action_CastTree& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_CastTree* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_CastTree* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_CastTree* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastTree>(nullptr);
  }

  CMsgBotWorldState_Action_CastTree* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastTree>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_CastTree& from);
  void MergeFrom(const CMsgBotWorldState_Action_CastTree& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_CastTree* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.CastTree";
  }
  protected:
  explicit CMsgBotWorldState_Action_CastTree(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kAbilitySlotFieldNumber = 2,
    kTreeFieldNumber = 3,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 abilitySlot = 2;
  bool has_abilityslot() const;
  private:
  bool _internal_has_abilityslot() const;
  public:
  void clear_abilityslot();
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot() const;
  void set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_abilityslot() const;
  void _internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 tree = 3;
  bool has_tree() const;
  private:
  bool _internal_has_tree() const;
  public:
  void clear_tree();
  ::PROTOBUF_NAMESPACE_ID::int32 tree() const;
  void set_tree(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tree() const;
  void _internal_set_tree(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.CastTree)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot_;
  ::PROTOBUF_NAMESPACE_ID::int32 tree_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Cast PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Cast) */ {
 public:
  inline CMsgBotWorldState_Action_Cast() : CMsgBotWorldState_Action_Cast(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Cast();
  explicit constexpr CMsgBotWorldState_Action_Cast(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Cast(const CMsgBotWorldState_Action_Cast& from);
  CMsgBotWorldState_Action_Cast(CMsgBotWorldState_Action_Cast&& from) noexcept
    : CMsgBotWorldState_Action_Cast() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Cast& operator=(const CMsgBotWorldState_Action_Cast& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Cast& operator=(CMsgBotWorldState_Action_Cast&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Cast& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Cast* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Cast*>(
               &_CMsgBotWorldState_Action_Cast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgBotWorldState_Action_Cast& a, CMsgBotWorldState_Action_Cast& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Cast* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Cast* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Cast* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Cast>(nullptr);
  }

  CMsgBotWorldState_Action_Cast* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Cast>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Cast& from);
  void MergeFrom(const CMsgBotWorldState_Action_Cast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Cast* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Cast";
  }
  protected:
  explicit CMsgBotWorldState_Action_Cast(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kAbilitySlotFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 abilitySlot = 2;
  bool has_abilityslot() const;
  private:
  bool _internal_has_abilityslot() const;
  public:
  void clear_abilityslot();
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot() const;
  void set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_abilityslot() const;
  void _internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Cast)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_CastToggle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.CastToggle) */ {
 public:
  inline CMsgBotWorldState_Action_CastToggle() : CMsgBotWorldState_Action_CastToggle(nullptr) {}
  virtual ~CMsgBotWorldState_Action_CastToggle();
  explicit constexpr CMsgBotWorldState_Action_CastToggle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_CastToggle(const CMsgBotWorldState_Action_CastToggle& from);
  CMsgBotWorldState_Action_CastToggle(CMsgBotWorldState_Action_CastToggle&& from) noexcept
    : CMsgBotWorldState_Action_CastToggle() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_CastToggle& operator=(const CMsgBotWorldState_Action_CastToggle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_CastToggle& operator=(CMsgBotWorldState_Action_CastToggle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_CastToggle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_CastToggle* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_CastToggle*>(
               &_CMsgBotWorldState_Action_CastToggle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgBotWorldState_Action_CastToggle& a, CMsgBotWorldState_Action_CastToggle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_CastToggle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_CastToggle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_CastToggle* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastToggle>(nullptr);
  }

  CMsgBotWorldState_Action_CastToggle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_CastToggle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_CastToggle& from);
  void MergeFrom(const CMsgBotWorldState_Action_CastToggle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_CastToggle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.CastToggle";
  }
  protected:
  explicit CMsgBotWorldState_Action_CastToggle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kAbilitySlotFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 abilitySlot = 2;
  bool has_abilityslot() const;
  private:
  bool _internal_has_abilityslot() const;
  public:
  void clear_abilityslot();
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot() const;
  void set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_abilityslot() const;
  void _internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.CastToggle)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 abilityslot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_TrainAbility PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.TrainAbility) */ {
 public:
  inline CMsgBotWorldState_Action_TrainAbility() : CMsgBotWorldState_Action_TrainAbility(nullptr) {}
  virtual ~CMsgBotWorldState_Action_TrainAbility();
  explicit constexpr CMsgBotWorldState_Action_TrainAbility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_TrainAbility(const CMsgBotWorldState_Action_TrainAbility& from);
  CMsgBotWorldState_Action_TrainAbility(CMsgBotWorldState_Action_TrainAbility&& from) noexcept
    : CMsgBotWorldState_Action_TrainAbility() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_TrainAbility& operator=(const CMsgBotWorldState_Action_TrainAbility& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_TrainAbility& operator=(CMsgBotWorldState_Action_TrainAbility&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_TrainAbility& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_TrainAbility* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_TrainAbility*>(
               &_CMsgBotWorldState_Action_TrainAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgBotWorldState_Action_TrainAbility& a, CMsgBotWorldState_Action_TrainAbility& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_TrainAbility* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_TrainAbility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_TrainAbility* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_TrainAbility>(nullptr);
  }

  CMsgBotWorldState_Action_TrainAbility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_TrainAbility>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_TrainAbility& from);
  void MergeFrom(const CMsgBotWorldState_Action_TrainAbility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_TrainAbility* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.TrainAbility";
  }
  protected:
  explicit CMsgBotWorldState_Action_TrainAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityFieldNumber = 1,
    kLevelFieldNumber = 2,
    kUnitFieldNumber = 3,
  };
  // required string ability = 1;
  bool has_ability() const;
  private:
  bool _internal_has_ability() const;
  public:
  void clear_ability();
  const std::string& ability() const;
  void set_ability(const std::string& value);
  void set_ability(std::string&& value);
  void set_ability(const char* value);
  void set_ability(const char* value, size_t size);
  std::string* mutable_ability();
  std::string* release_ability();
  void set_allocated_ability(std::string* ability);
  private:
  const std::string& _internal_ability() const;
  void _internal_set_ability(const std::string& value);
  std::string* _internal_mutable_ability();
  public:

  // optional int32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 unit = 3;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.TrainAbility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr ability_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_DropItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.DropItem) */ {
 public:
  inline CMsgBotWorldState_Action_DropItem() : CMsgBotWorldState_Action_DropItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_DropItem();
  explicit constexpr CMsgBotWorldState_Action_DropItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_DropItem(const CMsgBotWorldState_Action_DropItem& from);
  CMsgBotWorldState_Action_DropItem(CMsgBotWorldState_Action_DropItem&& from) noexcept
    : CMsgBotWorldState_Action_DropItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_DropItem& operator=(const CMsgBotWorldState_Action_DropItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_DropItem& operator=(CMsgBotWorldState_Action_DropItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_DropItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_DropItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_DropItem*>(
               &_CMsgBotWorldState_Action_DropItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgBotWorldState_Action_DropItem& a, CMsgBotWorldState_Action_DropItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_DropItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_DropItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_DropItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_DropItem>(nullptr);
  }

  CMsgBotWorldState_Action_DropItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_DropItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_DropItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_DropItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_DropItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.DropItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_DropItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 3,
    kUnitFieldNumber = 1,
    kSlotFieldNumber = 2,
  };
  // optional .CMsgBotWorldState.Vector location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgBotWorldState_Vector& location() const;
  ::CMsgBotWorldState_Vector* release_location();
  ::CMsgBotWorldState_Vector* mutable_location();
  void set_allocated_location(::CMsgBotWorldState_Vector* location);
  private:
  const ::CMsgBotWorldState_Vector& _internal_location() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgBotWorldState_Vector* location);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_location();

  // optional int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot = 2;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.DropItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* location_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_PickUpItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.PickUpItem) */ {
 public:
  inline CMsgBotWorldState_Action_PickUpItem() : CMsgBotWorldState_Action_PickUpItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_PickUpItem();
  explicit constexpr CMsgBotWorldState_Action_PickUpItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_PickUpItem(const CMsgBotWorldState_Action_PickUpItem& from);
  CMsgBotWorldState_Action_PickUpItem(CMsgBotWorldState_Action_PickUpItem&& from) noexcept
    : CMsgBotWorldState_Action_PickUpItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_PickUpItem& operator=(const CMsgBotWorldState_Action_PickUpItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_PickUpItem& operator=(CMsgBotWorldState_Action_PickUpItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_PickUpItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_PickUpItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_PickUpItem*>(
               &_CMsgBotWorldState_Action_PickUpItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgBotWorldState_Action_PickUpItem& a, CMsgBotWorldState_Action_PickUpItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_PickUpItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_PickUpItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_PickUpItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PickUpItem>(nullptr);
  }

  CMsgBotWorldState_Action_PickUpItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PickUpItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_PickUpItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_PickUpItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_PickUpItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.PickUpItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_PickUpItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
    kItemIdFieldNumber = 2,
  };
  // optional int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 itemId = 2;
  bool has_itemid() const;
  private:
  bool _internal_has_itemid() const;
  public:
  void clear_itemid();
  ::PROTOBUF_NAMESPACE_ID::int32 itemid() const;
  void set_itemid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_itemid() const;
  void _internal_set_itemid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.PickUpItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  ::PROTOBUF_NAMESPACE_ID::int32 itemid_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_PurchaseItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.PurchaseItem) */ {
 public:
  inline CMsgBotWorldState_Action_PurchaseItem() : CMsgBotWorldState_Action_PurchaseItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_PurchaseItem();
  explicit constexpr CMsgBotWorldState_Action_PurchaseItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_PurchaseItem(const CMsgBotWorldState_Action_PurchaseItem& from);
  CMsgBotWorldState_Action_PurchaseItem(CMsgBotWorldState_Action_PurchaseItem&& from) noexcept
    : CMsgBotWorldState_Action_PurchaseItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_PurchaseItem& operator=(const CMsgBotWorldState_Action_PurchaseItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_PurchaseItem& operator=(CMsgBotWorldState_Action_PurchaseItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_PurchaseItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_PurchaseItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_PurchaseItem*>(
               &_CMsgBotWorldState_Action_PurchaseItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CMsgBotWorldState_Action_PurchaseItem& a, CMsgBotWorldState_Action_PurchaseItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_PurchaseItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_PurchaseItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_PurchaseItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PurchaseItem>(nullptr);
  }

  CMsgBotWorldState_Action_PurchaseItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PurchaseItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_PurchaseItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_PurchaseItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_PurchaseItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.PurchaseItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_PurchaseItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemNameFieldNumber = 2,
    kItemFieldNumber = 1,
    kUnitFieldNumber = 3,
  };
  // optional string item_name = 2;
  bool has_item_name() const;
  private:
  bool _internal_has_item_name() const;
  public:
  void clear_item_name();
  const std::string& item_name() const;
  void set_item_name(const std::string& value);
  void set_item_name(std::string&& value);
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  std::string* mutable_item_name();
  std::string* release_item_name();
  void set_allocated_item_name(std::string* item_name);
  private:
  const std::string& _internal_item_name() const;
  void _internal_set_item_name(const std::string& value);
  std::string* _internal_mutable_item_name();
  public:

  // optional int32 item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  ::PROTOBUF_NAMESPACE_ID::int32 item() const;
  void set_item(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item() const;
  void _internal_set_item(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 unit = 3;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.PurchaseItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_SellItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.SellItem) */ {
 public:
  inline CMsgBotWorldState_Action_SellItem() : CMsgBotWorldState_Action_SellItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_SellItem();
  explicit constexpr CMsgBotWorldState_Action_SellItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_SellItem(const CMsgBotWorldState_Action_SellItem& from);
  CMsgBotWorldState_Action_SellItem(CMsgBotWorldState_Action_SellItem&& from) noexcept
    : CMsgBotWorldState_Action_SellItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_SellItem& operator=(const CMsgBotWorldState_Action_SellItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_SellItem& operator=(CMsgBotWorldState_Action_SellItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_SellItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_SellItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_SellItem*>(
               &_CMsgBotWorldState_Action_SellItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CMsgBotWorldState_Action_SellItem& a, CMsgBotWorldState_Action_SellItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_SellItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_SellItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_SellItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SellItem>(nullptr);
  }

  CMsgBotWorldState_Action_SellItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SellItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_SellItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_SellItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_SellItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.SellItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_SellItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemFieldNumber = 1,
    kSlotFieldNumber = 2,
    kUnitFieldNumber = 3,
  };
  // optional int32 item = 1;
  bool has_item() const;
  private:
  bool _internal_has_item() const;
  public:
  void clear_item();
  ::PROTOBUF_NAMESPACE_ID::int32 item() const;
  void set_item(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item() const;
  void _internal_set_item(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot = 2;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 unit = 3;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.SellItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_SwapItems PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.SwapItems) */ {
 public:
  inline CMsgBotWorldState_Action_SwapItems() : CMsgBotWorldState_Action_SwapItems(nullptr) {}
  virtual ~CMsgBotWorldState_Action_SwapItems();
  explicit constexpr CMsgBotWorldState_Action_SwapItems(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_SwapItems(const CMsgBotWorldState_Action_SwapItems& from);
  CMsgBotWorldState_Action_SwapItems(CMsgBotWorldState_Action_SwapItems&& from) noexcept
    : CMsgBotWorldState_Action_SwapItems() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_SwapItems& operator=(const CMsgBotWorldState_Action_SwapItems& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_SwapItems& operator=(CMsgBotWorldState_Action_SwapItems&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_SwapItems& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_SwapItems* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_SwapItems*>(
               &_CMsgBotWorldState_Action_SwapItems_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CMsgBotWorldState_Action_SwapItems& a, CMsgBotWorldState_Action_SwapItems& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_SwapItems* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_SwapItems* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_SwapItems* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SwapItems>(nullptr);
  }

  CMsgBotWorldState_Action_SwapItems* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SwapItems>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_SwapItems& from);
  void MergeFrom(const CMsgBotWorldState_Action_SwapItems& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_SwapItems* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.SwapItems";
  }
  protected:
  explicit CMsgBotWorldState_Action_SwapItems(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotAFieldNumber = 1,
    kSlotBFieldNumber = 2,
    kUnitFieldNumber = 3,
  };
  // required int32 slot_a = 1;
  bool has_slot_a() const;
  private:
  bool _internal_has_slot_a() const;
  public:
  void clear_slot_a();
  ::PROTOBUF_NAMESPACE_ID::int32 slot_a() const;
  void set_slot_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot_a() const;
  void _internal_set_slot_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 slot_b = 2;
  bool has_slot_b() const;
  private:
  bool _internal_has_slot_b() const;
  public:
  void clear_slot_b();
  ::PROTOBUF_NAMESPACE_ID::int32 slot_b() const;
  void set_slot_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot_b() const;
  void _internal_set_slot_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 unit = 3;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.SwapItems)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_a_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_b_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_DisassembleItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.DisassembleItem) */ {
 public:
  inline CMsgBotWorldState_Action_DisassembleItem() : CMsgBotWorldState_Action_DisassembleItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_DisassembleItem();
  explicit constexpr CMsgBotWorldState_Action_DisassembleItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_DisassembleItem(const CMsgBotWorldState_Action_DisassembleItem& from);
  CMsgBotWorldState_Action_DisassembleItem(CMsgBotWorldState_Action_DisassembleItem&& from) noexcept
    : CMsgBotWorldState_Action_DisassembleItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_DisassembleItem& operator=(const CMsgBotWorldState_Action_DisassembleItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_DisassembleItem& operator=(CMsgBotWorldState_Action_DisassembleItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_DisassembleItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_DisassembleItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_DisassembleItem*>(
               &_CMsgBotWorldState_Action_DisassembleItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CMsgBotWorldState_Action_DisassembleItem& a, CMsgBotWorldState_Action_DisassembleItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_DisassembleItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_DisassembleItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_DisassembleItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_DisassembleItem>(nullptr);
  }

  CMsgBotWorldState_Action_DisassembleItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_DisassembleItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_DisassembleItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_DisassembleItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_DisassembleItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.DisassembleItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_DisassembleItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotFieldNumber = 1,
  };
  // required int32 slot = 1;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.DisassembleItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_SetCombineLockItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.SetCombineLockItem) */ {
 public:
  inline CMsgBotWorldState_Action_SetCombineLockItem() : CMsgBotWorldState_Action_SetCombineLockItem(nullptr) {}
  virtual ~CMsgBotWorldState_Action_SetCombineLockItem();
  explicit constexpr CMsgBotWorldState_Action_SetCombineLockItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_SetCombineLockItem(const CMsgBotWorldState_Action_SetCombineLockItem& from);
  CMsgBotWorldState_Action_SetCombineLockItem(CMsgBotWorldState_Action_SetCombineLockItem&& from) noexcept
    : CMsgBotWorldState_Action_SetCombineLockItem() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_SetCombineLockItem& operator=(const CMsgBotWorldState_Action_SetCombineLockItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_SetCombineLockItem& operator=(CMsgBotWorldState_Action_SetCombineLockItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_SetCombineLockItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_SetCombineLockItem* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_SetCombineLockItem*>(
               &_CMsgBotWorldState_Action_SetCombineLockItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CMsgBotWorldState_Action_SetCombineLockItem& a, CMsgBotWorldState_Action_SetCombineLockItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_SetCombineLockItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_SetCombineLockItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_SetCombineLockItem* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SetCombineLockItem>(nullptr);
  }

  CMsgBotWorldState_Action_SetCombineLockItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SetCombineLockItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_SetCombineLockItem& from);
  void MergeFrom(const CMsgBotWorldState_Action_SetCombineLockItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_SetCombineLockItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.SetCombineLockItem";
  }
  protected:
  explicit CMsgBotWorldState_Action_SetCombineLockItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // required int32 slot = 1;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required bool value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  bool value() const;
  void set_value(bool value);
  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.SetCombineLockItem)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  bool value_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_PickupRune PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.PickupRune) */ {
 public:
  inline CMsgBotWorldState_Action_PickupRune() : CMsgBotWorldState_Action_PickupRune(nullptr) {}
  virtual ~CMsgBotWorldState_Action_PickupRune();
  explicit constexpr CMsgBotWorldState_Action_PickupRune(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_PickupRune(const CMsgBotWorldState_Action_PickupRune& from);
  CMsgBotWorldState_Action_PickupRune(CMsgBotWorldState_Action_PickupRune&& from) noexcept
    : CMsgBotWorldState_Action_PickupRune() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_PickupRune& operator=(const CMsgBotWorldState_Action_PickupRune& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_PickupRune& operator=(CMsgBotWorldState_Action_PickupRune&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_PickupRune& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_PickupRune* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_PickupRune*>(
               &_CMsgBotWorldState_Action_PickupRune_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CMsgBotWorldState_Action_PickupRune& a, CMsgBotWorldState_Action_PickupRune& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_PickupRune* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_PickupRune* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_PickupRune* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PickupRune>(nullptr);
  }

  CMsgBotWorldState_Action_PickupRune* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_PickupRune>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_PickupRune& from);
  void MergeFrom(const CMsgBotWorldState_Action_PickupRune& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_PickupRune* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.PickupRune";
  }
  protected:
  explicit CMsgBotWorldState_Action_PickupRune(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kRuneFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 rune = 2;
  bool has_rune() const;
  private:
  bool _internal_has_rune() const;
  public:
  void clear_rune();
  ::PROTOBUF_NAMESPACE_ID::int32 rune() const;
  void set_rune(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rune() const;
  void _internal_set_rune(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.PickupRune)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 rune_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Chat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Chat) */ {
 public:
  inline CMsgBotWorldState_Action_Chat() : CMsgBotWorldState_Action_Chat(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Chat();
  explicit constexpr CMsgBotWorldState_Action_Chat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Chat(const CMsgBotWorldState_Action_Chat& from);
  CMsgBotWorldState_Action_Chat(CMsgBotWorldState_Action_Chat&& from) noexcept
    : CMsgBotWorldState_Action_Chat() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Chat& operator=(const CMsgBotWorldState_Action_Chat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Chat& operator=(CMsgBotWorldState_Action_Chat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Chat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Chat* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Chat*>(
               &_CMsgBotWorldState_Action_Chat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CMsgBotWorldState_Action_Chat& a, CMsgBotWorldState_Action_Chat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Chat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Chat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Chat* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Chat>(nullptr);
  }

  CMsgBotWorldState_Action_Chat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Chat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Chat& from);
  void MergeFrom(const CMsgBotWorldState_Action_Chat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Chat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Chat";
  }
  protected:
  explicit CMsgBotWorldState_Action_Chat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
    kToAllchatFieldNumber = 2,
  };
  // required string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // required bool to_allchat = 2;
  bool has_to_allchat() const;
  private:
  bool _internal_has_to_allchat() const;
  public:
  void clear_to_allchat();
  bool to_allchat() const;
  void set_to_allchat(bool value);
  private:
  bool _internal_to_allchat() const;
  void _internal_set_to_allchat(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Chat)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  bool to_allchat_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_UseShrine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.UseShrine) */ {
 public:
  inline CMsgBotWorldState_Action_UseShrine() : CMsgBotWorldState_Action_UseShrine(nullptr) {}
  virtual ~CMsgBotWorldState_Action_UseShrine();
  explicit constexpr CMsgBotWorldState_Action_UseShrine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_UseShrine(const CMsgBotWorldState_Action_UseShrine& from);
  CMsgBotWorldState_Action_UseShrine(CMsgBotWorldState_Action_UseShrine&& from) noexcept
    : CMsgBotWorldState_Action_UseShrine() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_UseShrine& operator=(const CMsgBotWorldState_Action_UseShrine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_UseShrine& operator=(CMsgBotWorldState_Action_UseShrine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_UseShrine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_UseShrine* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_UseShrine*>(
               &_CMsgBotWorldState_Action_UseShrine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CMsgBotWorldState_Action_UseShrine& a, CMsgBotWorldState_Action_UseShrine& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_UseShrine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_UseShrine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_UseShrine* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_UseShrine>(nullptr);
  }

  CMsgBotWorldState_Action_UseShrine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_UseShrine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_UseShrine& from);
  void MergeFrom(const CMsgBotWorldState_Action_UseShrine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_UseShrine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.UseShrine";
  }
  protected:
  explicit CMsgBotWorldState_Action_UseShrine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 1,
    kShrineFieldNumber = 2,
  };
  // repeated int32 units = 1;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // required int32 shrine = 2;
  bool has_shrine() const;
  private:
  bool _internal_has_shrine() const;
  public:
  void clear_shrine();
  ::PROTOBUF_NAMESPACE_ID::int32 shrine() const;
  void set_shrine(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shrine() const;
  void _internal_set_shrine(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.UseShrine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::PROTOBUF_NAMESPACE_ID::int32 shrine_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Courier PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Courier) */ {
 public:
  inline CMsgBotWorldState_Action_Courier() : CMsgBotWorldState_Action_Courier(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Courier();
  explicit constexpr CMsgBotWorldState_Action_Courier(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Courier(const CMsgBotWorldState_Action_Courier& from);
  CMsgBotWorldState_Action_Courier(CMsgBotWorldState_Action_Courier&& from) noexcept
    : CMsgBotWorldState_Action_Courier() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Courier& operator=(const CMsgBotWorldState_Action_Courier& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Courier& operator=(CMsgBotWorldState_Action_Courier&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Courier& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Courier* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Courier*>(
               &_CMsgBotWorldState_Action_Courier_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CMsgBotWorldState_Action_Courier& a, CMsgBotWorldState_Action_Courier& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Courier* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Courier* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Courier* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Courier>(nullptr);
  }

  CMsgBotWorldState_Action_Courier* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Courier>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Courier& from);
  void MergeFrom(const CMsgBotWorldState_Action_Courier& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Courier* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Courier";
  }
  protected:
  explicit CMsgBotWorldState_Action_Courier(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
    kCourierFieldNumber = 2,
    kActionFieldNumber = 3,
  };
  // required int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 courier = 2;
  bool has_courier() const;
  private:
  bool _internal_has_courier() const;
  public:
  void clear_courier();
  ::PROTOBUF_NAMESPACE_ID::int32 courier() const;
  void set_courier(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_courier() const;
  void _internal_set_courier(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 action = 3;
  bool has_action() const;
  private:
  bool _internal_has_action() const;
  public:
  void clear_action();
  ::PROTOBUF_NAMESPACE_ID::int32 action() const;
  void set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_action() const;
  void _internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Courier)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  ::PROTOBUF_NAMESPACE_ID::int32 courier_;
  ::PROTOBUF_NAMESPACE_ID::int32 action_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_GetActualIncomingDamage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.GetActualIncomingDamage) */ {
 public:
  inline CMsgBotWorldState_Action_GetActualIncomingDamage() : CMsgBotWorldState_Action_GetActualIncomingDamage(nullptr) {}
  virtual ~CMsgBotWorldState_Action_GetActualIncomingDamage();
  explicit constexpr CMsgBotWorldState_Action_GetActualIncomingDamage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_GetActualIncomingDamage(const CMsgBotWorldState_Action_GetActualIncomingDamage& from);
  CMsgBotWorldState_Action_GetActualIncomingDamage(CMsgBotWorldState_Action_GetActualIncomingDamage&& from) noexcept
    : CMsgBotWorldState_Action_GetActualIncomingDamage() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_GetActualIncomingDamage& operator=(const CMsgBotWorldState_Action_GetActualIncomingDamage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_GetActualIncomingDamage& operator=(CMsgBotWorldState_Action_GetActualIncomingDamage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_GetActualIncomingDamage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_GetActualIncomingDamage* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_GetActualIncomingDamage*>(
               &_CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CMsgBotWorldState_Action_GetActualIncomingDamage& a, CMsgBotWorldState_Action_GetActualIncomingDamage& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_GetActualIncomingDamage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_GetActualIncomingDamage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_GetActualIncomingDamage* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_GetActualIncomingDamage>(nullptr);
  }

  CMsgBotWorldState_Action_GetActualIncomingDamage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_GetActualIncomingDamage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_GetActualIncomingDamage& from);
  void MergeFrom(const CMsgBotWorldState_Action_GetActualIncomingDamage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_GetActualIncomingDamage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.GetActualIncomingDamage";
  }
  protected:
  explicit CMsgBotWorldState_Action_GetActualIncomingDamage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
    kNDamageFieldNumber = 2,
    kNDamageTypeFieldNumber = 3,
  };
  // required int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required float nDamage = 2;
  bool has_ndamage() const;
  private:
  bool _internal_has_ndamage() const;
  public:
  void clear_ndamage();
  float ndamage() const;
  void set_ndamage(float value);
  private:
  float _internal_ndamage() const;
  void _internal_set_ndamage(float value);
  public:

  // required int32 nDamageType = 3;
  bool has_ndamagetype() const;
  private:
  bool _internal_has_ndamagetype() const;
  public:
  void clear_ndamagetype();
  ::PROTOBUF_NAMESPACE_ID::int32 ndamagetype() const;
  void set_ndamagetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ndamagetype() const;
  void _internal_set_ndamagetype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.GetActualIncomingDamage)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  float ndamage_;
  ::PROTOBUF_NAMESPACE_ID::int32 ndamagetype_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_GetEstimatedDamageToTarget PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.GetEstimatedDamageToTarget) */ {
 public:
  inline CMsgBotWorldState_Action_GetEstimatedDamageToTarget() : CMsgBotWorldState_Action_GetEstimatedDamageToTarget(nullptr) {}
  virtual ~CMsgBotWorldState_Action_GetEstimatedDamageToTarget();
  explicit constexpr CMsgBotWorldState_Action_GetEstimatedDamageToTarget(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_GetEstimatedDamageToTarget(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from);
  CMsgBotWorldState_Action_GetEstimatedDamageToTarget(CMsgBotWorldState_Action_GetEstimatedDamageToTarget&& from) noexcept
    : CMsgBotWorldState_Action_GetEstimatedDamageToTarget() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_GetEstimatedDamageToTarget& operator=(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_GetEstimatedDamageToTarget& operator=(CMsgBotWorldState_Action_GetEstimatedDamageToTarget&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_GetEstimatedDamageToTarget* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_GetEstimatedDamageToTarget*>(
               &_CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget& a, CMsgBotWorldState_Action_GetEstimatedDamageToTarget& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_GetEstimatedDamageToTarget* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_GetEstimatedDamageToTarget>(nullptr);
  }

  CMsgBotWorldState_Action_GetEstimatedDamageToTarget* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_GetEstimatedDamageToTarget>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from);
  void MergeFrom(const CMsgBotWorldState_Action_GetEstimatedDamageToTarget& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_GetEstimatedDamageToTarget* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.GetEstimatedDamageToTarget";
  }
  protected:
  explicit CMsgBotWorldState_Action_GetEstimatedDamageToTarget(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
    kBCurrentlyAvailableFieldNumber = 2,
    kHTargetFieldNumber = 3,
    kFDurationFieldNumber = 4,
    kNDamageTypesFieldNumber = 5,
  };
  // required int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required bool bCurrentlyAvailable = 2;
  bool has_bcurrentlyavailable() const;
  private:
  bool _internal_has_bcurrentlyavailable() const;
  public:
  void clear_bcurrentlyavailable();
  bool bcurrentlyavailable() const;
  void set_bcurrentlyavailable(bool value);
  private:
  bool _internal_bcurrentlyavailable() const;
  void _internal_set_bcurrentlyavailable(bool value);
  public:

  // required int32 hTarget = 3;
  bool has_htarget() const;
  private:
  bool _internal_has_htarget() const;
  public:
  void clear_htarget();
  ::PROTOBUF_NAMESPACE_ID::int32 htarget() const;
  void set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_htarget() const;
  void _internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required float fDuration = 4;
  bool has_fduration() const;
  private:
  bool _internal_has_fduration() const;
  public:
  void clear_fduration();
  float fduration() const;
  void set_fduration(float value);
  private:
  float _internal_fduration() const;
  void _internal_set_fduration(float value);
  public:

  // required int32 nDamageTypes = 5;
  bool has_ndamagetypes() const;
  private:
  bool _internal_has_ndamagetypes() const;
  public:
  void clear_ndamagetypes();
  ::PROTOBUF_NAMESPACE_ID::int32 ndamagetypes() const;
  void set_ndamagetypes(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ndamagetypes() const;
  void _internal_set_ndamagetypes(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.GetEstimatedDamageToTarget)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  bool bcurrentlyavailable_;
  ::PROTOBUF_NAMESPACE_ID::int32 htarget_;
  float fduration_;
  ::PROTOBUF_NAMESPACE_ID::int32 ndamagetypes_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Glyph PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Glyph) */ {
 public:
  inline CMsgBotWorldState_Action_Glyph() : CMsgBotWorldState_Action_Glyph(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Glyph();
  explicit constexpr CMsgBotWorldState_Action_Glyph(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Glyph(const CMsgBotWorldState_Action_Glyph& from);
  CMsgBotWorldState_Action_Glyph(CMsgBotWorldState_Action_Glyph&& from) noexcept
    : CMsgBotWorldState_Action_Glyph() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Glyph& operator=(const CMsgBotWorldState_Action_Glyph& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Glyph& operator=(CMsgBotWorldState_Action_Glyph&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Glyph& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Glyph* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Glyph*>(
               &_CMsgBotWorldState_Action_Glyph_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CMsgBotWorldState_Action_Glyph& a, CMsgBotWorldState_Action_Glyph& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Glyph* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Glyph* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Glyph* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Glyph>(nullptr);
  }

  CMsgBotWorldState_Action_Glyph* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Glyph>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Glyph& from);
  void MergeFrom(const CMsgBotWorldState_Action_Glyph& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Glyph* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Glyph";
  }
  protected:
  explicit CMsgBotWorldState_Action_Glyph(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
  };
  // required int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Glyph)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_SoftReset PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.SoftReset) */ {
 public:
  inline CMsgBotWorldState_Action_SoftReset() : CMsgBotWorldState_Action_SoftReset(nullptr) {}
  virtual ~CMsgBotWorldState_Action_SoftReset();
  explicit constexpr CMsgBotWorldState_Action_SoftReset(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_SoftReset(const CMsgBotWorldState_Action_SoftReset& from);
  CMsgBotWorldState_Action_SoftReset(CMsgBotWorldState_Action_SoftReset&& from) noexcept
    : CMsgBotWorldState_Action_SoftReset() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_SoftReset& operator=(const CMsgBotWorldState_Action_SoftReset& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_SoftReset& operator=(CMsgBotWorldState_Action_SoftReset&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_SoftReset& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_SoftReset* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_SoftReset*>(
               &_CMsgBotWorldState_Action_SoftReset_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CMsgBotWorldState_Action_SoftReset& a, CMsgBotWorldState_Action_SoftReset& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_SoftReset* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_SoftReset* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_SoftReset* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SoftReset>(nullptr);
  }

  CMsgBotWorldState_Action_SoftReset* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_SoftReset>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_SoftReset& from);
  void MergeFrom(const CMsgBotWorldState_Action_SoftReset& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_SoftReset* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.SoftReset";
  }
  protected:
  explicit CMsgBotWorldState_Action_SoftReset(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinigameConfigFieldNumber = 1,
    kSnapshotDataFieldNumber = 2,
  };
  // optional string minigameConfig = 1;
  bool has_minigameconfig() const;
  private:
  bool _internal_has_minigameconfig() const;
  public:
  void clear_minigameconfig();
  const std::string& minigameconfig() const;
  void set_minigameconfig(const std::string& value);
  void set_minigameconfig(std::string&& value);
  void set_minigameconfig(const char* value);
  void set_minigameconfig(const char* value, size_t size);
  std::string* mutable_minigameconfig();
  std::string* release_minigameconfig();
  void set_allocated_minigameconfig(std::string* minigameconfig);
  private:
  const std::string& _internal_minigameconfig() const;
  void _internal_set_minigameconfig(const std::string& value);
  std::string* _internal_mutable_minigameconfig();
  public:

  // optional string snapshotData = 2;
  bool has_snapshotdata() const;
  private:
  bool _internal_has_snapshotdata() const;
  public:
  void clear_snapshotdata();
  const std::string& snapshotdata() const;
  void set_snapshotdata(const std::string& value);
  void set_snapshotdata(std::string&& value);
  void set_snapshotdata(const char* value);
  void set_snapshotdata(const char* value, size_t size);
  std::string* mutable_snapshotdata();
  std::string* release_snapshotdata();
  void set_allocated_snapshotdata(std::string* snapshotdata);
  private:
  const std::string& _internal_snapshotdata() const;
  void _internal_set_snapshotdata(const std::string& value);
  std::string* _internal_mutable_snapshotdata();
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.SoftReset)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr minigameconfig_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr snapshotdata_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_Buyback PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.Buyback) */ {
 public:
  inline CMsgBotWorldState_Action_Buyback() : CMsgBotWorldState_Action_Buyback(nullptr) {}
  virtual ~CMsgBotWorldState_Action_Buyback();
  explicit constexpr CMsgBotWorldState_Action_Buyback(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_Buyback(const CMsgBotWorldState_Action_Buyback& from);
  CMsgBotWorldState_Action_Buyback(CMsgBotWorldState_Action_Buyback&& from) noexcept
    : CMsgBotWorldState_Action_Buyback() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_Buyback& operator=(const CMsgBotWorldState_Action_Buyback& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_Buyback& operator=(CMsgBotWorldState_Action_Buyback&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_Buyback& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_Buyback* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_Buyback*>(
               &_CMsgBotWorldState_Action_Buyback_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CMsgBotWorldState_Action_Buyback& a, CMsgBotWorldState_Action_Buyback& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_Buyback* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_Buyback* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_Buyback* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Buyback>(nullptr);
  }

  CMsgBotWorldState_Action_Buyback* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_Buyback>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_Buyback& from);
  void MergeFrom(const CMsgBotWorldState_Action_Buyback& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_Buyback* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.Buyback";
  }
  protected:
  explicit CMsgBotWorldState_Action_Buyback(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitFieldNumber = 1,
  };
  // required int32 unit = 1;
  bool has_unit() const;
  private:
  bool _internal_has_unit() const;
  public:
  void clear_unit();
  ::PROTOBUF_NAMESPACE_ID::int32 unit() const;
  void set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit() const;
  void _internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.Buyback)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawText PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawText) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawText() : CMsgBotWorldState_Action_ScriptingDebugDrawText(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawText();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawText(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawText(CMsgBotWorldState_Action_ScriptingDebugDrawText&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawText() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawText& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawText& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawText&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawText* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawText*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawText& a, CMsgBotWorldState_Action_ScriptingDebugDrawText& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawText* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawText* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawText>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawText>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawText";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawText(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 2,
    kOriginFieldNumber = 1,
    kBViewCheckFieldNumber = 3,
    kDurationFieldNumber = 4,
  };
  // required string text = 2;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // required .CMsgBotWorldState.Vector origin = 1;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgBotWorldState_Vector& origin() const;
  ::CMsgBotWorldState_Vector* release_origin();
  ::CMsgBotWorldState_Vector* mutable_origin();
  void set_allocated_origin(::CMsgBotWorldState_Vector* origin);
  private:
  const ::CMsgBotWorldState_Vector& _internal_origin() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgBotWorldState_Vector* origin);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_origin();

  // required bool bViewCheck = 3;
  bool has_bviewcheck() const;
  private:
  bool _internal_has_bviewcheck() const;
  public:
  void clear_bviewcheck();
  bool bviewcheck() const;
  void set_bviewcheck(bool value);
  private:
  bool _internal_bviewcheck() const;
  void _internal_set_bviewcheck(bool value);
  public:

  // required float duration = 4;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawText)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::CMsgBotWorldState_Vector* origin_;
  bool bviewcheck_;
  float duration_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawLine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawLine) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawLine() : CMsgBotWorldState_Action_ScriptingDebugDrawLine(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawLine();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawLine(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawLine(CMsgBotWorldState_Action_ScriptingDebugDrawLine&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawLine() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawLine& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawLine& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawLine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawLine* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawLine*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawLine& a, CMsgBotWorldState_Action_ScriptingDebugDrawLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawLine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawLine* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawLine>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawLine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawLine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawLine";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawLine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 1,
    kTargetFieldNumber = 2,
    kRFieldNumber = 3,
    kGFieldNumber = 4,
    kBFieldNumber = 5,
    kZtestFieldNumber = 6,
    kDurationFieldNumber = 7,
  };
  // required .CMsgBotWorldState.Vector origin = 1;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgBotWorldState_Vector& origin() const;
  ::CMsgBotWorldState_Vector* release_origin();
  ::CMsgBotWorldState_Vector* mutable_origin();
  void set_allocated_origin(::CMsgBotWorldState_Vector* origin);
  private:
  const ::CMsgBotWorldState_Vector& _internal_origin() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgBotWorldState_Vector* origin);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_origin();

  // required .CMsgBotWorldState.Vector target = 2;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const ::CMsgBotWorldState_Vector& target() const;
  ::CMsgBotWorldState_Vector* release_target();
  ::CMsgBotWorldState_Vector* mutable_target();
  void set_allocated_target(::CMsgBotWorldState_Vector* target);
  private:
  const ::CMsgBotWorldState_Vector& _internal_target() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_target();
  public:
  void unsafe_arena_set_allocated_target(
      ::CMsgBotWorldState_Vector* target);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_target();

  // required int32 r = 3;
  bool has_r() const;
  private:
  bool _internal_has_r() const;
  public:
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 g = 4;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 b = 5;
  bool has_b() const;
  private:
  bool _internal_has_b() const;
  public:
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required bool ztest = 6;
  bool has_ztest() const;
  private:
  bool _internal_has_ztest() const;
  public:
  void clear_ztest();
  bool ztest() const;
  void set_ztest(bool value);
  private:
  bool _internal_ztest() const;
  void _internal_set_ztest(bool value);
  public:

  // required float duration = 7;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawLine)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* origin_;
  ::CMsgBotWorldState_Vector* target_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  bool ztest_;
  float duration_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawScreenText PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawScreenText() : CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawScreenText();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawScreenText() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& a, CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawScreenText>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawScreenText>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawScreenText";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawScreenText(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 4,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kLineOffsetFieldNumber = 3,
    kRFieldNumber = 5,
    kGFieldNumber = 6,
    kBFieldNumber = 7,
    kAFieldNumber = 8,
    kDurationFieldNumber = 9,
  };
  // required string text = 4;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // required float x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // required float y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // required int32 lineOffset = 3;
  bool has_lineoffset() const;
  private:
  bool _internal_has_lineoffset() const;
  public:
  void clear_lineoffset();
  ::PROTOBUF_NAMESPACE_ID::int32 lineoffset() const;
  void set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lineoffset() const;
  void _internal_set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 r = 5;
  bool has_r() const;
  private:
  bool _internal_has_r() const;
  public:
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 g = 6;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 b = 7;
  bool has_b() const;
  private:
  bool _internal_has_b() const;
  public:
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 a = 8;
  bool has_a() const;
  private:
  bool _internal_has_a() const;
  public:
  void clear_a();
  ::PROTOBUF_NAMESPACE_ID::int32 a() const;
  void set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_a() const;
  void _internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required float duration = 9;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  float x_;
  float y_;
  ::PROTOBUF_NAMESPACE_ID::int32 lineoffset_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  ::PROTOBUF_NAMESPACE_ID::int32 a_;
  float duration_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty() : CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from);
  CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& operator=(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& operator=(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty*>(
               &_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& a, CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextFieldNumber = 4,
    kFontFieldNumber = 10,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kLineOffsetFieldNumber = 3,
    kRFieldNumber = 5,
    kGFieldNumber = 6,
    kBFieldNumber = 7,
    kAFieldNumber = 8,
    kDurationFieldNumber = 9,
    kSizeFieldNumber = 11,
    kBBoldFieldNumber = 12,
  };
  // required string text = 4;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // required string font = 10;
  bool has_font() const;
  private:
  bool _internal_has_font() const;
  public:
  void clear_font();
  const std::string& font() const;
  void set_font(const std::string& value);
  void set_font(std::string&& value);
  void set_font(const char* value);
  void set_font(const char* value, size_t size);
  std::string* mutable_font();
  std::string* release_font();
  void set_allocated_font(std::string* font);
  private:
  const std::string& _internal_font() const;
  void _internal_set_font(const std::string& value);
  std::string* _internal_mutable_font();
  public:

  // required float x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // required float y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // required int32 lineOffset = 3;
  bool has_lineoffset() const;
  private:
  bool _internal_has_lineoffset() const;
  public:
  void clear_lineoffset();
  ::PROTOBUF_NAMESPACE_ID::int32 lineoffset() const;
  void set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lineoffset() const;
  void _internal_set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 r = 5;
  bool has_r() const;
  private:
  bool _internal_has_r() const;
  public:
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 g = 6;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 b = 7;
  bool has_b() const;
  private:
  bool _internal_has_b() const;
  public:
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 a = 8;
  bool has_a() const;
  private:
  bool _internal_has_a() const;
  public:
  void clear_a();
  ::PROTOBUF_NAMESPACE_ID::int32 a() const;
  void set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_a() const;
  void _internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required float duration = 9;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // required float size = 11;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  float size() const;
  void set_size(float value);
  private:
  float _internal_size() const;
  void _internal_set_size(float value);
  public:

  // required bool bBold = 12;
  bool has_bbold() const;
  private:
  bool _internal_has_bbold() const;
  public:
  void clear_bbold();
  bool bbold() const;
  void set_bbold(bool value);
  private:
  bool _internal_bbold() const;
  void _internal_set_bbold(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr font_;
  float x_;
  float y_;
  ::PROTOBUF_NAMESPACE_ID::int32 lineoffset_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  ::PROTOBUF_NAMESPACE_ID::int32 a_;
  float duration_;
  float size_;
  bool bbold_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawBox PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawBox) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawBox() : CMsgBotWorldState_Action_ScriptingDebugDrawBox(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawBox();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawBox(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawBox(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawBox(CMsgBotWorldState_Action_ScriptingDebugDrawBox&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawBox() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawBox& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawBox& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawBox&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawBox& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawBox* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawBox*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawBox& a, CMsgBotWorldState_Action_ScriptingDebugDrawBox& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawBox* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawBox* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawBox* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawBox>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawBox* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawBox>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawBox& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawBox* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawBox";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawBox(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 1,
    kMinimumFieldNumber = 2,
    kMaximumFieldNumber = 3,
    kRFieldNumber = 4,
    kGFieldNumber = 5,
    kBFieldNumber = 6,
    kAFieldNumber = 7,
    kDurationFieldNumber = 8,
  };
  // required .CMsgBotWorldState.Vector origin = 1;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgBotWorldState_Vector& origin() const;
  ::CMsgBotWorldState_Vector* release_origin();
  ::CMsgBotWorldState_Vector* mutable_origin();
  void set_allocated_origin(::CMsgBotWorldState_Vector* origin);
  private:
  const ::CMsgBotWorldState_Vector& _internal_origin() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgBotWorldState_Vector* origin);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_origin();

  // required .CMsgBotWorldState.Vector minimum = 2;
  bool has_minimum() const;
  private:
  bool _internal_has_minimum() const;
  public:
  void clear_minimum();
  const ::CMsgBotWorldState_Vector& minimum() const;
  ::CMsgBotWorldState_Vector* release_minimum();
  ::CMsgBotWorldState_Vector* mutable_minimum();
  void set_allocated_minimum(::CMsgBotWorldState_Vector* minimum);
  private:
  const ::CMsgBotWorldState_Vector& _internal_minimum() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_minimum();
  public:
  void unsafe_arena_set_allocated_minimum(
      ::CMsgBotWorldState_Vector* minimum);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_minimum();

  // required .CMsgBotWorldState.Vector maximum = 3;
  bool has_maximum() const;
  private:
  bool _internal_has_maximum() const;
  public:
  void clear_maximum();
  const ::CMsgBotWorldState_Vector& maximum() const;
  ::CMsgBotWorldState_Vector* release_maximum();
  ::CMsgBotWorldState_Vector* mutable_maximum();
  void set_allocated_maximum(::CMsgBotWorldState_Vector* maximum);
  private:
  const ::CMsgBotWorldState_Vector& _internal_maximum() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_maximum();
  public:
  void unsafe_arena_set_allocated_maximum(
      ::CMsgBotWorldState_Vector* maximum);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_maximum();

  // required int32 r = 4;
  bool has_r() const;
  private:
  bool _internal_has_r() const;
  public:
  void clear_r();
  ::PROTOBUF_NAMESPACE_ID::int32 r() const;
  void set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_r() const;
  void _internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 g = 5;
  bool has_g() const;
  private:
  bool _internal_has_g() const;
  public:
  void clear_g();
  ::PROTOBUF_NAMESPACE_ID::int32 g() const;
  void set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_g() const;
  void _internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 b = 6;
  bool has_b() const;
  private:
  bool _internal_has_b() const;
  public:
  void clear_b();
  ::PROTOBUF_NAMESPACE_ID::int32 b() const;
  void set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_b() const;
  void _internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 a = 7;
  bool has_a() const;
  private:
  bool _internal_has_a() const;
  public:
  void clear_a();
  ::PROTOBUF_NAMESPACE_ID::int32 a() const;
  void set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_a() const;
  void _internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required float duration = 8;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawBox)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* origin_;
  ::CMsgBotWorldState_Vector* minimum_;
  ::CMsgBotWorldState_Vector* maximum_;
  ::PROTOBUF_NAMESPACE_ID::int32 r_;
  ::PROTOBUF_NAMESPACE_ID::int32 g_;
  ::PROTOBUF_NAMESPACE_ID::int32 b_;
  ::PROTOBUF_NAMESPACE_ID::int32 a_;
  float duration_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawCircle PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawCircle) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawCircle() : CMsgBotWorldState_Action_ScriptingDebugDrawCircle(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawCircle();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawCircle(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawCircle(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawCircle(CMsgBotWorldState_Action_ScriptingDebugDrawCircle&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawCircle() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawCircle& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawCircle& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawCircle&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawCircle* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawCircle*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle& a, CMsgBotWorldState_Action_ScriptingDebugDrawCircle& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawCircle* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawCircle>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawCircle* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawCircle>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawCircle& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawCircle* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawCircle";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawCircle(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCenterFieldNumber = 1,
    kVRgbFieldNumber = 2,
    kAFieldNumber = 3,
    kRadFieldNumber = 4,
    kZtestFieldNumber = 5,
    kDurationFieldNumber = 6,
  };
  // required .CMsgBotWorldState.Vector center = 1;
  bool has_center() const;
  private:
  bool _internal_has_center() const;
  public:
  void clear_center();
  const ::CMsgBotWorldState_Vector& center() const;
  ::CMsgBotWorldState_Vector* release_center();
  ::CMsgBotWorldState_Vector* mutable_center();
  void set_allocated_center(::CMsgBotWorldState_Vector* center);
  private:
  const ::CMsgBotWorldState_Vector& _internal_center() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_center();
  public:
  void unsafe_arena_set_allocated_center(
      ::CMsgBotWorldState_Vector* center);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_center();

  // required .CMsgBotWorldState.Vector vRgb = 2;
  bool has_vrgb() const;
  private:
  bool _internal_has_vrgb() const;
  public:
  void clear_vrgb();
  const ::CMsgBotWorldState_Vector& vrgb() const;
  ::CMsgBotWorldState_Vector* release_vrgb();
  ::CMsgBotWorldState_Vector* mutable_vrgb();
  void set_allocated_vrgb(::CMsgBotWorldState_Vector* vrgb);
  private:
  const ::CMsgBotWorldState_Vector& _internal_vrgb() const;
  ::CMsgBotWorldState_Vector* _internal_mutable_vrgb();
  public:
  void unsafe_arena_set_allocated_vrgb(
      ::CMsgBotWorldState_Vector* vrgb);
  ::CMsgBotWorldState_Vector* unsafe_arena_release_vrgb();

  // required float a = 3;
  bool has_a() const;
  private:
  bool _internal_has_a() const;
  public:
  void clear_a();
  float a() const;
  void set_a(float value);
  private:
  float _internal_a() const;
  void _internal_set_a(float value);
  public:

  // required float rad = 4;
  bool has_rad() const;
  private:
  bool _internal_has_rad() const;
  public:
  void clear_rad();
  float rad() const;
  void set_rad(float value);
  private:
  float _internal_rad() const;
  void _internal_set_rad(float value);
  public:

  // required bool ztest = 5;
  bool has_ztest() const;
  private:
  bool _internal_has_ztest() const;
  public:
  void clear_ztest();
  bool ztest() const;
  void set_ztest(bool value);
  private:
  bool _internal_ztest() const;
  void _internal_set_ztest(bool value);
  public:

  // required float duration = 6;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawCircle)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgBotWorldState_Vector* center_;
  ::CMsgBotWorldState_Vector* vrgb_;
  float a_;
  float rad_;
  bool ztest_;
  float duration_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_ScriptingDebugDrawClear PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.ScriptingDebugDrawClear) */ {
 public:
  inline CMsgBotWorldState_Action_ScriptingDebugDrawClear() : CMsgBotWorldState_Action_ScriptingDebugDrawClear(nullptr) {}
  virtual ~CMsgBotWorldState_Action_ScriptingDebugDrawClear();
  explicit constexpr CMsgBotWorldState_Action_ScriptingDebugDrawClear(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_ScriptingDebugDrawClear(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from);
  CMsgBotWorldState_Action_ScriptingDebugDrawClear(CMsgBotWorldState_Action_ScriptingDebugDrawClear&& from) noexcept
    : CMsgBotWorldState_Action_ScriptingDebugDrawClear() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_ScriptingDebugDrawClear& operator=(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_ScriptingDebugDrawClear& operator=(CMsgBotWorldState_Action_ScriptingDebugDrawClear&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_ScriptingDebugDrawClear& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_ScriptingDebugDrawClear* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_ScriptingDebugDrawClear*>(
               &_CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CMsgBotWorldState_Action_ScriptingDebugDrawClear& a, CMsgBotWorldState_Action_ScriptingDebugDrawClear& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_ScriptingDebugDrawClear* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_ScriptingDebugDrawClear* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_ScriptingDebugDrawClear* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawClear>(nullptr);
  }

  CMsgBotWorldState_Action_ScriptingDebugDrawClear* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_ScriptingDebugDrawClear>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from);
  void MergeFrom(const CMsgBotWorldState_Action_ScriptingDebugDrawClear& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_ScriptingDebugDrawClear* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.ScriptingDebugDrawClear";
  }
  protected:
  explicit CMsgBotWorldState_Action_ScriptingDebugDrawClear(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.ScriptingDebugDrawClear)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_OceanWinGame PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.OceanWinGame) */ {
 public:
  inline CMsgBotWorldState_Action_OceanWinGame() : CMsgBotWorldState_Action_OceanWinGame(nullptr) {}
  virtual ~CMsgBotWorldState_Action_OceanWinGame();
  explicit constexpr CMsgBotWorldState_Action_OceanWinGame(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_OceanWinGame(const CMsgBotWorldState_Action_OceanWinGame& from);
  CMsgBotWorldState_Action_OceanWinGame(CMsgBotWorldState_Action_OceanWinGame&& from) noexcept
    : CMsgBotWorldState_Action_OceanWinGame() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_OceanWinGame& operator=(const CMsgBotWorldState_Action_OceanWinGame& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_OceanWinGame& operator=(CMsgBotWorldState_Action_OceanWinGame&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_OceanWinGame& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_OceanWinGame* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_OceanWinGame*>(
               &_CMsgBotWorldState_Action_OceanWinGame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CMsgBotWorldState_Action_OceanWinGame& a, CMsgBotWorldState_Action_OceanWinGame& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_OceanWinGame* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_OceanWinGame* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_OceanWinGame* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_OceanWinGame>(nullptr);
  }

  CMsgBotWorldState_Action_OceanWinGame* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_OceanWinGame>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_OceanWinGame& from);
  void MergeFrom(const CMsgBotWorldState_Action_OceanWinGame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_OceanWinGame* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.OceanWinGame";
  }
  protected:
  explicit CMsgBotWorldState_Action_OceanWinGame(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamFieldNumber = 1,
    kRewardFieldNumber = 2,
  };
  // required string team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  const std::string& team() const;
  void set_team(const std::string& value);
  void set_team(std::string&& value);
  void set_team(const char* value);
  void set_team(const char* value, size_t size);
  std::string* mutable_team();
  std::string* release_team();
  void set_allocated_team(std::string* team);
  private:
  const std::string& _internal_team() const;
  void _internal_set_team(const std::string& value);
  std::string* _internal_mutable_team();
  public:

  // optional float reward = 2;
  bool has_reward() const;
  private:
  bool _internal_has_reward() const;
  public:
  void clear_reward();
  float reward() const;
  void set_reward(float value);
  private:
  float _internal_reward() const;
  void _internal_set_reward(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.OceanWinGame)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr team_;
  float reward_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action_OceanReplayCorrectTime PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action.OceanReplayCorrectTime) */ {
 public:
  inline CMsgBotWorldState_Action_OceanReplayCorrectTime() : CMsgBotWorldState_Action_OceanReplayCorrectTime(nullptr) {}
  virtual ~CMsgBotWorldState_Action_OceanReplayCorrectTime();
  explicit constexpr CMsgBotWorldState_Action_OceanReplayCorrectTime(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action_OceanReplayCorrectTime(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from);
  CMsgBotWorldState_Action_OceanReplayCorrectTime(CMsgBotWorldState_Action_OceanReplayCorrectTime&& from) noexcept
    : CMsgBotWorldState_Action_OceanReplayCorrectTime() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action_OceanReplayCorrectTime& operator=(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action_OceanReplayCorrectTime& operator=(CMsgBotWorldState_Action_OceanReplayCorrectTime&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action_OceanReplayCorrectTime& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState_Action_OceanReplayCorrectTime* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action_OceanReplayCorrectTime*>(
               &_CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CMsgBotWorldState_Action_OceanReplayCorrectTime& a, CMsgBotWorldState_Action_OceanReplayCorrectTime& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action_OceanReplayCorrectTime* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action_OceanReplayCorrectTime* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action_OceanReplayCorrectTime* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_OceanReplayCorrectTime>(nullptr);
  }

  CMsgBotWorldState_Action_OceanReplayCorrectTime* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action_OceanReplayCorrectTime>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from);
  void MergeFrom(const CMsgBotWorldState_Action_OceanReplayCorrectTime& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action_OceanReplayCorrectTime* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action.OceanReplayCorrectTime";
  }
  protected:
  explicit CMsgBotWorldState_Action_OceanReplayCorrectTime(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeltaFieldNumber = 1,
  };
  // required float delta = 1;
  bool has_delta() const;
  private:
  bool _internal_has_delta() const;
  public:
  void clear_delta();
  float delta() const;
  void set_delta(float value);
  private:
  float _internal_delta() const;
  void _internal_set_delta(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action.OceanReplayCorrectTime)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float delta_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState_Action PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState.Action) */ {
 public:
  inline CMsgBotWorldState_Action() : CMsgBotWorldState_Action(nullptr) {}
  virtual ~CMsgBotWorldState_Action();
  explicit constexpr CMsgBotWorldState_Action(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState_Action(const CMsgBotWorldState_Action& from);
  CMsgBotWorldState_Action(CMsgBotWorldState_Action&& from) noexcept
    : CMsgBotWorldState_Action() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState_Action& operator=(const CMsgBotWorldState_Action& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState_Action& operator=(CMsgBotWorldState_Action&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState_Action& default_instance() {
    return *internal_default_instance();
  }
  enum ActionDataCase {
    kMoveToLocation = 101,
    kMoveToTarget = 102,
    kAttackMove = 103,
    kAttackTarget = 104,
    kCastLocation = 105,
    kCastTarget = 106,
    kCastTree = 107,
    kCast = 108,
    kCastToggle = 109,
    kHoldLocation = 110,
    kTrainAbility = 111,
    kDropItem = 112,
    kPickUpItem = 114,
    kPickupRune = 115,
    kPurchaseItem = 116,
    kSellItem = 117,
    kDisassembleItem = 118,
    kSetCombineLockItem = 132,
    kStop = 121,
    kChat = 140,
    kSwapItems = 141,
    kUseShrine = 142,
    kCourier = 143,
    kGetActualIncomingDamage = 144,
    kGetEstimatedDamageToTarget = 145,
    kGlyph = 146,
    kSoftReset = 148,
    kBuyback = 149,
    kScriptingDebugDrawText = 150,
    kScriptingDebugDrawLine = 151,
    kScriptingDebugDrawScreenText = 152,
    kScriptingDebugDrawBox = 153,
    kScriptingDebugDrawCircle = 154,
    kScriptingDebugDrawClear = 155,
    kScriptingDebugScreenTextPretty = 159,
    kMoveDirectly = 156,
    kOceanWinGame = 157,
    kOceanReplayCorrectTime = 158,
    ACTIONDATA_NOT_SET = 0,
  };

  static inline const CMsgBotWorldState_Action* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState_Action*>(
               &_CMsgBotWorldState_Action_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CMsgBotWorldState_Action& a, CMsgBotWorldState_Action& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState_Action* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState_Action* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState_Action* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action>(nullptr);
  }

  CMsgBotWorldState_Action* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState_Action>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState_Action& from);
  void MergeFrom(const CMsgBotWorldState_Action& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState_Action* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState.Action";
  }
  protected:
  explicit CMsgBotWorldState_Action(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgBotWorldState_Action_MoveToLocation MoveToLocation;
  typedef CMsgBotWorldState_Action_MoveToTarget MoveToTarget;
  typedef CMsgBotWorldState_Action_AttackMove AttackMove;
  typedef CMsgBotWorldState_Action_AttackTarget AttackTarget;
  typedef CMsgBotWorldState_Action_HoldLocation HoldLocation;
  typedef CMsgBotWorldState_Action_Stop Stop;
  typedef CMsgBotWorldState_Action_CastLocation CastLocation;
  typedef CMsgBotWorldState_Action_CastTarget CastTarget;
  typedef CMsgBotWorldState_Action_CastTree CastTree;
  typedef CMsgBotWorldState_Action_Cast Cast;
  typedef CMsgBotWorldState_Action_CastToggle CastToggle;
  typedef CMsgBotWorldState_Action_TrainAbility TrainAbility;
  typedef CMsgBotWorldState_Action_DropItem DropItem;
  typedef CMsgBotWorldState_Action_PickUpItem PickUpItem;
  typedef CMsgBotWorldState_Action_PurchaseItem PurchaseItem;
  typedef CMsgBotWorldState_Action_SellItem SellItem;
  typedef CMsgBotWorldState_Action_SwapItems SwapItems;
  typedef CMsgBotWorldState_Action_DisassembleItem DisassembleItem;
  typedef CMsgBotWorldState_Action_SetCombineLockItem SetCombineLockItem;
  typedef CMsgBotWorldState_Action_PickupRune PickupRune;
  typedef CMsgBotWorldState_Action_Chat Chat;
  typedef CMsgBotWorldState_Action_UseShrine UseShrine;
  typedef CMsgBotWorldState_Action_Courier Courier;
  typedef CMsgBotWorldState_Action_GetActualIncomingDamage GetActualIncomingDamage;
  typedef CMsgBotWorldState_Action_GetEstimatedDamageToTarget GetEstimatedDamageToTarget;
  typedef CMsgBotWorldState_Action_Glyph Glyph;
  typedef CMsgBotWorldState_Action_SoftReset SoftReset;
  typedef CMsgBotWorldState_Action_Buyback Buyback;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawText ScriptingDebugDrawText;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawLine ScriptingDebugDrawLine;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawScreenText ScriptingDebugDrawScreenText;
  typedef CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty ScriptingDebugScreenTextPretty;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawBox ScriptingDebugDrawBox;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawCircle ScriptingDebugDrawCircle;
  typedef CMsgBotWorldState_Action_ScriptingDebugDrawClear ScriptingDebugDrawClear;
  typedef CMsgBotWorldState_Action_OceanWinGame OceanWinGame;
  typedef CMsgBotWorldState_Action_OceanReplayCorrectTime OceanReplayCorrectTime;

  typedef CMsgBotWorldState_Action_Type Type;
  static constexpr Type DOTA_UNIT_ORDER_NONE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_NONE;
  static constexpr Type DOTA_UNIT_ORDER_MOVE_TO_POSITION =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_POSITION;
  static constexpr Type DOTA_UNIT_ORDER_MOVE_TO_TARGET =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_TARGET;
  static constexpr Type DOTA_UNIT_ORDER_ATTACK_MOVE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_ATTACK_MOVE;
  static constexpr Type DOTA_UNIT_ORDER_ATTACK_TARGET =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_ATTACK_TARGET;
  static constexpr Type DOTA_UNIT_ORDER_CAST_POSITION =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_POSITION;
  static constexpr Type DOTA_UNIT_ORDER_CAST_TARGET =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TARGET;
  static constexpr Type DOTA_UNIT_ORDER_CAST_TARGET_TREE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TARGET_TREE;
  static constexpr Type DOTA_UNIT_ORDER_CAST_NO_TARGET =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_NO_TARGET;
  static constexpr Type DOTA_UNIT_ORDER_CAST_TOGGLE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TOGGLE;
  static constexpr Type DOTA_UNIT_ORDER_HOLD_POSITION =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_HOLD_POSITION;
  static constexpr Type DOTA_UNIT_ORDER_TRAIN_ABILITY =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_TRAIN_ABILITY;
  static constexpr Type DOTA_UNIT_ORDER_DROP_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_DROP_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_GIVE_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_GIVE_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_PICKUP_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PICKUP_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_PICKUP_RUNE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PICKUP_RUNE;
  static constexpr Type DOTA_UNIT_ORDER_PURCHASE_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PURCHASE_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_SELL_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_SELL_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_DISASSEMBLE_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_DISASSEMBLE_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_MOVE_ITEM =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_ITEM;
  static constexpr Type DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_TOGGLE_AUTO;
  static constexpr Type DOTA_UNIT_ORDER_STOP =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_STOP;
  static constexpr Type DOTA_UNIT_ORDER_TAUNT =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_TAUNT;
  static constexpr Type DOTA_UNIT_ORDER_BUYBACK =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_BUYBACK;
  static constexpr Type DOTA_UNIT_ORDER_GLYPH =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_GLYPH;
  static constexpr Type DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_EJECT_ITEM_FROM_STASH;
  static constexpr Type DOTA_UNIT_ORDER_CAST_RUNE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CAST_RUNE;
  static constexpr Type DOTA_UNIT_ORDER_PING_ABILITY =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PING_ABILITY;
  static constexpr Type DOTA_UNIT_ORDER_MOVE_TO_DIRECTION =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_TO_DIRECTION;
  static constexpr Type DOTA_UNIT_ORDER_PATROL =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_PATROL;
  static constexpr Type DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_VECTOR_TARGET_POSITION;
  static constexpr Type DOTA_UNIT_ORDER_RADAR =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_RADAR;
  static constexpr Type DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_SET_ITEM_COMBINE_LOCK;
  static constexpr Type DOTA_UNIT_ORDER_CONTINUE =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_CONTINUE;
  static constexpr Type ACTION_CHAT =
    CMsgBotWorldState_Action_Type_ACTION_CHAT;
  static constexpr Type ACTION_SWAP_ITEMS =
    CMsgBotWorldState_Action_Type_ACTION_SWAP_ITEMS;
  static constexpr Type ACTION_USE_SHRINE =
    CMsgBotWorldState_Action_Type_ACTION_USE_SHRINE;
  static constexpr Type ACTION_COURIER =
    CMsgBotWorldState_Action_Type_ACTION_COURIER;
  static constexpr Type RPC_GET_ACTUAL_INCOMING_DAMAGE =
    CMsgBotWorldState_Action_Type_RPC_GET_ACTUAL_INCOMING_DAMAGE;
  static constexpr Type RPC_GET_ESTIMATED_DAMAGE_TO_TARGET =
    CMsgBotWorldState_Action_Type_RPC_GET_ESTIMATED_DAMAGE_TO_TARGET;
  static constexpr Type OCEAN_FULL_UPDATE =
    CMsgBotWorldState_Action_Type_OCEAN_FULL_UPDATE;
  static constexpr Type OCEAN_RELOAD_CODE =
    CMsgBotWorldState_Action_Type_OCEAN_RELOAD_CODE;
  static constexpr Type OCEAN_SOFT_RESET =
    CMsgBotWorldState_Action_Type_OCEAN_SOFT_RESET;
  static constexpr Type OCEAN_HOLD_FRAMESKIP =
    CMsgBotWorldState_Action_Type_OCEAN_HOLD_FRAMESKIP;
  static constexpr Type OCEAN_WIN_GAME =
    CMsgBotWorldState_Action_Type_OCEAN_WIN_GAME;
  static constexpr Type OCEAN_REPLAY_CORRECT_TIME =
    CMsgBotWorldState_Action_Type_OCEAN_REPLAY_CORRECT_TIME;
  static constexpr Type SCRIPTING_DEBUG_DRAW_TEXT =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_TEXT;
  static constexpr Type SCRIPTING_DEBUG_DRAW_LINE =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_LINE;
  static constexpr Type SCRIPTING_DOTA_UNIT_ORDER_MOVE_TO_POSITION =
    CMsgBotWorldState_Action_Type_SCRIPTING_DOTA_UNIT_ORDER_MOVE_TO_POSITION;
  static constexpr Type SCRIPTING_DEBUG_DRAW_SCREEN_TEXT =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_SCREEN_TEXT;
  static constexpr Type SCRIPTING_DEBUG_DRAW_BOX =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_BOX;
  static constexpr Type SCRIPTING_DEBUG_DRAW_CIRCLE =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_CIRCLE;
  static constexpr Type SCRIPTING_DEBUG_DRAW_CLEAR =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_DRAW_CLEAR;
  static constexpr Type SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY =
    CMsgBotWorldState_Action_Type_SCRIPTING_DEBUG_SCREEN_TEXT_PRETTY;
  static constexpr Type DOTA_UNIT_ORDER_MOVE_DIRECTLY =
    CMsgBotWorldState_Action_Type_DOTA_UNIT_ORDER_MOVE_DIRECTLY;
  static inline bool Type_IsValid(int value) {
    return CMsgBotWorldState_Action_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    CMsgBotWorldState_Action_Type_Type_MIN;
  static constexpr Type Type_MAX =
    CMsgBotWorldState_Action_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    CMsgBotWorldState_Action_Type_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Type_descriptor() {
    return CMsgBotWorldState_Action_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return CMsgBotWorldState_Action_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Type* value) {
    return CMsgBotWorldState_Action_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kActionTypeFieldNumber = 1,
    kActionDelayFieldNumber = 10,
    kPlayerFieldNumber = 2,
    kActionIDFieldNumber = 4,
    kMoveToLocationFieldNumber = 101,
    kMoveToTargetFieldNumber = 102,
    kAttackMoveFieldNumber = 103,
    kAttackTargetFieldNumber = 104,
    kCastLocationFieldNumber = 105,
    kCastTargetFieldNumber = 106,
    kCastTreeFieldNumber = 107,
    kCastFieldNumber = 108,
    kCastToggleFieldNumber = 109,
    kHoldLocationFieldNumber = 110,
    kTrainAbilityFieldNumber = 111,
    kDropItemFieldNumber = 112,
    kPickUpItemFieldNumber = 114,
    kPickupRuneFieldNumber = 115,
    kPurchaseItemFieldNumber = 116,
    kSellItemFieldNumber = 117,
    kDisassembleItemFieldNumber = 118,
    kSetCombineLockItemFieldNumber = 132,
    kStopFieldNumber = 121,
    kChatFieldNumber = 140,
    kSwapItemsFieldNumber = 141,
    kUseShrineFieldNumber = 142,
    kCourierFieldNumber = 143,
    kGetActualIncomingDamageFieldNumber = 144,
    kGetEstimatedDamageToTargetFieldNumber = 145,
    kGlyphFieldNumber = 146,
    kSoftResetFieldNumber = 148,
    kBuybackFieldNumber = 149,
    kScriptingDebugDrawTextFieldNumber = 150,
    kScriptingDebugDrawLineFieldNumber = 151,
    kScriptingDebugDrawScreenTextFieldNumber = 152,
    kScriptingDebugDrawBoxFieldNumber = 153,
    kScriptingDebugDrawCircleFieldNumber = 154,
    kScriptingDebugDrawClearFieldNumber = 155,
    kScriptingDebugScreenTextPrettyFieldNumber = 159,
    kMoveDirectlyFieldNumber = 156,
    kOceanWinGameFieldNumber = 157,
    kOceanReplayCorrectTimeFieldNumber = 158,
  };
  // required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
  bool has_actiontype() const;
  private:
  bool _internal_has_actiontype() const;
  public:
  void clear_actiontype();
  ::CMsgBotWorldState_Action_Type actiontype() const;
  void set_actiontype(::CMsgBotWorldState_Action_Type value);
  private:
  ::CMsgBotWorldState_Action_Type _internal_actiontype() const;
  void _internal_set_actiontype(::CMsgBotWorldState_Action_Type value);
  public:

  // optional int32 actionDelay = 10 [default = 0];
  bool has_actiondelay() const;
  private:
  bool _internal_has_actiondelay() const;
  public:
  void clear_actiondelay();
  ::PROTOBUF_NAMESPACE_ID::int32 actiondelay() const;
  void set_actiondelay(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actiondelay() const;
  void _internal_set_actiondelay(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 player = 2 [default = -1];
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  ::PROTOBUF_NAMESPACE_ID::int32 player() const;
  void set_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player() const;
  void _internal_set_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 actionID = 4 [default = -1];
  bool has_actionid() const;
  private:
  bool _internal_has_actionid() const;
  public:
  void clear_actionid();
  ::PROTOBUF_NAMESPACE_ID::int32 actionid() const;
  void set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_actionid() const;
  void _internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .CMsgBotWorldState.Action.MoveToLocation moveToLocation = 101;
  bool has_movetolocation() const;
  private:
  bool _internal_has_movetolocation() const;
  public:
  void clear_movetolocation();
  const ::CMsgBotWorldState_Action_MoveToLocation& movetolocation() const;
  ::CMsgBotWorldState_Action_MoveToLocation* release_movetolocation();
  ::CMsgBotWorldState_Action_MoveToLocation* mutable_movetolocation();
  void set_allocated_movetolocation(::CMsgBotWorldState_Action_MoveToLocation* movetolocation);
  private:
  const ::CMsgBotWorldState_Action_MoveToLocation& _internal_movetolocation() const;
  ::CMsgBotWorldState_Action_MoveToLocation* _internal_mutable_movetolocation();
  public:
  void unsafe_arena_set_allocated_movetolocation(
      ::CMsgBotWorldState_Action_MoveToLocation* movetolocation);
  ::CMsgBotWorldState_Action_MoveToLocation* unsafe_arena_release_movetolocation();

  // .CMsgBotWorldState.Action.MoveToTarget moveToTarget = 102;
  bool has_movetotarget() const;
  private:
  bool _internal_has_movetotarget() const;
  public:
  void clear_movetotarget();
  const ::CMsgBotWorldState_Action_MoveToTarget& movetotarget() const;
  ::CMsgBotWorldState_Action_MoveToTarget* release_movetotarget();
  ::CMsgBotWorldState_Action_MoveToTarget* mutable_movetotarget();
  void set_allocated_movetotarget(::CMsgBotWorldState_Action_MoveToTarget* movetotarget);
  private:
  const ::CMsgBotWorldState_Action_MoveToTarget& _internal_movetotarget() const;
  ::CMsgBotWorldState_Action_MoveToTarget* _internal_mutable_movetotarget();
  public:
  void unsafe_arena_set_allocated_movetotarget(
      ::CMsgBotWorldState_Action_MoveToTarget* movetotarget);
  ::CMsgBotWorldState_Action_MoveToTarget* unsafe_arena_release_movetotarget();

  // .CMsgBotWorldState.Action.AttackMove attackMove = 103;
  bool has_attackmove() const;
  private:
  bool _internal_has_attackmove() const;
  public:
  void clear_attackmove();
  const ::CMsgBotWorldState_Action_AttackMove& attackmove() const;
  ::CMsgBotWorldState_Action_AttackMove* release_attackmove();
  ::CMsgBotWorldState_Action_AttackMove* mutable_attackmove();
  void set_allocated_attackmove(::CMsgBotWorldState_Action_AttackMove* attackmove);
  private:
  const ::CMsgBotWorldState_Action_AttackMove& _internal_attackmove() const;
  ::CMsgBotWorldState_Action_AttackMove* _internal_mutable_attackmove();
  public:
  void unsafe_arena_set_allocated_attackmove(
      ::CMsgBotWorldState_Action_AttackMove* attackmove);
  ::CMsgBotWorldState_Action_AttackMove* unsafe_arena_release_attackmove();

  // .CMsgBotWorldState.Action.AttackTarget attackTarget = 104;
  bool has_attacktarget() const;
  private:
  bool _internal_has_attacktarget() const;
  public:
  void clear_attacktarget();
  const ::CMsgBotWorldState_Action_AttackTarget& attacktarget() const;
  ::CMsgBotWorldState_Action_AttackTarget* release_attacktarget();
  ::CMsgBotWorldState_Action_AttackTarget* mutable_attacktarget();
  void set_allocated_attacktarget(::CMsgBotWorldState_Action_AttackTarget* attacktarget);
  private:
  const ::CMsgBotWorldState_Action_AttackTarget& _internal_attacktarget() const;
  ::CMsgBotWorldState_Action_AttackTarget* _internal_mutable_attacktarget();
  public:
  void unsafe_arena_set_allocated_attacktarget(
      ::CMsgBotWorldState_Action_AttackTarget* attacktarget);
  ::CMsgBotWorldState_Action_AttackTarget* unsafe_arena_release_attacktarget();

  // .CMsgBotWorldState.Action.CastLocation castLocation = 105;
  bool has_castlocation() const;
  private:
  bool _internal_has_castlocation() const;
  public:
  void clear_castlocation();
  const ::CMsgBotWorldState_Action_CastLocation& castlocation() const;
  ::CMsgBotWorldState_Action_CastLocation* release_castlocation();
  ::CMsgBotWorldState_Action_CastLocation* mutable_castlocation();
  void set_allocated_castlocation(::CMsgBotWorldState_Action_CastLocation* castlocation);
  private:
  const ::CMsgBotWorldState_Action_CastLocation& _internal_castlocation() const;
  ::CMsgBotWorldState_Action_CastLocation* _internal_mutable_castlocation();
  public:
  void unsafe_arena_set_allocated_castlocation(
      ::CMsgBotWorldState_Action_CastLocation* castlocation);
  ::CMsgBotWorldState_Action_CastLocation* unsafe_arena_release_castlocation();

  // .CMsgBotWorldState.Action.CastTarget castTarget = 106;
  bool has_casttarget() const;
  private:
  bool _internal_has_casttarget() const;
  public:
  void clear_casttarget();
  const ::CMsgBotWorldState_Action_CastTarget& casttarget() const;
  ::CMsgBotWorldState_Action_CastTarget* release_casttarget();
  ::CMsgBotWorldState_Action_CastTarget* mutable_casttarget();
  void set_allocated_casttarget(::CMsgBotWorldState_Action_CastTarget* casttarget);
  private:
  const ::CMsgBotWorldState_Action_CastTarget& _internal_casttarget() const;
  ::CMsgBotWorldState_Action_CastTarget* _internal_mutable_casttarget();
  public:
  void unsafe_arena_set_allocated_casttarget(
      ::CMsgBotWorldState_Action_CastTarget* casttarget);
  ::CMsgBotWorldState_Action_CastTarget* unsafe_arena_release_casttarget();

  // .CMsgBotWorldState.Action.CastTree castTree = 107;
  bool has_casttree() const;
  private:
  bool _internal_has_casttree() const;
  public:
  void clear_casttree();
  const ::CMsgBotWorldState_Action_CastTree& casttree() const;
  ::CMsgBotWorldState_Action_CastTree* release_casttree();
  ::CMsgBotWorldState_Action_CastTree* mutable_casttree();
  void set_allocated_casttree(::CMsgBotWorldState_Action_CastTree* casttree);
  private:
  const ::CMsgBotWorldState_Action_CastTree& _internal_casttree() const;
  ::CMsgBotWorldState_Action_CastTree* _internal_mutable_casttree();
  public:
  void unsafe_arena_set_allocated_casttree(
      ::CMsgBotWorldState_Action_CastTree* casttree);
  ::CMsgBotWorldState_Action_CastTree* unsafe_arena_release_casttree();

  // .CMsgBotWorldState.Action.Cast cast = 108;
  bool has_cast() const;
  private:
  bool _internal_has_cast() const;
  public:
  void clear_cast();
  const ::CMsgBotWorldState_Action_Cast& cast() const;
  ::CMsgBotWorldState_Action_Cast* release_cast();
  ::CMsgBotWorldState_Action_Cast* mutable_cast();
  void set_allocated_cast(::CMsgBotWorldState_Action_Cast* cast);
  private:
  const ::CMsgBotWorldState_Action_Cast& _internal_cast() const;
  ::CMsgBotWorldState_Action_Cast* _internal_mutable_cast();
  public:
  void unsafe_arena_set_allocated_cast(
      ::CMsgBotWorldState_Action_Cast* cast);
  ::CMsgBotWorldState_Action_Cast* unsafe_arena_release_cast();

  // .CMsgBotWorldState.Action.CastToggle castToggle = 109;
  bool has_casttoggle() const;
  private:
  bool _internal_has_casttoggle() const;
  public:
  void clear_casttoggle();
  const ::CMsgBotWorldState_Action_CastToggle& casttoggle() const;
  ::CMsgBotWorldState_Action_CastToggle* release_casttoggle();
  ::CMsgBotWorldState_Action_CastToggle* mutable_casttoggle();
  void set_allocated_casttoggle(::CMsgBotWorldState_Action_CastToggle* casttoggle);
  private:
  const ::CMsgBotWorldState_Action_CastToggle& _internal_casttoggle() const;
  ::CMsgBotWorldState_Action_CastToggle* _internal_mutable_casttoggle();
  public:
  void unsafe_arena_set_allocated_casttoggle(
      ::CMsgBotWorldState_Action_CastToggle* casttoggle);
  ::CMsgBotWorldState_Action_CastToggle* unsafe_arena_release_casttoggle();

  // .CMsgBotWorldState.Action.HoldLocation holdLocation = 110;
  bool has_holdlocation() const;
  private:
  bool _internal_has_holdlocation() const;
  public:
  void clear_holdlocation();
  const ::CMsgBotWorldState_Action_HoldLocation& holdlocation() const;
  ::CMsgBotWorldState_Action_HoldLocation* release_holdlocation();
  ::CMsgBotWorldState_Action_HoldLocation* mutable_holdlocation();
  void set_allocated_holdlocation(::CMsgBotWorldState_Action_HoldLocation* holdlocation);
  private:
  const ::CMsgBotWorldState_Action_HoldLocation& _internal_holdlocation() const;
  ::CMsgBotWorldState_Action_HoldLocation* _internal_mutable_holdlocation();
  public:
  void unsafe_arena_set_allocated_holdlocation(
      ::CMsgBotWorldState_Action_HoldLocation* holdlocation);
  ::CMsgBotWorldState_Action_HoldLocation* unsafe_arena_release_holdlocation();

  // .CMsgBotWorldState.Action.TrainAbility trainAbility = 111;
  bool has_trainability() const;
  private:
  bool _internal_has_trainability() const;
  public:
  void clear_trainability();
  const ::CMsgBotWorldState_Action_TrainAbility& trainability() const;
  ::CMsgBotWorldState_Action_TrainAbility* release_trainability();
  ::CMsgBotWorldState_Action_TrainAbility* mutable_trainability();
  void set_allocated_trainability(::CMsgBotWorldState_Action_TrainAbility* trainability);
  private:
  const ::CMsgBotWorldState_Action_TrainAbility& _internal_trainability() const;
  ::CMsgBotWorldState_Action_TrainAbility* _internal_mutable_trainability();
  public:
  void unsafe_arena_set_allocated_trainability(
      ::CMsgBotWorldState_Action_TrainAbility* trainability);
  ::CMsgBotWorldState_Action_TrainAbility* unsafe_arena_release_trainability();

  // .CMsgBotWorldState.Action.DropItem dropItem = 112;
  bool has_dropitem() const;
  private:
  bool _internal_has_dropitem() const;
  public:
  void clear_dropitem();
  const ::CMsgBotWorldState_Action_DropItem& dropitem() const;
  ::CMsgBotWorldState_Action_DropItem* release_dropitem();
  ::CMsgBotWorldState_Action_DropItem* mutable_dropitem();
  void set_allocated_dropitem(::CMsgBotWorldState_Action_DropItem* dropitem);
  private:
  const ::CMsgBotWorldState_Action_DropItem& _internal_dropitem() const;
  ::CMsgBotWorldState_Action_DropItem* _internal_mutable_dropitem();
  public:
  void unsafe_arena_set_allocated_dropitem(
      ::CMsgBotWorldState_Action_DropItem* dropitem);
  ::CMsgBotWorldState_Action_DropItem* unsafe_arena_release_dropitem();

  // .CMsgBotWorldState.Action.PickUpItem pickUpItem = 114;
  bool has_pickupitem() const;
  private:
  bool _internal_has_pickupitem() const;
  public:
  void clear_pickupitem();
  const ::CMsgBotWorldState_Action_PickUpItem& pickupitem() const;
  ::CMsgBotWorldState_Action_PickUpItem* release_pickupitem();
  ::CMsgBotWorldState_Action_PickUpItem* mutable_pickupitem();
  void set_allocated_pickupitem(::CMsgBotWorldState_Action_PickUpItem* pickupitem);
  private:
  const ::CMsgBotWorldState_Action_PickUpItem& _internal_pickupitem() const;
  ::CMsgBotWorldState_Action_PickUpItem* _internal_mutable_pickupitem();
  public:
  void unsafe_arena_set_allocated_pickupitem(
      ::CMsgBotWorldState_Action_PickUpItem* pickupitem);
  ::CMsgBotWorldState_Action_PickUpItem* unsafe_arena_release_pickupitem();

  // .CMsgBotWorldState.Action.PickupRune pickupRune = 115;
  bool has_pickuprune() const;
  private:
  bool _internal_has_pickuprune() const;
  public:
  void clear_pickuprune();
  const ::CMsgBotWorldState_Action_PickupRune& pickuprune() const;
  ::CMsgBotWorldState_Action_PickupRune* release_pickuprune();
  ::CMsgBotWorldState_Action_PickupRune* mutable_pickuprune();
  void set_allocated_pickuprune(::CMsgBotWorldState_Action_PickupRune* pickuprune);
  private:
  const ::CMsgBotWorldState_Action_PickupRune& _internal_pickuprune() const;
  ::CMsgBotWorldState_Action_PickupRune* _internal_mutable_pickuprune();
  public:
  void unsafe_arena_set_allocated_pickuprune(
      ::CMsgBotWorldState_Action_PickupRune* pickuprune);
  ::CMsgBotWorldState_Action_PickupRune* unsafe_arena_release_pickuprune();

  // .CMsgBotWorldState.Action.PurchaseItem purchaseItem = 116;
  bool has_purchaseitem() const;
  private:
  bool _internal_has_purchaseitem() const;
  public:
  void clear_purchaseitem();
  const ::CMsgBotWorldState_Action_PurchaseItem& purchaseitem() const;
  ::CMsgBotWorldState_Action_PurchaseItem* release_purchaseitem();
  ::CMsgBotWorldState_Action_PurchaseItem* mutable_purchaseitem();
  void set_allocated_purchaseitem(::CMsgBotWorldState_Action_PurchaseItem* purchaseitem);
  private:
  const ::CMsgBotWorldState_Action_PurchaseItem& _internal_purchaseitem() const;
  ::CMsgBotWorldState_Action_PurchaseItem* _internal_mutable_purchaseitem();
  public:
  void unsafe_arena_set_allocated_purchaseitem(
      ::CMsgBotWorldState_Action_PurchaseItem* purchaseitem);
  ::CMsgBotWorldState_Action_PurchaseItem* unsafe_arena_release_purchaseitem();

  // .CMsgBotWorldState.Action.SellItem sellItem = 117;
  bool has_sellitem() const;
  private:
  bool _internal_has_sellitem() const;
  public:
  void clear_sellitem();
  const ::CMsgBotWorldState_Action_SellItem& sellitem() const;
  ::CMsgBotWorldState_Action_SellItem* release_sellitem();
  ::CMsgBotWorldState_Action_SellItem* mutable_sellitem();
  void set_allocated_sellitem(::CMsgBotWorldState_Action_SellItem* sellitem);
  private:
  const ::CMsgBotWorldState_Action_SellItem& _internal_sellitem() const;
  ::CMsgBotWorldState_Action_SellItem* _internal_mutable_sellitem();
  public:
  void unsafe_arena_set_allocated_sellitem(
      ::CMsgBotWorldState_Action_SellItem* sellitem);
  ::CMsgBotWorldState_Action_SellItem* unsafe_arena_release_sellitem();

  // .CMsgBotWorldState.Action.DisassembleItem disassembleItem = 118;
  bool has_disassembleitem() const;
  private:
  bool _internal_has_disassembleitem() const;
  public:
  void clear_disassembleitem();
  const ::CMsgBotWorldState_Action_DisassembleItem& disassembleitem() const;
  ::CMsgBotWorldState_Action_DisassembleItem* release_disassembleitem();
  ::CMsgBotWorldState_Action_DisassembleItem* mutable_disassembleitem();
  void set_allocated_disassembleitem(::CMsgBotWorldState_Action_DisassembleItem* disassembleitem);
  private:
  const ::CMsgBotWorldState_Action_DisassembleItem& _internal_disassembleitem() const;
  ::CMsgBotWorldState_Action_DisassembleItem* _internal_mutable_disassembleitem();
  public:
  void unsafe_arena_set_allocated_disassembleitem(
      ::CMsgBotWorldState_Action_DisassembleItem* disassembleitem);
  ::CMsgBotWorldState_Action_DisassembleItem* unsafe_arena_release_disassembleitem();

  // .CMsgBotWorldState.Action.SetCombineLockItem setCombineLockItem = 132;
  bool has_setcombinelockitem() const;
  private:
  bool _internal_has_setcombinelockitem() const;
  public:
  void clear_setcombinelockitem();
  const ::CMsgBotWorldState_Action_SetCombineLockItem& setcombinelockitem() const;
  ::CMsgBotWorldState_Action_SetCombineLockItem* release_setcombinelockitem();
  ::CMsgBotWorldState_Action_SetCombineLockItem* mutable_setcombinelockitem();
  void set_allocated_setcombinelockitem(::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem);
  private:
  const ::CMsgBotWorldState_Action_SetCombineLockItem& _internal_setcombinelockitem() const;
  ::CMsgBotWorldState_Action_SetCombineLockItem* _internal_mutable_setcombinelockitem();
  public:
  void unsafe_arena_set_allocated_setcombinelockitem(
      ::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem);
  ::CMsgBotWorldState_Action_SetCombineLockItem* unsafe_arena_release_setcombinelockitem();

  // .CMsgBotWorldState.Action.Stop stop = 121;
  bool has_stop() const;
  private:
  bool _internal_has_stop() const;
  public:
  void clear_stop();
  const ::CMsgBotWorldState_Action_Stop& stop() const;
  ::CMsgBotWorldState_Action_Stop* release_stop();
  ::CMsgBotWorldState_Action_Stop* mutable_stop();
  void set_allocated_stop(::CMsgBotWorldState_Action_Stop* stop);
  private:
  const ::CMsgBotWorldState_Action_Stop& _internal_stop() const;
  ::CMsgBotWorldState_Action_Stop* _internal_mutable_stop();
  public:
  void unsafe_arena_set_allocated_stop(
      ::CMsgBotWorldState_Action_Stop* stop);
  ::CMsgBotWorldState_Action_Stop* unsafe_arena_release_stop();

  // .CMsgBotWorldState.Action.Chat chat = 140;
  bool has_chat() const;
  private:
  bool _internal_has_chat() const;
  public:
  void clear_chat();
  const ::CMsgBotWorldState_Action_Chat& chat() const;
  ::CMsgBotWorldState_Action_Chat* release_chat();
  ::CMsgBotWorldState_Action_Chat* mutable_chat();
  void set_allocated_chat(::CMsgBotWorldState_Action_Chat* chat);
  private:
  const ::CMsgBotWorldState_Action_Chat& _internal_chat() const;
  ::CMsgBotWorldState_Action_Chat* _internal_mutable_chat();
  public:
  void unsafe_arena_set_allocated_chat(
      ::CMsgBotWorldState_Action_Chat* chat);
  ::CMsgBotWorldState_Action_Chat* unsafe_arena_release_chat();

  // .CMsgBotWorldState.Action.SwapItems swapItems = 141;
  bool has_swapitems() const;
  private:
  bool _internal_has_swapitems() const;
  public:
  void clear_swapitems();
  const ::CMsgBotWorldState_Action_SwapItems& swapitems() const;
  ::CMsgBotWorldState_Action_SwapItems* release_swapitems();
  ::CMsgBotWorldState_Action_SwapItems* mutable_swapitems();
  void set_allocated_swapitems(::CMsgBotWorldState_Action_SwapItems* swapitems);
  private:
  const ::CMsgBotWorldState_Action_SwapItems& _internal_swapitems() const;
  ::CMsgBotWorldState_Action_SwapItems* _internal_mutable_swapitems();
  public:
  void unsafe_arena_set_allocated_swapitems(
      ::CMsgBotWorldState_Action_SwapItems* swapitems);
  ::CMsgBotWorldState_Action_SwapItems* unsafe_arena_release_swapitems();

  // .CMsgBotWorldState.Action.UseShrine useShrine = 142;
  bool has_useshrine() const;
  private:
  bool _internal_has_useshrine() const;
  public:
  void clear_useshrine();
  const ::CMsgBotWorldState_Action_UseShrine& useshrine() const;
  ::CMsgBotWorldState_Action_UseShrine* release_useshrine();
  ::CMsgBotWorldState_Action_UseShrine* mutable_useshrine();
  void set_allocated_useshrine(::CMsgBotWorldState_Action_UseShrine* useshrine);
  private:
  const ::CMsgBotWorldState_Action_UseShrine& _internal_useshrine() const;
  ::CMsgBotWorldState_Action_UseShrine* _internal_mutable_useshrine();
  public:
  void unsafe_arena_set_allocated_useshrine(
      ::CMsgBotWorldState_Action_UseShrine* useshrine);
  ::CMsgBotWorldState_Action_UseShrine* unsafe_arena_release_useshrine();

  // .CMsgBotWorldState.Action.Courier courier = 143;
  bool has_courier() const;
  private:
  bool _internal_has_courier() const;
  public:
  void clear_courier();
  const ::CMsgBotWorldState_Action_Courier& courier() const;
  ::CMsgBotWorldState_Action_Courier* release_courier();
  ::CMsgBotWorldState_Action_Courier* mutable_courier();
  void set_allocated_courier(::CMsgBotWorldState_Action_Courier* courier);
  private:
  const ::CMsgBotWorldState_Action_Courier& _internal_courier() const;
  ::CMsgBotWorldState_Action_Courier* _internal_mutable_courier();
  public:
  void unsafe_arena_set_allocated_courier(
      ::CMsgBotWorldState_Action_Courier* courier);
  ::CMsgBotWorldState_Action_Courier* unsafe_arena_release_courier();

  // .CMsgBotWorldState.Action.GetActualIncomingDamage getActualIncomingDamage = 144;
  bool has_getactualincomingdamage() const;
  private:
  bool _internal_has_getactualincomingdamage() const;
  public:
  void clear_getactualincomingdamage();
  const ::CMsgBotWorldState_Action_GetActualIncomingDamage& getactualincomingdamage() const;
  ::CMsgBotWorldState_Action_GetActualIncomingDamage* release_getactualincomingdamage();
  ::CMsgBotWorldState_Action_GetActualIncomingDamage* mutable_getactualincomingdamage();
  void set_allocated_getactualincomingdamage(::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage);
  private:
  const ::CMsgBotWorldState_Action_GetActualIncomingDamage& _internal_getactualincomingdamage() const;
  ::CMsgBotWorldState_Action_GetActualIncomingDamage* _internal_mutable_getactualincomingdamage();
  public:
  void unsafe_arena_set_allocated_getactualincomingdamage(
      ::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage);
  ::CMsgBotWorldState_Action_GetActualIncomingDamage* unsafe_arena_release_getactualincomingdamage();

  // .CMsgBotWorldState.Action.GetEstimatedDamageToTarget getEstimatedDamageToTarget = 145;
  bool has_getestimateddamagetotarget() const;
  private:
  bool _internal_has_getestimateddamagetotarget() const;
  public:
  void clear_getestimateddamagetotarget();
  const ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget& getestimateddamagetotarget() const;
  ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* release_getestimateddamagetotarget();
  ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* mutable_getestimateddamagetotarget();
  void set_allocated_getestimateddamagetotarget(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget);
  private:
  const ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget& _internal_getestimateddamagetotarget() const;
  ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* _internal_mutable_getestimateddamagetotarget();
  public:
  void unsafe_arena_set_allocated_getestimateddamagetotarget(
      ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget);
  ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* unsafe_arena_release_getestimateddamagetotarget();

  // .CMsgBotWorldState.Action.Glyph glyph = 146;
  bool has_glyph() const;
  private:
  bool _internal_has_glyph() const;
  public:
  void clear_glyph();
  const ::CMsgBotWorldState_Action_Glyph& glyph() const;
  ::CMsgBotWorldState_Action_Glyph* release_glyph();
  ::CMsgBotWorldState_Action_Glyph* mutable_glyph();
  void set_allocated_glyph(::CMsgBotWorldState_Action_Glyph* glyph);
  private:
  const ::CMsgBotWorldState_Action_Glyph& _internal_glyph() const;
  ::CMsgBotWorldState_Action_Glyph* _internal_mutable_glyph();
  public:
  void unsafe_arena_set_allocated_glyph(
      ::CMsgBotWorldState_Action_Glyph* glyph);
  ::CMsgBotWorldState_Action_Glyph* unsafe_arena_release_glyph();

  // .CMsgBotWorldState.Action.SoftReset softReset = 148;
  bool has_softreset() const;
  private:
  bool _internal_has_softreset() const;
  public:
  void clear_softreset();
  const ::CMsgBotWorldState_Action_SoftReset& softreset() const;
  ::CMsgBotWorldState_Action_SoftReset* release_softreset();
  ::CMsgBotWorldState_Action_SoftReset* mutable_softreset();
  void set_allocated_softreset(::CMsgBotWorldState_Action_SoftReset* softreset);
  private:
  const ::CMsgBotWorldState_Action_SoftReset& _internal_softreset() const;
  ::CMsgBotWorldState_Action_SoftReset* _internal_mutable_softreset();
  public:
  void unsafe_arena_set_allocated_softreset(
      ::CMsgBotWorldState_Action_SoftReset* softreset);
  ::CMsgBotWorldState_Action_SoftReset* unsafe_arena_release_softreset();

  // .CMsgBotWorldState.Action.Buyback buyback = 149;
  bool has_buyback() const;
  private:
  bool _internal_has_buyback() const;
  public:
  void clear_buyback();
  const ::CMsgBotWorldState_Action_Buyback& buyback() const;
  ::CMsgBotWorldState_Action_Buyback* release_buyback();
  ::CMsgBotWorldState_Action_Buyback* mutable_buyback();
  void set_allocated_buyback(::CMsgBotWorldState_Action_Buyback* buyback);
  private:
  const ::CMsgBotWorldState_Action_Buyback& _internal_buyback() const;
  ::CMsgBotWorldState_Action_Buyback* _internal_mutable_buyback();
  public:
  void unsafe_arena_set_allocated_buyback(
      ::CMsgBotWorldState_Action_Buyback* buyback);
  ::CMsgBotWorldState_Action_Buyback* unsafe_arena_release_buyback();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawText scriptingDebugDrawText = 150;
  bool has_scriptingdebugdrawtext() const;
  private:
  bool _internal_has_scriptingdebugdrawtext() const;
  public:
  void clear_scriptingdebugdrawtext();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawText& scriptingdebugdrawtext() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawText* release_scriptingdebugdrawtext();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawText* mutable_scriptingdebugdrawtext();
  void set_allocated_scriptingdebugdrawtext(::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawText& _internal_scriptingdebugdrawtext() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawText* _internal_mutable_scriptingdebugdrawtext();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawtext(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawText* unsafe_arena_release_scriptingdebugdrawtext();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawLine scriptingDebugDrawLine = 151;
  bool has_scriptingdebugdrawline() const;
  private:
  bool _internal_has_scriptingdebugdrawline() const;
  public:
  void clear_scriptingdebugdrawline();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawLine& scriptingdebugdrawline() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* release_scriptingdebugdrawline();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* mutable_scriptingdebugdrawline();
  void set_allocated_scriptingdebugdrawline(::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawLine& _internal_scriptingdebugdrawline() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* _internal_mutable_scriptingdebugdrawline();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawline(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* unsafe_arena_release_scriptingdebugdrawline();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawScreenText scriptingDebugDrawScreenText = 152;
  bool has_scriptingdebugdrawscreentext() const;
  private:
  bool _internal_has_scriptingdebugdrawscreentext() const;
  public:
  void clear_scriptingdebugdrawscreentext();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& scriptingdebugdrawscreentext() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* release_scriptingdebugdrawscreentext();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* mutable_scriptingdebugdrawscreentext();
  void set_allocated_scriptingdebugdrawscreentext(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& _internal_scriptingdebugdrawscreentext() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* _internal_mutable_scriptingdebugdrawscreentext();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawscreentext(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* unsafe_arena_release_scriptingdebugdrawscreentext();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawBox scriptingDebugDrawBox = 153;
  bool has_scriptingdebugdrawbox() const;
  private:
  bool _internal_has_scriptingdebugdrawbox() const;
  public:
  void clear_scriptingdebugdrawbox();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawBox& scriptingdebugdrawbox() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* release_scriptingdebugdrawbox();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* mutable_scriptingdebugdrawbox();
  void set_allocated_scriptingdebugdrawbox(::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawBox& _internal_scriptingdebugdrawbox() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* _internal_mutable_scriptingdebugdrawbox();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawbox(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* unsafe_arena_release_scriptingdebugdrawbox();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawCircle scriptingDebugDrawCircle = 154;
  bool has_scriptingdebugdrawcircle() const;
  private:
  bool _internal_has_scriptingdebugdrawcircle() const;
  public:
  void clear_scriptingdebugdrawcircle();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle& scriptingdebugdrawcircle() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* release_scriptingdebugdrawcircle();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* mutable_scriptingdebugdrawcircle();
  void set_allocated_scriptingdebugdrawcircle(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle& _internal_scriptingdebugdrawcircle() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* _internal_mutable_scriptingdebugdrawcircle();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawcircle(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* unsafe_arena_release_scriptingdebugdrawcircle();

  // .CMsgBotWorldState.Action.ScriptingDebugDrawClear scriptingDebugDrawClear = 155;
  bool has_scriptingdebugdrawclear() const;
  private:
  bool _internal_has_scriptingdebugdrawclear() const;
  public:
  void clear_scriptingdebugdrawclear();
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawClear& scriptingdebugdrawclear() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* release_scriptingdebugdrawclear();
  ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* mutable_scriptingdebugdrawclear();
  void set_allocated_scriptingdebugdrawclear(::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugDrawClear& _internal_scriptingdebugdrawclear() const;
  ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* _internal_mutable_scriptingdebugdrawclear();
  public:
  void unsafe_arena_set_allocated_scriptingdebugdrawclear(
      ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear);
  ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* unsafe_arena_release_scriptingdebugdrawclear();

  // .CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty scriptingDebugScreenTextPretty = 159;
  bool has_scriptingdebugscreentextpretty() const;
  private:
  bool _internal_has_scriptingdebugscreentextpretty() const;
  public:
  void clear_scriptingdebugscreentextpretty();
  const ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& scriptingdebugscreentextpretty() const;
  ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* release_scriptingdebugscreentextpretty();
  ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* mutable_scriptingdebugscreentextpretty();
  void set_allocated_scriptingdebugscreentextpretty(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty);
  private:
  const ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& _internal_scriptingdebugscreentextpretty() const;
  ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* _internal_mutable_scriptingdebugscreentextpretty();
  public:
  void unsafe_arena_set_allocated_scriptingdebugscreentextpretty(
      ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty);
  ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* unsafe_arena_release_scriptingdebugscreentextpretty();

  // .CMsgBotWorldState.Action.MoveToLocation moveDirectly = 156;
  bool has_movedirectly() const;
  private:
  bool _internal_has_movedirectly() const;
  public:
  void clear_movedirectly();
  const ::CMsgBotWorldState_Action_MoveToLocation& movedirectly() const;
  ::CMsgBotWorldState_Action_MoveToLocation* release_movedirectly();
  ::CMsgBotWorldState_Action_MoveToLocation* mutable_movedirectly();
  void set_allocated_movedirectly(::CMsgBotWorldState_Action_MoveToLocation* movedirectly);
  private:
  const ::CMsgBotWorldState_Action_MoveToLocation& _internal_movedirectly() const;
  ::CMsgBotWorldState_Action_MoveToLocation* _internal_mutable_movedirectly();
  public:
  void unsafe_arena_set_allocated_movedirectly(
      ::CMsgBotWorldState_Action_MoveToLocation* movedirectly);
  ::CMsgBotWorldState_Action_MoveToLocation* unsafe_arena_release_movedirectly();

  // .CMsgBotWorldState.Action.OceanWinGame oceanWinGame = 157;
  bool has_oceanwingame() const;
  private:
  bool _internal_has_oceanwingame() const;
  public:
  void clear_oceanwingame();
  const ::CMsgBotWorldState_Action_OceanWinGame& oceanwingame() const;
  ::CMsgBotWorldState_Action_OceanWinGame* release_oceanwingame();
  ::CMsgBotWorldState_Action_OceanWinGame* mutable_oceanwingame();
  void set_allocated_oceanwingame(::CMsgBotWorldState_Action_OceanWinGame* oceanwingame);
  private:
  const ::CMsgBotWorldState_Action_OceanWinGame& _internal_oceanwingame() const;
  ::CMsgBotWorldState_Action_OceanWinGame* _internal_mutable_oceanwingame();
  public:
  void unsafe_arena_set_allocated_oceanwingame(
      ::CMsgBotWorldState_Action_OceanWinGame* oceanwingame);
  ::CMsgBotWorldState_Action_OceanWinGame* unsafe_arena_release_oceanwingame();

  // .CMsgBotWorldState.Action.OceanReplayCorrectTime oceanReplayCorrectTime = 158;
  bool has_oceanreplaycorrecttime() const;
  private:
  bool _internal_has_oceanreplaycorrecttime() const;
  public:
  void clear_oceanreplaycorrecttime();
  const ::CMsgBotWorldState_Action_OceanReplayCorrectTime& oceanreplaycorrecttime() const;
  ::CMsgBotWorldState_Action_OceanReplayCorrectTime* release_oceanreplaycorrecttime();
  ::CMsgBotWorldState_Action_OceanReplayCorrectTime* mutable_oceanreplaycorrecttime();
  void set_allocated_oceanreplaycorrecttime(::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime);
  private:
  const ::CMsgBotWorldState_Action_OceanReplayCorrectTime& _internal_oceanreplaycorrecttime() const;
  ::CMsgBotWorldState_Action_OceanReplayCorrectTime* _internal_mutable_oceanreplaycorrecttime();
  public:
  void unsafe_arena_set_allocated_oceanreplaycorrecttime(
      ::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime);
  ::CMsgBotWorldState_Action_OceanReplayCorrectTime* unsafe_arena_release_oceanreplaycorrecttime();

  void clear_ActionData();
  ActionDataCase ActionData_case() const;
  // @@protoc_insertion_point(class_scope:CMsgBotWorldState.Action)
 private:
  class _Internal;
  void set_has_movetolocation();
  void set_has_movetotarget();
  void set_has_attackmove();
  void set_has_attacktarget();
  void set_has_castlocation();
  void set_has_casttarget();
  void set_has_casttree();
  void set_has_cast();
  void set_has_casttoggle();
  void set_has_holdlocation();
  void set_has_trainability();
  void set_has_dropitem();
  void set_has_pickupitem();
  void set_has_pickuprune();
  void set_has_purchaseitem();
  void set_has_sellitem();
  void set_has_disassembleitem();
  void set_has_setcombinelockitem();
  void set_has_stop();
  void set_has_chat();
  void set_has_swapitems();
  void set_has_useshrine();
  void set_has_courier();
  void set_has_getactualincomingdamage();
  void set_has_getestimateddamagetotarget();
  void set_has_glyph();
  void set_has_softreset();
  void set_has_buyback();
  void set_has_scriptingdebugdrawtext();
  void set_has_scriptingdebugdrawline();
  void set_has_scriptingdebugdrawscreentext();
  void set_has_scriptingdebugdrawbox();
  void set_has_scriptingdebugdrawcircle();
  void set_has_scriptingdebugdrawclear();
  void set_has_scriptingdebugscreentextpretty();
  void set_has_movedirectly();
  void set_has_oceanwingame();
  void set_has_oceanreplaycorrecttime();

  inline bool has_ActionData() const;
  inline void clear_has_ActionData();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int actiontype_;
  ::PROTOBUF_NAMESPACE_ID::int32 actiondelay_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_;
  ::PROTOBUF_NAMESPACE_ID::int32 actionid_;
  union ActionDataUnion {
    constexpr ActionDataUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::CMsgBotWorldState_Action_MoveToLocation* movetolocation_;
    ::CMsgBotWorldState_Action_MoveToTarget* movetotarget_;
    ::CMsgBotWorldState_Action_AttackMove* attackmove_;
    ::CMsgBotWorldState_Action_AttackTarget* attacktarget_;
    ::CMsgBotWorldState_Action_CastLocation* castlocation_;
    ::CMsgBotWorldState_Action_CastTarget* casttarget_;
    ::CMsgBotWorldState_Action_CastTree* casttree_;
    ::CMsgBotWorldState_Action_Cast* cast_;
    ::CMsgBotWorldState_Action_CastToggle* casttoggle_;
    ::CMsgBotWorldState_Action_HoldLocation* holdlocation_;
    ::CMsgBotWorldState_Action_TrainAbility* trainability_;
    ::CMsgBotWorldState_Action_DropItem* dropitem_;
    ::CMsgBotWorldState_Action_PickUpItem* pickupitem_;
    ::CMsgBotWorldState_Action_PickupRune* pickuprune_;
    ::CMsgBotWorldState_Action_PurchaseItem* purchaseitem_;
    ::CMsgBotWorldState_Action_SellItem* sellitem_;
    ::CMsgBotWorldState_Action_DisassembleItem* disassembleitem_;
    ::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem_;
    ::CMsgBotWorldState_Action_Stop* stop_;
    ::CMsgBotWorldState_Action_Chat* chat_;
    ::CMsgBotWorldState_Action_SwapItems* swapitems_;
    ::CMsgBotWorldState_Action_UseShrine* useshrine_;
    ::CMsgBotWorldState_Action_Courier* courier_;
    ::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage_;
    ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget_;
    ::CMsgBotWorldState_Action_Glyph* glyph_;
    ::CMsgBotWorldState_Action_SoftReset* softreset_;
    ::CMsgBotWorldState_Action_Buyback* buyback_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle_;
    ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear_;
    ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty_;
    ::CMsgBotWorldState_Action_MoveToLocation* movedirectly_;
    ::CMsgBotWorldState_Action_OceanWinGame* oceanwingame_;
    ::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime_;
  } ActionData_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// -------------------------------------------------------------------

class CMsgBotWorldState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgBotWorldState) */ {
 public:
  inline CMsgBotWorldState() : CMsgBotWorldState(nullptr) {}
  virtual ~CMsgBotWorldState();
  explicit constexpr CMsgBotWorldState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgBotWorldState(const CMsgBotWorldState& from);
  CMsgBotWorldState(CMsgBotWorldState&& from) noexcept
    : CMsgBotWorldState() {
    *this = ::std::move(from);
  }

  inline CMsgBotWorldState& operator=(const CMsgBotWorldState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgBotWorldState& operator=(CMsgBotWorldState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgBotWorldState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgBotWorldState* internal_default_instance() {
    return reinterpret_cast<const CMsgBotWorldState*>(
               &_CMsgBotWorldState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CMsgBotWorldState& a, CMsgBotWorldState& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgBotWorldState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgBotWorldState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgBotWorldState* New() const final {
    return CreateMaybeMessage<CMsgBotWorldState>(nullptr);
  }

  CMsgBotWorldState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgBotWorldState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgBotWorldState& from);
  void MergeFrom(const CMsgBotWorldState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgBotWorldState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgBotWorldState";
  }
  protected:
  explicit CMsgBotWorldState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgBotWorldState_Vector Vector;
  typedef CMsgBotWorldState_Player Player;
  typedef CMsgBotWorldState_Ability Ability;
  typedef CMsgBotWorldState_DroppedItem DroppedItem;
  typedef CMsgBotWorldState_RuneInfo RuneInfo;
  typedef CMsgBotWorldState_TeleportInfo TeleportInfo;
  typedef CMsgBotWorldState_Modifier Modifier;
  typedef CMsgBotWorldState_LinearProjectile LinearProjectile;
  typedef CMsgBotWorldState_TrackingProjectile TrackingProjectile;
  typedef CMsgBotWorldState_AvoidanceZone AvoidanceZone;
  typedef CMsgBotWorldState_Courier Courier;
  typedef CMsgBotWorldState_EventAbility EventAbility;
  typedef CMsgBotWorldState_EventDamage EventDamage;
  typedef CMsgBotWorldState_EventCourierKilled EventCourierKilled;
  typedef CMsgBotWorldState_EventRoshanKilled EventRoshanKilled;
  typedef CMsgBotWorldState_EventTree EventTree;
  typedef CMsgBotWorldState_Unit Unit;
  typedef CMsgBotWorldState_Actions Actions;
  typedef CMsgBotWorldState_Action Action;

  typedef CMsgBotWorldState_UnitType UnitType;
  static constexpr UnitType INVALID =
    CMsgBotWorldState_UnitType_INVALID;
  static constexpr UnitType HERO =
    CMsgBotWorldState_UnitType_HERO;
  static constexpr UnitType CREEP_HERO =
    CMsgBotWorldState_UnitType_CREEP_HERO;
  static constexpr UnitType LANE_CREEP =
    CMsgBotWorldState_UnitType_LANE_CREEP;
  static constexpr UnitType JUNGLE_CREEP =
    CMsgBotWorldState_UnitType_JUNGLE_CREEP;
  static constexpr UnitType ROSHAN =
    CMsgBotWorldState_UnitType_ROSHAN;
  static constexpr UnitType TOWER =
    CMsgBotWorldState_UnitType_TOWER;
  static constexpr UnitType BARRACKS =
    CMsgBotWorldState_UnitType_BARRACKS;
  static constexpr UnitType SHRINE =
    CMsgBotWorldState_UnitType_SHRINE;
  static constexpr UnitType FORT =
    CMsgBotWorldState_UnitType_FORT;
  static constexpr UnitType BUILDING =
    CMsgBotWorldState_UnitType_BUILDING;
  static constexpr UnitType COURIER =
    CMsgBotWorldState_UnitType_COURIER;
  static constexpr UnitType WARD =
    CMsgBotWorldState_UnitType_WARD;
  static inline bool UnitType_IsValid(int value) {
    return CMsgBotWorldState_UnitType_IsValid(value);
  }
  static constexpr UnitType UnitType_MIN =
    CMsgBotWorldState_UnitType_UnitType_MIN;
  static constexpr UnitType UnitType_MAX =
    CMsgBotWorldState_UnitType_UnitType_MAX;
  static constexpr int UnitType_ARRAYSIZE =
    CMsgBotWorldState_UnitType_UnitType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  UnitType_descriptor() {
    return CMsgBotWorldState_UnitType_descriptor();
  }
  template<typename T>
  static inline const std::string& UnitType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, UnitType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function UnitType_Name.");
    return CMsgBotWorldState_UnitType_Name(enum_t_value);
  }
  static inline bool UnitType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      UnitType* value) {
    return CMsgBotWorldState_UnitType_Parse(name, value);
  }

  typedef CMsgBotWorldState_CourierState CourierState;
  static constexpr CourierState COURIER_STATE_INIT =
    CMsgBotWorldState_CourierState_COURIER_STATE_INIT;
  static constexpr CourierState COURIER_STATE_IDLE =
    CMsgBotWorldState_CourierState_COURIER_STATE_IDLE;
  static constexpr CourierState COURIER_STATE_AT_BASE =
    CMsgBotWorldState_CourierState_COURIER_STATE_AT_BASE;
  static constexpr CourierState COURIER_STATE_MOVING =
    CMsgBotWorldState_CourierState_COURIER_STATE_MOVING;
  static constexpr CourierState COURIER_STATE_DELIVERING_ITEMS =
    CMsgBotWorldState_CourierState_COURIER_STATE_DELIVERING_ITEMS;
  static constexpr CourierState COURIER_STATE_RETURNING_TO_BASE =
    CMsgBotWorldState_CourierState_COURIER_STATE_RETURNING_TO_BASE;
  static constexpr CourierState COURIER_STATE_DEAD =
    CMsgBotWorldState_CourierState_COURIER_STATE_DEAD;
  static inline bool CourierState_IsValid(int value) {
    return CMsgBotWorldState_CourierState_IsValid(value);
  }
  static constexpr CourierState CourierState_MIN =
    CMsgBotWorldState_CourierState_CourierState_MIN;
  static constexpr CourierState CourierState_MAX =
    CMsgBotWorldState_CourierState_CourierState_MAX;
  static constexpr int CourierState_ARRAYSIZE =
    CMsgBotWorldState_CourierState_CourierState_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  CourierState_descriptor() {
    return CMsgBotWorldState_CourierState_descriptor();
  }
  template<typename T>
  static inline const std::string& CourierState_Name(T enum_t_value) {
    static_assert(::std::is_same<T, CourierState>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function CourierState_Name.");
    return CMsgBotWorldState_CourierState_Name(enum_t_value);
  }
  static inline bool CourierState_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      CourierState* value) {
    return CMsgBotWorldState_CourierState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPlayersFieldNumber = 10,
    kUnitsFieldNumber = 11,
    kDroppedItemsFieldNumber = 12,
    kRuneInfosFieldNumber = 13,
    kIncomingTeleportsFieldNumber = 14,
    kLinearProjectilesFieldNumber = 15,
    kAvoidanceZonesFieldNumber = 16,
    kCouriersFieldNumber = 17,
    kAbilityEventsFieldNumber = 20,
    kDamageEventsFieldNumber = 21,
    kCourierKilledEventsFieldNumber = 22,
    kRoshanKilledEventsFieldNumber = 23,
    kTreeEventsFieldNumber = 24,
    kDroppedItemsDeltasFieldNumber = 112,
    kRuneInfosDeltasFieldNumber = 113,
    kTeamIdFieldNumber = 1,
    kGameTimeFieldNumber = 2,
    kDotaTimeFieldNumber = 3,
    kGameStateFieldNumber = 4,
    kHeroPickStateFieldNumber = 5,
    kTimeOfDayFieldNumber = 6,
    kGlyphCooldownFieldNumber = 7,
    kGlyphCooldownEnemyFieldNumber = 8,
  };
  // repeated .CMsgBotWorldState.Player players = 10 [(.map_field) = true];
  int players_size() const;
  private:
  int _internal_players_size() const;
  public:
  void clear_players();
  ::CMsgBotWorldState_Player* mutable_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Player >*
      mutable_players();
  private:
  const ::CMsgBotWorldState_Player& _internal_players(int index) const;
  ::CMsgBotWorldState_Player* _internal_add_players();
  public:
  const ::CMsgBotWorldState_Player& players(int index) const;
  ::CMsgBotWorldState_Player* add_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Player >&
      players() const;

  // repeated .CMsgBotWorldState.Unit units = 11 [(.map_field) = true];
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  ::CMsgBotWorldState_Unit* mutable_units(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Unit >*
      mutable_units();
  private:
  const ::CMsgBotWorldState_Unit& _internal_units(int index) const;
  ::CMsgBotWorldState_Unit* _internal_add_units();
  public:
  const ::CMsgBotWorldState_Unit& units(int index) const;
  ::CMsgBotWorldState_Unit* add_units();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Unit >&
      units() const;

  // repeated .CMsgBotWorldState.DroppedItem dropped_items = 12 [(.diff_encode_field) = 112];
  int dropped_items_size() const;
  private:
  int _internal_dropped_items_size() const;
  public:
  void clear_dropped_items();
  ::CMsgBotWorldState_DroppedItem* mutable_dropped_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_DroppedItem >*
      mutable_dropped_items();
  private:
  const ::CMsgBotWorldState_DroppedItem& _internal_dropped_items(int index) const;
  ::CMsgBotWorldState_DroppedItem* _internal_add_dropped_items();
  public:
  const ::CMsgBotWorldState_DroppedItem& dropped_items(int index) const;
  ::CMsgBotWorldState_DroppedItem* add_dropped_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_DroppedItem >&
      dropped_items() const;

  // repeated .CMsgBotWorldState.RuneInfo rune_infos = 13 [(.diff_encode_field) = 113];
  int rune_infos_size() const;
  private:
  int _internal_rune_infos_size() const;
  public:
  void clear_rune_infos();
  ::CMsgBotWorldState_RuneInfo* mutable_rune_infos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_RuneInfo >*
      mutable_rune_infos();
  private:
  const ::CMsgBotWorldState_RuneInfo& _internal_rune_infos(int index) const;
  ::CMsgBotWorldState_RuneInfo* _internal_add_rune_infos();
  public:
  const ::CMsgBotWorldState_RuneInfo& rune_infos(int index) const;
  ::CMsgBotWorldState_RuneInfo* add_rune_infos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_RuneInfo >&
      rune_infos() const;

  // repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
  int incoming_teleports_size() const;
  private:
  int _internal_incoming_teleports_size() const;
  public:
  void clear_incoming_teleports();
  ::CMsgBotWorldState_TeleportInfo* mutable_incoming_teleports(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TeleportInfo >*
      mutable_incoming_teleports();
  private:
  const ::CMsgBotWorldState_TeleportInfo& _internal_incoming_teleports(int index) const;
  ::CMsgBotWorldState_TeleportInfo* _internal_add_incoming_teleports();
  public:
  const ::CMsgBotWorldState_TeleportInfo& incoming_teleports(int index) const;
  ::CMsgBotWorldState_TeleportInfo* add_incoming_teleports();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TeleportInfo >&
      incoming_teleports() const;

  // repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15 [(.map_field) = true];
  int linear_projectiles_size() const;
  private:
  int _internal_linear_projectiles_size() const;
  public:
  void clear_linear_projectiles();
  ::CMsgBotWorldState_LinearProjectile* mutable_linear_projectiles(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_LinearProjectile >*
      mutable_linear_projectiles();
  private:
  const ::CMsgBotWorldState_LinearProjectile& _internal_linear_projectiles(int index) const;
  ::CMsgBotWorldState_LinearProjectile* _internal_add_linear_projectiles();
  public:
  const ::CMsgBotWorldState_LinearProjectile& linear_projectiles(int index) const;
  ::CMsgBotWorldState_LinearProjectile* add_linear_projectiles();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_LinearProjectile >&
      linear_projectiles() const;

  // repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
  int avoidance_zones_size() const;
  private:
  int _internal_avoidance_zones_size() const;
  public:
  void clear_avoidance_zones();
  ::CMsgBotWorldState_AvoidanceZone* mutable_avoidance_zones(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_AvoidanceZone >*
      mutable_avoidance_zones();
  private:
  const ::CMsgBotWorldState_AvoidanceZone& _internal_avoidance_zones(int index) const;
  ::CMsgBotWorldState_AvoidanceZone* _internal_add_avoidance_zones();
  public:
  const ::CMsgBotWorldState_AvoidanceZone& avoidance_zones(int index) const;
  ::CMsgBotWorldState_AvoidanceZone* add_avoidance_zones();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_AvoidanceZone >&
      avoidance_zones() const;

  // repeated .CMsgBotWorldState.Courier couriers = 17 [(.map_field) = true];
  int couriers_size() const;
  private:
  int _internal_couriers_size() const;
  public:
  void clear_couriers();
  ::CMsgBotWorldState_Courier* mutable_couriers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Courier >*
      mutable_couriers();
  private:
  const ::CMsgBotWorldState_Courier& _internal_couriers(int index) const;
  ::CMsgBotWorldState_Courier* _internal_add_couriers();
  public:
  const ::CMsgBotWorldState_Courier& couriers(int index) const;
  ::CMsgBotWorldState_Courier* add_couriers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Courier >&
      couriers() const;

  // repeated .CMsgBotWorldState.EventAbility ability_events = 20;
  int ability_events_size() const;
  private:
  int _internal_ability_events_size() const;
  public:
  void clear_ability_events();
  ::CMsgBotWorldState_EventAbility* mutable_ability_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventAbility >*
      mutable_ability_events();
  private:
  const ::CMsgBotWorldState_EventAbility& _internal_ability_events(int index) const;
  ::CMsgBotWorldState_EventAbility* _internal_add_ability_events();
  public:
  const ::CMsgBotWorldState_EventAbility& ability_events(int index) const;
  ::CMsgBotWorldState_EventAbility* add_ability_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventAbility >&
      ability_events() const;

  // repeated .CMsgBotWorldState.EventDamage damage_events = 21;
  int damage_events_size() const;
  private:
  int _internal_damage_events_size() const;
  public:
  void clear_damage_events();
  ::CMsgBotWorldState_EventDamage* mutable_damage_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventDamage >*
      mutable_damage_events();
  private:
  const ::CMsgBotWorldState_EventDamage& _internal_damage_events(int index) const;
  ::CMsgBotWorldState_EventDamage* _internal_add_damage_events();
  public:
  const ::CMsgBotWorldState_EventDamage& damage_events(int index) const;
  ::CMsgBotWorldState_EventDamage* add_damage_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventDamage >&
      damage_events() const;

  // repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
  int courier_killed_events_size() const;
  private:
  int _internal_courier_killed_events_size() const;
  public:
  void clear_courier_killed_events();
  ::CMsgBotWorldState_EventCourierKilled* mutable_courier_killed_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventCourierKilled >*
      mutable_courier_killed_events();
  private:
  const ::CMsgBotWorldState_EventCourierKilled& _internal_courier_killed_events(int index) const;
  ::CMsgBotWorldState_EventCourierKilled* _internal_add_courier_killed_events();
  public:
  const ::CMsgBotWorldState_EventCourierKilled& courier_killed_events(int index) const;
  ::CMsgBotWorldState_EventCourierKilled* add_courier_killed_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventCourierKilled >&
      courier_killed_events() const;

  // repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
  int roshan_killed_events_size() const;
  private:
  int _internal_roshan_killed_events_size() const;
  public:
  void clear_roshan_killed_events();
  ::CMsgBotWorldState_EventRoshanKilled* mutable_roshan_killed_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventRoshanKilled >*
      mutable_roshan_killed_events();
  private:
  const ::CMsgBotWorldState_EventRoshanKilled& _internal_roshan_killed_events(int index) const;
  ::CMsgBotWorldState_EventRoshanKilled* _internal_add_roshan_killed_events();
  public:
  const ::CMsgBotWorldState_EventRoshanKilled& roshan_killed_events(int index) const;
  ::CMsgBotWorldState_EventRoshanKilled* add_roshan_killed_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventRoshanKilled >&
      roshan_killed_events() const;

  // repeated .CMsgBotWorldState.EventTree tree_events = 24;
  int tree_events_size() const;
  private:
  int _internal_tree_events_size() const;
  public:
  void clear_tree_events();
  ::CMsgBotWorldState_EventTree* mutable_tree_events(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventTree >*
      mutable_tree_events();
  private:
  const ::CMsgBotWorldState_EventTree& _internal_tree_events(int index) const;
  ::CMsgBotWorldState_EventTree* _internal_add_tree_events();
  public:
  const ::CMsgBotWorldState_EventTree& tree_events(int index) const;
  ::CMsgBotWorldState_EventTree* add_tree_events();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventTree >&
      tree_events() const;

  // repeated int32 dropped_items_deltas = 112;
  int dropped_items_deltas_size() const;
  private:
  int _internal_dropped_items_deltas_size() const;
  public:
  void clear_dropped_items_deltas();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dropped_items_deltas(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_dropped_items_deltas() const;
  void _internal_add_dropped_items_deltas(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_dropped_items_deltas();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 dropped_items_deltas(int index) const;
  void set_dropped_items_deltas(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_dropped_items_deltas(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      dropped_items_deltas() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_dropped_items_deltas();

  // repeated int32 rune_infos_deltas = 113;
  int rune_infos_deltas_size() const;
  private:
  int _internal_rune_infos_deltas_size() const;
  public:
  void clear_rune_infos_deltas();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rune_infos_deltas(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_rune_infos_deltas() const;
  void _internal_add_rune_infos_deltas(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_rune_infos_deltas();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 rune_infos_deltas(int index) const;
  void set_rune_infos_deltas(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_rune_infos_deltas(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      rune_infos_deltas() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_rune_infos_deltas();

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float game_time = 2;
  bool has_game_time() const;
  private:
  bool _internal_has_game_time() const;
  public:
  void clear_game_time();
  float game_time() const;
  void set_game_time(float value);
  private:
  float _internal_game_time() const;
  void _internal_set_game_time(float value);
  public:

  // optional float dota_time = 3;
  bool has_dota_time() const;
  private:
  bool _internal_has_dota_time() const;
  public:
  void clear_dota_time();
  float dota_time() const;
  void set_dota_time(float value);
  private:
  float _internal_dota_time() const;
  void _internal_set_dota_time(float value);
  public:

  // optional uint32 game_state = 4;
  bool has_game_state() const;
  private:
  bool _internal_has_game_state() const;
  public:
  void clear_game_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 game_state() const;
  void set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_game_state() const;
  void _internal_set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_pick_state = 5;
  bool has_hero_pick_state() const;
  private:
  bool _internal_has_hero_pick_state() const;
  public:
  void clear_hero_pick_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_pick_state() const;
  void set_hero_pick_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_pick_state() const;
  void _internal_set_hero_pick_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float time_of_day = 6;
  bool has_time_of_day() const;
  private:
  bool _internal_has_time_of_day() const;
  public:
  void clear_time_of_day();
  float time_of_day() const;
  void set_time_of_day(float value);
  private:
  float _internal_time_of_day() const;
  void _internal_set_time_of_day(float value);
  public:

  // optional float glyph_cooldown = 7;
  bool has_glyph_cooldown() const;
  private:
  bool _internal_has_glyph_cooldown() const;
  public:
  void clear_glyph_cooldown();
  float glyph_cooldown() const;
  void set_glyph_cooldown(float value);
  private:
  float _internal_glyph_cooldown() const;
  void _internal_set_glyph_cooldown(float value);
  public:

  // optional uint32 glyph_cooldown_enemy = 8;
  bool has_glyph_cooldown_enemy() const;
  private:
  bool _internal_has_glyph_cooldown_enemy() const;
  public:
  void clear_glyph_cooldown_enemy();
  ::PROTOBUF_NAMESPACE_ID::uint32 glyph_cooldown_enemy() const;
  void set_glyph_cooldown_enemy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_glyph_cooldown_enemy() const;
  void _internal_set_glyph_cooldown_enemy(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgBotWorldState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Player > players_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Unit > units_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_DroppedItem > dropped_items_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_RuneInfo > rune_infos_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TeleportInfo > incoming_teleports_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_LinearProjectile > linear_projectiles_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_AvoidanceZone > avoidance_zones_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Courier > couriers_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventAbility > ability_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventDamage > damage_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventCourierKilled > courier_killed_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventRoshanKilled > roshan_killed_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventTree > tree_events_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > dropped_items_deltas_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > rune_infos_deltas_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  float game_time_;
  float dota_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 game_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_pick_state_;
  float time_of_day_;
  float glyph_cooldown_;
  ::PROTOBUF_NAMESPACE_ID::uint32 glyph_cooldown_enemy_;
  friend struct ::TableStruct_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgBotWorldState_Vector

// optional float x = 1;
inline bool CMsgBotWorldState_Vector::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Vector::has_x() const {
  return _internal_has_x();
}
inline void CMsgBotWorldState_Vector::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgBotWorldState_Vector::_internal_x() const {
  return x_;
}
inline float CMsgBotWorldState_Vector::x() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Vector.x)
  return _internal_x();
}
inline void CMsgBotWorldState_Vector::_internal_set_x(float value) {
  _has_bits_[0] |= 0x00000001u;
  x_ = value;
}
inline void CMsgBotWorldState_Vector::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Vector.x)
}

// optional float y = 2;
inline bool CMsgBotWorldState_Vector::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Vector::has_y() const {
  return _internal_has_y();
}
inline void CMsgBotWorldState_Vector::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState_Vector::_internal_y() const {
  return y_;
}
inline float CMsgBotWorldState_Vector::y() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Vector.y)
  return _internal_y();
}
inline void CMsgBotWorldState_Vector::_internal_set_y(float value) {
  _has_bits_[0] |= 0x00000002u;
  y_ = value;
}
inline void CMsgBotWorldState_Vector::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Vector.y)
}

// optional float z = 3;
inline bool CMsgBotWorldState_Vector::_internal_has_z() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Vector::has_z() const {
  return _internal_has_z();
}
inline void CMsgBotWorldState_Vector::clear_z() {
  z_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState_Vector::_internal_z() const {
  return z_;
}
inline float CMsgBotWorldState_Vector::z() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Vector.z)
  return _internal_z();
}
inline void CMsgBotWorldState_Vector::_internal_set_z(float value) {
  _has_bits_[0] |= 0x00000004u;
  z_ = value;
}
inline void CMsgBotWorldState_Vector::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Vector.z)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Player

// optional int32 player_id = 1 [(.map_key) = true];
inline bool CMsgBotWorldState_Player::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgBotWorldState_Player::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Player::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Player::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.player_id)
  return _internal_player_id();
}
inline void CMsgBotWorldState_Player::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CMsgBotWorldState_Player::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.player_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgBotWorldState_Player::_internal_has_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CMsgBotWorldState_Player::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_hero_id() const {
  return hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::hero_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.hero_id)
  return _internal_hero_id();
}
inline void CMsgBotWorldState_Player::_internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
}
inline void CMsgBotWorldState_Player::set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.hero_id)
}

// optional bool is_alive = 3;
inline bool CMsgBotWorldState_Player::_internal_has_is_alive() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_is_alive() const {
  return _internal_has_is_alive();
}
inline void CMsgBotWorldState_Player::clear_is_alive() {
  is_alive_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgBotWorldState_Player::_internal_is_alive() const {
  return is_alive_;
}
inline bool CMsgBotWorldState_Player::is_alive() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.is_alive)
  return _internal_is_alive();
}
inline void CMsgBotWorldState_Player::_internal_set_is_alive(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_alive_ = value;
}
inline void CMsgBotWorldState_Player::set_is_alive(bool value) {
  _internal_set_is_alive(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.is_alive)
}

// optional float respawn_time = 4;
inline bool CMsgBotWorldState_Player::_internal_has_respawn_time() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_respawn_time() const {
  return _internal_has_respawn_time();
}
inline void CMsgBotWorldState_Player::clear_respawn_time() {
  respawn_time_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgBotWorldState_Player::_internal_respawn_time() const {
  return respawn_time_;
}
inline float CMsgBotWorldState_Player::respawn_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.respawn_time)
  return _internal_respawn_time();
}
inline void CMsgBotWorldState_Player::_internal_set_respawn_time(float value) {
  _has_bits_[0] |= 0x00000010u;
  respawn_time_ = value;
}
inline void CMsgBotWorldState_Player::set_respawn_time(float value) {
  _internal_set_respawn_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.respawn_time)
}

// optional uint32 kills = 5;
inline bool CMsgBotWorldState_Player::_internal_has_kills() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_kills() const {
  return _internal_has_kills();
}
inline void CMsgBotWorldState_Player::clear_kills() {
  kills_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_kills() const {
  return kills_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::kills() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.kills)
  return _internal_kills();
}
inline void CMsgBotWorldState_Player::_internal_set_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  kills_ = value;
}
inline void CMsgBotWorldState_Player::set_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_kills(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.kills)
}

// optional uint32 deaths = 6;
inline bool CMsgBotWorldState_Player::_internal_has_deaths() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_deaths() const {
  return _internal_has_deaths();
}
inline void CMsgBotWorldState_Player::clear_deaths() {
  deaths_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_deaths() const {
  return deaths_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::deaths() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.deaths)
  return _internal_deaths();
}
inline void CMsgBotWorldState_Player::_internal_set_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  deaths_ = value;
}
inline void CMsgBotWorldState_Player::set_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_deaths(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.deaths)
}

// optional uint32 assists = 7;
inline bool CMsgBotWorldState_Player::_internal_has_assists() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_assists() const {
  return _internal_has_assists();
}
inline void CMsgBotWorldState_Player::clear_assists() {
  assists_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_assists() const {
  return assists_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::assists() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.assists)
  return _internal_assists();
}
inline void CMsgBotWorldState_Player::_internal_set_assists(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  assists_ = value;
}
inline void CMsgBotWorldState_Player::set_assists(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_assists(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.assists)
}

// optional uint32 team_id = 8;
inline bool CMsgBotWorldState_Player::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgBotWorldState_Player::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.team_id)
  return _internal_team_id();
}
inline void CMsgBotWorldState_Player::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  team_id_ = value;
}
inline void CMsgBotWorldState_Player::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.team_id)
}

// optional uint32 primary_unit_handle = 9;
inline bool CMsgBotWorldState_Player::_internal_has_primary_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_primary_unit_handle() const {
  return _internal_has_primary_unit_handle();
}
inline void CMsgBotWorldState_Player::clear_primary_unit_handle() {
  primary_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::_internal_primary_unit_handle() const {
  return primary_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Player::primary_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.primary_unit_handle)
  return _internal_primary_unit_handle();
}
inline void CMsgBotWorldState_Player::_internal_set_primary_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  primary_unit_handle_ = value;
}
inline void CMsgBotWorldState_Player::set_primary_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_primary_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.primary_unit_handle)
}

// optional int32 mmr = 10;
inline bool CMsgBotWorldState_Player::_internal_has_mmr() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Player::has_mmr() const {
  return _internal_has_mmr();
}
inline void CMsgBotWorldState_Player::clear_mmr() {
  mmr_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Player::_internal_mmr() const {
  return mmr_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Player::mmr() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.mmr)
  return _internal_mmr();
}
inline void CMsgBotWorldState_Player::_internal_set_mmr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  mmr_ = value;
}
inline void CMsgBotWorldState_Player::set_mmr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mmr(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Player.mmr)
}

// optional .CMsgBotWorldState.Vector location = 11;
inline bool CMsgBotWorldState_Player::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Player::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Player::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Player::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Player::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Player.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Player::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Player.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Player::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Player::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Player.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Player::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Player::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Player.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Player::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Player.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Ability

// optional uint32 handle = 1 [(.map_key) = true];
inline bool CMsgBotWorldState_Ability::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_Ability::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_Ability::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  handle_ = value;
}
inline void CMsgBotWorldState_Ability::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.handle)
}

// optional uint32 ability_id = 2;
inline bool CMsgBotWorldState_Ability::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_Ability::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_Ability::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_Ability::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.ability_id)
}

// optional uint32 slot = 3;
inline bool CMsgBotWorldState_Ability::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_slot() const {
  return _internal_has_slot();
}
inline void CMsgBotWorldState_Ability::clear_slot() {
  slot_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::slot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.slot)
  return _internal_slot();
}
inline void CMsgBotWorldState_Ability::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  slot_ = value;
}
inline void CMsgBotWorldState_Ability::set_slot(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.slot)
}

// optional uint32 caster_handle = 5;
inline bool CMsgBotWorldState_Ability::_internal_has_caster_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_caster_handle() const {
  return _internal_has_caster_handle();
}
inline void CMsgBotWorldState_Ability::clear_caster_handle() {
  caster_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_caster_handle() const {
  return caster_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::caster_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.caster_handle)
  return _internal_caster_handle();
}
inline void CMsgBotWorldState_Ability::_internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  caster_handle_ = value;
}
inline void CMsgBotWorldState_Ability::set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_caster_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.caster_handle)
}

// optional uint32 level = 6;
inline bool CMsgBotWorldState_Ability::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_level() const {
  return _internal_has_level();
}
inline void CMsgBotWorldState_Ability::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::level() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.level)
  return _internal_level();
}
inline void CMsgBotWorldState_Ability::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  level_ = value;
}
inline void CMsgBotWorldState_Ability::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.level)
}

// optional uint32 cast_range = 10;
inline bool CMsgBotWorldState_Ability::_internal_has_cast_range() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_cast_range() const {
  return _internal_has_cast_range();
}
inline void CMsgBotWorldState_Ability::clear_cast_range() {
  cast_range_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_cast_range() const {
  return cast_range_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::cast_range() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.cast_range)
  return _internal_cast_range();
}
inline void CMsgBotWorldState_Ability::_internal_set_cast_range(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  cast_range_ = value;
}
inline void CMsgBotWorldState_Ability::set_cast_range(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cast_range(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.cast_range)
}

// optional float channel_time = 11;
inline bool CMsgBotWorldState_Ability::_internal_has_channel_time() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_channel_time() const {
  return _internal_has_channel_time();
}
inline void CMsgBotWorldState_Ability::clear_channel_time() {
  channel_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgBotWorldState_Ability::_internal_channel_time() const {
  return channel_time_;
}
inline float CMsgBotWorldState_Ability::channel_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.channel_time)
  return _internal_channel_time();
}
inline void CMsgBotWorldState_Ability::_internal_set_channel_time(float value) {
  _has_bits_[0] |= 0x00000040u;
  channel_time_ = value;
}
inline void CMsgBotWorldState_Ability::set_channel_time(float value) {
  _internal_set_channel_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.channel_time)
}

// optional float cooldown_remaining = 12 [default = 0];
inline bool CMsgBotWorldState_Ability::_internal_has_cooldown_remaining() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_cooldown_remaining() const {
  return _internal_has_cooldown_remaining();
}
inline void CMsgBotWorldState_Ability::clear_cooldown_remaining() {
  cooldown_remaining_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CMsgBotWorldState_Ability::_internal_cooldown_remaining() const {
  return cooldown_remaining_;
}
inline float CMsgBotWorldState_Ability::cooldown_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.cooldown_remaining)
  return _internal_cooldown_remaining();
}
inline void CMsgBotWorldState_Ability::_internal_set_cooldown_remaining(float value) {
  _has_bits_[0] |= 0x00000080u;
  cooldown_remaining_ = value;
}
inline void CMsgBotWorldState_Ability::set_cooldown_remaining(float value) {
  _internal_set_cooldown_remaining(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.cooldown_remaining)
}

// optional bool is_activated = 20;
inline bool CMsgBotWorldState_Ability::_internal_has_is_activated() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_activated() const {
  return _internal_has_is_activated();
}
inline void CMsgBotWorldState_Ability::clear_is_activated() {
  is_activated_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_activated() const {
  return is_activated_;
}
inline bool CMsgBotWorldState_Ability::is_activated() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_activated)
  return _internal_is_activated();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_activated(bool value) {
  _has_bits_[0] |= 0x00000100u;
  is_activated_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_activated(bool value) {
  _internal_set_is_activated(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_activated)
}

// optional bool is_toggled = 21;
inline bool CMsgBotWorldState_Ability::_internal_has_is_toggled() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_toggled() const {
  return _internal_has_is_toggled();
}
inline void CMsgBotWorldState_Ability::clear_is_toggled() {
  is_toggled_ = false;
  _has_bits_[0] &= ~0x00000200u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_toggled() const {
  return is_toggled_;
}
inline bool CMsgBotWorldState_Ability::is_toggled() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_toggled)
  return _internal_is_toggled();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_toggled(bool value) {
  _has_bits_[0] |= 0x00000200u;
  is_toggled_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_toggled(bool value) {
  _internal_set_is_toggled(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_toggled)
}

// optional bool is_in_ability_phase = 22;
inline bool CMsgBotWorldState_Ability::_internal_has_is_in_ability_phase() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_in_ability_phase() const {
  return _internal_has_is_in_ability_phase();
}
inline void CMsgBotWorldState_Ability::clear_is_in_ability_phase() {
  is_in_ability_phase_ = false;
  _has_bits_[0] &= ~0x00000400u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_in_ability_phase() const {
  return is_in_ability_phase_;
}
inline bool CMsgBotWorldState_Ability::is_in_ability_phase() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_in_ability_phase)
  return _internal_is_in_ability_phase();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_in_ability_phase(bool value) {
  _has_bits_[0] |= 0x00000400u;
  is_in_ability_phase_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_in_ability_phase(bool value) {
  _internal_set_is_in_ability_phase(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_in_ability_phase)
}

// optional bool is_channeling = 23;
inline bool CMsgBotWorldState_Ability::_internal_has_is_channeling() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_channeling() const {
  return _internal_has_is_channeling();
}
inline void CMsgBotWorldState_Ability::clear_is_channeling() {
  is_channeling_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_channeling() const {
  return is_channeling_;
}
inline bool CMsgBotWorldState_Ability::is_channeling() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_channeling)
  return _internal_is_channeling();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_channeling(bool value) {
  _has_bits_[0] |= 0x00000800u;
  is_channeling_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_channeling(bool value) {
  _internal_set_is_channeling(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_channeling)
}

// optional bool is_stolen = 24;
inline bool CMsgBotWorldState_Ability::_internal_has_is_stolen() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_stolen() const {
  return _internal_has_is_stolen();
}
inline void CMsgBotWorldState_Ability::clear_is_stolen() {
  is_stolen_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_stolen() const {
  return is_stolen_;
}
inline bool CMsgBotWorldState_Ability::is_stolen() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_stolen)
  return _internal_is_stolen();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_stolen(bool value) {
  _has_bits_[0] |= 0x00001000u;
  is_stolen_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_stolen(bool value) {
  _internal_set_is_stolen(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_stolen)
}

// optional bool is_fully_castable = 25;
inline bool CMsgBotWorldState_Ability::_internal_has_is_fully_castable() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_fully_castable() const {
  return _internal_has_is_fully_castable();
}
inline void CMsgBotWorldState_Ability::clear_is_fully_castable() {
  is_fully_castable_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_fully_castable() const {
  return is_fully_castable_;
}
inline bool CMsgBotWorldState_Ability::is_fully_castable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_fully_castable)
  return _internal_is_fully_castable();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_fully_castable(bool value) {
  _has_bits_[0] |= 0x00002000u;
  is_fully_castable_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_fully_castable(bool value) {
  _internal_set_is_fully_castable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_fully_castable)
}

// optional uint32 charges = 30;
inline bool CMsgBotWorldState_Ability::_internal_has_charges() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_charges() const {
  return _internal_has_charges();
}
inline void CMsgBotWorldState_Ability::clear_charges() {
  charges_ = 0u;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_charges() const {
  return charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::charges() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.charges)
  return _internal_charges();
}
inline void CMsgBotWorldState_Ability::_internal_set_charges(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00008000u;
  charges_ = value;
}
inline void CMsgBotWorldState_Ability::set_charges(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_charges(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.charges)
}

// optional uint32 secondary_charges = 31;
inline bool CMsgBotWorldState_Ability::_internal_has_secondary_charges() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_secondary_charges() const {
  return _internal_has_secondary_charges();
}
inline void CMsgBotWorldState_Ability::clear_secondary_charges() {
  secondary_charges_ = 0u;
  _has_bits_[0] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::_internal_secondary_charges() const {
  return secondary_charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Ability::secondary_charges() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.secondary_charges)
  return _internal_secondary_charges();
}
inline void CMsgBotWorldState_Ability::_internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00010000u;
  secondary_charges_ = value;
}
inline void CMsgBotWorldState_Ability::set_secondary_charges(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_secondary_charges(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.secondary_charges)
}

// optional bool is_combined_locked = 40;
inline bool CMsgBotWorldState_Ability::_internal_has_is_combined_locked() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_is_combined_locked() const {
  return _internal_has_is_combined_locked();
}
inline void CMsgBotWorldState_Ability::clear_is_combined_locked() {
  is_combined_locked_ = false;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool CMsgBotWorldState_Ability::_internal_is_combined_locked() const {
  return is_combined_locked_;
}
inline bool CMsgBotWorldState_Ability::is_combined_locked() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.is_combined_locked)
  return _internal_is_combined_locked();
}
inline void CMsgBotWorldState_Ability::_internal_set_is_combined_locked(bool value) {
  _has_bits_[0] |= 0x00004000u;
  is_combined_locked_ = value;
}
inline void CMsgBotWorldState_Ability::set_is_combined_locked(bool value) {
  _internal_set_is_combined_locked(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.is_combined_locked)
}

// optional int32 power_treads_stat = 50 [default = -1];
inline bool CMsgBotWorldState_Ability::_internal_has_power_treads_stat() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Ability::has_power_treads_stat() const {
  return _internal_has_power_treads_stat();
}
inline void CMsgBotWorldState_Ability::clear_power_treads_stat() {
  power_treads_stat_ = -1;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Ability::_internal_power_treads_stat() const {
  return power_treads_stat_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Ability::power_treads_stat() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Ability.power_treads_stat)
  return _internal_power_treads_stat();
}
inline void CMsgBotWorldState_Ability::_internal_set_power_treads_stat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  power_treads_stat_ = value;
}
inline void CMsgBotWorldState_Ability::set_power_treads_stat(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_power_treads_stat(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Ability.power_treads_stat)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_DroppedItem

// optional uint32 item_id = 1;
inline bool CMsgBotWorldState_DroppedItem::_internal_has_item_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_DroppedItem::has_item_id() const {
  return _internal_has_item_id();
}
inline void CMsgBotWorldState_DroppedItem::clear_item_id() {
  item_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_DroppedItem::_internal_item_id() const {
  return item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_DroppedItem::item_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.DroppedItem.item_id)
  return _internal_item_id();
}
inline void CMsgBotWorldState_DroppedItem::_internal_set_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_id_ = value;
}
inline void CMsgBotWorldState_DroppedItem::set_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.DroppedItem.item_id)
}

// optional .CMsgBotWorldState.Vector location = 2;
inline bool CMsgBotWorldState_DroppedItem::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_DroppedItem::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_DroppedItem::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_DroppedItem::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_DroppedItem::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.DroppedItem.location)
  return _internal_location();
}
inline void CMsgBotWorldState_DroppedItem::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.DroppedItem.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_DroppedItem::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_DroppedItem::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.DroppedItem.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_DroppedItem::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_DroppedItem::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.DroppedItem.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_DroppedItem::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.DroppedItem.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_RuneInfo

// optional int32 type = 1;
inline bool CMsgBotWorldState_RuneInfo::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_RuneInfo::has_type() const {
  return _internal_has_type();
}
inline void CMsgBotWorldState_RuneInfo::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_RuneInfo::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_RuneInfo::type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.RuneInfo.type)
  return _internal_type();
}
inline void CMsgBotWorldState_RuneInfo::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void CMsgBotWorldState_RuneInfo::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.RuneInfo.type)
}

// optional .CMsgBotWorldState.Vector location = 2;
inline bool CMsgBotWorldState_RuneInfo::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_RuneInfo::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_RuneInfo::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_RuneInfo::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_RuneInfo::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.RuneInfo.location)
  return _internal_location();
}
inline void CMsgBotWorldState_RuneInfo::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.RuneInfo.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_RuneInfo::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_RuneInfo::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.RuneInfo.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_RuneInfo::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_RuneInfo::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.RuneInfo.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_RuneInfo::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.RuneInfo.location)
}

// optional uint32 status = 3;
inline bool CMsgBotWorldState_RuneInfo::_internal_has_status() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_RuneInfo::has_status() const {
  return _internal_has_status();
}
inline void CMsgBotWorldState_RuneInfo::clear_status() {
  status_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_RuneInfo::_internal_status() const {
  return status_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_RuneInfo::status() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.RuneInfo.status)
  return _internal_status();
}
inline void CMsgBotWorldState_RuneInfo::_internal_set_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  status_ = value;
}
inline void CMsgBotWorldState_RuneInfo::set_status(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.RuneInfo.status)
}

// optional float time_since_seen = 4;
inline bool CMsgBotWorldState_RuneInfo::_internal_has_time_since_seen() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_RuneInfo::has_time_since_seen() const {
  return _internal_has_time_since_seen();
}
inline void CMsgBotWorldState_RuneInfo::clear_time_since_seen() {
  time_since_seen_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_RuneInfo::_internal_time_since_seen() const {
  return time_since_seen_;
}
inline float CMsgBotWorldState_RuneInfo::time_since_seen() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.RuneInfo.time_since_seen)
  return _internal_time_since_seen();
}
inline void CMsgBotWorldState_RuneInfo::_internal_set_time_since_seen(float value) {
  _has_bits_[0] |= 0x00000008u;
  time_since_seen_ = value;
}
inline void CMsgBotWorldState_RuneInfo::set_time_since_seen(float value) {
  _internal_set_time_since_seen(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.RuneInfo.time_since_seen)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_TeleportInfo

// optional int32 player_id = 1;
inline bool CMsgBotWorldState_TeleportInfo::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TeleportInfo::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgBotWorldState_TeleportInfo::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_TeleportInfo::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_TeleportInfo::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TeleportInfo.player_id)
  return _internal_player_id();
}
inline void CMsgBotWorldState_TeleportInfo::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CMsgBotWorldState_TeleportInfo::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TeleportInfo.player_id)
}

// optional .CMsgBotWorldState.Vector location = 2;
inline bool CMsgBotWorldState_TeleportInfo::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_TeleportInfo::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_TeleportInfo::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_TeleportInfo::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_TeleportInfo::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TeleportInfo.location)
  return _internal_location();
}
inline void CMsgBotWorldState_TeleportInfo::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.TeleportInfo.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TeleportInfo::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TeleportInfo::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.TeleportInfo.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TeleportInfo::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TeleportInfo::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.TeleportInfo.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_TeleportInfo::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.TeleportInfo.location)
}

// optional float time_remaining = 3;
inline bool CMsgBotWorldState_TeleportInfo::_internal_has_time_remaining() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TeleportInfo::has_time_remaining() const {
  return _internal_has_time_remaining();
}
inline void CMsgBotWorldState_TeleportInfo::clear_time_remaining() {
  time_remaining_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState_TeleportInfo::_internal_time_remaining() const {
  return time_remaining_;
}
inline float CMsgBotWorldState_TeleportInfo::time_remaining() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TeleportInfo.time_remaining)
  return _internal_time_remaining();
}
inline void CMsgBotWorldState_TeleportInfo::_internal_set_time_remaining(float value) {
  _has_bits_[0] |= 0x00000004u;
  time_remaining_ = value;
}
inline void CMsgBotWorldState_TeleportInfo::set_time_remaining(float value) {
  _internal_set_time_remaining(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TeleportInfo.time_remaining)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Modifier

// optional uint32 handle = 7 [(.map_key) = true];
inline bool CMsgBotWorldState_Modifier::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_Modifier::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_Modifier::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  handle_ = value;
}
inline void CMsgBotWorldState_Modifier::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.handle)
}

// optional string name = 1;
inline bool CMsgBotWorldState_Modifier::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_name() const {
  return _internal_has_name();
}
inline void CMsgBotWorldState_Modifier::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Modifier::name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.name)
  return _internal_name();
}
inline void CMsgBotWorldState_Modifier::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.name)
}
inline std::string* CMsgBotWorldState_Modifier::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Modifier.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgBotWorldState_Modifier::_internal_name() const {
  return name_.Get();
}
inline void CMsgBotWorldState_Modifier::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Modifier::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Modifier.name)
}
inline void CMsgBotWorldState_Modifier::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Modifier.name)
}
inline void CMsgBotWorldState_Modifier::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Modifier.name)
}
inline std::string* CMsgBotWorldState_Modifier::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Modifier::release_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Modifier.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Modifier::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Modifier.name)
}

// optional uint32 stack_count = 2;
inline bool CMsgBotWorldState_Modifier::_internal_has_stack_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_stack_count() const {
  return _internal_has_stack_count();
}
inline void CMsgBotWorldState_Modifier::clear_stack_count() {
  stack_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::_internal_stack_count() const {
  return stack_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::stack_count() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.stack_count)
  return _internal_stack_count();
}
inline void CMsgBotWorldState_Modifier::_internal_set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stack_count_ = value;
}
inline void CMsgBotWorldState_Modifier::set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stack_count(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.stack_count)
}

// optional uint32 ability_handle = 3;
inline bool CMsgBotWorldState_Modifier::_internal_has_ability_handle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_ability_handle() const {
  return _internal_has_ability_handle();
}
inline void CMsgBotWorldState_Modifier::clear_ability_handle() {
  ability_handle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::_internal_ability_handle() const {
  return ability_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.ability_handle)
  return _internal_ability_handle();
}
inline void CMsgBotWorldState_Modifier::_internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ability_handle_ = value;
}
inline void CMsgBotWorldState_Modifier::set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.ability_handle)
}

// optional uint32 ability_id = 4;
inline bool CMsgBotWorldState_Modifier::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_Modifier::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_Modifier::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_Modifier::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.ability_id)
}

// optional float remaining_duration = 5;
inline bool CMsgBotWorldState_Modifier::_internal_has_remaining_duration() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Modifier::has_remaining_duration() const {
  return _internal_has_remaining_duration();
}
inline void CMsgBotWorldState_Modifier::clear_remaining_duration() {
  remaining_duration_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgBotWorldState_Modifier::_internal_remaining_duration() const {
  return remaining_duration_;
}
inline float CMsgBotWorldState_Modifier::remaining_duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.remaining_duration)
  return _internal_remaining_duration();
}
inline void CMsgBotWorldState_Modifier::_internal_set_remaining_duration(float value) {
  _has_bits_[0] |= 0x00000010u;
  remaining_duration_ = value;
}
inline void CMsgBotWorldState_Modifier::set_remaining_duration(float value) {
  _internal_set_remaining_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.remaining_duration)
}

// repeated uint32 auxiliary_units_handles = 6;
inline int CMsgBotWorldState_Modifier::_internal_auxiliary_units_handles_size() const {
  return auxiliary_units_handles_.size();
}
inline int CMsgBotWorldState_Modifier::auxiliary_units_handles_size() const {
  return _internal_auxiliary_units_handles_size();
}
inline void CMsgBotWorldState_Modifier::clear_auxiliary_units_handles() {
  auxiliary_units_handles_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::_internal_auxiliary_units_handles(int index) const {
  return auxiliary_units_handles_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Modifier::auxiliary_units_handles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Modifier.auxiliary_units_handles)
  return _internal_auxiliary_units_handles(index);
}
inline void CMsgBotWorldState_Modifier::set_auxiliary_units_handles(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  auxiliary_units_handles_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Modifier.auxiliary_units_handles)
}
inline void CMsgBotWorldState_Modifier::_internal_add_auxiliary_units_handles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  auxiliary_units_handles_.Add(value);
}
inline void CMsgBotWorldState_Modifier::add_auxiliary_units_handles(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_auxiliary_units_handles(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Modifier.auxiliary_units_handles)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgBotWorldState_Modifier::_internal_auxiliary_units_handles() const {
  return auxiliary_units_handles_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgBotWorldState_Modifier::auxiliary_units_handles() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Modifier.auxiliary_units_handles)
  return _internal_auxiliary_units_handles();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgBotWorldState_Modifier::_internal_mutable_auxiliary_units_handles() {
  return &auxiliary_units_handles_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgBotWorldState_Modifier::mutable_auxiliary_units_handles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Modifier.auxiliary_units_handles)
  return _internal_mutable_auxiliary_units_handles();
}

// -------------------------------------------------------------------

// CMsgBotWorldState_LinearProjectile

// optional uint32 handle = 1 [(.map_key) = true];
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_LinearProjectile::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  handle_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.handle)
}

// optional uint32 caster_handle = 2;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_caster_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_caster_handle() const {
  return _internal_has_caster_handle();
}
inline void CMsgBotWorldState_LinearProjectile::clear_caster_handle() {
  caster_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::_internal_caster_handle() const {
  return caster_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::caster_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.caster_handle)
  return _internal_caster_handle();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  caster_handle_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_caster_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.caster_handle)
}

// optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_caster_unit_type() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_caster_unit_type() const {
  return _internal_has_caster_unit_type();
}
inline void CMsgBotWorldState_LinearProjectile::clear_caster_unit_type() {
  caster_unit_type_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_LinearProjectile::_internal_caster_unit_type() const {
  return static_cast< ::CMsgBotWorldState_UnitType >(caster_unit_type_);
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_LinearProjectile::caster_unit_type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.caster_unit_type)
  return _internal_caster_unit_type();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  assert(::CMsgBotWorldState_UnitType_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  caster_unit_type_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  _internal_set_caster_unit_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.caster_unit_type)
}

// optional int32 caster_player_id = 3;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_caster_player_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_caster_player_id() const {
  return _internal_has_caster_player_id();
}
inline void CMsgBotWorldState_LinearProjectile::clear_caster_player_id() {
  caster_player_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_LinearProjectile::_internal_caster_player_id() const {
  return caster_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_LinearProjectile::caster_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.caster_player_id)
  return _internal_caster_player_id();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  caster_player_id_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caster_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.caster_player_id)
}

// optional uint32 ability_handle = 4;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_ability_handle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_ability_handle() const {
  return _internal_has_ability_handle();
}
inline void CMsgBotWorldState_LinearProjectile::clear_ability_handle() {
  ability_handle_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::_internal_ability_handle() const {
  return ability_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.ability_handle)
  return _internal_ability_handle();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ability_handle_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.ability_handle)
}

// optional uint32 ability_id = 5;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_LinearProjectile::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.ability_id)
}

// optional .CMsgBotWorldState.Vector location = 6;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_LinearProjectile::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_LinearProjectile::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_LinearProjectile::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.location)
  return _internal_location();
}
inline void CMsgBotWorldState_LinearProjectile::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.LinearProjectile.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.LinearProjectile.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.LinearProjectile.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_LinearProjectile::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.LinearProjectile.location)
}

// optional .CMsgBotWorldState.Vector velocity = 7;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_velocity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || velocity_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_velocity() const {
  return _internal_has_velocity();
}
inline void CMsgBotWorldState_LinearProjectile::clear_velocity() {
  if (velocity_ != nullptr) velocity_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_LinearProjectile::_internal_velocity() const {
  const ::CMsgBotWorldState_Vector* p = velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_LinearProjectile::velocity() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.velocity)
  return _internal_velocity();
}
inline void CMsgBotWorldState_LinearProjectile::unsafe_arena_set_allocated_velocity(
    ::CMsgBotWorldState_Vector* velocity) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(velocity_);
  }
  velocity_ = velocity;
  if (velocity) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.LinearProjectile.velocity)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::release_velocity() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = velocity_;
  velocity_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::unsafe_arena_release_velocity() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.LinearProjectile.velocity)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = velocity_;
  velocity_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::_internal_mutable_velocity() {
  _has_bits_[0] |= 0x00000002u;
  if (velocity_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    velocity_ = p;
  }
  return velocity_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_LinearProjectile::mutable_velocity() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.LinearProjectile.velocity)
  return _internal_mutable_velocity();
}
inline void CMsgBotWorldState_LinearProjectile::set_allocated_velocity(::CMsgBotWorldState_Vector* velocity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete velocity_;
  }
  if (velocity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(velocity);
    if (message_arena != submessage_arena) {
      velocity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, velocity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  velocity_ = velocity;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.LinearProjectile.velocity)
}

// optional uint32 radius = 8;
inline bool CMsgBotWorldState_LinearProjectile::_internal_has_radius() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_LinearProjectile::has_radius() const {
  return _internal_has_radius();
}
inline void CMsgBotWorldState_LinearProjectile::clear_radius() {
  radius_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::_internal_radius() const {
  return radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_LinearProjectile::radius() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.LinearProjectile.radius)
  return _internal_radius();
}
inline void CMsgBotWorldState_LinearProjectile::_internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  radius_ = value;
}
inline void CMsgBotWorldState_LinearProjectile::set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.LinearProjectile.radius)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_TrackingProjectile

// optional uint32 handle = 10 [(.map_key) = true];
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  handle_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.handle)
}

// optional uint32 caster_handle = 1;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_caster_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_caster_handle() const {
  return _internal_has_caster_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_caster_handle() {
  caster_handle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::_internal_caster_handle() const {
  return caster_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::caster_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.caster_handle)
  return _internal_caster_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  caster_handle_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_caster_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.caster_handle)
}

// optional .CMsgBotWorldState.UnitType caster_unit_type = 9 [default = INVALID];
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_caster_unit_type() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_caster_unit_type() const {
  return _internal_has_caster_unit_type();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_caster_unit_type() {
  caster_unit_type_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_TrackingProjectile::_internal_caster_unit_type() const {
  return static_cast< ::CMsgBotWorldState_UnitType >(caster_unit_type_);
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_TrackingProjectile::caster_unit_type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.caster_unit_type)
  return _internal_caster_unit_type();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  assert(::CMsgBotWorldState_UnitType_IsValid(value));
  _has_bits_[0] |= 0x00000100u;
  caster_unit_type_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  _internal_set_caster_unit_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.caster_unit_type)
}

// optional int32 caster_player_id = 2;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_caster_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_caster_player_id() const {
  return _internal_has_caster_player_id();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_caster_player_id() {
  caster_player_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_TrackingProjectile::_internal_caster_player_id() const {
  return caster_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_TrackingProjectile::caster_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.caster_player_id)
  return _internal_caster_player_id();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  caster_player_id_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caster_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.caster_player_id)
}

// optional uint32 ability_handle = 3;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_ability_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_ability_handle() const {
  return _internal_has_ability_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_ability_handle() {
  ability_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::_internal_ability_handle() const {
  return ability_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.ability_handle)
  return _internal_ability_handle();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ability_handle_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.ability_handle)
}

// optional uint32 ability_id = 4;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.ability_id)
}

// optional .CMsgBotWorldState.Vector location = 5;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_TrackingProjectile::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_TrackingProjectile::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.location)
  return _internal_location();
}
inline void CMsgBotWorldState_TrackingProjectile::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.TrackingProjectile.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TrackingProjectile::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TrackingProjectile::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.TrackingProjectile.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TrackingProjectile::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_TrackingProjectile::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.TrackingProjectile.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_TrackingProjectile::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.TrackingProjectile.location)
}

// optional uint32 velocity = 6;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_velocity() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_velocity() const {
  return _internal_has_velocity();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_velocity() {
  velocity_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::_internal_velocity() const {
  return velocity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_TrackingProjectile::velocity() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.velocity)
  return _internal_velocity();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_velocity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  velocity_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_velocity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_velocity(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.velocity)
}

// optional bool is_dodgeable = 7;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_is_dodgeable() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_is_dodgeable() const {
  return _internal_has_is_dodgeable();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_is_dodgeable() {
  is_dodgeable_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgBotWorldState_TrackingProjectile::_internal_is_dodgeable() const {
  return is_dodgeable_;
}
inline bool CMsgBotWorldState_TrackingProjectile::is_dodgeable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.is_dodgeable)
  return _internal_is_dodgeable();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_is_dodgeable(bool value) {
  _has_bits_[0] |= 0x00000040u;
  is_dodgeable_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_is_dodgeable(bool value) {
  _internal_set_is_dodgeable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.is_dodgeable)
}

// optional bool is_attack = 8;
inline bool CMsgBotWorldState_TrackingProjectile::_internal_has_is_attack() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_TrackingProjectile::has_is_attack() const {
  return _internal_has_is_attack();
}
inline void CMsgBotWorldState_TrackingProjectile::clear_is_attack() {
  is_attack_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CMsgBotWorldState_TrackingProjectile::_internal_is_attack() const {
  return is_attack_;
}
inline bool CMsgBotWorldState_TrackingProjectile::is_attack() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.TrackingProjectile.is_attack)
  return _internal_is_attack();
}
inline void CMsgBotWorldState_TrackingProjectile::_internal_set_is_attack(bool value) {
  _has_bits_[0] |= 0x00000080u;
  is_attack_ = value;
}
inline void CMsgBotWorldState_TrackingProjectile::set_is_attack(bool value) {
  _internal_set_is_attack(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.TrackingProjectile.is_attack)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_AvoidanceZone

// optional .CMsgBotWorldState.Vector location = 1;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_AvoidanceZone::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_AvoidanceZone::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.location)
  return _internal_location();
}
inline void CMsgBotWorldState_AvoidanceZone::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.AvoidanceZone.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_AvoidanceZone::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_AvoidanceZone::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.AvoidanceZone.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_AvoidanceZone::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_AvoidanceZone::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.AvoidanceZone.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_AvoidanceZone::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.AvoidanceZone.location)
}

// optional uint32 caster_handle = 2;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_caster_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_caster_handle() const {
  return _internal_has_caster_handle();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_caster_handle() {
  caster_handle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::_internal_caster_handle() const {
  return caster_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::caster_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.caster_handle)
  return _internal_caster_handle();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  caster_handle_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_caster_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_caster_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.caster_handle)
}

// optional .CMsgBotWorldState.UnitType caster_unit_type = 7 [default = INVALID];
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_caster_unit_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_caster_unit_type() const {
  return _internal_has_caster_unit_type();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_caster_unit_type() {
  caster_unit_type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_AvoidanceZone::_internal_caster_unit_type() const {
  return static_cast< ::CMsgBotWorldState_UnitType >(caster_unit_type_);
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_AvoidanceZone::caster_unit_type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.caster_unit_type)
  return _internal_caster_unit_type();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  assert(::CMsgBotWorldState_UnitType_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  caster_unit_type_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_caster_unit_type(::CMsgBotWorldState_UnitType value) {
  _internal_set_caster_unit_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.caster_unit_type)
}

// optional int32 caster_player_id = 3;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_caster_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_caster_player_id() const {
  return _internal_has_caster_player_id();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_caster_player_id() {
  caster_player_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_AvoidanceZone::_internal_caster_player_id() const {
  return caster_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_AvoidanceZone::caster_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.caster_player_id)
  return _internal_caster_player_id();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  caster_player_id_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_caster_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caster_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.caster_player_id)
}

// optional uint32 ability_handle = 4;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_ability_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_ability_handle() const {
  return _internal_has_ability_handle();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_ability_handle() {
  ability_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::_internal_ability_handle() const {
  return ability_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.ability_handle)
  return _internal_ability_handle();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  ability_handle_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.ability_handle)
}

// optional uint32 ability_id = 5;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.ability_id)
}

// optional uint32 radius = 6;
inline bool CMsgBotWorldState_AvoidanceZone::_internal_has_radius() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_AvoidanceZone::has_radius() const {
  return _internal_has_radius();
}
inline void CMsgBotWorldState_AvoidanceZone::clear_radius() {
  radius_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::_internal_radius() const {
  return radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_AvoidanceZone::radius() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.AvoidanceZone.radius)
  return _internal_radius();
}
inline void CMsgBotWorldState_AvoidanceZone::_internal_set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  radius_ = value;
}
inline void CMsgBotWorldState_AvoidanceZone::set_radius(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.AvoidanceZone.radius)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Courier

// optional uint32 handle = 1 [(.map_key) = true];
inline bool CMsgBotWorldState_Courier::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Courier::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_Courier::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Courier::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Courier::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Courier.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_Courier::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  handle_ = value;
}
inline void CMsgBotWorldState_Courier::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Courier.handle)
}

// optional .CMsgBotWorldState.CourierState state = 2 [default = COURIER_STATE_INIT];
inline bool CMsgBotWorldState_Courier::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Courier::has_state() const {
  return _internal_has_state();
}
inline void CMsgBotWorldState_Courier::clear_state() {
  state_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::CMsgBotWorldState_CourierState CMsgBotWorldState_Courier::_internal_state() const {
  return static_cast< ::CMsgBotWorldState_CourierState >(state_);
}
inline ::CMsgBotWorldState_CourierState CMsgBotWorldState_Courier::state() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Courier.state)
  return _internal_state();
}
inline void CMsgBotWorldState_Courier::_internal_set_state(::CMsgBotWorldState_CourierState value) {
  assert(::CMsgBotWorldState_CourierState_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  state_ = value;
}
inline void CMsgBotWorldState_Courier::set_state(::CMsgBotWorldState_CourierState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Courier.state)
}

// optional int32 player_id = 3;
inline bool CMsgBotWorldState_Courier::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Courier::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgBotWorldState_Courier::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Courier::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Courier::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Courier.player_id)
  return _internal_player_id();
}
inline void CMsgBotWorldState_Courier::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CMsgBotWorldState_Courier::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Courier.player_id)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_EventAbility

// optional uint32 ability_id = 1;
inline bool CMsgBotWorldState_EventAbility::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventAbility::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_EventAbility::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventAbility::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventAbility.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_EventAbility::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_EventAbility::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventAbility.ability_id)
}

// optional int32 player_id = 2;
inline bool CMsgBotWorldState_EventAbility::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventAbility::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgBotWorldState_EventAbility::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventAbility::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventAbility::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventAbility.player_id)
  return _internal_player_id();
}
inline void CMsgBotWorldState_EventAbility::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
}
inline void CMsgBotWorldState_EventAbility::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventAbility.player_id)
}

// optional uint32 unit_handle = 3;
inline bool CMsgBotWorldState_EventAbility::_internal_has_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventAbility::has_unit_handle() const {
  return _internal_has_unit_handle();
}
inline void CMsgBotWorldState_EventAbility::clear_unit_handle() {
  unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventAbility::_internal_unit_handle() const {
  return unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventAbility::unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventAbility.unit_handle)
  return _internal_unit_handle();
}
inline void CMsgBotWorldState_EventAbility::_internal_set_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  unit_handle_ = value;
}
inline void CMsgBotWorldState_EventAbility::set_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventAbility.unit_handle)
}

// optional .CMsgBotWorldState.Vector location = 4;
inline bool CMsgBotWorldState_EventAbility::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_EventAbility::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_EventAbility::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_EventAbility::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_EventAbility::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventAbility.location)
  return _internal_location();
}
inline void CMsgBotWorldState_EventAbility::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.EventAbility.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventAbility::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventAbility::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.EventAbility.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventAbility::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventAbility::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.EventAbility.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_EventAbility::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.EventAbility.location)
}

// optional bool is_channel_start = 5;
inline bool CMsgBotWorldState_EventAbility::_internal_has_is_channel_start() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventAbility::has_is_channel_start() const {
  return _internal_has_is_channel_start();
}
inline void CMsgBotWorldState_EventAbility::clear_is_channel_start() {
  is_channel_start_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgBotWorldState_EventAbility::_internal_is_channel_start() const {
  return is_channel_start_;
}
inline bool CMsgBotWorldState_EventAbility::is_channel_start() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventAbility.is_channel_start)
  return _internal_is_channel_start();
}
inline void CMsgBotWorldState_EventAbility::_internal_set_is_channel_start(bool value) {
  _has_bits_[0] |= 0x00000010u;
  is_channel_start_ = value;
}
inline void CMsgBotWorldState_EventAbility::set_is_channel_start(bool value) {
  _internal_set_is_channel_start(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventAbility.is_channel_start)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_EventDamage

// optional uint32 damage = 1;
inline bool CMsgBotWorldState_EventDamage::_internal_has_damage() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_damage() const {
  return _internal_has_damage();
}
inline void CMsgBotWorldState_EventDamage::clear_damage() {
  damage_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::_internal_damage() const {
  return damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::damage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.damage)
  return _internal_damage();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  damage_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.damage)
}

// optional int32 victim_player_id = 2;
inline bool CMsgBotWorldState_EventDamage::_internal_has_victim_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_victim_player_id() const {
  return _internal_has_victim_player_id();
}
inline void CMsgBotWorldState_EventDamage::clear_victim_player_id() {
  victim_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventDamage::_internal_victim_player_id() const {
  return victim_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventDamage::victim_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.victim_player_id)
  return _internal_victim_player_id();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_victim_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  victim_player_id_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_victim_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_victim_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.victim_player_id)
}

// optional uint32 victim_unit_handle = 3;
inline bool CMsgBotWorldState_EventDamage::_internal_has_victim_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_victim_unit_handle() const {
  return _internal_has_victim_unit_handle();
}
inline void CMsgBotWorldState_EventDamage::clear_victim_unit_handle() {
  victim_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::_internal_victim_unit_handle() const {
  return victim_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::victim_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.victim_unit_handle)
  return _internal_victim_unit_handle();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_victim_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  victim_unit_handle_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_victim_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_victim_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.victim_unit_handle)
}

// optional int32 attacker_player_id = 4;
inline bool CMsgBotWorldState_EventDamage::_internal_has_attacker_player_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_attacker_player_id() const {
  return _internal_has_attacker_player_id();
}
inline void CMsgBotWorldState_EventDamage::clear_attacker_player_id() {
  attacker_player_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventDamage::_internal_attacker_player_id() const {
  return attacker_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventDamage::attacker_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.attacker_player_id)
  return _internal_attacker_player_id();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_attacker_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  attacker_player_id_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_attacker_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attacker_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.attacker_player_id)
}

// optional uint32 attacker_unit_handle = 5;
inline bool CMsgBotWorldState_EventDamage::_internal_has_attacker_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_attacker_unit_handle() const {
  return _internal_has_attacker_unit_handle();
}
inline void CMsgBotWorldState_EventDamage::clear_attacker_unit_handle() {
  attacker_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::_internal_attacker_unit_handle() const {
  return attacker_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::attacker_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.attacker_unit_handle)
  return _internal_attacker_unit_handle();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_attacker_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  attacker_unit_handle_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_attacker_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attacker_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.attacker_unit_handle)
}

// optional uint32 ability_id = 6;
inline bool CMsgBotWorldState_EventDamage::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventDamage::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CMsgBotWorldState_EventDamage::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventDamage::ability_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventDamage.ability_id)
  return _internal_ability_id();
}
inline void CMsgBotWorldState_EventDamage::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  ability_id_ = value;
}
inline void CMsgBotWorldState_EventDamage::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventDamage.ability_id)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_EventCourierKilled

// optional uint32 team_id = 1;
inline bool CMsgBotWorldState_EventCourierKilled::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventCourierKilled::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgBotWorldState_EventCourierKilled::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventCourierKilled.team_id)
  return _internal_team_id();
}
inline void CMsgBotWorldState_EventCourierKilled::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_id_ = value;
}
inline void CMsgBotWorldState_EventCourierKilled::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventCourierKilled.team_id)
}

// optional uint32 courier_unit_handle = 2;
inline bool CMsgBotWorldState_EventCourierKilled::_internal_has_courier_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventCourierKilled::has_courier_unit_handle() const {
  return _internal_has_courier_unit_handle();
}
inline void CMsgBotWorldState_EventCourierKilled::clear_courier_unit_handle() {
  courier_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::_internal_courier_unit_handle() const {
  return courier_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::courier_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventCourierKilled.courier_unit_handle)
  return _internal_courier_unit_handle();
}
inline void CMsgBotWorldState_EventCourierKilled::_internal_set_courier_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  courier_unit_handle_ = value;
}
inline void CMsgBotWorldState_EventCourierKilled::set_courier_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_courier_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventCourierKilled.courier_unit_handle)
}

// optional int32 killer_player_id = 3;
inline bool CMsgBotWorldState_EventCourierKilled::_internal_has_killer_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventCourierKilled::has_killer_player_id() const {
  return _internal_has_killer_player_id();
}
inline void CMsgBotWorldState_EventCourierKilled::clear_killer_player_id() {
  killer_player_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventCourierKilled::_internal_killer_player_id() const {
  return killer_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventCourierKilled::killer_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventCourierKilled.killer_player_id)
  return _internal_killer_player_id();
}
inline void CMsgBotWorldState_EventCourierKilled::_internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  killer_player_id_ = value;
}
inline void CMsgBotWorldState_EventCourierKilled::set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_killer_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventCourierKilled.killer_player_id)
}

// optional uint32 killer_unit_handle = 4;
inline bool CMsgBotWorldState_EventCourierKilled::_internal_has_killer_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventCourierKilled::has_killer_unit_handle() const {
  return _internal_has_killer_unit_handle();
}
inline void CMsgBotWorldState_EventCourierKilled::clear_killer_unit_handle() {
  killer_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::_internal_killer_unit_handle() const {
  return killer_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventCourierKilled::killer_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventCourierKilled.killer_unit_handle)
  return _internal_killer_unit_handle();
}
inline void CMsgBotWorldState_EventCourierKilled::_internal_set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  killer_unit_handle_ = value;
}
inline void CMsgBotWorldState_EventCourierKilled::set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_killer_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventCourierKilled.killer_unit_handle)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_EventRoshanKilled

// optional int32 killer_player_id = 1;
inline bool CMsgBotWorldState_EventRoshanKilled::_internal_has_killer_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventRoshanKilled::has_killer_player_id() const {
  return _internal_has_killer_player_id();
}
inline void CMsgBotWorldState_EventRoshanKilled::clear_killer_player_id() {
  killer_player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventRoshanKilled::_internal_killer_player_id() const {
  return killer_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_EventRoshanKilled::killer_player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventRoshanKilled.killer_player_id)
  return _internal_killer_player_id();
}
inline void CMsgBotWorldState_EventRoshanKilled::_internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  killer_player_id_ = value;
}
inline void CMsgBotWorldState_EventRoshanKilled::set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_killer_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventRoshanKilled.killer_player_id)
}

// optional uint32 killer_unit_handle = 2;
inline bool CMsgBotWorldState_EventRoshanKilled::_internal_has_killer_unit_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventRoshanKilled::has_killer_unit_handle() const {
  return _internal_has_killer_unit_handle();
}
inline void CMsgBotWorldState_EventRoshanKilled::clear_killer_unit_handle() {
  killer_unit_handle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventRoshanKilled::_internal_killer_unit_handle() const {
  return killer_unit_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventRoshanKilled::killer_unit_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventRoshanKilled.killer_unit_handle)
  return _internal_killer_unit_handle();
}
inline void CMsgBotWorldState_EventRoshanKilled::_internal_set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  killer_unit_handle_ = value;
}
inline void CMsgBotWorldState_EventRoshanKilled::set_killer_unit_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_killer_unit_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventRoshanKilled.killer_unit_handle)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_EventTree

// optional uint32 tree_id = 1;
inline bool CMsgBotWorldState_EventTree::_internal_has_tree_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventTree::has_tree_id() const {
  return _internal_has_tree_id();
}
inline void CMsgBotWorldState_EventTree::clear_tree_id() {
  tree_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventTree::_internal_tree_id() const {
  return tree_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_EventTree::tree_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventTree.tree_id)
  return _internal_tree_id();
}
inline void CMsgBotWorldState_EventTree::_internal_set_tree_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  tree_id_ = value;
}
inline void CMsgBotWorldState_EventTree::set_tree_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tree_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventTree.tree_id)
}

// optional bool destroyed = 2;
inline bool CMsgBotWorldState_EventTree::_internal_has_destroyed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventTree::has_destroyed() const {
  return _internal_has_destroyed();
}
inline void CMsgBotWorldState_EventTree::clear_destroyed() {
  destroyed_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgBotWorldState_EventTree::_internal_destroyed() const {
  return destroyed_;
}
inline bool CMsgBotWorldState_EventTree::destroyed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventTree.destroyed)
  return _internal_destroyed();
}
inline void CMsgBotWorldState_EventTree::_internal_set_destroyed(bool value) {
  _has_bits_[0] |= 0x00000004u;
  destroyed_ = value;
}
inline void CMsgBotWorldState_EventTree::set_destroyed(bool value) {
  _internal_set_destroyed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventTree.destroyed)
}

// optional bool respawned = 3;
inline bool CMsgBotWorldState_EventTree::_internal_has_respawned() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventTree::has_respawned() const {
  return _internal_has_respawned();
}
inline void CMsgBotWorldState_EventTree::clear_respawned() {
  respawned_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CMsgBotWorldState_EventTree::_internal_respawned() const {
  return respawned_;
}
inline bool CMsgBotWorldState_EventTree::respawned() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventTree.respawned)
  return _internal_respawned();
}
inline void CMsgBotWorldState_EventTree::_internal_set_respawned(bool value) {
  _has_bits_[0] |= 0x00000008u;
  respawned_ = value;
}
inline void CMsgBotWorldState_EventTree::set_respawned(bool value) {
  _internal_set_respawned(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventTree.respawned)
}

// optional .CMsgBotWorldState.Vector location = 4;
inline bool CMsgBotWorldState_EventTree::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_EventTree::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_EventTree::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_EventTree::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_EventTree::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventTree.location)
  return _internal_location();
}
inline void CMsgBotWorldState_EventTree::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.EventTree.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventTree::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventTree::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.EventTree.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventTree::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_EventTree::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.EventTree.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_EventTree::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.EventTree.location)
}

// optional bool delayed = 5;
inline bool CMsgBotWorldState_EventTree::_internal_has_delayed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_EventTree::has_delayed() const {
  return _internal_has_delayed();
}
inline void CMsgBotWorldState_EventTree::clear_delayed() {
  delayed_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgBotWorldState_EventTree::_internal_delayed() const {
  return delayed_;
}
inline bool CMsgBotWorldState_EventTree::delayed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.EventTree.delayed)
  return _internal_delayed();
}
inline void CMsgBotWorldState_EventTree::_internal_set_delayed(bool value) {
  _has_bits_[0] |= 0x00000010u;
  delayed_ = value;
}
inline void CMsgBotWorldState_EventTree::set_delayed(bool value) {
  _internal_set_delayed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.EventTree.delayed)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Unit

// optional uint32 handle = 1 [(.map_key) = true];
inline bool CMsgBotWorldState_Unit::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_handle() const {
  return _internal_has_handle();
}
inline void CMsgBotWorldState_Unit::clear_handle() {
  handle_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.handle)
  return _internal_handle();
}
inline void CMsgBotWorldState_Unit::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  handle_ = value;
}
inline void CMsgBotWorldState_Unit::set_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.handle)
}

// optional .CMsgBotWorldState.UnitType unit_type = 2 [default = INVALID];
inline bool CMsgBotWorldState_Unit::_internal_has_unit_type() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_unit_type() const {
  return _internal_has_unit_type();
}
inline void CMsgBotWorldState_Unit::clear_unit_type() {
  unit_type_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_Unit::_internal_unit_type() const {
  return static_cast< ::CMsgBotWorldState_UnitType >(unit_type_);
}
inline ::CMsgBotWorldState_UnitType CMsgBotWorldState_Unit::unit_type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.unit_type)
  return _internal_unit_type();
}
inline void CMsgBotWorldState_Unit::_internal_set_unit_type(::CMsgBotWorldState_UnitType value) {
  assert(::CMsgBotWorldState_UnitType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  unit_type_ = value;
}
inline void CMsgBotWorldState_Unit::set_unit_type(::CMsgBotWorldState_UnitType value) {
  _internal_set_unit_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.unit_type)
}

// optional string name = 3;
inline bool CMsgBotWorldState_Unit::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_name() const {
  return _internal_has_name();
}
inline void CMsgBotWorldState_Unit::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Unit::name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.name)
  return _internal_name();
}
inline void CMsgBotWorldState_Unit::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.name)
}
inline std::string* CMsgBotWorldState_Unit::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgBotWorldState_Unit::_internal_name() const {
  return name_.Get();
}
inline void CMsgBotWorldState_Unit::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Unit::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Unit.name)
}
inline void CMsgBotWorldState_Unit::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Unit.name)
}
inline void CMsgBotWorldState_Unit::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Unit.name)
}
inline std::string* CMsgBotWorldState_Unit::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Unit::release_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Unit.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Unit::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Unit.name)
}

// optional uint32 team_id = 4;
inline bool CMsgBotWorldState_Unit::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgBotWorldState_Unit::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.team_id)
  return _internal_team_id();
}
inline void CMsgBotWorldState_Unit::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  team_id_ = value;
}
inline void CMsgBotWorldState_Unit::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.team_id)
}

// optional uint32 level = 5;
inline bool CMsgBotWorldState_Unit::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_level() const {
  return _internal_has_level();
}
inline void CMsgBotWorldState_Unit::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::level() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.level)
  return _internal_level();
}
inline void CMsgBotWorldState_Unit::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  level_ = value;
}
inline void CMsgBotWorldState_Unit::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.level)
}

// optional .CMsgBotWorldState.Vector location = 6;
inline bool CMsgBotWorldState_Unit::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Unit::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Unit::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Unit::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Unit::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Unit::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Unit.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Unit::release_location() {
  _has_bits_[0] &= ~0x00000008u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Unit::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Unit.location)
  _has_bits_[0] &= ~0x00000008u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Unit::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000008u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Unit::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Unit::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Unit.location)
}

// optional bool is_alive = 7;
inline bool CMsgBotWorldState_Unit::_internal_has_is_alive() const {
  bool value = (_has_bits_[1] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_alive() const {
  return _internal_has_is_alive();
}
inline void CMsgBotWorldState_Unit::clear_is_alive() {
  is_alive_ = false;
  _has_bits_[1] &= ~0x00000004u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_alive() const {
  return is_alive_;
}
inline bool CMsgBotWorldState_Unit::is_alive() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_alive)
  return _internal_is_alive();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_alive(bool value) {
  _has_bits_[1] |= 0x00000004u;
  is_alive_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_alive(bool value) {
  _internal_set_is_alive(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_alive)
}

// optional int32 player_id = 8;
inline bool CMsgBotWorldState_Unit::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_player_id() const {
  return _internal_has_player_id();
}
inline void CMsgBotWorldState_Unit::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::player_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.player_id)
  return _internal_player_id();
}
inline void CMsgBotWorldState_Unit::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  player_id_ = value;
}
inline void CMsgBotWorldState_Unit::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.player_id)
}

// optional int32 bounding_radius = 10;
inline bool CMsgBotWorldState_Unit::_internal_has_bounding_radius() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_bounding_radius() const {
  return _internal_has_bounding_radius();
}
inline void CMsgBotWorldState_Unit::clear_bounding_radius() {
  bounding_radius_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_bounding_radius() const {
  return bounding_radius_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::bounding_radius() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.bounding_radius)
  return _internal_bounding_radius();
}
inline void CMsgBotWorldState_Unit::_internal_set_bounding_radius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  bounding_radius_ = value;
}
inline void CMsgBotWorldState_Unit::set_bounding_radius(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bounding_radius(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.bounding_radius)
}

// optional int32 facing = 11;
inline bool CMsgBotWorldState_Unit::_internal_has_facing() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_facing() const {
  return _internal_has_facing();
}
inline void CMsgBotWorldState_Unit::clear_facing() {
  facing_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_facing() const {
  return facing_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::facing() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.facing)
  return _internal_facing();
}
inline void CMsgBotWorldState_Unit::_internal_set_facing(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  facing_ = value;
}
inline void CMsgBotWorldState_Unit::set_facing(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_facing(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.facing)
}

// optional uint32 ground_height = 12;
inline bool CMsgBotWorldState_Unit::_internal_has_ground_height() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_ground_height() const {
  return _internal_has_ground_height();
}
inline void CMsgBotWorldState_Unit::clear_ground_height() {
  ground_height_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_ground_height() const {
  return ground_height_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::ground_height() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.ground_height)
  return _internal_ground_height();
}
inline void CMsgBotWorldState_Unit::_internal_set_ground_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  ground_height_ = value;
}
inline void CMsgBotWorldState_Unit::set_ground_height(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ground_height(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.ground_height)
}

// optional uint32 vision_range_daytime = 15;
inline bool CMsgBotWorldState_Unit::_internal_has_vision_range_daytime() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_vision_range_daytime() const {
  return _internal_has_vision_range_daytime();
}
inline void CMsgBotWorldState_Unit::clear_vision_range_daytime() {
  vision_range_daytime_ = 0u;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_vision_range_daytime() const {
  return vision_range_daytime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::vision_range_daytime() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.vision_range_daytime)
  return _internal_vision_range_daytime();
}
inline void CMsgBotWorldState_Unit::_internal_set_vision_range_daytime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00001000u;
  vision_range_daytime_ = value;
}
inline void CMsgBotWorldState_Unit::set_vision_range_daytime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vision_range_daytime(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.vision_range_daytime)
}

// optional uint32 vision_range_nighttime = 16;
inline bool CMsgBotWorldState_Unit::_internal_has_vision_range_nighttime() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_vision_range_nighttime() const {
  return _internal_has_vision_range_nighttime();
}
inline void CMsgBotWorldState_Unit::clear_vision_range_nighttime() {
  vision_range_nighttime_ = 0u;
  _has_bits_[0] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_vision_range_nighttime() const {
  return vision_range_nighttime_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::vision_range_nighttime() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.vision_range_nighttime)
  return _internal_vision_range_nighttime();
}
inline void CMsgBotWorldState_Unit::_internal_set_vision_range_nighttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00002000u;
  vision_range_nighttime_ = value;
}
inline void CMsgBotWorldState_Unit::set_vision_range_nighttime(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_vision_range_nighttime(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.vision_range_nighttime)
}

// optional int32 health = 20;
inline bool CMsgBotWorldState_Unit::_internal_has_health() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_health() const {
  return _internal_has_health();
}
inline void CMsgBotWorldState_Unit::clear_health() {
  health_ = 0;
  _has_bits_[0] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_health() const {
  return health_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::health() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.health)
  return _internal_health();
}
inline void CMsgBotWorldState_Unit::_internal_set_health(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00004000u;
  health_ = value;
}
inline void CMsgBotWorldState_Unit::set_health(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_health(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.health)
}

// optional int32 health_max = 21;
inline bool CMsgBotWorldState_Unit::_internal_has_health_max() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_health_max() const {
  return _internal_has_health_max();
}
inline void CMsgBotWorldState_Unit::clear_health_max() {
  health_max_ = 0;
  _has_bits_[0] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_health_max() const {
  return health_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::health_max() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.health_max)
  return _internal_health_max();
}
inline void CMsgBotWorldState_Unit::_internal_set_health_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00008000u;
  health_max_ = value;
}
inline void CMsgBotWorldState_Unit::set_health_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_health_max(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.health_max)
}

// optional float health_regen = 22;
inline bool CMsgBotWorldState_Unit::_internal_has_health_regen() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_health_regen() const {
  return _internal_has_health_regen();
}
inline void CMsgBotWorldState_Unit::clear_health_regen() {
  health_regen_ = 0;
  _has_bits_[0] &= ~0x00010000u;
}
inline float CMsgBotWorldState_Unit::_internal_health_regen() const {
  return health_regen_;
}
inline float CMsgBotWorldState_Unit::health_regen() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.health_regen)
  return _internal_health_regen();
}
inline void CMsgBotWorldState_Unit::_internal_set_health_regen(float value) {
  _has_bits_[0] |= 0x00010000u;
  health_regen_ = value;
}
inline void CMsgBotWorldState_Unit::set_health_regen(float value) {
  _internal_set_health_regen(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.health_regen)
}

// optional int32 mana = 25;
inline bool CMsgBotWorldState_Unit::_internal_has_mana() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_mana() const {
  return _internal_has_mana();
}
inline void CMsgBotWorldState_Unit::clear_mana() {
  mana_ = 0;
  _has_bits_[0] &= ~0x00020000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_mana() const {
  return mana_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::mana() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.mana)
  return _internal_mana();
}
inline void CMsgBotWorldState_Unit::_internal_set_mana(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00020000u;
  mana_ = value;
}
inline void CMsgBotWorldState_Unit::set_mana(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mana(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.mana)
}

// optional int32 mana_max = 26;
inline bool CMsgBotWorldState_Unit::_internal_has_mana_max() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_mana_max() const {
  return _internal_has_mana_max();
}
inline void CMsgBotWorldState_Unit::clear_mana_max() {
  mana_max_ = 0;
  _has_bits_[0] &= ~0x00040000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_mana_max() const {
  return mana_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::mana_max() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.mana_max)
  return _internal_mana_max();
}
inline void CMsgBotWorldState_Unit::_internal_set_mana_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00040000u;
  mana_max_ = value;
}
inline void CMsgBotWorldState_Unit::set_mana_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_mana_max(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.mana_max)
}

// optional float mana_regen = 27;
inline bool CMsgBotWorldState_Unit::_internal_has_mana_regen() const {
  bool value = (_has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_mana_regen() const {
  return _internal_has_mana_regen();
}
inline void CMsgBotWorldState_Unit::clear_mana_regen() {
  mana_regen_ = 0;
  _has_bits_[0] &= ~0x00080000u;
}
inline float CMsgBotWorldState_Unit::_internal_mana_regen() const {
  return mana_regen_;
}
inline float CMsgBotWorldState_Unit::mana_regen() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.mana_regen)
  return _internal_mana_regen();
}
inline void CMsgBotWorldState_Unit::_internal_set_mana_regen(float value) {
  _has_bits_[0] |= 0x00080000u;
  mana_regen_ = value;
}
inline void CMsgBotWorldState_Unit::set_mana_regen(float value) {
  _internal_set_mana_regen(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.mana_regen)
}

// optional int32 base_movement_speed = 30;
inline bool CMsgBotWorldState_Unit::_internal_has_base_movement_speed() const {
  bool value = (_has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_base_movement_speed() const {
  return _internal_has_base_movement_speed();
}
inline void CMsgBotWorldState_Unit::clear_base_movement_speed() {
  base_movement_speed_ = 0;
  _has_bits_[0] &= ~0x00100000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_base_movement_speed() const {
  return base_movement_speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::base_movement_speed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.base_movement_speed)
  return _internal_base_movement_speed();
}
inline void CMsgBotWorldState_Unit::_internal_set_base_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00100000u;
  base_movement_speed_ = value;
}
inline void CMsgBotWorldState_Unit::set_base_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_movement_speed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.base_movement_speed)
}

// optional int32 current_movement_speed = 31;
inline bool CMsgBotWorldState_Unit::_internal_has_current_movement_speed() const {
  bool value = (_has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_current_movement_speed() const {
  return _internal_has_current_movement_speed();
}
inline void CMsgBotWorldState_Unit::clear_current_movement_speed() {
  current_movement_speed_ = 0;
  _has_bits_[0] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_current_movement_speed() const {
  return current_movement_speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::current_movement_speed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.current_movement_speed)
  return _internal_current_movement_speed();
}
inline void CMsgBotWorldState_Unit::_internal_set_current_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00200000u;
  current_movement_speed_ = value;
}
inline void CMsgBotWorldState_Unit::set_current_movement_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_current_movement_speed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.current_movement_speed)
}

// optional int32 anim_activity = 35;
inline bool CMsgBotWorldState_Unit::_internal_has_anim_activity() const {
  bool value = (_has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_anim_activity() const {
  return _internal_has_anim_activity();
}
inline void CMsgBotWorldState_Unit::clear_anim_activity() {
  anim_activity_ = 0;
  _has_bits_[0] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_anim_activity() const {
  return anim_activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::anim_activity() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.anim_activity)
  return _internal_anim_activity();
}
inline void CMsgBotWorldState_Unit::_internal_set_anim_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00400000u;
  anim_activity_ = value;
}
inline void CMsgBotWorldState_Unit::set_anim_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_anim_activity(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.anim_activity)
}

// optional float anim_cycle = 36;
inline bool CMsgBotWorldState_Unit::_internal_has_anim_cycle() const {
  bool value = (_has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_anim_cycle() const {
  return _internal_has_anim_cycle();
}
inline void CMsgBotWorldState_Unit::clear_anim_cycle() {
  anim_cycle_ = 0;
  _has_bits_[0] &= ~0x00800000u;
}
inline float CMsgBotWorldState_Unit::_internal_anim_cycle() const {
  return anim_cycle_;
}
inline float CMsgBotWorldState_Unit::anim_cycle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.anim_cycle)
  return _internal_anim_cycle();
}
inline void CMsgBotWorldState_Unit::_internal_set_anim_cycle(float value) {
  _has_bits_[0] |= 0x00800000u;
  anim_cycle_ = value;
}
inline void CMsgBotWorldState_Unit::set_anim_cycle(float value) {
  _internal_set_anim_cycle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.anim_cycle)
}

// optional int32 base_damage = 40;
inline bool CMsgBotWorldState_Unit::_internal_has_base_damage() const {
  bool value = (_has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_base_damage() const {
  return _internal_has_base_damage();
}
inline void CMsgBotWorldState_Unit::clear_base_damage() {
  base_damage_ = 0;
  _has_bits_[0] &= ~0x01000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_base_damage() const {
  return base_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::base_damage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.base_damage)
  return _internal_base_damage();
}
inline void CMsgBotWorldState_Unit::_internal_set_base_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x01000000u;
  base_damage_ = value;
}
inline void CMsgBotWorldState_Unit::set_base_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_damage(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.base_damage)
}

// optional int32 base_damage_variance = 41;
inline bool CMsgBotWorldState_Unit::_internal_has_base_damage_variance() const {
  bool value = (_has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_base_damage_variance() const {
  return _internal_has_base_damage_variance();
}
inline void CMsgBotWorldState_Unit::clear_base_damage_variance() {
  base_damage_variance_ = 0;
  _has_bits_[0] &= ~0x02000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_base_damage_variance() const {
  return base_damage_variance_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::base_damage_variance() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.base_damage_variance)
  return _internal_base_damage_variance();
}
inline void CMsgBotWorldState_Unit::_internal_set_base_damage_variance(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x02000000u;
  base_damage_variance_ = value;
}
inline void CMsgBotWorldState_Unit::set_base_damage_variance(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_base_damage_variance(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.base_damage_variance)
}

// optional int32 bonus_damage = 42;
inline bool CMsgBotWorldState_Unit::_internal_has_bonus_damage() const {
  bool value = (_has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_bonus_damage() const {
  return _internal_has_bonus_damage();
}
inline void CMsgBotWorldState_Unit::clear_bonus_damage() {
  bonus_damage_ = 0;
  _has_bits_[0] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_bonus_damage() const {
  return bonus_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::bonus_damage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.bonus_damage)
  return _internal_bonus_damage();
}
inline void CMsgBotWorldState_Unit::_internal_set_bonus_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x04000000u;
  bonus_damage_ = value;
}
inline void CMsgBotWorldState_Unit::set_bonus_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bonus_damage(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.bonus_damage)
}

// optional int32 attack_damage = 43;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_damage() const {
  bool value = (_has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_damage() const {
  return _internal_has_attack_damage();
}
inline void CMsgBotWorldState_Unit::clear_attack_damage() {
  attack_damage_ = 0;
  _has_bits_[0] &= ~0x08000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_attack_damage() const {
  return attack_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::attack_damage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_damage)
  return _internal_attack_damage();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x08000000u;
  attack_damage_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attack_damage(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_damage)
}

// optional int32 attack_range = 44;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_range() const {
  bool value = (_has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_range() const {
  return _internal_has_attack_range();
}
inline void CMsgBotWorldState_Unit::clear_attack_range() {
  attack_range_ = 0;
  _has_bits_[0] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_attack_range() const {
  return attack_range_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::attack_range() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_range)
  return _internal_attack_range();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x10000000u;
  attack_range_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attack_range(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_range)
}

// optional float attack_speed = 45;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_speed() const {
  bool value = (_has_bits_[0] & 0x20000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_speed() const {
  return _internal_has_attack_speed();
}
inline void CMsgBotWorldState_Unit::clear_attack_speed() {
  attack_speed_ = 0;
  _has_bits_[0] &= ~0x20000000u;
}
inline float CMsgBotWorldState_Unit::_internal_attack_speed() const {
  return attack_speed_;
}
inline float CMsgBotWorldState_Unit::attack_speed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_speed)
  return _internal_attack_speed();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_speed(float value) {
  _has_bits_[0] |= 0x20000000u;
  attack_speed_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_speed(float value) {
  _internal_set_attack_speed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_speed)
}

// optional float attack_anim_point = 46;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_anim_point() const {
  bool value = (_has_bits_[0] & 0x40000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_anim_point() const {
  return _internal_has_attack_anim_point();
}
inline void CMsgBotWorldState_Unit::clear_attack_anim_point() {
  attack_anim_point_ = 0;
  _has_bits_[0] &= ~0x40000000u;
}
inline float CMsgBotWorldState_Unit::_internal_attack_anim_point() const {
  return attack_anim_point_;
}
inline float CMsgBotWorldState_Unit::attack_anim_point() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_anim_point)
  return _internal_attack_anim_point();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_anim_point(float value) {
  _has_bits_[0] |= 0x40000000u;
  attack_anim_point_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_anim_point(float value) {
  _internal_set_attack_anim_point(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_anim_point)
}

// optional int32 attack_acquisition_range = 47;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_acquisition_range() const {
  bool value = (_has_bits_[0] & 0x80000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_acquisition_range() const {
  return _internal_has_attack_acquisition_range();
}
inline void CMsgBotWorldState_Unit::clear_attack_acquisition_range() {
  attack_acquisition_range_ = 0;
  _has_bits_[0] &= ~0x80000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_attack_acquisition_range() const {
  return attack_acquisition_range_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::attack_acquisition_range() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_acquisition_range)
  return _internal_attack_acquisition_range();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_acquisition_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x80000000u;
  attack_acquisition_range_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_acquisition_range(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attack_acquisition_range(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_acquisition_range)
}

// optional int32 attack_projectile_speed = 48;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_projectile_speed() const {
  bool value = (_has_bits_[1] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_projectile_speed() const {
  return _internal_has_attack_projectile_speed();
}
inline void CMsgBotWorldState_Unit::clear_attack_projectile_speed() {
  attack_projectile_speed_ = 0;
  _has_bits_[1] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_attack_projectile_speed() const {
  return attack_projectile_speed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::attack_projectile_speed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_projectile_speed)
  return _internal_attack_projectile_speed();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_projectile_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[1] |= 0x00000001u;
  attack_projectile_speed_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_projectile_speed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attack_projectile_speed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_projectile_speed)
}

// optional uint32 attack_target_handle = 49;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_target_handle() const {
  bool value = (_has_bits_[1] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_target_handle() const {
  return _internal_has_attack_target_handle();
}
inline void CMsgBotWorldState_Unit::clear_attack_target_handle() {
  attack_target_handle_ = 0u;
  _has_bits_[1] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_attack_target_handle() const {
  return attack_target_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::attack_target_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_target_handle)
  return _internal_attack_target_handle();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000002u;
  attack_target_handle_ = value;
}
inline void CMsgBotWorldState_Unit::set_attack_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attack_target_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_target_handle)
}

// optional string attack_target_name = 52;
inline bool CMsgBotWorldState_Unit::_internal_has_attack_target_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attack_target_name() const {
  return _internal_has_attack_target_name();
}
inline void CMsgBotWorldState_Unit::clear_attack_target_name() {
  attack_target_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgBotWorldState_Unit::attack_target_name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attack_target_name)
  return _internal_attack_target_name();
}
inline void CMsgBotWorldState_Unit::set_attack_target_name(const std::string& value) {
  _internal_set_attack_target_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attack_target_name)
}
inline std::string* CMsgBotWorldState_Unit::mutable_attack_target_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.attack_target_name)
  return _internal_mutable_attack_target_name();
}
inline const std::string& CMsgBotWorldState_Unit::_internal_attack_target_name() const {
  return attack_target_name_.Get();
}
inline void CMsgBotWorldState_Unit::_internal_set_attack_target_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  attack_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Unit::set_attack_target_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  attack_target_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Unit.attack_target_name)
}
inline void CMsgBotWorldState_Unit::set_attack_target_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  attack_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Unit.attack_target_name)
}
inline void CMsgBotWorldState_Unit::set_attack_target_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  attack_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Unit.attack_target_name)
}
inline std::string* CMsgBotWorldState_Unit::_internal_mutable_attack_target_name() {
  _has_bits_[0] |= 0x00000002u;
  return attack_target_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Unit::release_attack_target_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Unit.attack_target_name)
  if (!_internal_has_attack_target_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return attack_target_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Unit::set_allocated_attack_target_name(std::string* attack_target_name) {
  if (attack_target_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  attack_target_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attack_target_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Unit.attack_target_name)
}

// optional int32 attacks_per_second = 50 [default = -1];
inline bool CMsgBotWorldState_Unit::_internal_has_attacks_per_second() const {
  bool value = (_has_bits_[2] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_attacks_per_second() const {
  return _internal_has_attacks_per_second();
}
inline void CMsgBotWorldState_Unit::clear_attacks_per_second() {
  attacks_per_second_ = -1;
  _has_bits_[2] &= ~0x00080000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_attacks_per_second() const {
  return attacks_per_second_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::attacks_per_second() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.attacks_per_second)
  return _internal_attacks_per_second();
}
inline void CMsgBotWorldState_Unit::_internal_set_attacks_per_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[2] |= 0x00080000u;
  attacks_per_second_ = value;
}
inline void CMsgBotWorldState_Unit::set_attacks_per_second(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_attacks_per_second(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.attacks_per_second)
}

// optional float last_attack_time = 51 [default = -1];
inline bool CMsgBotWorldState_Unit::_internal_has_last_attack_time() const {
  bool value = (_has_bits_[2] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_last_attack_time() const {
  return _internal_has_last_attack_time();
}
inline void CMsgBotWorldState_Unit::clear_last_attack_time() {
  last_attack_time_ = -1;
  _has_bits_[2] &= ~0x00100000u;
}
inline float CMsgBotWorldState_Unit::_internal_last_attack_time() const {
  return last_attack_time_;
}
inline float CMsgBotWorldState_Unit::last_attack_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.last_attack_time)
  return _internal_last_attack_time();
}
inline void CMsgBotWorldState_Unit::_internal_set_last_attack_time(float value) {
  _has_bits_[2] |= 0x00100000u;
  last_attack_time_ = value;
}
inline void CMsgBotWorldState_Unit::set_last_attack_time(float value) {
  _internal_set_last_attack_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.last_attack_time)
}

// optional uint32 bounty_xp = 60;
inline bool CMsgBotWorldState_Unit::_internal_has_bounty_xp() const {
  bool value = (_has_bits_[1] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_bounty_xp() const {
  return _internal_has_bounty_xp();
}
inline void CMsgBotWorldState_Unit::clear_bounty_xp() {
  bounty_xp_ = 0u;
  _has_bits_[1] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_bounty_xp() const {
  return bounty_xp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::bounty_xp() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.bounty_xp)
  return _internal_bounty_xp();
}
inline void CMsgBotWorldState_Unit::_internal_set_bounty_xp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000040u;
  bounty_xp_ = value;
}
inline void CMsgBotWorldState_Unit::set_bounty_xp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bounty_xp(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.bounty_xp)
}

// optional uint32 bounty_gold_min = 61;
inline bool CMsgBotWorldState_Unit::_internal_has_bounty_gold_min() const {
  bool value = (_has_bits_[1] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_bounty_gold_min() const {
  return _internal_has_bounty_gold_min();
}
inline void CMsgBotWorldState_Unit::clear_bounty_gold_min() {
  bounty_gold_min_ = 0u;
  _has_bits_[1] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_bounty_gold_min() const {
  return bounty_gold_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::bounty_gold_min() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.bounty_gold_min)
  return _internal_bounty_gold_min();
}
inline void CMsgBotWorldState_Unit::_internal_set_bounty_gold_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000080u;
  bounty_gold_min_ = value;
}
inline void CMsgBotWorldState_Unit::set_bounty_gold_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bounty_gold_min(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.bounty_gold_min)
}

// optional uint32 bounty_gold_max = 62;
inline bool CMsgBotWorldState_Unit::_internal_has_bounty_gold_max() const {
  bool value = (_has_bits_[1] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_bounty_gold_max() const {
  return _internal_has_bounty_gold_max();
}
inline void CMsgBotWorldState_Unit::clear_bounty_gold_max() {
  bounty_gold_max_ = 0u;
  _has_bits_[1] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_bounty_gold_max() const {
  return bounty_gold_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::bounty_gold_max() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.bounty_gold_max)
  return _internal_bounty_gold_max();
}
inline void CMsgBotWorldState_Unit::_internal_set_bounty_gold_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000100u;
  bounty_gold_max_ = value;
}
inline void CMsgBotWorldState_Unit::set_bounty_gold_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bounty_gold_max(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.bounty_gold_max)
}

// optional bool is_channeling = 65;
inline bool CMsgBotWorldState_Unit::_internal_has_is_channeling() const {
  bool value = (_has_bits_[1] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_channeling() const {
  return _internal_has_is_channeling();
}
inline void CMsgBotWorldState_Unit::clear_is_channeling() {
  is_channeling_ = false;
  _has_bits_[1] &= ~0x00000008u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_channeling() const {
  return is_channeling_;
}
inline bool CMsgBotWorldState_Unit::is_channeling() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_channeling)
  return _internal_is_channeling();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_channeling(bool value) {
  _has_bits_[1] |= 0x00000008u;
  is_channeling_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_channeling(bool value) {
  _internal_set_is_channeling(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_channeling)
}

// optional uint32 active_ability_handle = 66;
inline bool CMsgBotWorldState_Unit::_internal_has_active_ability_handle() const {
  bool value = (_has_bits_[1] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_active_ability_handle() const {
  return _internal_has_active_ability_handle();
}
inline void CMsgBotWorldState_Unit::clear_active_ability_handle() {
  active_ability_handle_ = 0u;
  _has_bits_[1] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_active_ability_handle() const {
  return active_ability_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::active_ability_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.active_ability_handle)
  return _internal_active_ability_handle();
}
inline void CMsgBotWorldState_Unit::_internal_set_active_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x00000200u;
  active_ability_handle_ = value;
}
inline void CMsgBotWorldState_Unit::set_active_ability_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_active_ability_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.active_ability_handle)
}

// optional bool is_attack_immune = 70;
inline bool CMsgBotWorldState_Unit::_internal_has_is_attack_immune() const {
  bool value = (_has_bits_[1] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_attack_immune() const {
  return _internal_has_is_attack_immune();
}
inline void CMsgBotWorldState_Unit::clear_is_attack_immune() {
  is_attack_immune_ = false;
  _has_bits_[1] &= ~0x00000010u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_attack_immune() const {
  return is_attack_immune_;
}
inline bool CMsgBotWorldState_Unit::is_attack_immune() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_attack_immune)
  return _internal_is_attack_immune();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_attack_immune(bool value) {
  _has_bits_[1] |= 0x00000010u;
  is_attack_immune_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_attack_immune(bool value) {
  _internal_set_is_attack_immune(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_attack_immune)
}

// optional bool is_blind = 71;
inline bool CMsgBotWorldState_Unit::_internal_has_is_blind() const {
  bool value = (_has_bits_[1] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_blind() const {
  return _internal_has_is_blind();
}
inline void CMsgBotWorldState_Unit::clear_is_blind() {
  is_blind_ = false;
  _has_bits_[1] &= ~0x00000020u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_blind() const {
  return is_blind_;
}
inline bool CMsgBotWorldState_Unit::is_blind() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_blind)
  return _internal_is_blind();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_blind(bool value) {
  _has_bits_[1] |= 0x00000020u;
  is_blind_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_blind(bool value) {
  _internal_set_is_blind(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_blind)
}

// optional bool is_block_disabled = 72;
inline bool CMsgBotWorldState_Unit::_internal_has_is_block_disabled() const {
  bool value = (_has_bits_[1] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_block_disabled() const {
  return _internal_has_is_block_disabled();
}
inline void CMsgBotWorldState_Unit::clear_is_block_disabled() {
  is_block_disabled_ = false;
  _has_bits_[1] &= ~0x00000400u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_block_disabled() const {
  return is_block_disabled_;
}
inline bool CMsgBotWorldState_Unit::is_block_disabled() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_block_disabled)
  return _internal_is_block_disabled();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_block_disabled(bool value) {
  _has_bits_[1] |= 0x00000400u;
  is_block_disabled_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_block_disabled(bool value) {
  _internal_set_is_block_disabled(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_block_disabled)
}

// optional bool is_disarmed = 73;
inline bool CMsgBotWorldState_Unit::_internal_has_is_disarmed() const {
  bool value = (_has_bits_[1] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_disarmed() const {
  return _internal_has_is_disarmed();
}
inline void CMsgBotWorldState_Unit::clear_is_disarmed() {
  is_disarmed_ = false;
  _has_bits_[1] &= ~0x00000800u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_disarmed() const {
  return is_disarmed_;
}
inline bool CMsgBotWorldState_Unit::is_disarmed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_disarmed)
  return _internal_is_disarmed();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_disarmed(bool value) {
  _has_bits_[1] |= 0x00000800u;
  is_disarmed_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_disarmed(bool value) {
  _internal_set_is_disarmed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_disarmed)
}

// optional bool is_dominated = 74;
inline bool CMsgBotWorldState_Unit::_internal_has_is_dominated() const {
  bool value = (_has_bits_[1] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_dominated() const {
  return _internal_has_is_dominated();
}
inline void CMsgBotWorldState_Unit::clear_is_dominated() {
  is_dominated_ = false;
  _has_bits_[1] &= ~0x00001000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_dominated() const {
  return is_dominated_;
}
inline bool CMsgBotWorldState_Unit::is_dominated() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_dominated)
  return _internal_is_dominated();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_dominated(bool value) {
  _has_bits_[1] |= 0x00001000u;
  is_dominated_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_dominated(bool value) {
  _internal_set_is_dominated(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_dominated)
}

// optional bool is_evade_disabled = 75;
inline bool CMsgBotWorldState_Unit::_internal_has_is_evade_disabled() const {
  bool value = (_has_bits_[1] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_evade_disabled() const {
  return _internal_has_is_evade_disabled();
}
inline void CMsgBotWorldState_Unit::clear_is_evade_disabled() {
  is_evade_disabled_ = false;
  _has_bits_[1] &= ~0x00002000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_evade_disabled() const {
  return is_evade_disabled_;
}
inline bool CMsgBotWorldState_Unit::is_evade_disabled() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_evade_disabled)
  return _internal_is_evade_disabled();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_evade_disabled(bool value) {
  _has_bits_[1] |= 0x00002000u;
  is_evade_disabled_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_evade_disabled(bool value) {
  _internal_set_is_evade_disabled(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_evade_disabled)
}

// optional bool is_hexed = 76;
inline bool CMsgBotWorldState_Unit::_internal_has_is_hexed() const {
  bool value = (_has_bits_[1] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_hexed() const {
  return _internal_has_is_hexed();
}
inline void CMsgBotWorldState_Unit::clear_is_hexed() {
  is_hexed_ = false;
  _has_bits_[1] &= ~0x00004000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_hexed() const {
  return is_hexed_;
}
inline bool CMsgBotWorldState_Unit::is_hexed() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_hexed)
  return _internal_is_hexed();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_hexed(bool value) {
  _has_bits_[1] |= 0x00004000u;
  is_hexed_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_hexed(bool value) {
  _internal_set_is_hexed(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_hexed)
}

// optional bool is_invisible = 77;
inline bool CMsgBotWorldState_Unit::_internal_has_is_invisible() const {
  bool value = (_has_bits_[1] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_invisible() const {
  return _internal_has_is_invisible();
}
inline void CMsgBotWorldState_Unit::clear_is_invisible() {
  is_invisible_ = false;
  _has_bits_[1] &= ~0x00008000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_invisible() const {
  return is_invisible_;
}
inline bool CMsgBotWorldState_Unit::is_invisible() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_invisible)
  return _internal_is_invisible();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_invisible(bool value) {
  _has_bits_[1] |= 0x00008000u;
  is_invisible_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_invisible(bool value) {
  _internal_set_is_invisible(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_invisible)
}

// optional bool is_invulnerable = 78;
inline bool CMsgBotWorldState_Unit::_internal_has_is_invulnerable() const {
  bool value = (_has_bits_[1] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_invulnerable() const {
  return _internal_has_is_invulnerable();
}
inline void CMsgBotWorldState_Unit::clear_is_invulnerable() {
  is_invulnerable_ = false;
  _has_bits_[1] &= ~0x00010000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_invulnerable() const {
  return is_invulnerable_;
}
inline bool CMsgBotWorldState_Unit::is_invulnerable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_invulnerable)
  return _internal_is_invulnerable();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_invulnerable(bool value) {
  _has_bits_[1] |= 0x00010000u;
  is_invulnerable_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_invulnerable(bool value) {
  _internal_set_is_invulnerable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_invulnerable)
}

// optional bool is_magic_immune = 79;
inline bool CMsgBotWorldState_Unit::_internal_has_is_magic_immune() const {
  bool value = (_has_bits_[1] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_magic_immune() const {
  return _internal_has_is_magic_immune();
}
inline void CMsgBotWorldState_Unit::clear_is_magic_immune() {
  is_magic_immune_ = false;
  _has_bits_[1] &= ~0x00020000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_magic_immune() const {
  return is_magic_immune_;
}
inline bool CMsgBotWorldState_Unit::is_magic_immune() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_magic_immune)
  return _internal_is_magic_immune();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_magic_immune(bool value) {
  _has_bits_[1] |= 0x00020000u;
  is_magic_immune_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_magic_immune(bool value) {
  _internal_set_is_magic_immune(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_magic_immune)
}

// optional bool is_muted = 80;
inline bool CMsgBotWorldState_Unit::_internal_has_is_muted() const {
  bool value = (_has_bits_[1] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_muted() const {
  return _internal_has_is_muted();
}
inline void CMsgBotWorldState_Unit::clear_is_muted() {
  is_muted_ = false;
  _has_bits_[1] &= ~0x00040000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_muted() const {
  return is_muted_;
}
inline bool CMsgBotWorldState_Unit::is_muted() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_muted)
  return _internal_is_muted();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_muted(bool value) {
  _has_bits_[1] |= 0x00040000u;
  is_muted_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_muted(bool value) {
  _internal_set_is_muted(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_muted)
}

// optional bool is_nightmared = 82;
inline bool CMsgBotWorldState_Unit::_internal_has_is_nightmared() const {
  bool value = (_has_bits_[1] & 0x00080000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_nightmared() const {
  return _internal_has_is_nightmared();
}
inline void CMsgBotWorldState_Unit::clear_is_nightmared() {
  is_nightmared_ = false;
  _has_bits_[1] &= ~0x00080000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_nightmared() const {
  return is_nightmared_;
}
inline bool CMsgBotWorldState_Unit::is_nightmared() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_nightmared)
  return _internal_is_nightmared();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_nightmared(bool value) {
  _has_bits_[1] |= 0x00080000u;
  is_nightmared_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_nightmared(bool value) {
  _internal_set_is_nightmared(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_nightmared)
}

// optional bool is_rooted = 83;
inline bool CMsgBotWorldState_Unit::_internal_has_is_rooted() const {
  bool value = (_has_bits_[1] & 0x00100000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_rooted() const {
  return _internal_has_is_rooted();
}
inline void CMsgBotWorldState_Unit::clear_is_rooted() {
  is_rooted_ = false;
  _has_bits_[1] &= ~0x00100000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_rooted() const {
  return is_rooted_;
}
inline bool CMsgBotWorldState_Unit::is_rooted() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_rooted)
  return _internal_is_rooted();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_rooted(bool value) {
  _has_bits_[1] |= 0x00100000u;
  is_rooted_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_rooted(bool value) {
  _internal_set_is_rooted(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_rooted)
}

// optional bool is_silenced = 84;
inline bool CMsgBotWorldState_Unit::_internal_has_is_silenced() const {
  bool value = (_has_bits_[1] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_silenced() const {
  return _internal_has_is_silenced();
}
inline void CMsgBotWorldState_Unit::clear_is_silenced() {
  is_silenced_ = false;
  _has_bits_[1] &= ~0x00200000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_silenced() const {
  return is_silenced_;
}
inline bool CMsgBotWorldState_Unit::is_silenced() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_silenced)
  return _internal_is_silenced();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_silenced(bool value) {
  _has_bits_[1] |= 0x00200000u;
  is_silenced_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_silenced(bool value) {
  _internal_set_is_silenced(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_silenced)
}

// optional bool is_specially_deniable = 85;
inline bool CMsgBotWorldState_Unit::_internal_has_is_specially_deniable() const {
  bool value = (_has_bits_[1] & 0x00400000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_specially_deniable() const {
  return _internal_has_is_specially_deniable();
}
inline void CMsgBotWorldState_Unit::clear_is_specially_deniable() {
  is_specially_deniable_ = false;
  _has_bits_[1] &= ~0x00400000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_specially_deniable() const {
  return is_specially_deniable_;
}
inline bool CMsgBotWorldState_Unit::is_specially_deniable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_specially_deniable)
  return _internal_is_specially_deniable();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_specially_deniable(bool value) {
  _has_bits_[1] |= 0x00400000u;
  is_specially_deniable_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_specially_deniable(bool value) {
  _internal_set_is_specially_deniable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_specially_deniable)
}

// optional bool is_stunned = 86;
inline bool CMsgBotWorldState_Unit::_internal_has_is_stunned() const {
  bool value = (_has_bits_[1] & 0x00800000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_stunned() const {
  return _internal_has_is_stunned();
}
inline void CMsgBotWorldState_Unit::clear_is_stunned() {
  is_stunned_ = false;
  _has_bits_[1] &= ~0x00800000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_stunned() const {
  return is_stunned_;
}
inline bool CMsgBotWorldState_Unit::is_stunned() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_stunned)
  return _internal_is_stunned();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_stunned(bool value) {
  _has_bits_[1] |= 0x00800000u;
  is_stunned_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_stunned(bool value) {
  _internal_set_is_stunned(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_stunned)
}

// optional bool is_unable_to_miss = 87;
inline bool CMsgBotWorldState_Unit::_internal_has_is_unable_to_miss() const {
  bool value = (_has_bits_[1] & 0x01000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_unable_to_miss() const {
  return _internal_has_is_unable_to_miss();
}
inline void CMsgBotWorldState_Unit::clear_is_unable_to_miss() {
  is_unable_to_miss_ = false;
  _has_bits_[1] &= ~0x01000000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_unable_to_miss() const {
  return is_unable_to_miss_;
}
inline bool CMsgBotWorldState_Unit::is_unable_to_miss() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_unable_to_miss)
  return _internal_is_unable_to_miss();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_unable_to_miss(bool value) {
  _has_bits_[1] |= 0x01000000u;
  is_unable_to_miss_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_unable_to_miss(bool value) {
  _internal_set_is_unable_to_miss(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_unable_to_miss)
}

// optional bool has_scepter = 88;
inline bool CMsgBotWorldState_Unit::_internal_has_has_scepter() const {
  bool value = (_has_bits_[1] & 0x02000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_has_scepter() const {
  return _internal_has_has_scepter();
}
inline void CMsgBotWorldState_Unit::clear_has_scepter() {
  has_scepter_ = false;
  _has_bits_[1] &= ~0x02000000u;
}
inline bool CMsgBotWorldState_Unit::_internal_has_scepter() const {
  return has_scepter_;
}
inline bool CMsgBotWorldState_Unit::has_scepter() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.has_scepter)
  return _internal_has_scepter();
}
inline void CMsgBotWorldState_Unit::_internal_set_has_scepter(bool value) {
  _has_bits_[1] |= 0x02000000u;
  has_scepter_ = value;
}
inline void CMsgBotWorldState_Unit::set_has_scepter(bool value) {
  _internal_set_has_scepter(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.has_scepter)
}

// optional bool is_specially_undeniable = 94;
inline bool CMsgBotWorldState_Unit::_internal_has_is_specially_undeniable() const {
  bool value = (_has_bits_[1] & 0x40000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_specially_undeniable() const {
  return _internal_has_is_specially_undeniable();
}
inline void CMsgBotWorldState_Unit::clear_is_specially_undeniable() {
  is_specially_undeniable_ = false;
  _has_bits_[1] &= ~0x40000000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_specially_undeniable() const {
  return is_specially_undeniable_;
}
inline bool CMsgBotWorldState_Unit::is_specially_undeniable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_specially_undeniable)
  return _internal_is_specially_undeniable();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_specially_undeniable(bool value) {
  _has_bits_[1] |= 0x40000000u;
  is_specially_undeniable_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_specially_undeniable(bool value) {
  _internal_set_is_specially_undeniable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_specially_undeniable)
}

// repeated .CMsgBotWorldState.Ability abilities = 90 [(.map_field) = true];
inline int CMsgBotWorldState_Unit::_internal_abilities_size() const {
  return abilities_.size();
}
inline int CMsgBotWorldState_Unit::abilities_size() const {
  return _internal_abilities_size();
}
inline void CMsgBotWorldState_Unit::clear_abilities() {
  abilities_.Clear();
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.abilities)
  return abilities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >*
CMsgBotWorldState_Unit::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Unit.abilities)
  return &abilities_;
}
inline const ::CMsgBotWorldState_Ability& CMsgBotWorldState_Unit::_internal_abilities(int index) const {
  return abilities_.Get(index);
}
inline const ::CMsgBotWorldState_Ability& CMsgBotWorldState_Unit::abilities(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.abilities)
  return _internal_abilities(index);
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::_internal_add_abilities() {
  return abilities_.Add();
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::add_abilities() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Unit.abilities)
  return _internal_add_abilities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >&
CMsgBotWorldState_Unit::abilities() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Unit.abilities)
  return abilities_;
}

// repeated .CMsgBotWorldState.Ability items = 91 [(.map_field) = true];
inline int CMsgBotWorldState_Unit::_internal_items_size() const {
  return items_.size();
}
inline int CMsgBotWorldState_Unit::items_size() const {
  return _internal_items_size();
}
inline void CMsgBotWorldState_Unit::clear_items() {
  items_.Clear();
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >*
CMsgBotWorldState_Unit::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Unit.items)
  return &items_;
}
inline const ::CMsgBotWorldState_Ability& CMsgBotWorldState_Unit::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::CMsgBotWorldState_Ability& CMsgBotWorldState_Unit::items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.items)
  return _internal_items(index);
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::_internal_add_items() {
  return items_.Add();
}
inline ::CMsgBotWorldState_Ability* CMsgBotWorldState_Unit::add_items() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Unit.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Ability >&
CMsgBotWorldState_Unit::items() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Unit.items)
  return items_;
}

// repeated .CMsgBotWorldState.Modifier modifiers = 92 [(.map_field) = true];
inline int CMsgBotWorldState_Unit::_internal_modifiers_size() const {
  return modifiers_.size();
}
inline int CMsgBotWorldState_Unit::modifiers_size() const {
  return _internal_modifiers_size();
}
inline void CMsgBotWorldState_Unit::clear_modifiers() {
  modifiers_.Clear();
}
inline ::CMsgBotWorldState_Modifier* CMsgBotWorldState_Unit::mutable_modifiers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.modifiers)
  return modifiers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Modifier >*
CMsgBotWorldState_Unit::mutable_modifiers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Unit.modifiers)
  return &modifiers_;
}
inline const ::CMsgBotWorldState_Modifier& CMsgBotWorldState_Unit::_internal_modifiers(int index) const {
  return modifiers_.Get(index);
}
inline const ::CMsgBotWorldState_Modifier& CMsgBotWorldState_Unit::modifiers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.modifiers)
  return _internal_modifiers(index);
}
inline ::CMsgBotWorldState_Modifier* CMsgBotWorldState_Unit::_internal_add_modifiers() {
  return modifiers_.Add();
}
inline ::CMsgBotWorldState_Modifier* CMsgBotWorldState_Unit::add_modifiers() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Unit.modifiers)
  return _internal_add_modifiers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Modifier >&
CMsgBotWorldState_Unit::modifiers() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Unit.modifiers)
  return modifiers_;
}

// repeated .CMsgBotWorldState.TrackingProjectile incoming_tracking_projectiles = 93 [(.map_field) = true];
inline int CMsgBotWorldState_Unit::_internal_incoming_tracking_projectiles_size() const {
  return incoming_tracking_projectiles_.size();
}
inline int CMsgBotWorldState_Unit::incoming_tracking_projectiles_size() const {
  return _internal_incoming_tracking_projectiles_size();
}
inline void CMsgBotWorldState_Unit::clear_incoming_tracking_projectiles() {
  incoming_tracking_projectiles_.Clear();
}
inline ::CMsgBotWorldState_TrackingProjectile* CMsgBotWorldState_Unit::mutable_incoming_tracking_projectiles(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.incoming_tracking_projectiles)
  return incoming_tracking_projectiles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TrackingProjectile >*
CMsgBotWorldState_Unit::mutable_incoming_tracking_projectiles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Unit.incoming_tracking_projectiles)
  return &incoming_tracking_projectiles_;
}
inline const ::CMsgBotWorldState_TrackingProjectile& CMsgBotWorldState_Unit::_internal_incoming_tracking_projectiles(int index) const {
  return incoming_tracking_projectiles_.Get(index);
}
inline const ::CMsgBotWorldState_TrackingProjectile& CMsgBotWorldState_Unit::incoming_tracking_projectiles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.incoming_tracking_projectiles)
  return _internal_incoming_tracking_projectiles(index);
}
inline ::CMsgBotWorldState_TrackingProjectile* CMsgBotWorldState_Unit::_internal_add_incoming_tracking_projectiles() {
  return incoming_tracking_projectiles_.Add();
}
inline ::CMsgBotWorldState_TrackingProjectile* CMsgBotWorldState_Unit::add_incoming_tracking_projectiles() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Unit.incoming_tracking_projectiles)
  return _internal_add_incoming_tracking_projectiles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TrackingProjectile >&
CMsgBotWorldState_Unit::incoming_tracking_projectiles() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Unit.incoming_tracking_projectiles)
  return incoming_tracking_projectiles_;
}

// optional uint32 action_type = 100;
inline bool CMsgBotWorldState_Unit::_internal_has_action_type() const {
  bool value = (_has_bits_[1] & 0x04000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_action_type() const {
  return _internal_has_action_type();
}
inline void CMsgBotWorldState_Unit::clear_action_type() {
  action_type_ = 0u;
  _has_bits_[1] &= ~0x04000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_action_type() const {
  return action_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::action_type() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.action_type)
  return _internal_action_type();
}
inline void CMsgBotWorldState_Unit::_internal_set_action_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x04000000u;
  action_type_ = value;
}
inline void CMsgBotWorldState_Unit::set_action_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_action_type(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.action_type)
}

// optional uint32 ability_target_handle = 101;
inline bool CMsgBotWorldState_Unit::_internal_has_ability_target_handle() const {
  bool value = (_has_bits_[1] & 0x10000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_ability_target_handle() const {
  return _internal_has_ability_target_handle();
}
inline void CMsgBotWorldState_Unit::clear_ability_target_handle() {
  ability_target_handle_ = 0u;
  _has_bits_[1] &= ~0x10000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_ability_target_handle() const {
  return ability_target_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::ability_target_handle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.ability_target_handle)
  return _internal_ability_target_handle();
}
inline void CMsgBotWorldState_Unit::_internal_set_ability_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x10000000u;
  ability_target_handle_ = value;
}
inline void CMsgBotWorldState_Unit::set_ability_target_handle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_target_handle(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.ability_target_handle)
}

// optional string ability_target_name = 103;
inline bool CMsgBotWorldState_Unit::_internal_has_ability_target_name() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_ability_target_name() const {
  return _internal_has_ability_target_name();
}
inline void CMsgBotWorldState_Unit::clear_ability_target_name() {
  ability_target_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CMsgBotWorldState_Unit::ability_target_name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.ability_target_name)
  return _internal_ability_target_name();
}
inline void CMsgBotWorldState_Unit::set_ability_target_name(const std::string& value) {
  _internal_set_ability_target_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.ability_target_name)
}
inline std::string* CMsgBotWorldState_Unit::mutable_ability_target_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Unit.ability_target_name)
  return _internal_mutable_ability_target_name();
}
inline const std::string& CMsgBotWorldState_Unit::_internal_ability_target_name() const {
  return ability_target_name_.Get();
}
inline void CMsgBotWorldState_Unit::_internal_set_ability_target_name(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  ability_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Unit::set_ability_target_name(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  ability_target_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Unit.ability_target_name)
}
inline void CMsgBotWorldState_Unit::set_ability_target_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  ability_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Unit.ability_target_name)
}
inline void CMsgBotWorldState_Unit::set_ability_target_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  ability_target_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Unit.ability_target_name)
}
inline std::string* CMsgBotWorldState_Unit::_internal_mutable_ability_target_name() {
  _has_bits_[0] |= 0x00000004u;
  return ability_target_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Unit::release_ability_target_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Unit.ability_target_name)
  if (!_internal_has_ability_target_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return ability_target_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Unit::set_allocated_ability_target_name(std::string* ability_target_name) {
  if (ability_target_name != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  ability_target_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ability_target_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Unit.ability_target_name)
}

// optional bool is_using_ability = 102;
inline bool CMsgBotWorldState_Unit::_internal_has_is_using_ability() const {
  bool value = (_has_bits_[1] & 0x80000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_using_ability() const {
  return _internal_has_is_using_ability();
}
inline void CMsgBotWorldState_Unit::clear_is_using_ability() {
  is_using_ability_ = false;
  _has_bits_[1] &= ~0x80000000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_using_ability() const {
  return is_using_ability_;
}
inline bool CMsgBotWorldState_Unit::is_using_ability() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_using_ability)
  return _internal_is_using_ability();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_using_ability(bool value) {
  _has_bits_[1] |= 0x80000000u;
  is_using_ability_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_using_ability(bool value) {
  _internal_set_is_using_ability(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_using_ability)
}

// optional uint32 primary_attribute = 110;
inline bool CMsgBotWorldState_Unit::_internal_has_primary_attribute() const {
  bool value = (_has_bits_[1] & 0x20000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_primary_attribute() const {
  return _internal_has_primary_attribute();
}
inline void CMsgBotWorldState_Unit::clear_primary_attribute() {
  primary_attribute_ = 0u;
  _has_bits_[1] &= ~0x20000000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_primary_attribute() const {
  return primary_attribute_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::primary_attribute() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.primary_attribute)
  return _internal_primary_attribute();
}
inline void CMsgBotWorldState_Unit::_internal_set_primary_attribute(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[1] |= 0x20000000u;
  primary_attribute_ = value;
}
inline void CMsgBotWorldState_Unit::set_primary_attribute(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_primary_attribute(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.primary_attribute)
}

// optional bool is_illusion = 111;
inline bool CMsgBotWorldState_Unit::_internal_has_is_illusion() const {
  bool value = (_has_bits_[2] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_illusion() const {
  return _internal_has_is_illusion();
}
inline void CMsgBotWorldState_Unit::clear_is_illusion() {
  is_illusion_ = false;
  _has_bits_[2] &= ~0x00000001u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_illusion() const {
  return is_illusion_;
}
inline bool CMsgBotWorldState_Unit::is_illusion() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_illusion)
  return _internal_is_illusion();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_illusion(bool value) {
  _has_bits_[2] |= 0x00000001u;
  is_illusion_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_illusion(bool value) {
  _internal_set_is_illusion(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_illusion)
}

// optional float respawn_time = 112;
inline bool CMsgBotWorldState_Unit::_internal_has_respawn_time() const {
  bool value = (_has_bits_[2] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_respawn_time() const {
  return _internal_has_respawn_time();
}
inline void CMsgBotWorldState_Unit::clear_respawn_time() {
  respawn_time_ = 0;
  _has_bits_[2] &= ~0x00000004u;
}
inline float CMsgBotWorldState_Unit::_internal_respawn_time() const {
  return respawn_time_;
}
inline float CMsgBotWorldState_Unit::respawn_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.respawn_time)
  return _internal_respawn_time();
}
inline void CMsgBotWorldState_Unit::_internal_set_respawn_time(float value) {
  _has_bits_[2] |= 0x00000004u;
  respawn_time_ = value;
}
inline void CMsgBotWorldState_Unit::set_respawn_time(float value) {
  _internal_set_respawn_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.respawn_time)
}

// optional uint32 buyback_cost = 113;
inline bool CMsgBotWorldState_Unit::_internal_has_buyback_cost() const {
  bool value = (_has_bits_[2] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_buyback_cost() const {
  return _internal_has_buyback_cost();
}
inline void CMsgBotWorldState_Unit::clear_buyback_cost() {
  buyback_cost_ = 0u;
  _has_bits_[2] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_buyback_cost() const {
  return buyback_cost_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::buyback_cost() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.buyback_cost)
  return _internal_buyback_cost();
}
inline void CMsgBotWorldState_Unit::_internal_set_buyback_cost(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000008u;
  buyback_cost_ = value;
}
inline void CMsgBotWorldState_Unit::set_buyback_cost(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_buyback_cost(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.buyback_cost)
}

// optional float buyback_cooldown = 114;
inline bool CMsgBotWorldState_Unit::_internal_has_buyback_cooldown() const {
  bool value = (_has_bits_[2] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_buyback_cooldown() const {
  return _internal_has_buyback_cooldown();
}
inline void CMsgBotWorldState_Unit::clear_buyback_cooldown() {
  buyback_cooldown_ = 0;
  _has_bits_[2] &= ~0x00000010u;
}
inline float CMsgBotWorldState_Unit::_internal_buyback_cooldown() const {
  return buyback_cooldown_;
}
inline float CMsgBotWorldState_Unit::buyback_cooldown() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.buyback_cooldown)
  return _internal_buyback_cooldown();
}
inline void CMsgBotWorldState_Unit::_internal_set_buyback_cooldown(float value) {
  _has_bits_[2] |= 0x00000010u;
  buyback_cooldown_ = value;
}
inline void CMsgBotWorldState_Unit::set_buyback_cooldown(float value) {
  _internal_set_buyback_cooldown(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.buyback_cooldown)
}

// optional float spell_amplification = 115;
inline bool CMsgBotWorldState_Unit::_internal_has_spell_amplification() const {
  bool value = (_has_bits_[2] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_spell_amplification() const {
  return _internal_has_spell_amplification();
}
inline void CMsgBotWorldState_Unit::clear_spell_amplification() {
  spell_amplification_ = 0;
  _has_bits_[2] &= ~0x00000020u;
}
inline float CMsgBotWorldState_Unit::_internal_spell_amplification() const {
  return spell_amplification_;
}
inline float CMsgBotWorldState_Unit::spell_amplification() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.spell_amplification)
  return _internal_spell_amplification();
}
inline void CMsgBotWorldState_Unit::_internal_set_spell_amplification(float value) {
  _has_bits_[2] |= 0x00000020u;
  spell_amplification_ = value;
}
inline void CMsgBotWorldState_Unit::set_spell_amplification(float value) {
  _internal_set_spell_amplification(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.spell_amplification)
}

// optional float armor = 116;
inline bool CMsgBotWorldState_Unit::_internal_has_armor() const {
  bool value = (_has_bits_[2] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_armor() const {
  return _internal_has_armor();
}
inline void CMsgBotWorldState_Unit::clear_armor() {
  armor_ = 0;
  _has_bits_[2] &= ~0x00000040u;
}
inline float CMsgBotWorldState_Unit::_internal_armor() const {
  return armor_;
}
inline float CMsgBotWorldState_Unit::armor() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.armor)
  return _internal_armor();
}
inline void CMsgBotWorldState_Unit::_internal_set_armor(float value) {
  _has_bits_[2] |= 0x00000040u;
  armor_ = value;
}
inline void CMsgBotWorldState_Unit::set_armor(float value) {
  _internal_set_armor(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.armor)
}

// optional float magic_resist = 117;
inline bool CMsgBotWorldState_Unit::_internal_has_magic_resist() const {
  bool value = (_has_bits_[2] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_magic_resist() const {
  return _internal_has_magic_resist();
}
inline void CMsgBotWorldState_Unit::clear_magic_resist() {
  magic_resist_ = 0;
  _has_bits_[2] &= ~0x00000080u;
}
inline float CMsgBotWorldState_Unit::_internal_magic_resist() const {
  return magic_resist_;
}
inline float CMsgBotWorldState_Unit::magic_resist() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.magic_resist)
  return _internal_magic_resist();
}
inline void CMsgBotWorldState_Unit::_internal_set_magic_resist(float value) {
  _has_bits_[2] |= 0x00000080u;
  magic_resist_ = value;
}
inline void CMsgBotWorldState_Unit::set_magic_resist(float value) {
  _internal_set_magic_resist(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.magic_resist)
}

// optional float evasion = 118;
inline bool CMsgBotWorldState_Unit::_internal_has_evasion() const {
  bool value = (_has_bits_[2] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_evasion() const {
  return _internal_has_evasion();
}
inline void CMsgBotWorldState_Unit::clear_evasion() {
  evasion_ = 0;
  _has_bits_[2] &= ~0x00000100u;
}
inline float CMsgBotWorldState_Unit::_internal_evasion() const {
  return evasion_;
}
inline float CMsgBotWorldState_Unit::evasion() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.evasion)
  return _internal_evasion();
}
inline void CMsgBotWorldState_Unit::_internal_set_evasion(float value) {
  _has_bits_[2] |= 0x00000100u;
  evasion_ = value;
}
inline void CMsgBotWorldState_Unit::set_evasion(float value) {
  _internal_set_evasion(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.evasion)
}

// optional uint32 xp_needed_to_level = 120;
inline bool CMsgBotWorldState_Unit::_internal_has_xp_needed_to_level() const {
  bool value = (_has_bits_[2] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_xp_needed_to_level() const {
  return _internal_has_xp_needed_to_level();
}
inline void CMsgBotWorldState_Unit::clear_xp_needed_to_level() {
  xp_needed_to_level_ = 0u;
  _has_bits_[2] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_xp_needed_to_level() const {
  return xp_needed_to_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::xp_needed_to_level() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.xp_needed_to_level)
  return _internal_xp_needed_to_level();
}
inline void CMsgBotWorldState_Unit::_internal_set_xp_needed_to_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000200u;
  xp_needed_to_level_ = value;
}
inline void CMsgBotWorldState_Unit::set_xp_needed_to_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_xp_needed_to_level(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.xp_needed_to_level)
}

// optional uint32 ability_points = 121;
inline bool CMsgBotWorldState_Unit::_internal_has_ability_points() const {
  bool value = (_has_bits_[2] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_ability_points() const {
  return _internal_has_ability_points();
}
inline void CMsgBotWorldState_Unit::clear_ability_points() {
  ability_points_ = 0u;
  _has_bits_[2] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_ability_points() const {
  return ability_points_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::ability_points() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.ability_points)
  return _internal_ability_points();
}
inline void CMsgBotWorldState_Unit::_internal_set_ability_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000400u;
  ability_points_ = value;
}
inline void CMsgBotWorldState_Unit::set_ability_points(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_points(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.ability_points)
}

// optional int32 reliable_gold = 122 [default = -1];
inline bool CMsgBotWorldState_Unit::_internal_has_reliable_gold() const {
  bool value = (_has_bits_[2] & 0x00200000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_reliable_gold() const {
  return _internal_has_reliable_gold();
}
inline void CMsgBotWorldState_Unit::clear_reliable_gold() {
  reliable_gold_ = -1;
  _has_bits_[2] &= ~0x00200000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_reliable_gold() const {
  return reliable_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::reliable_gold() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.reliable_gold)
  return _internal_reliable_gold();
}
inline void CMsgBotWorldState_Unit::_internal_set_reliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[2] |= 0x00200000u;
  reliable_gold_ = value;
}
inline void CMsgBotWorldState_Unit::set_reliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reliable_gold(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.reliable_gold)
}

// optional int32 unreliable_gold = 123 [default = -1];
inline bool CMsgBotWorldState_Unit::_internal_has_unreliable_gold() const {
  bool value = (_has_bits_[2] & 0x00400000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_unreliable_gold() const {
  return _internal_has_unreliable_gold();
}
inline void CMsgBotWorldState_Unit::clear_unreliable_gold() {
  unreliable_gold_ = -1;
  _has_bits_[2] &= ~0x00400000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::_internal_unreliable_gold() const {
  return unreliable_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Unit::unreliable_gold() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.unreliable_gold)
  return _internal_unreliable_gold();
}
inline void CMsgBotWorldState_Unit::_internal_set_unreliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[2] |= 0x00400000u;
  unreliable_gold_ = value;
}
inline void CMsgBotWorldState_Unit::set_unreliable_gold(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unreliable_gold(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.unreliable_gold)
}

// optional uint32 last_hits = 124;
inline bool CMsgBotWorldState_Unit::_internal_has_last_hits() const {
  bool value = (_has_bits_[2] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_last_hits() const {
  return _internal_has_last_hits();
}
inline void CMsgBotWorldState_Unit::clear_last_hits() {
  last_hits_ = 0u;
  _has_bits_[2] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_last_hits() const {
  return last_hits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::last_hits() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.last_hits)
  return _internal_last_hits();
}
inline void CMsgBotWorldState_Unit::_internal_set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00000800u;
  last_hits_ = value;
}
inline void CMsgBotWorldState_Unit::set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_hits(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.last_hits)
}

// optional uint32 denies = 125;
inline bool CMsgBotWorldState_Unit::_internal_has_denies() const {
  bool value = (_has_bits_[2] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_denies() const {
  return _internal_has_denies();
}
inline void CMsgBotWorldState_Unit::clear_denies() {
  denies_ = 0u;
  _has_bits_[2] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_denies() const {
  return denies_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::denies() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.denies)
  return _internal_denies();
}
inline void CMsgBotWorldState_Unit::_internal_set_denies(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00001000u;
  denies_ = value;
}
inline void CMsgBotWorldState_Unit::set_denies(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_denies(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.denies)
}

// optional uint32 net_worth = 126;
inline bool CMsgBotWorldState_Unit::_internal_has_net_worth() const {
  bool value = (_has_bits_[2] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_net_worth() const {
  return _internal_has_net_worth();
}
inline void CMsgBotWorldState_Unit::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[2] &= ~0x00002000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_net_worth() const {
  return net_worth_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::net_worth() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.net_worth)
  return _internal_net_worth();
}
inline void CMsgBotWorldState_Unit::_internal_set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00002000u;
  net_worth_ = value;
}
inline void CMsgBotWorldState_Unit::set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_net_worth(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.net_worth)
}

// optional uint32 strength = 127;
inline bool CMsgBotWorldState_Unit::_internal_has_strength() const {
  bool value = (_has_bits_[2] & 0x00004000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_strength() const {
  return _internal_has_strength();
}
inline void CMsgBotWorldState_Unit::clear_strength() {
  strength_ = 0u;
  _has_bits_[2] &= ~0x00004000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_strength() const {
  return strength_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::strength() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.strength)
  return _internal_strength();
}
inline void CMsgBotWorldState_Unit::_internal_set_strength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00004000u;
  strength_ = value;
}
inline void CMsgBotWorldState_Unit::set_strength(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_strength(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.strength)
}

// optional uint32 agility = 128;
inline bool CMsgBotWorldState_Unit::_internal_has_agility() const {
  bool value = (_has_bits_[2] & 0x00008000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_agility() const {
  return _internal_has_agility();
}
inline void CMsgBotWorldState_Unit::clear_agility() {
  agility_ = 0u;
  _has_bits_[2] &= ~0x00008000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_agility() const {
  return agility_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::agility() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.agility)
  return _internal_agility();
}
inline void CMsgBotWorldState_Unit::_internal_set_agility(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00008000u;
  agility_ = value;
}
inline void CMsgBotWorldState_Unit::set_agility(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_agility(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.agility)
}

// optional uint32 intelligence = 129;
inline bool CMsgBotWorldState_Unit::_internal_has_intelligence() const {
  bool value = (_has_bits_[2] & 0x00010000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_intelligence() const {
  return _internal_has_intelligence();
}
inline void CMsgBotWorldState_Unit::clear_intelligence() {
  intelligence_ = 0u;
  _has_bits_[2] &= ~0x00010000u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::_internal_intelligence() const {
  return intelligence_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState_Unit::intelligence() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.intelligence)
  return _internal_intelligence();
}
inline void CMsgBotWorldState_Unit::_internal_set_intelligence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[2] |= 0x00010000u;
  intelligence_ = value;
}
inline void CMsgBotWorldState_Unit::set_intelligence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_intelligence(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.intelligence)
}

// optional float remaining_lifespan = 130;
inline bool CMsgBotWorldState_Unit::_internal_has_remaining_lifespan() const {
  bool value = (_has_bits_[2] & 0x00020000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_remaining_lifespan() const {
  return _internal_has_remaining_lifespan();
}
inline void CMsgBotWorldState_Unit::clear_remaining_lifespan() {
  remaining_lifespan_ = 0;
  _has_bits_[2] &= ~0x00020000u;
}
inline float CMsgBotWorldState_Unit::_internal_remaining_lifespan() const {
  return remaining_lifespan_;
}
inline float CMsgBotWorldState_Unit::remaining_lifespan() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.remaining_lifespan)
  return _internal_remaining_lifespan();
}
inline void CMsgBotWorldState_Unit::_internal_set_remaining_lifespan(float value) {
  _has_bits_[2] |= 0x00020000u;
  remaining_lifespan_ = value;
}
inline void CMsgBotWorldState_Unit::set_remaining_lifespan(float value) {
  _internal_set_remaining_lifespan(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.remaining_lifespan)
}

// optional bool flying_courier = 140;
inline bool CMsgBotWorldState_Unit::_internal_has_flying_courier() const {
  bool value = (_has_bits_[2] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_flying_courier() const {
  return _internal_has_flying_courier();
}
inline void CMsgBotWorldState_Unit::clear_flying_courier() {
  flying_courier_ = false;
  _has_bits_[2] &= ~0x00000002u;
}
inline bool CMsgBotWorldState_Unit::_internal_flying_courier() const {
  return flying_courier_;
}
inline bool CMsgBotWorldState_Unit::flying_courier() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.flying_courier)
  return _internal_flying_courier();
}
inline void CMsgBotWorldState_Unit::_internal_set_flying_courier(bool value) {
  _has_bits_[2] |= 0x00000002u;
  flying_courier_ = value;
}
inline void CMsgBotWorldState_Unit::set_flying_courier(bool value) {
  _internal_set_flying_courier(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.flying_courier)
}

// optional float shrine_cooldown = 150;
inline bool CMsgBotWorldState_Unit::_internal_has_shrine_cooldown() const {
  bool value = (_has_bits_[2] & 0x00040000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_shrine_cooldown() const {
  return _internal_has_shrine_cooldown();
}
inline void CMsgBotWorldState_Unit::clear_shrine_cooldown() {
  shrine_cooldown_ = 0;
  _has_bits_[2] &= ~0x00040000u;
}
inline float CMsgBotWorldState_Unit::_internal_shrine_cooldown() const {
  return shrine_cooldown_;
}
inline float CMsgBotWorldState_Unit::shrine_cooldown() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.shrine_cooldown)
  return _internal_shrine_cooldown();
}
inline void CMsgBotWorldState_Unit::_internal_set_shrine_cooldown(float value) {
  _has_bits_[2] |= 0x00040000u;
  shrine_cooldown_ = value;
}
inline void CMsgBotWorldState_Unit::set_shrine_cooldown(float value) {
  _internal_set_shrine_cooldown(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.shrine_cooldown)
}

// optional bool is_shrine_healing = 151;
inline bool CMsgBotWorldState_Unit::_internal_has_is_shrine_healing() const {
  bool value = (_has_bits_[1] & 0x08000000u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Unit::has_is_shrine_healing() const {
  return _internal_has_is_shrine_healing();
}
inline void CMsgBotWorldState_Unit::clear_is_shrine_healing() {
  is_shrine_healing_ = false;
  _has_bits_[1] &= ~0x08000000u;
}
inline bool CMsgBotWorldState_Unit::_internal_is_shrine_healing() const {
  return is_shrine_healing_;
}
inline bool CMsgBotWorldState_Unit::is_shrine_healing() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Unit.is_shrine_healing)
  return _internal_is_shrine_healing();
}
inline void CMsgBotWorldState_Unit::_internal_set_is_shrine_healing(bool value) {
  _has_bits_[1] |= 0x08000000u;
  is_shrine_healing_ = value;
}
inline void CMsgBotWorldState_Unit::set_is_shrine_healing(bool value) {
  _internal_set_is_shrine_healing(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Unit.is_shrine_healing)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Actions_OceanAnnotation_Hero

// required int32 playerID = 1;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_playerid() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_playerid() const {
  return _internal_has_playerid();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_playerid() {
  playerid_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_playerid() const {
  return playerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Actions_OceanAnnotation_Hero::playerid() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.playerID)
  return _internal_playerid();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  playerid_ = value;
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_playerid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.playerID)
}

// optional float valueFunction = 2;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_valuefunction() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_valuefunction() const {
  return _internal_has_valuefunction();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_valuefunction() {
  valuefunction_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_valuefunction() const {
  return valuefunction_;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::valuefunction() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.valueFunction)
  return _internal_valuefunction();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_valuefunction(float value) {
  _has_bits_[0] |= 0x00000008u;
  valuefunction_ = value;
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_valuefunction(float value) {
  _internal_set_valuefunction(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.valueFunction)
}

// optional float actionLogp = 3;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_actionlogp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_actionlogp() const {
  return _internal_has_actionlogp();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_actionlogp() {
  actionlogp_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_actionlogp() const {
  return actionlogp_;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::actionlogp() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionLogp)
  return _internal_actionlogp();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_actionlogp(float value) {
  _has_bits_[0] |= 0x00000010u;
  actionlogp_ = value;
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_actionlogp(float value) {
  _internal_set_actionlogp(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionLogp)
}

// optional float reward = 4;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_reward() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_reward() const {
  return _internal_has_reward();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_reward() {
  reward_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_reward() const {
  return reward_;
}
inline float CMsgBotWorldState_Actions_OceanAnnotation_Hero::reward() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.reward)
  return _internal_reward();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_reward(float value) {
  _has_bits_[0] |= 0x00000020u;
  reward_ = value;
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_reward(float value) {
  _internal_set_reward(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.reward)
}

// repeated int32 internalAction = 5;
inline int CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_internalaction_size() const {
  return internalaction_.size();
}
inline int CMsgBotWorldState_Actions_OceanAnnotation_Hero::internalaction_size() const {
  return _internal_internalaction_size();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_internalaction() {
  internalaction_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_internalaction(int index) const {
  return internalaction_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Actions_OceanAnnotation_Hero::internalaction(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.internalAction)
  return _internal_internalaction(index);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_internalaction(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  internalaction_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.internalAction)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_add_internalaction(::PROTOBUF_NAMESPACE_ID::int32 value) {
  internalaction_.Add(value);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::add_internalaction(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_internalaction(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.OceanAnnotation.Hero.internalAction)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_internalaction() const {
  return internalaction_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Actions_OceanAnnotation_Hero::internalaction() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Actions.OceanAnnotation.Hero.internalAction)
  return _internal_internalaction();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_mutable_internalaction() {
  return &internalaction_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Actions_OceanAnnotation_Hero::mutable_internalaction() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Actions.OceanAnnotation.Hero.internalAction)
  return _internal_mutable_internalaction();
}

// optional string actionName = 6;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_actionname() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_actionname() const {
  return _internal_has_actionname();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_actionname() {
  actionname_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation_Hero::actionname() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
  return _internal_actionname();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_actionname(const std::string& value) {
  _internal_set_actionname(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::mutable_actionname() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
  return _internal_mutable_actionname();
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_actionname() const {
  return actionname_.Get();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_actionname(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  actionname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_actionname(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  actionname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_actionname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  actionname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_actionname(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  actionname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_mutable_actionname() {
  _has_bits_[0] |= 0x00000001u;
  return actionname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::release_actionname() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
  if (!_internal_has_actionname()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return actionname_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_allocated_actionname(std::string* actionname) {
  if (actionname != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  actionname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), actionname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.OceanAnnotation.Hero.actionName)
}

// optional bytes detailedStats = 7;
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_has_detailedstats() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation_Hero::has_detailedstats() const {
  return _internal_has_detailedstats();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::clear_detailedstats() {
  detailedstats_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation_Hero::detailedstats() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
  return _internal_detailedstats();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_detailedstats(const std::string& value) {
  _internal_set_detailedstats(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::mutable_detailedstats() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
  return _internal_mutable_detailedstats();
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_detailedstats() const {
  return detailedstats_.Get();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_set_detailedstats(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  detailedstats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_detailedstats(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  detailedstats_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_detailedstats(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  detailedstats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_detailedstats(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  detailedstats_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::_internal_mutable_detailedstats() {
  _has_bits_[0] |= 0x00000002u;
  return detailedstats_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation_Hero::release_detailedstats() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
  if (!_internal_has_detailedstats()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return detailedstats_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation_Hero::set_allocated_detailedstats(std::string* detailedstats) {
  if (detailedstats != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  detailedstats_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), detailedstats,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.OceanAnnotation.Hero.detailedStats)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Actions_OceanAnnotation

// repeated .CMsgBotWorldState.Actions.OceanAnnotation.Hero heroes = 1;
inline int CMsgBotWorldState_Actions_OceanAnnotation::_internal_heroes_size() const {
  return heroes_.size();
}
inline int CMsgBotWorldState_Actions_OceanAnnotation::heroes_size() const {
  return _internal_heroes_size();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::clear_heroes() {
  heroes_.Clear();
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* CMsgBotWorldState_Actions_OceanAnnotation::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.OceanAnnotation.heroes)
  return heroes_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >*
CMsgBotWorldState_Actions_OceanAnnotation::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Actions.OceanAnnotation.heroes)
  return &heroes_;
}
inline const ::CMsgBotWorldState_Actions_OceanAnnotation_Hero& CMsgBotWorldState_Actions_OceanAnnotation::_internal_heroes(int index) const {
  return heroes_.Get(index);
}
inline const ::CMsgBotWorldState_Actions_OceanAnnotation_Hero& CMsgBotWorldState_Actions_OceanAnnotation::heroes(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.heroes)
  return _internal_heroes(index);
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* CMsgBotWorldState_Actions_OceanAnnotation::_internal_add_heroes() {
  return heroes_.Add();
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation_Hero* CMsgBotWorldState_Actions_OceanAnnotation::add_heroes() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.OceanAnnotation.heroes)
  return _internal_add_heroes();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Actions_OceanAnnotation_Hero >&
CMsgBotWorldState_Actions_OceanAnnotation::heroes() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Actions.OceanAnnotation.heroes)
  return heroes_;
}

// optional string agentID = 5;
inline bool CMsgBotWorldState_Actions_OceanAnnotation::_internal_has_agentid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_OceanAnnotation::has_agentid() const {
  return _internal_has_agentid();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::clear_agentid() {
  agentid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation::agentid() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
  return _internal_agentid();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_agentid(const std::string& value) {
  _internal_set_agentid(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::mutable_agentid() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
  return _internal_mutable_agentid();
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation::_internal_agentid() const {
  return agentid_.Get();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::_internal_set_agentid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  agentid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_agentid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  agentid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_agentid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  agentid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_agentid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  agentid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::_internal_mutable_agentid() {
  _has_bits_[0] |= 0x00000001u;
  return agentid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::release_agentid() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
  if (!_internal_has_agentid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return agentid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_allocated_agentid(std::string* agentid) {
  if (agentid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  agentid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), agentid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.OceanAnnotation.agentID)
}

// repeated float rewards = 6;
inline int CMsgBotWorldState_Actions_OceanAnnotation::_internal_rewards_size() const {
  return rewards_.size();
}
inline int CMsgBotWorldState_Actions_OceanAnnotation::rewards_size() const {
  return _internal_rewards_size();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::clear_rewards() {
  rewards_.Clear();
}
inline float CMsgBotWorldState_Actions_OceanAnnotation::_internal_rewards(int index) const {
  return rewards_.Get(index);
}
inline float CMsgBotWorldState_Actions_OceanAnnotation::rewards(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.rewards)
  return _internal_rewards(index);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_rewards(int index, float value) {
  rewards_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.rewards)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::_internal_add_rewards(float value) {
  rewards_.Add(value);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::add_rewards(float value) {
  _internal_add_rewards(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.OceanAnnotation.rewards)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CMsgBotWorldState_Actions_OceanAnnotation::_internal_rewards() const {
  return rewards_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
CMsgBotWorldState_Actions_OceanAnnotation::rewards() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Actions.OceanAnnotation.rewards)
  return _internal_rewards();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CMsgBotWorldState_Actions_OceanAnnotation::_internal_mutable_rewards() {
  return &rewards_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
CMsgBotWorldState_Actions_OceanAnnotation::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Actions.OceanAnnotation.rewards)
  return _internal_mutable_rewards();
}

// repeated string reward_names = 7;
inline int CMsgBotWorldState_Actions_OceanAnnotation::_internal_reward_names_size() const {
  return reward_names_.size();
}
inline int CMsgBotWorldState_Actions_OceanAnnotation::reward_names_size() const {
  return _internal_reward_names_size();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::clear_reward_names() {
  reward_names_.Clear();
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::add_reward_names() {
  // @@protoc_insertion_point(field_add_mutable:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  return _internal_add_reward_names();
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation::_internal_reward_names(int index) const {
  return reward_names_.Get(index);
}
inline const std::string& CMsgBotWorldState_Actions_OceanAnnotation::reward_names(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  return _internal_reward_names(index);
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::mutable_reward_names(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  return reward_names_.Mutable(index);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_reward_names(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  reward_names_.Mutable(index)->assign(value);
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_reward_names(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  reward_names_.Mutable(index)->assign(std::move(value));
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_reward_names(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  reward_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::set_reward_names(int index, const char* value, size_t size) {
  reward_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline std::string* CMsgBotWorldState_Actions_OceanAnnotation::_internal_add_reward_names() {
  return reward_names_.Add();
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::add_reward_names(const std::string& value) {
  reward_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::add_reward_names(std::string&& value) {
  reward_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::add_reward_names(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  reward_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline void CMsgBotWorldState_Actions_OceanAnnotation::add_reward_names(const char* value, size_t size) {
  reward_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CMsgBotWorldState_Actions_OceanAnnotation::reward_names() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  return reward_names_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CMsgBotWorldState_Actions_OceanAnnotation::mutable_reward_names() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Actions.OceanAnnotation.reward_names)
  return &reward_names_;
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Actions_Header

// optional float startTime = 1;
inline bool CMsgBotWorldState_Actions_Header::_internal_has_starttime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_Header::has_starttime() const {
  return _internal_has_starttime();
}
inline void CMsgBotWorldState_Actions_Header::clear_starttime() {
  starttime_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState_Actions_Header::_internal_starttime() const {
  return starttime_;
}
inline float CMsgBotWorldState_Actions_Header::starttime() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.Header.startTime)
  return _internal_starttime();
}
inline void CMsgBotWorldState_Actions_Header::_internal_set_starttime(float value) {
  _has_bits_[0] |= 0x00000002u;
  starttime_ = value;
}
inline void CMsgBotWorldState_Actions_Header::set_starttime(float value) {
  _internal_set_starttime(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.Header.startTime)
}

// optional string name = 2;
inline bool CMsgBotWorldState_Actions_Header::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions_Header::has_name() const {
  return _internal_has_name();
}
inline void CMsgBotWorldState_Actions_Header::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Actions_Header::name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.Header.name)
  return _internal_name();
}
inline void CMsgBotWorldState_Actions_Header::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.Header.name)
}
inline std::string* CMsgBotWorldState_Actions_Header::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.Header.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgBotWorldState_Actions_Header::_internal_name() const {
  return name_.Get();
}
inline void CMsgBotWorldState_Actions_Header::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Actions_Header::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Actions.Header.name)
}
inline void CMsgBotWorldState_Actions_Header::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.Header.name)
}
inline void CMsgBotWorldState_Actions_Header::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.Header.name)
}
inline std::string* CMsgBotWorldState_Actions_Header::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Actions_Header::release_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.Header.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Actions_Header::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.Header.name)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Actions

// optional float dota_time = 1 [default = -100];
inline bool CMsgBotWorldState_Actions::_internal_has_dota_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions::has_dota_time() const {
  return _internal_has_dota_time();
}
inline void CMsgBotWorldState_Actions::clear_dota_time() {
  dota_time_ = -100;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Actions::_internal_dota_time() const {
  return dota_time_;
}
inline float CMsgBotWorldState_Actions::dota_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.dota_time)
  return _internal_dota_time();
}
inline void CMsgBotWorldState_Actions::_internal_set_dota_time(float value) {
  _has_bits_[0] |= 0x00000008u;
  dota_time_ = value;
}
inline void CMsgBotWorldState_Actions::set_dota_time(float value) {
  _internal_set_dota_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.dota_time)
}

// repeated .CMsgBotWorldState.Action actions = 2;
inline int CMsgBotWorldState_Actions::_internal_actions_size() const {
  return actions_.size();
}
inline int CMsgBotWorldState_Actions::actions_size() const {
  return _internal_actions_size();
}
inline void CMsgBotWorldState_Actions::clear_actions() {
  actions_.Clear();
}
inline ::CMsgBotWorldState_Action* CMsgBotWorldState_Actions::mutable_actions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.actions)
  return actions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Action >*
CMsgBotWorldState_Actions::mutable_actions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Actions.actions)
  return &actions_;
}
inline const ::CMsgBotWorldState_Action& CMsgBotWorldState_Actions::_internal_actions(int index) const {
  return actions_.Get(index);
}
inline const ::CMsgBotWorldState_Action& CMsgBotWorldState_Actions::actions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.actions)
  return _internal_actions(index);
}
inline ::CMsgBotWorldState_Action* CMsgBotWorldState_Actions::_internal_add_actions() {
  return actions_.Add();
}
inline ::CMsgBotWorldState_Action* CMsgBotWorldState_Actions::add_actions() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Actions.actions)
  return _internal_add_actions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Action >&
CMsgBotWorldState_Actions::actions() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Actions.actions)
  return actions_;
}

// optional string extraData = 3;
inline bool CMsgBotWorldState_Actions::_internal_has_extradata() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Actions::has_extradata() const {
  return _internal_has_extradata();
}
inline void CMsgBotWorldState_Actions::clear_extradata() {
  extradata_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Actions::extradata() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.extraData)
  return _internal_extradata();
}
inline void CMsgBotWorldState_Actions::set_extradata(const std::string& value) {
  _internal_set_extradata(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Actions.extraData)
}
inline std::string* CMsgBotWorldState_Actions::mutable_extradata() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.extraData)
  return _internal_mutable_extradata();
}
inline const std::string& CMsgBotWorldState_Actions::_internal_extradata() const {
  return extradata_.Get();
}
inline void CMsgBotWorldState_Actions::_internal_set_extradata(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  extradata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Actions::set_extradata(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  extradata_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Actions.extraData)
}
inline void CMsgBotWorldState_Actions::set_extradata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  extradata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Actions.extraData)
}
inline void CMsgBotWorldState_Actions::set_extradata(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  extradata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Actions.extraData)
}
inline std::string* CMsgBotWorldState_Actions::_internal_mutable_extradata() {
  _has_bits_[0] |= 0x00000001u;
  return extradata_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Actions::release_extradata() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.extraData)
  if (!_internal_has_extradata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return extradata_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Actions::set_allocated_extradata(std::string* extradata) {
  if (extradata != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  extradata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), extradata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.extraData)
}

// optional .CMsgBotWorldState.Actions.OceanAnnotation oceanAnnotation = 4;
inline bool CMsgBotWorldState_Actions::_internal_has_oceanannotation() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || oceanannotation_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Actions::has_oceanannotation() const {
  return _internal_has_oceanannotation();
}
inline void CMsgBotWorldState_Actions::clear_oceanannotation() {
  if (oceanannotation_ != nullptr) oceanannotation_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Actions_OceanAnnotation& CMsgBotWorldState_Actions::_internal_oceanannotation() const {
  const ::CMsgBotWorldState_Actions_OceanAnnotation* p = oceanannotation_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Actions_OceanAnnotation&>(
      ::_CMsgBotWorldState_Actions_OceanAnnotation_default_instance_);
}
inline const ::CMsgBotWorldState_Actions_OceanAnnotation& CMsgBotWorldState_Actions::oceanannotation() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.oceanAnnotation)
  return _internal_oceanannotation();
}
inline void CMsgBotWorldState_Actions::unsafe_arena_set_allocated_oceanannotation(
    ::CMsgBotWorldState_Actions_OceanAnnotation* oceanannotation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oceanannotation_);
  }
  oceanannotation_ = oceanannotation;
  if (oceanannotation) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Actions.oceanAnnotation)
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation* CMsgBotWorldState_Actions::release_oceanannotation() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Actions_OceanAnnotation* temp = oceanannotation_;
  oceanannotation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation* CMsgBotWorldState_Actions::unsafe_arena_release_oceanannotation() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.oceanAnnotation)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Actions_OceanAnnotation* temp = oceanannotation_;
  oceanannotation_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation* CMsgBotWorldState_Actions::_internal_mutable_oceanannotation() {
  _has_bits_[0] |= 0x00000002u;
  if (oceanannotation_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Actions_OceanAnnotation>(GetArena());
    oceanannotation_ = p;
  }
  return oceanannotation_;
}
inline ::CMsgBotWorldState_Actions_OceanAnnotation* CMsgBotWorldState_Actions::mutable_oceanannotation() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.oceanAnnotation)
  return _internal_mutable_oceanannotation();
}
inline void CMsgBotWorldState_Actions::set_allocated_oceanannotation(::CMsgBotWorldState_Actions_OceanAnnotation* oceanannotation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete oceanannotation_;
  }
  if (oceanannotation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(oceanannotation);
    if (message_arena != submessage_arena) {
      oceanannotation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oceanannotation, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  oceanannotation_ = oceanannotation;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.oceanAnnotation)
}

// optional .CMsgBotWorldState.Actions.Header header = 5;
inline bool CMsgBotWorldState_Actions::_internal_has_header() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || header_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Actions::has_header() const {
  return _internal_has_header();
}
inline void CMsgBotWorldState_Actions::clear_header() {
  if (header_ != nullptr) header_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgBotWorldState_Actions_Header& CMsgBotWorldState_Actions::_internal_header() const {
  const ::CMsgBotWorldState_Actions_Header* p = header_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Actions_Header&>(
      ::_CMsgBotWorldState_Actions_Header_default_instance_);
}
inline const ::CMsgBotWorldState_Actions_Header& CMsgBotWorldState_Actions::header() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Actions.header)
  return _internal_header();
}
inline void CMsgBotWorldState_Actions::unsafe_arena_set_allocated_header(
    ::CMsgBotWorldState_Actions_Header* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Actions.header)
}
inline ::CMsgBotWorldState_Actions_Header* CMsgBotWorldState_Actions::release_header() {
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgBotWorldState_Actions_Header* temp = header_;
  header_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Actions_Header* CMsgBotWorldState_Actions::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Actions.header)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgBotWorldState_Actions_Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Actions_Header* CMsgBotWorldState_Actions::_internal_mutable_header() {
  _has_bits_[0] |= 0x00000004u;
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Actions_Header>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::CMsgBotWorldState_Actions_Header* CMsgBotWorldState_Actions::mutable_header() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Actions.header)
  return _internal_mutable_header();
}
inline void CMsgBotWorldState_Actions::set_allocated_header(::CMsgBotWorldState_Actions_Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Actions.header)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_MoveToLocation

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_MoveToLocation::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_MoveToLocation::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_MoveToLocation::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToLocation::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToLocation::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.MoveToLocation.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_MoveToLocation::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.MoveToLocation.units)
}
inline void CMsgBotWorldState_Action_MoveToLocation::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_MoveToLocation::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.MoveToLocation.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_MoveToLocation::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_MoveToLocation::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.MoveToLocation.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_MoveToLocation::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_MoveToLocation::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.MoveToLocation.units)
  return _internal_mutable_units();
}

// required .CMsgBotWorldState.Vector location = 2;
inline bool CMsgBotWorldState_Action_MoveToLocation::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_MoveToLocation::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Action_MoveToLocation::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_MoveToLocation::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_MoveToLocation::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.MoveToLocation.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Action_MoveToLocation::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.MoveToLocation.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_MoveToLocation::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_MoveToLocation::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.MoveToLocation.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_MoveToLocation::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_MoveToLocation::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.MoveToLocation.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Action_MoveToLocation::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.MoveToLocation.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_MoveToTarget

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_MoveToTarget::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_MoveToTarget::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_MoveToTarget::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToTarget::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToTarget::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.MoveToTarget.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_MoveToTarget::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.MoveToTarget.units)
}
inline void CMsgBotWorldState_Action_MoveToTarget::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_MoveToTarget::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.MoveToTarget.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_MoveToTarget::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_MoveToTarget::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.MoveToTarget.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_MoveToTarget::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_MoveToTarget::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.MoveToTarget.units)
  return _internal_mutable_units();
}

// required int32 target = 2;
inline bool CMsgBotWorldState_Action_MoveToTarget::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_MoveToTarget::has_target() const {
  return _internal_has_target();
}
inline void CMsgBotWorldState_Action_MoveToTarget::clear_target() {
  target_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToTarget::_internal_target() const {
  return target_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_MoveToTarget::target() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.MoveToTarget.target)
  return _internal_target();
}
inline void CMsgBotWorldState_Action_MoveToTarget::_internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_ = value;
}
inline void CMsgBotWorldState_Action_MoveToTarget::set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.MoveToTarget.target)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_AttackMove

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_AttackMove::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_AttackMove::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_AttackMove::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackMove::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackMove::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.AttackMove.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_AttackMove::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.AttackMove.units)
}
inline void CMsgBotWorldState_Action_AttackMove::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_AttackMove::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.AttackMove.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_AttackMove::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_AttackMove::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.AttackMove.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_AttackMove::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_AttackMove::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.AttackMove.units)
  return _internal_mutable_units();
}

// required .CMsgBotWorldState.Vector location = 2;
inline bool CMsgBotWorldState_Action_AttackMove::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_AttackMove::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Action_AttackMove::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_AttackMove::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_AttackMove::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.AttackMove.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Action_AttackMove::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.AttackMove.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_AttackMove::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_AttackMove::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.AttackMove.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_AttackMove::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_AttackMove::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.AttackMove.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Action_AttackMove::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.AttackMove.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_AttackTarget

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_AttackTarget::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_AttackTarget::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_AttackTarget::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackTarget::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackTarget::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.AttackTarget.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_AttackTarget::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.AttackTarget.units)
}
inline void CMsgBotWorldState_Action_AttackTarget::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_AttackTarget::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.AttackTarget.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_AttackTarget::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_AttackTarget::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.AttackTarget.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_AttackTarget::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_AttackTarget::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.AttackTarget.units)
  return _internal_mutable_units();
}

// required int32 target = 2;
inline bool CMsgBotWorldState_Action_AttackTarget::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_AttackTarget::has_target() const {
  return _internal_has_target();
}
inline void CMsgBotWorldState_Action_AttackTarget::clear_target() {
  target_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackTarget::_internal_target() const {
  return target_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_AttackTarget::target() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.AttackTarget.target)
  return _internal_target();
}
inline void CMsgBotWorldState_Action_AttackTarget::_internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_ = value;
}
inline void CMsgBotWorldState_Action_AttackTarget::set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.AttackTarget.target)
}

// optional bool once = 3;
inline bool CMsgBotWorldState_Action_AttackTarget::_internal_has_once() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_AttackTarget::has_once() const {
  return _internal_has_once();
}
inline void CMsgBotWorldState_Action_AttackTarget::clear_once() {
  once_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgBotWorldState_Action_AttackTarget::_internal_once() const {
  return once_;
}
inline bool CMsgBotWorldState_Action_AttackTarget::once() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.AttackTarget.once)
  return _internal_once();
}
inline void CMsgBotWorldState_Action_AttackTarget::_internal_set_once(bool value) {
  _has_bits_[0] |= 0x00000002u;
  once_ = value;
}
inline void CMsgBotWorldState_Action_AttackTarget::set_once(bool value) {
  _internal_set_once(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.AttackTarget.once)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_HoldLocation

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_HoldLocation::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_HoldLocation::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_HoldLocation::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_HoldLocation::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_HoldLocation::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.HoldLocation.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_HoldLocation::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.HoldLocation.units)
}
inline void CMsgBotWorldState_Action_HoldLocation::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_HoldLocation::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.HoldLocation.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_HoldLocation::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_HoldLocation::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.HoldLocation.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_HoldLocation::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_HoldLocation::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.HoldLocation.units)
  return _internal_mutable_units();
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Stop

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_Stop::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_Stop::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_Stop::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Stop::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Stop::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Stop.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_Stop::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Stop.units)
}
inline void CMsgBotWorldState_Action_Stop::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_Stop::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.Stop.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_Stop::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_Stop::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.Stop.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_Stop::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_Stop::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.Stop.units)
  return _internal_mutable_units();
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_CastLocation

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_CastLocation::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_CastLocation::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_CastLocation::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastLocation::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastLocation::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastLocation.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_CastLocation::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastLocation.units)
}
inline void CMsgBotWorldState_Action_CastLocation::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_CastLocation::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.CastLocation.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastLocation::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastLocation::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.CastLocation.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastLocation::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastLocation::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.CastLocation.units)
  return _internal_mutable_units();
}

// required int32 abilitySlot = 2;
inline bool CMsgBotWorldState_Action_CastLocation::_internal_has_abilityslot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastLocation::has_abilityslot() const {
  return _internal_has_abilityslot();
}
inline void CMsgBotWorldState_Action_CastLocation::clear_abilityslot() {
  abilityslot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastLocation::_internal_abilityslot() const {
  return abilityslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastLocation::abilityslot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastLocation.abilitySlot)
  return _internal_abilityslot();
}
inline void CMsgBotWorldState_Action_CastLocation::_internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  abilityslot_ = value;
}
inline void CMsgBotWorldState_Action_CastLocation::set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_abilityslot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastLocation.abilitySlot)
}

// required .CMsgBotWorldState.Vector location = 3;
inline bool CMsgBotWorldState_Action_CastLocation::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_CastLocation::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Action_CastLocation::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_CastLocation::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_CastLocation::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastLocation.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Action_CastLocation::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.CastLocation.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_CastLocation::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_CastLocation::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.CastLocation.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_CastLocation::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_CastLocation::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.CastLocation.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Action_CastLocation::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.CastLocation.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_CastTarget

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_CastTarget::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_CastTarget::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_CastTarget::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTarget.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_CastTarget::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTarget.units)
}
inline void CMsgBotWorldState_Action_CastTarget::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_CastTarget::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.CastTarget.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastTarget::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastTarget::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.CastTarget.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastTarget::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastTarget::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.CastTarget.units)
  return _internal_mutable_units();
}

// required int32 abilitySlot = 2;
inline bool CMsgBotWorldState_Action_CastTarget::_internal_has_abilityslot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastTarget::has_abilityslot() const {
  return _internal_has_abilityslot();
}
inline void CMsgBotWorldState_Action_CastTarget::clear_abilityslot() {
  abilityslot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::_internal_abilityslot() const {
  return abilityslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::abilityslot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTarget.abilitySlot)
  return _internal_abilityslot();
}
inline void CMsgBotWorldState_Action_CastTarget::_internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  abilityslot_ = value;
}
inline void CMsgBotWorldState_Action_CastTarget::set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_abilityslot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTarget.abilitySlot)
}

// required int32 target = 3;
inline bool CMsgBotWorldState_Action_CastTarget::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastTarget::has_target() const {
  return _internal_has_target();
}
inline void CMsgBotWorldState_Action_CastTarget::clear_target() {
  target_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::_internal_target() const {
  return target_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTarget::target() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTarget.target)
  return _internal_target();
}
inline void CMsgBotWorldState_Action_CastTarget::_internal_set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_ = value;
}
inline void CMsgBotWorldState_Action_CastTarget::set_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTarget.target)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_CastTree

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_CastTree::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_CastTree::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_CastTree::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTree.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_CastTree::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTree.units)
}
inline void CMsgBotWorldState_Action_CastTree::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_CastTree::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.CastTree.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastTree::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastTree::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.CastTree.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastTree::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastTree::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.CastTree.units)
  return _internal_mutable_units();
}

// required int32 abilitySlot = 2;
inline bool CMsgBotWorldState_Action_CastTree::_internal_has_abilityslot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastTree::has_abilityslot() const {
  return _internal_has_abilityslot();
}
inline void CMsgBotWorldState_Action_CastTree::clear_abilityslot() {
  abilityslot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::_internal_abilityslot() const {
  return abilityslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::abilityslot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTree.abilitySlot)
  return _internal_abilityslot();
}
inline void CMsgBotWorldState_Action_CastTree::_internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  abilityslot_ = value;
}
inline void CMsgBotWorldState_Action_CastTree::set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_abilityslot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTree.abilitySlot)
}

// required int32 tree = 3;
inline bool CMsgBotWorldState_Action_CastTree::_internal_has_tree() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastTree::has_tree() const {
  return _internal_has_tree();
}
inline void CMsgBotWorldState_Action_CastTree::clear_tree() {
  tree_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::_internal_tree() const {
  return tree_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastTree::tree() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastTree.tree)
  return _internal_tree();
}
inline void CMsgBotWorldState_Action_CastTree::_internal_set_tree(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  tree_ = value;
}
inline void CMsgBotWorldState_Action_CastTree::set_tree(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tree(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastTree.tree)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Cast

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_Cast::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_Cast::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_Cast::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Cast::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Cast::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Cast.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_Cast::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Cast.units)
}
inline void CMsgBotWorldState_Action_Cast::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_Cast::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.Cast.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_Cast::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_Cast::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.Cast.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_Cast::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_Cast::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.Cast.units)
  return _internal_mutable_units();
}

// required int32 abilitySlot = 2;
inline bool CMsgBotWorldState_Action_Cast::_internal_has_abilityslot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Cast::has_abilityslot() const {
  return _internal_has_abilityslot();
}
inline void CMsgBotWorldState_Action_Cast::clear_abilityslot() {
  abilityslot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Cast::_internal_abilityslot() const {
  return abilityslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Cast::abilityslot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Cast.abilitySlot)
  return _internal_abilityslot();
}
inline void CMsgBotWorldState_Action_Cast::_internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  abilityslot_ = value;
}
inline void CMsgBotWorldState_Action_Cast::set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_abilityslot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Cast.abilitySlot)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_CastToggle

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_CastToggle::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_CastToggle::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_CastToggle::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastToggle::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastToggle::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastToggle.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_CastToggle::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastToggle.units)
}
inline void CMsgBotWorldState_Action_CastToggle::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_CastToggle::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.CastToggle.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastToggle::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_CastToggle::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.CastToggle.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastToggle::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_CastToggle::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.CastToggle.units)
  return _internal_mutable_units();
}

// required int32 abilitySlot = 2;
inline bool CMsgBotWorldState_Action_CastToggle::_internal_has_abilityslot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_CastToggle::has_abilityslot() const {
  return _internal_has_abilityslot();
}
inline void CMsgBotWorldState_Action_CastToggle::clear_abilityslot() {
  abilityslot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastToggle::_internal_abilityslot() const {
  return abilityslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_CastToggle::abilityslot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.CastToggle.abilitySlot)
  return _internal_abilityslot();
}
inline void CMsgBotWorldState_Action_CastToggle::_internal_set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  abilityslot_ = value;
}
inline void CMsgBotWorldState_Action_CastToggle::set_abilityslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_abilityslot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.CastToggle.abilitySlot)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_TrainAbility

// required string ability = 1;
inline bool CMsgBotWorldState_Action_TrainAbility::_internal_has_ability() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_TrainAbility::has_ability() const {
  return _internal_has_ability();
}
inline void CMsgBotWorldState_Action_TrainAbility::clear_ability() {
  ability_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_TrainAbility::ability() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.TrainAbility.ability)
  return _internal_ability();
}
inline void CMsgBotWorldState_Action_TrainAbility::set_ability(const std::string& value) {
  _internal_set_ability(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.TrainAbility.ability)
}
inline std::string* CMsgBotWorldState_Action_TrainAbility::mutable_ability() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.TrainAbility.ability)
  return _internal_mutable_ability();
}
inline const std::string& CMsgBotWorldState_Action_TrainAbility::_internal_ability() const {
  return ability_.Get();
}
inline void CMsgBotWorldState_Action_TrainAbility::_internal_set_ability(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  ability_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_TrainAbility::set_ability(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  ability_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.TrainAbility.ability)
}
inline void CMsgBotWorldState_Action_TrainAbility::set_ability(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  ability_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.TrainAbility.ability)
}
inline void CMsgBotWorldState_Action_TrainAbility::set_ability(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  ability_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.TrainAbility.ability)
}
inline std::string* CMsgBotWorldState_Action_TrainAbility::_internal_mutable_ability() {
  _has_bits_[0] |= 0x00000001u;
  return ability_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_TrainAbility::release_ability() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.TrainAbility.ability)
  if (!_internal_has_ability()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return ability_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_TrainAbility::set_allocated_ability(std::string* ability) {
  if (ability != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  ability_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ability,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.TrainAbility.ability)
}

// optional int32 level = 2;
inline bool CMsgBotWorldState_Action_TrainAbility::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_TrainAbility::has_level() const {
  return _internal_has_level();
}
inline void CMsgBotWorldState_Action_TrainAbility::clear_level() {
  level_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_TrainAbility::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_TrainAbility::level() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.TrainAbility.level)
  return _internal_level();
}
inline void CMsgBotWorldState_Action_TrainAbility::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void CMsgBotWorldState_Action_TrainAbility::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.TrainAbility.level)
}

// optional int32 unit = 3;
inline bool CMsgBotWorldState_Action_TrainAbility::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_TrainAbility::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_TrainAbility::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_TrainAbility::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_TrainAbility::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.TrainAbility.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_TrainAbility::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_TrainAbility::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.TrainAbility.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_DropItem

// optional int32 unit = 1;
inline bool CMsgBotWorldState_Action_DropItem::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_DropItem::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_DropItem::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DropItem::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DropItem::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.DropItem.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_DropItem::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_DropItem::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.DropItem.unit)
}

// optional int32 slot = 2;
inline bool CMsgBotWorldState_Action_DropItem::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_DropItem::has_slot() const {
  return _internal_has_slot();
}
inline void CMsgBotWorldState_Action_DropItem::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DropItem::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DropItem::slot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.DropItem.slot)
  return _internal_slot();
}
inline void CMsgBotWorldState_Action_DropItem::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  slot_ = value;
}
inline void CMsgBotWorldState_Action_DropItem::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.DropItem.slot)
}

// optional .CMsgBotWorldState.Vector location = 3;
inline bool CMsgBotWorldState_Action_DropItem::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_DropItem::has_location() const {
  return _internal_has_location();
}
inline void CMsgBotWorldState_Action_DropItem::clear_location() {
  if (location_ != nullptr) location_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_DropItem::_internal_location() const {
  const ::CMsgBotWorldState_Vector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_DropItem::location() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.DropItem.location)
  return _internal_location();
}
inline void CMsgBotWorldState_Action_DropItem::unsafe_arena_set_allocated_location(
    ::CMsgBotWorldState_Vector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.DropItem.location)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_DropItem::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_DropItem::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.DropItem.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_DropItem::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_DropItem::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.DropItem.location)
  return _internal_mutable_location();
}
inline void CMsgBotWorldState_Action_DropItem::set_allocated_location(::CMsgBotWorldState_Vector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete location_;
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(location);
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.DropItem.location)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_PickUpItem

// optional int32 unit = 1;
inline bool CMsgBotWorldState_Action_PickUpItem::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PickUpItem::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_PickUpItem::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickUpItem::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickUpItem::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PickUpItem.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_PickUpItem::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_PickUpItem::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PickUpItem.unit)
}

// optional int32 itemId = 2;
inline bool CMsgBotWorldState_Action_PickUpItem::_internal_has_itemid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PickUpItem::has_itemid() const {
  return _internal_has_itemid();
}
inline void CMsgBotWorldState_Action_PickUpItem::clear_itemid() {
  itemid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickUpItem::_internal_itemid() const {
  return itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickUpItem::itemid() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PickUpItem.itemId)
  return _internal_itemid();
}
inline void CMsgBotWorldState_Action_PickUpItem::_internal_set_itemid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  itemid_ = value;
}
inline void CMsgBotWorldState_Action_PickUpItem::set_itemid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PickUpItem.itemId)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_PurchaseItem

// optional int32 item = 1;
inline bool CMsgBotWorldState_Action_PurchaseItem::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PurchaseItem::has_item() const {
  return _internal_has_item();
}
inline void CMsgBotWorldState_Action_PurchaseItem::clear_item() {
  item_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PurchaseItem::_internal_item() const {
  return item_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PurchaseItem::item() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PurchaseItem.item)
  return _internal_item();
}
inline void CMsgBotWorldState_Action_PurchaseItem::_internal_set_item(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_ = value;
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_item(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PurchaseItem.item)
}

// optional string item_name = 2;
inline bool CMsgBotWorldState_Action_PurchaseItem::_internal_has_item_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PurchaseItem::has_item_name() const {
  return _internal_has_item_name();
}
inline void CMsgBotWorldState_Action_PurchaseItem::clear_item_name() {
  item_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_PurchaseItem::item_name() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PurchaseItem.item_name)
  return _internal_item_name();
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_item_name(const std::string& value) {
  _internal_set_item_name(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PurchaseItem.item_name)
}
inline std::string* CMsgBotWorldState_Action_PurchaseItem::mutable_item_name() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.PurchaseItem.item_name)
  return _internal_mutable_item_name();
}
inline const std::string& CMsgBotWorldState_Action_PurchaseItem::_internal_item_name() const {
  return item_name_.Get();
}
inline void CMsgBotWorldState_Action_PurchaseItem::_internal_set_item_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_item_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.PurchaseItem.item_name)
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_item_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.PurchaseItem.item_name)
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_item_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.PurchaseItem.item_name)
}
inline std::string* CMsgBotWorldState_Action_PurchaseItem::_internal_mutable_item_name() {
  _has_bits_[0] |= 0x00000001u;
  return item_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_PurchaseItem::release_item_name() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.PurchaseItem.item_name)
  if (!_internal_has_item_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_allocated_item_name(std::string* item_name) {
  if (item_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.PurchaseItem.item_name)
}

// optional int32 unit = 3;
inline bool CMsgBotWorldState_Action_PurchaseItem::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PurchaseItem::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_PurchaseItem::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PurchaseItem::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PurchaseItem::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PurchaseItem.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_PurchaseItem::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_PurchaseItem::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PurchaseItem.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_SellItem

// optional int32 item = 1;
inline bool CMsgBotWorldState_Action_SellItem::_internal_has_item() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SellItem::has_item() const {
  return _internal_has_item();
}
inline void CMsgBotWorldState_Action_SellItem::clear_item() {
  item_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::_internal_item() const {
  return item_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::item() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SellItem.item)
  return _internal_item();
}
inline void CMsgBotWorldState_Action_SellItem::_internal_set_item(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ = value;
}
inline void CMsgBotWorldState_Action_SellItem::set_item(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SellItem.item)
}

// optional int32 slot = 2;
inline bool CMsgBotWorldState_Action_SellItem::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SellItem::has_slot() const {
  return _internal_has_slot();
}
inline void CMsgBotWorldState_Action_SellItem::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::slot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SellItem.slot)
  return _internal_slot();
}
inline void CMsgBotWorldState_Action_SellItem::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_ = value;
}
inline void CMsgBotWorldState_Action_SellItem::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SellItem.slot)
}

// optional int32 unit = 3;
inline bool CMsgBotWorldState_Action_SellItem::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SellItem::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_SellItem::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SellItem::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SellItem.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_SellItem::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_SellItem::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SellItem.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_SwapItems

// required int32 slot_a = 1;
inline bool CMsgBotWorldState_Action_SwapItems::_internal_has_slot_a() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SwapItems::has_slot_a() const {
  return _internal_has_slot_a();
}
inline void CMsgBotWorldState_Action_SwapItems::clear_slot_a() {
  slot_a_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::_internal_slot_a() const {
  return slot_a_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::slot_a() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SwapItems.slot_a)
  return _internal_slot_a();
}
inline void CMsgBotWorldState_Action_SwapItems::_internal_set_slot_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_a_ = value;
}
inline void CMsgBotWorldState_Action_SwapItems::set_slot_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot_a(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SwapItems.slot_a)
}

// required int32 slot_b = 2;
inline bool CMsgBotWorldState_Action_SwapItems::_internal_has_slot_b() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SwapItems::has_slot_b() const {
  return _internal_has_slot_b();
}
inline void CMsgBotWorldState_Action_SwapItems::clear_slot_b() {
  slot_b_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::_internal_slot_b() const {
  return slot_b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::slot_b() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SwapItems.slot_b)
  return _internal_slot_b();
}
inline void CMsgBotWorldState_Action_SwapItems::_internal_set_slot_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_b_ = value;
}
inline void CMsgBotWorldState_Action_SwapItems::set_slot_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot_b(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SwapItems.slot_b)
}

// optional int32 unit = 3;
inline bool CMsgBotWorldState_Action_SwapItems::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SwapItems::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_SwapItems::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SwapItems::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SwapItems.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_SwapItems::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_SwapItems::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SwapItems.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_DisassembleItem

// required int32 slot = 1;
inline bool CMsgBotWorldState_Action_DisassembleItem::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_DisassembleItem::has_slot() const {
  return _internal_has_slot();
}
inline void CMsgBotWorldState_Action_DisassembleItem::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DisassembleItem::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_DisassembleItem::slot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.DisassembleItem.slot)
  return _internal_slot();
}
inline void CMsgBotWorldState_Action_DisassembleItem::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_ = value;
}
inline void CMsgBotWorldState_Action_DisassembleItem::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.DisassembleItem.slot)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_SetCombineLockItem

// required int32 slot = 1;
inline bool CMsgBotWorldState_Action_SetCombineLockItem::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SetCombineLockItem::has_slot() const {
  return _internal_has_slot();
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SetCombineLockItem::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_SetCombineLockItem::slot() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SetCombineLockItem.slot)
  return _internal_slot();
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_ = value;
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SetCombineLockItem.slot)
}

// required bool value = 2;
inline bool CMsgBotWorldState_Action_SetCombineLockItem::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SetCombineLockItem::has_value() const {
  return _internal_has_value();
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::clear_value() {
  value_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgBotWorldState_Action_SetCombineLockItem::_internal_value() const {
  return value_;
}
inline bool CMsgBotWorldState_Action_SetCombineLockItem::value() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SetCombineLockItem.value)
  return _internal_value();
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::_internal_set_value(bool value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void CMsgBotWorldState_Action_SetCombineLockItem::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SetCombineLockItem.value)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_PickupRune

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_PickupRune::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_PickupRune::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_PickupRune::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickupRune::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickupRune::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PickupRune.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_PickupRune::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PickupRune.units)
}
inline void CMsgBotWorldState_Action_PickupRune::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_PickupRune::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.PickupRune.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_PickupRune::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_PickupRune::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.PickupRune.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_PickupRune::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_PickupRune::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.PickupRune.units)
  return _internal_mutable_units();
}

// required int32 rune = 2;
inline bool CMsgBotWorldState_Action_PickupRune::_internal_has_rune() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_PickupRune::has_rune() const {
  return _internal_has_rune();
}
inline void CMsgBotWorldState_Action_PickupRune::clear_rune() {
  rune_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickupRune::_internal_rune() const {
  return rune_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_PickupRune::rune() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.PickupRune.rune)
  return _internal_rune();
}
inline void CMsgBotWorldState_Action_PickupRune::_internal_set_rune(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  rune_ = value;
}
inline void CMsgBotWorldState_Action_PickupRune::set_rune(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rune(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.PickupRune.rune)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Chat

// required string message = 1;
inline bool CMsgBotWorldState_Action_Chat::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Chat::has_message() const {
  return _internal_has_message();
}
inline void CMsgBotWorldState_Action_Chat::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_Chat::message() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Chat.message)
  return _internal_message();
}
inline void CMsgBotWorldState_Action_Chat::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Chat.message)
}
inline std::string* CMsgBotWorldState_Action_Chat::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.Chat.message)
  return _internal_mutable_message();
}
inline const std::string& CMsgBotWorldState_Action_Chat::_internal_message() const {
  return message_.Get();
}
inline void CMsgBotWorldState_Action_Chat::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_Chat::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.Chat.message)
}
inline void CMsgBotWorldState_Action_Chat::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.Chat.message)
}
inline void CMsgBotWorldState_Action_Chat::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.Chat.message)
}
inline std::string* CMsgBotWorldState_Action_Chat::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_Chat::release_message() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.Chat.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_Chat::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.Chat.message)
}

// required bool to_allchat = 2;
inline bool CMsgBotWorldState_Action_Chat::_internal_has_to_allchat() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Chat::has_to_allchat() const {
  return _internal_has_to_allchat();
}
inline void CMsgBotWorldState_Action_Chat::clear_to_allchat() {
  to_allchat_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgBotWorldState_Action_Chat::_internal_to_allchat() const {
  return to_allchat_;
}
inline bool CMsgBotWorldState_Action_Chat::to_allchat() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Chat.to_allchat)
  return _internal_to_allchat();
}
inline void CMsgBotWorldState_Action_Chat::_internal_set_to_allchat(bool value) {
  _has_bits_[0] |= 0x00000002u;
  to_allchat_ = value;
}
inline void CMsgBotWorldState_Action_Chat::set_to_allchat(bool value) {
  _internal_set_to_allchat(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Chat.to_allchat)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_UseShrine

// repeated int32 units = 1;
inline int CMsgBotWorldState_Action_UseShrine::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState_Action_UseShrine::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState_Action_UseShrine::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_UseShrine::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_UseShrine::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.UseShrine.units)
  return _internal_units(index);
}
inline void CMsgBotWorldState_Action_UseShrine::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.UseShrine.units)
}
inline void CMsgBotWorldState_Action_UseShrine::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CMsgBotWorldState_Action_UseShrine::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.Action.UseShrine.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_UseShrine::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState_Action_UseShrine::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.Action.UseShrine.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_UseShrine::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState_Action_UseShrine::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.Action.UseShrine.units)
  return _internal_mutable_units();
}

// required int32 shrine = 2;
inline bool CMsgBotWorldState_Action_UseShrine::_internal_has_shrine() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_UseShrine::has_shrine() const {
  return _internal_has_shrine();
}
inline void CMsgBotWorldState_Action_UseShrine::clear_shrine() {
  shrine_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_UseShrine::_internal_shrine() const {
  return shrine_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_UseShrine::shrine() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.UseShrine.shrine)
  return _internal_shrine();
}
inline void CMsgBotWorldState_Action_UseShrine::_internal_set_shrine(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  shrine_ = value;
}
inline void CMsgBotWorldState_Action_UseShrine::set_shrine(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_shrine(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.UseShrine.shrine)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Courier

// required int32 unit = 1;
inline bool CMsgBotWorldState_Action_Courier::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Courier::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_Courier::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Courier.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_Courier::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_Courier::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Courier.unit)
}

// required int32 courier = 2;
inline bool CMsgBotWorldState_Action_Courier::_internal_has_courier() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Courier::has_courier() const {
  return _internal_has_courier();
}
inline void CMsgBotWorldState_Action_Courier::clear_courier() {
  courier_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::_internal_courier() const {
  return courier_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::courier() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Courier.courier)
  return _internal_courier();
}
inline void CMsgBotWorldState_Action_Courier::_internal_set_courier(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  courier_ = value;
}
inline void CMsgBotWorldState_Action_Courier::set_courier(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_courier(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Courier.courier)
}

// required int32 action = 3;
inline bool CMsgBotWorldState_Action_Courier::_internal_has_action() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Courier::has_action() const {
  return _internal_has_action();
}
inline void CMsgBotWorldState_Action_Courier::clear_action() {
  action_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::_internal_action() const {
  return action_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Courier::action() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Courier.action)
  return _internal_action();
}
inline void CMsgBotWorldState_Action_Courier::_internal_set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  action_ = value;
}
inline void CMsgBotWorldState_Action_Courier::set_action(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Courier.action)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_GetActualIncomingDamage

// required int32 unit = 1;
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetActualIncomingDamage::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetActualIncomingDamage.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetActualIncomingDamage.unit)
}

// required float nDamage = 2;
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_has_ndamage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::has_ndamage() const {
  return _internal_has_ndamage();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::clear_ndamage() {
  ndamage_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_ndamage() const {
  return ndamage_;
}
inline float CMsgBotWorldState_Action_GetActualIncomingDamage::ndamage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetActualIncomingDamage.nDamage)
  return _internal_ndamage();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_set_ndamage(float value) {
  _has_bits_[0] |= 0x00000002u;
  ndamage_ = value;
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::set_ndamage(float value) {
  _internal_set_ndamage(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetActualIncomingDamage.nDamage)
}

// required int32 nDamageType = 3;
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_has_ndamagetype() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetActualIncomingDamage::has_ndamagetype() const {
  return _internal_has_ndamagetype();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::clear_ndamagetype() {
  ndamagetype_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_ndamagetype() const {
  return ndamagetype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetActualIncomingDamage::ndamagetype() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetActualIncomingDamage.nDamageType)
  return _internal_ndamagetype();
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::_internal_set_ndamagetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ndamagetype_ = value;
}
inline void CMsgBotWorldState_Action_GetActualIncomingDamage::set_ndamagetype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ndamagetype(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetActualIncomingDamage.nDamageType)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_GetEstimatedDamageToTarget

// required int32 unit = 1;
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.unit)
}

// required bool bCurrentlyAvailable = 2;
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_has_bcurrentlyavailable() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::has_bcurrentlyavailable() const {
  return _internal_has_bcurrentlyavailable();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::clear_bcurrentlyavailable() {
  bcurrentlyavailable_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_bcurrentlyavailable() const {
  return bcurrentlyavailable_;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::bcurrentlyavailable() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.bCurrentlyAvailable)
  return _internal_bcurrentlyavailable();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_set_bcurrentlyavailable(bool value) {
  _has_bits_[0] |= 0x00000002u;
  bcurrentlyavailable_ = value;
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::set_bcurrentlyavailable(bool value) {
  _internal_set_bcurrentlyavailable(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.bCurrentlyAvailable)
}

// required int32 hTarget = 3;
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_has_htarget() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::has_htarget() const {
  return _internal_has_htarget();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::clear_htarget() {
  htarget_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_htarget() const {
  return htarget_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::htarget() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.hTarget)
  return _internal_htarget();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  htarget_ = value;
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_htarget(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.hTarget)
}

// required float fDuration = 4;
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_has_fduration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::has_fduration() const {
  return _internal_has_fduration();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::clear_fduration() {
  fduration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_fduration() const {
  return fduration_;
}
inline float CMsgBotWorldState_Action_GetEstimatedDamageToTarget::fduration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.fDuration)
  return _internal_fduration();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_set_fduration(float value) {
  _has_bits_[0] |= 0x00000008u;
  fduration_ = value;
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::set_fduration(float value) {
  _internal_set_fduration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.fDuration)
}

// required int32 nDamageTypes = 5;
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_has_ndamagetypes() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_GetEstimatedDamageToTarget::has_ndamagetypes() const {
  return _internal_has_ndamagetypes();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::clear_ndamagetypes() {
  ndamagetypes_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_ndamagetypes() const {
  return ndamagetypes_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_GetEstimatedDamageToTarget::ndamagetypes() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.nDamageTypes)
  return _internal_ndamagetypes();
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::_internal_set_ndamagetypes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ndamagetypes_ = value;
}
inline void CMsgBotWorldState_Action_GetEstimatedDamageToTarget::set_ndamagetypes(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ndamagetypes(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.GetEstimatedDamageToTarget.nDamageTypes)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Glyph

// required int32 unit = 1;
inline bool CMsgBotWorldState_Action_Glyph::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Glyph::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_Glyph::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Glyph::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Glyph::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Glyph.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_Glyph::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_Glyph::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Glyph.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_SoftReset

// optional string minigameConfig = 1;
inline bool CMsgBotWorldState_Action_SoftReset::_internal_has_minigameconfig() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SoftReset::has_minigameconfig() const {
  return _internal_has_minigameconfig();
}
inline void CMsgBotWorldState_Action_SoftReset::clear_minigameconfig() {
  minigameconfig_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_SoftReset::minigameconfig() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SoftReset.minigameConfig)
  return _internal_minigameconfig();
}
inline void CMsgBotWorldState_Action_SoftReset::set_minigameconfig(const std::string& value) {
  _internal_set_minigameconfig(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SoftReset.minigameConfig)
}
inline std::string* CMsgBotWorldState_Action_SoftReset::mutable_minigameconfig() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.SoftReset.minigameConfig)
  return _internal_mutable_minigameconfig();
}
inline const std::string& CMsgBotWorldState_Action_SoftReset::_internal_minigameconfig() const {
  return minigameconfig_.Get();
}
inline void CMsgBotWorldState_Action_SoftReset::_internal_set_minigameconfig(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  minigameconfig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_SoftReset::set_minigameconfig(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  minigameconfig_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.SoftReset.minigameConfig)
}
inline void CMsgBotWorldState_Action_SoftReset::set_minigameconfig(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  minigameconfig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.SoftReset.minigameConfig)
}
inline void CMsgBotWorldState_Action_SoftReset::set_minigameconfig(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  minigameconfig_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.SoftReset.minigameConfig)
}
inline std::string* CMsgBotWorldState_Action_SoftReset::_internal_mutable_minigameconfig() {
  _has_bits_[0] |= 0x00000001u;
  return minigameconfig_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_SoftReset::release_minigameconfig() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.SoftReset.minigameConfig)
  if (!_internal_has_minigameconfig()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return minigameconfig_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_SoftReset::set_allocated_minigameconfig(std::string* minigameconfig) {
  if (minigameconfig != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  minigameconfig_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), minigameconfig,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.SoftReset.minigameConfig)
}

// optional string snapshotData = 2;
inline bool CMsgBotWorldState_Action_SoftReset::_internal_has_snapshotdata() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_SoftReset::has_snapshotdata() const {
  return _internal_has_snapshotdata();
}
inline void CMsgBotWorldState_Action_SoftReset::clear_snapshotdata() {
  snapshotdata_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgBotWorldState_Action_SoftReset::snapshotdata() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.SoftReset.snapshotData)
  return _internal_snapshotdata();
}
inline void CMsgBotWorldState_Action_SoftReset::set_snapshotdata(const std::string& value) {
  _internal_set_snapshotdata(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.SoftReset.snapshotData)
}
inline std::string* CMsgBotWorldState_Action_SoftReset::mutable_snapshotdata() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.SoftReset.snapshotData)
  return _internal_mutable_snapshotdata();
}
inline const std::string& CMsgBotWorldState_Action_SoftReset::_internal_snapshotdata() const {
  return snapshotdata_.Get();
}
inline void CMsgBotWorldState_Action_SoftReset::_internal_set_snapshotdata(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  snapshotdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_SoftReset::set_snapshotdata(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  snapshotdata_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.SoftReset.snapshotData)
}
inline void CMsgBotWorldState_Action_SoftReset::set_snapshotdata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  snapshotdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.SoftReset.snapshotData)
}
inline void CMsgBotWorldState_Action_SoftReset::set_snapshotdata(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  snapshotdata_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.SoftReset.snapshotData)
}
inline std::string* CMsgBotWorldState_Action_SoftReset::_internal_mutable_snapshotdata() {
  _has_bits_[0] |= 0x00000002u;
  return snapshotdata_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_SoftReset::release_snapshotdata() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.SoftReset.snapshotData)
  if (!_internal_has_snapshotdata()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return snapshotdata_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_SoftReset::set_allocated_snapshotdata(std::string* snapshotdata) {
  if (snapshotdata != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  snapshotdata_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), snapshotdata,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.SoftReset.snapshotData)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_Buyback

// required int32 unit = 1;
inline bool CMsgBotWorldState_Action_Buyback::_internal_has_unit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_Buyback::has_unit() const {
  return _internal_has_unit();
}
inline void CMsgBotWorldState_Action_Buyback::clear_unit() {
  unit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Buyback::_internal_unit() const {
  return unit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_Buyback::unit() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.Buyback.unit)
  return _internal_unit();
}
inline void CMsgBotWorldState_Action_Buyback::_internal_set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ = value;
}
inline void CMsgBotWorldState_Action_Buyback::set_unit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.Buyback.unit)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawText

// required .CMsgBotWorldState.Vector origin = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::clear_origin() {
  if (origin_ != nullptr) origin_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_origin() const {
  const ::CMsgBotWorldState_Vector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawText::origin() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawText.origin)
  return _internal_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::unsafe_arena_set_allocated_origin(
    ::CMsgBotWorldState_Vector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawText.origin)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawText::release_origin() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawText::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawText.origin)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000002u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawText::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawText.origin)
  return _internal_mutable_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_allocated_origin(::CMsgBotWorldState_Vector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete origin_;
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(origin);
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawText.origin)
}

// required string text = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::has_text() const {
  return _internal_has_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugDrawText::text() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
  return _internal_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawText::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
  return _internal_mutable_text();
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_text() const {
  return text_.Get();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawText::release_text() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawText.text)
}

// required bool bViewCheck = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_has_bviewcheck() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::has_bviewcheck() const {
  return _internal_has_bviewcheck();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::clear_bviewcheck() {
  bviewcheck_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_bviewcheck() const {
  return bviewcheck_;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::bviewcheck() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawText.bViewCheck)
  return _internal_bviewcheck();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_set_bviewcheck(bool value) {
  _has_bits_[0] |= 0x00000004u;
  bviewcheck_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_bviewcheck(bool value) {
  _internal_set_bviewcheck(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawText.bViewCheck)
}

// required float duration = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawText::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawText::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawText.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawText::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawText.duration)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawLine

// required .CMsgBotWorldState.Vector origin = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_origin() {
  if (origin_ != nullptr) origin_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_origin() const {
  const ::CMsgBotWorldState_Vector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawLine::origin() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.origin)
  return _internal_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::unsafe_arena_set_allocated_origin(
    ::CMsgBotWorldState_Vector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawLine.origin)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::release_origin() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawLine.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawLine.origin)
  return _internal_mutable_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_allocated_origin(::CMsgBotWorldState_Vector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete origin_;
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(origin);
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawLine.origin)
}

// required .CMsgBotWorldState.Vector target = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || target_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_target() const {
  return _internal_has_target();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_target() {
  if (target_ != nullptr) target_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_target() const {
  const ::CMsgBotWorldState_Vector* p = target_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawLine::target() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.target)
  return _internal_target();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::unsafe_arena_set_allocated_target(
    ::CMsgBotWorldState_Vector* target) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(target_);
  }
  target_ = target;
  if (target) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawLine.target)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::release_target() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = target_;
  target_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::unsafe_arena_release_target() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawLine.target)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = target_;
  target_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000002u;
  if (target_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    target_ = p;
  }
  return target_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawLine::mutable_target() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawLine.target)
  return _internal_mutable_target();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_allocated_target(::CMsgBotWorldState_Vector* target) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete target_;
  }
  if (target) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(target);
    if (message_arena != submessage_arena) {
      target = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawLine.target)
}

// required int32 r = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_r() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_r() const {
  return _internal_has_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_r() {
  r_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::r() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.r)
  return _internal_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  r_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawLine.r)
}

// required int32 g = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_g() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_g() const {
  return _internal_has_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_g() {
  g_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::g() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.g)
  return _internal_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  g_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawLine.g)
}

// required int32 b = 5;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_b() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_b() const {
  return _internal_has_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_b() {
  b_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawLine::b() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.b)
  return _internal_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  b_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawLine.b)
}

// required bool ztest = 6;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_ztest() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_ztest() const {
  return _internal_has_ztest();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_ztest() {
  ztest_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_ztest() const {
  return ztest_;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::ztest() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.ztest)
  return _internal_ztest();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_set_ztest(bool value) {
  _has_bits_[0] |= 0x00000020u;
  ztest_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_ztest(bool value) {
  _internal_set_ztest(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawLine.ztest)
}

// required float duration = 7;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawLine::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawLine::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawLine.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000040u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawLine::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawLine.duration)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawScreenText

// required float x = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_x() const {
  return _internal_has_x();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_x() const {
  return x_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::x() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.x)
  return _internal_x();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_x(float value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.x)
}

// required float y = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_y() const {
  return _internal_has_y();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_y() const {
  return y_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::y() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.y)
  return _internal_y();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_y(float value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.y)
}

// required int32 lineOffset = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_lineoffset() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_lineoffset() const {
  return _internal_has_lineoffset();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_lineoffset() {
  lineoffset_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_lineoffset() const {
  return lineoffset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::lineoffset() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.lineOffset)
  return _internal_lineoffset();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  lineoffset_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lineoffset(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.lineOffset)
}

// required string text = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_text() const {
  return _internal_has_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::text() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
  return _internal_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
  return _internal_mutable_text();
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_text() const {
  return text_.Get();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::release_text() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.text)
}

// required int32 r = 5;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_r() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_r() const {
  return _internal_has_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_r() {
  r_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::r() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.r)
  return _internal_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  r_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.r)
}

// required int32 g = 6;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_g() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_g() const {
  return _internal_has_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_g() {
  g_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::g() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.g)
  return _internal_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  g_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.g)
}

// required int32 b = 7;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_b() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_b() const {
  return _internal_has_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_b() {
  b_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::b() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.b)
  return _internal_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  b_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.b)
}

// required int32 a = 8;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_a() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_a() const {
  return _internal_has_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_a() {
  a_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_a() const {
  return a_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::a() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.a)
  return _internal_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  a_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.a)
}

// required float duration = 9;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000100u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawScreenText::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawScreenText.duration)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty

// required float x = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_x() const {
  return _internal_has_x();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_x() const {
  return x_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::x() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.x)
  return _internal_x();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_x(float value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.x)
}

// required float y = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_y() const {
  return _internal_has_y();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_y() const {
  return y_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::y() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.y)
  return _internal_y();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_y(float value) {
  _has_bits_[0] |= 0x00000008u;
  y_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.y)
}

// required int32 lineOffset = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_lineoffset() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_lineoffset() const {
  return _internal_has_lineoffset();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_lineoffset() {
  lineoffset_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_lineoffset() const {
  return lineoffset_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::lineoffset() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.lineOffset)
  return _internal_lineoffset();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  lineoffset_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_lineoffset(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lineoffset(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.lineOffset)
}

// required string text = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_text() const {
  return _internal_has_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::text() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
  return _internal_text();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
  return _internal_mutable_text();
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_text() const {
  return text_.Get();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000001u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::release_text() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.text)
}

// required int32 r = 5;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_r() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_r() const {
  return _internal_has_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_r() {
  r_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::r() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.r)
  return _internal_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  r_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.r)
}

// required int32 g = 6;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_g() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_g() const {
  return _internal_has_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_g() {
  g_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::g() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.g)
  return _internal_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  g_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.g)
}

// required int32 b = 7;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_b() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_b() const {
  return _internal_has_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_b() {
  b_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::b() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.b)
  return _internal_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  b_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.b)
}

// required int32 a = 8;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_a() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_a() const {
  return _internal_has_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_a() {
  a_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_a() const {
  return a_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::a() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.a)
  return _internal_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  a_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.a)
}

// required float duration = 9;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000200u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.duration)
}

// required string font = 10;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_font() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_font() const {
  return _internal_has_font();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_font() {
  font_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::font() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
  return _internal_font();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_font(const std::string& value) {
  _internal_set_font(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::mutable_font() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
  return _internal_mutable_font();
}
inline const std::string& CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_font() const {
  return font_.Get();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_font(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  font_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_font(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  font_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_font(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  font_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_font(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  font_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_mutable_font() {
  _has_bits_[0] |= 0x00000002u;
  return font_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::release_font() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
  if (!_internal_has_font()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return font_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_allocated_font(std::string* font) {
  if (font != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  font_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), font,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.font)
}

// required float size = 11;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_size() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_size() const {
  return _internal_has_size();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_size() {
  size_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_size() const {
  return size_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::size() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.size)
  return _internal_size();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_size(float value) {
  _has_bits_[0] |= 0x00000400u;
  size_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_size(float value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.size)
}

// required bool bBold = 12;
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_has_bbold() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::has_bbold() const {
  return _internal_has_bbold();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::clear_bbold() {
  bbold_ = false;
  _has_bits_[0] &= ~0x00000800u;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_bbold() const {
  return bbold_;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::bbold() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.bBold)
  return _internal_bbold();
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::_internal_set_bbold(bool value) {
  _has_bits_[0] |= 0x00000800u;
  bbold_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty::set_bbold(bool value) {
  _internal_set_bbold(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty.bBold)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawBox

// required .CMsgBotWorldState.Vector origin = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_origin() const {
  return _internal_has_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_origin() {
  if (origin_ != nullptr) origin_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_origin() const {
  const ::CMsgBotWorldState_Vector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::origin() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.origin)
  return _internal_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_set_allocated_origin(
    ::CMsgBotWorldState_Vector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.origin)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::release_origin() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawBox.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawBox.origin)
  return _internal_mutable_origin();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_allocated_origin(::CMsgBotWorldState_Vector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete origin_;
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(origin);
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.origin)
}

// required .CMsgBotWorldState.Vector minimum = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_minimum() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || minimum_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_minimum() const {
  return _internal_has_minimum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_minimum() {
  if (minimum_ != nullptr) minimum_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_minimum() const {
  const ::CMsgBotWorldState_Vector* p = minimum_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::minimum() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.minimum)
  return _internal_minimum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_set_allocated_minimum(
    ::CMsgBotWorldState_Vector* minimum) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(minimum_);
  }
  minimum_ = minimum;
  if (minimum) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.minimum)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::release_minimum() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = minimum_;
  minimum_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_release_minimum() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawBox.minimum)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = minimum_;
  minimum_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_mutable_minimum() {
  _has_bits_[0] |= 0x00000002u;
  if (minimum_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    minimum_ = p;
  }
  return minimum_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::mutable_minimum() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawBox.minimum)
  return _internal_mutable_minimum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_allocated_minimum(::CMsgBotWorldState_Vector* minimum) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete minimum_;
  }
  if (minimum) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(minimum);
    if (message_arena != submessage_arena) {
      minimum = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, minimum, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  minimum_ = minimum;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.minimum)
}

// required .CMsgBotWorldState.Vector maximum = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_maximum() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || maximum_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_maximum() const {
  return _internal_has_maximum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_maximum() {
  if (maximum_ != nullptr) maximum_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_maximum() const {
  const ::CMsgBotWorldState_Vector* p = maximum_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawBox::maximum() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.maximum)
  return _internal_maximum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_set_allocated_maximum(
    ::CMsgBotWorldState_Vector* maximum) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(maximum_);
  }
  maximum_ = maximum;
  if (maximum) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.maximum)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::release_maximum() {
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgBotWorldState_Vector* temp = maximum_;
  maximum_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::unsafe_arena_release_maximum() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawBox.maximum)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgBotWorldState_Vector* temp = maximum_;
  maximum_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_mutable_maximum() {
  _has_bits_[0] |= 0x00000004u;
  if (maximum_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    maximum_ = p;
  }
  return maximum_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawBox::mutable_maximum() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawBox.maximum)
  return _internal_mutable_maximum();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_allocated_maximum(::CMsgBotWorldState_Vector* maximum) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete maximum_;
  }
  if (maximum) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(maximum);
    if (message_arena != submessage_arena) {
      maximum = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, maximum, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  maximum_ = maximum;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawBox.maximum)
}

// required int32 r = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_r() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_r() const {
  return _internal_has_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_r() {
  r_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_r() const {
  return r_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::r() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.r)
  return _internal_r();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  r_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_r(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawBox.r)
}

// required int32 g = 5;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_g() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_g() const {
  return _internal_has_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_g() {
  g_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_g() const {
  return g_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::g() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.g)
  return _internal_g();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  g_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_g(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawBox.g)
}

// required int32 b = 6;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_b() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_b() const {
  return _internal_has_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_b() {
  b_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_b() const {
  return b_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::b() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.b)
  return _internal_b();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  b_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_b(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawBox.b)
}

// required int32 a = 7;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_a() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_a() const {
  return _internal_has_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_a() {
  a_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_a() const {
  return a_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action_ScriptingDebugDrawBox::a() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.a)
  return _internal_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  a_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_a(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawBox.a)
}

// required float duration = 8;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawBox::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawBox::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawBox.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000080u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawBox::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawBox.duration)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawCircle

// required .CMsgBotWorldState.Vector center = 1;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_center() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || center_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_center() const {
  return _internal_has_center();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_center() {
  if (center_ != nullptr) center_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_center() const {
  const ::CMsgBotWorldState_Vector* p = center_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawCircle::center() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.center)
  return _internal_center();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::unsafe_arena_set_allocated_center(
    ::CMsgBotWorldState_Vector* center) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(center_);
  }
  center_ = center;
  if (center) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.center)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::release_center() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = center_;
  center_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::unsafe_arena_release_center() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.center)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgBotWorldState_Vector* temp = center_;
  center_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_mutable_center() {
  _has_bits_[0] |= 0x00000001u;
  if (center_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    center_ = p;
  }
  return center_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::mutable_center() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.center)
  return _internal_mutable_center();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_allocated_center(::CMsgBotWorldState_Vector* center) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete center_;
  }
  if (center) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(center);
    if (message_arena != submessage_arena) {
      center = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, center, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  center_ = center;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.center)
}

// required .CMsgBotWorldState.Vector vRgb = 2;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_vrgb() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || vrgb_ != nullptr);
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_vrgb() const {
  return _internal_has_vrgb();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_vrgb() {
  if (vrgb_ != nullptr) vrgb_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_vrgb() const {
  const ::CMsgBotWorldState_Vector* p = vrgb_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgBotWorldState_Vector&>(
      ::_CMsgBotWorldState_Vector_default_instance_);
}
inline const ::CMsgBotWorldState_Vector& CMsgBotWorldState_Action_ScriptingDebugDrawCircle::vrgb() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.vRgb)
  return _internal_vrgb();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::unsafe_arena_set_allocated_vrgb(
    ::CMsgBotWorldState_Vector* vrgb) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vrgb_);
  }
  vrgb_ = vrgb;
  if (vrgb) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.vRgb)
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::release_vrgb() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = vrgb_;
  vrgb_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::unsafe_arena_release_vrgb() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.vRgb)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgBotWorldState_Vector* temp = vrgb_;
  vrgb_ = nullptr;
  return temp;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_mutable_vrgb() {
  _has_bits_[0] |= 0x00000002u;
  if (vrgb_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgBotWorldState_Vector>(GetArena());
    vrgb_ = p;
  }
  return vrgb_;
}
inline ::CMsgBotWorldState_Vector* CMsgBotWorldState_Action_ScriptingDebugDrawCircle::mutable_vrgb() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.vRgb)
  return _internal_mutable_vrgb();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_allocated_vrgb(::CMsgBotWorldState_Vector* vrgb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete vrgb_;
  }
  if (vrgb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vrgb);
    if (message_arena != submessage_arena) {
      vrgb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vrgb, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  vrgb_ = vrgb;
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.vRgb)
}

// required float a = 3;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_a() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_a() const {
  return _internal_has_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_a() {
  a_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_a() const {
  return a_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::a() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.a)
  return _internal_a();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_set_a(float value) {
  _has_bits_[0] |= 0x00000004u;
  a_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.a)
}

// required float rad = 4;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_rad() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_rad() const {
  return _internal_has_rad();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_rad() {
  rad_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_rad() const {
  return rad_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::rad() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.rad)
  return _internal_rad();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_set_rad(float value) {
  _has_bits_[0] |= 0x00000008u;
  rad_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_rad(float value) {
  _internal_set_rad(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.rad)
}

// required bool ztest = 5;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_ztest() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_ztest() const {
  return _internal_has_ztest();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_ztest() {
  ztest_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_ztest() const {
  return ztest_;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::ztest() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.ztest)
  return _internal_ztest();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_set_ztest(bool value) {
  _has_bits_[0] |= 0x00000010u;
  ztest_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_ztest(bool value) {
  _internal_set_ztest(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.ztest)
}

// required float duration = 6;
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_ScriptingDebugDrawCircle::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_duration() const {
  return duration_;
}
inline float CMsgBotWorldState_Action_ScriptingDebugDrawCircle::duration() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.duration)
  return _internal_duration();
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000020u;
  duration_ = value;
}
inline void CMsgBotWorldState_Action_ScriptingDebugDrawCircle::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.ScriptingDebugDrawCircle.duration)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_ScriptingDebugDrawClear

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_OceanWinGame

// required string team = 1;
inline bool CMsgBotWorldState_Action_OceanWinGame::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_OceanWinGame::has_team() const {
  return _internal_has_team();
}
inline void CMsgBotWorldState_Action_OceanWinGame::clear_team() {
  team_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgBotWorldState_Action_OceanWinGame::team() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.OceanWinGame.team)
  return _internal_team();
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_team(const std::string& value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.OceanWinGame.team)
}
inline std::string* CMsgBotWorldState_Action_OceanWinGame::mutable_team() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.OceanWinGame.team)
  return _internal_mutable_team();
}
inline const std::string& CMsgBotWorldState_Action_OceanWinGame::_internal_team() const {
  return team_.Get();
}
inline void CMsgBotWorldState_Action_OceanWinGame::_internal_set_team(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  team_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_team(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  team_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgBotWorldState.Action.OceanWinGame.team)
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_team(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  team_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgBotWorldState.Action.OceanWinGame.team)
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_team(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  team_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgBotWorldState.Action.OceanWinGame.team)
}
inline std::string* CMsgBotWorldState_Action_OceanWinGame::_internal_mutable_team() {
  _has_bits_[0] |= 0x00000001u;
  return team_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgBotWorldState_Action_OceanWinGame::release_team() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.OceanWinGame.team)
  if (!_internal_has_team()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return team_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_allocated_team(std::string* team) {
  if (team != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  team_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), team,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgBotWorldState.Action.OceanWinGame.team)
}

// optional float reward = 2;
inline bool CMsgBotWorldState_Action_OceanWinGame::_internal_has_reward() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_OceanWinGame::has_reward() const {
  return _internal_has_reward();
}
inline void CMsgBotWorldState_Action_OceanWinGame::clear_reward() {
  reward_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState_Action_OceanWinGame::_internal_reward() const {
  return reward_;
}
inline float CMsgBotWorldState_Action_OceanWinGame::reward() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.OceanWinGame.reward)
  return _internal_reward();
}
inline void CMsgBotWorldState_Action_OceanWinGame::_internal_set_reward(float value) {
  _has_bits_[0] |= 0x00000002u;
  reward_ = value;
}
inline void CMsgBotWorldState_Action_OceanWinGame::set_reward(float value) {
  _internal_set_reward(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.OceanWinGame.reward)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action_OceanReplayCorrectTime

// required float delta = 1;
inline bool CMsgBotWorldState_Action_OceanReplayCorrectTime::_internal_has_delta() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action_OceanReplayCorrectTime::has_delta() const {
  return _internal_has_delta();
}
inline void CMsgBotWorldState_Action_OceanReplayCorrectTime::clear_delta() {
  delta_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CMsgBotWorldState_Action_OceanReplayCorrectTime::_internal_delta() const {
  return delta_;
}
inline float CMsgBotWorldState_Action_OceanReplayCorrectTime::delta() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.OceanReplayCorrectTime.delta)
  return _internal_delta();
}
inline void CMsgBotWorldState_Action_OceanReplayCorrectTime::_internal_set_delta(float value) {
  _has_bits_[0] |= 0x00000001u;
  delta_ = value;
}
inline void CMsgBotWorldState_Action_OceanReplayCorrectTime::set_delta(float value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.OceanReplayCorrectTime.delta)
}

// -------------------------------------------------------------------

// CMsgBotWorldState_Action

// required .CMsgBotWorldState.Action.Type actionType = 1 [default = DOTA_UNIT_ORDER_NONE];
inline bool CMsgBotWorldState_Action::_internal_has_actiontype() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action::has_actiontype() const {
  return _internal_has_actiontype();
}
inline void CMsgBotWorldState_Action::clear_actiontype() {
  actiontype_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::_internal_actiontype() const {
  return static_cast< ::CMsgBotWorldState_Action_Type >(actiontype_);
}
inline ::CMsgBotWorldState_Action_Type CMsgBotWorldState_Action::actiontype() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.actionType)
  return _internal_actiontype();
}
inline void CMsgBotWorldState_Action::_internal_set_actiontype(::CMsgBotWorldState_Action_Type value) {
  assert(::CMsgBotWorldState_Action_Type_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  actiontype_ = value;
}
inline void CMsgBotWorldState_Action::set_actiontype(::CMsgBotWorldState_Action_Type value) {
  _internal_set_actiontype(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.actionType)
}

// optional int32 player = 2 [default = -1];
inline bool CMsgBotWorldState_Action::_internal_has_player() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action::has_player() const {
  return _internal_has_player();
}
inline void CMsgBotWorldState_Action::clear_player() {
  player_ = -1;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::_internal_player() const {
  return player_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::player() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.player)
  return _internal_player();
}
inline void CMsgBotWorldState_Action::_internal_set_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_ = value;
}
inline void CMsgBotWorldState_Action::set_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.player)
}

// optional int32 actionID = 4 [default = -1];
inline bool CMsgBotWorldState_Action::_internal_has_actionid() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action::has_actionid() const {
  return _internal_has_actionid();
}
inline void CMsgBotWorldState_Action::clear_actionid() {
  actionid_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::_internal_actionid() const {
  return actionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::actionid() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.actionID)
  return _internal_actionid();
}
inline void CMsgBotWorldState_Action::_internal_set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  actionid_ = value;
}
inline void CMsgBotWorldState_Action::set_actionid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actionid(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.actionID)
}

// optional int32 actionDelay = 10 [default = 0];
inline bool CMsgBotWorldState_Action::_internal_has_actiondelay() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState_Action::has_actiondelay() const {
  return _internal_has_actiondelay();
}
inline void CMsgBotWorldState_Action::clear_actiondelay() {
  actiondelay_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::_internal_actiondelay() const {
  return actiondelay_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState_Action::actiondelay() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.actionDelay)
  return _internal_actiondelay();
}
inline void CMsgBotWorldState_Action::_internal_set_actiondelay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  actiondelay_ = value;
}
inline void CMsgBotWorldState_Action::set_actiondelay(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_actiondelay(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.Action.actionDelay)
}

// .CMsgBotWorldState.Action.MoveToLocation moveToLocation = 101;
inline bool CMsgBotWorldState_Action::_internal_has_movetolocation() const {
  return ActionData_case() == kMoveToLocation;
}
inline bool CMsgBotWorldState_Action::has_movetolocation() const {
  return _internal_has_movetolocation();
}
inline void CMsgBotWorldState_Action::set_has_movetolocation() {
  _oneof_case_[0] = kMoveToLocation;
}
inline void CMsgBotWorldState_Action::clear_movetolocation() {
  if (_internal_has_movetolocation()) {
    if (GetArena() == nullptr) {
      delete ActionData_.movetolocation_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::release_movetolocation() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.moveToLocation)
  if (_internal_has_movetolocation()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_MoveToLocation* temp = ActionData_.movetolocation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.movetolocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_MoveToLocation& CMsgBotWorldState_Action::_internal_movetolocation() const {
  return _internal_has_movetolocation()
      ? *ActionData_.movetolocation_
      : reinterpret_cast< ::CMsgBotWorldState_Action_MoveToLocation&>(::_CMsgBotWorldState_Action_MoveToLocation_default_instance_);
}
inline const ::CMsgBotWorldState_Action_MoveToLocation& CMsgBotWorldState_Action::movetolocation() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.moveToLocation)
  return _internal_movetolocation();
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::unsafe_arena_release_movetolocation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.moveToLocation)
  if (_internal_has_movetolocation()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_MoveToLocation* temp = ActionData_.movetolocation_;
    ActionData_.movetolocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_movetolocation(::CMsgBotWorldState_Action_MoveToLocation* movetolocation) {
  clear_ActionData();
  if (movetolocation) {
    set_has_movetolocation();
    ActionData_.movetolocation_ = movetolocation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.moveToLocation)
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::_internal_mutable_movetolocation() {
  if (!_internal_has_movetolocation()) {
    clear_ActionData();
    set_has_movetolocation();
    ActionData_.movetolocation_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_MoveToLocation >(GetArena());
  }
  return ActionData_.movetolocation_;
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::mutable_movetolocation() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.moveToLocation)
  return _internal_mutable_movetolocation();
}

// .CMsgBotWorldState.Action.MoveToTarget moveToTarget = 102;
inline bool CMsgBotWorldState_Action::_internal_has_movetotarget() const {
  return ActionData_case() == kMoveToTarget;
}
inline bool CMsgBotWorldState_Action::has_movetotarget() const {
  return _internal_has_movetotarget();
}
inline void CMsgBotWorldState_Action::set_has_movetotarget() {
  _oneof_case_[0] = kMoveToTarget;
}
inline void CMsgBotWorldState_Action::clear_movetotarget() {
  if (_internal_has_movetotarget()) {
    if (GetArena() == nullptr) {
      delete ActionData_.movetotarget_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_MoveToTarget* CMsgBotWorldState_Action::release_movetotarget() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.moveToTarget)
  if (_internal_has_movetotarget()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_MoveToTarget* temp = ActionData_.movetotarget_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.movetotarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_MoveToTarget& CMsgBotWorldState_Action::_internal_movetotarget() const {
  return _internal_has_movetotarget()
      ? *ActionData_.movetotarget_
      : reinterpret_cast< ::CMsgBotWorldState_Action_MoveToTarget&>(::_CMsgBotWorldState_Action_MoveToTarget_default_instance_);
}
inline const ::CMsgBotWorldState_Action_MoveToTarget& CMsgBotWorldState_Action::movetotarget() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.moveToTarget)
  return _internal_movetotarget();
}
inline ::CMsgBotWorldState_Action_MoveToTarget* CMsgBotWorldState_Action::unsafe_arena_release_movetotarget() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.moveToTarget)
  if (_internal_has_movetotarget()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_MoveToTarget* temp = ActionData_.movetotarget_;
    ActionData_.movetotarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_movetotarget(::CMsgBotWorldState_Action_MoveToTarget* movetotarget) {
  clear_ActionData();
  if (movetotarget) {
    set_has_movetotarget();
    ActionData_.movetotarget_ = movetotarget;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.moveToTarget)
}
inline ::CMsgBotWorldState_Action_MoveToTarget* CMsgBotWorldState_Action::_internal_mutable_movetotarget() {
  if (!_internal_has_movetotarget()) {
    clear_ActionData();
    set_has_movetotarget();
    ActionData_.movetotarget_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_MoveToTarget >(GetArena());
  }
  return ActionData_.movetotarget_;
}
inline ::CMsgBotWorldState_Action_MoveToTarget* CMsgBotWorldState_Action::mutable_movetotarget() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.moveToTarget)
  return _internal_mutable_movetotarget();
}

// .CMsgBotWorldState.Action.AttackMove attackMove = 103;
inline bool CMsgBotWorldState_Action::_internal_has_attackmove() const {
  return ActionData_case() == kAttackMove;
}
inline bool CMsgBotWorldState_Action::has_attackmove() const {
  return _internal_has_attackmove();
}
inline void CMsgBotWorldState_Action::set_has_attackmove() {
  _oneof_case_[0] = kAttackMove;
}
inline void CMsgBotWorldState_Action::clear_attackmove() {
  if (_internal_has_attackmove()) {
    if (GetArena() == nullptr) {
      delete ActionData_.attackmove_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_AttackMove* CMsgBotWorldState_Action::release_attackmove() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.attackMove)
  if (_internal_has_attackmove()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_AttackMove* temp = ActionData_.attackmove_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.attackmove_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_AttackMove& CMsgBotWorldState_Action::_internal_attackmove() const {
  return _internal_has_attackmove()
      ? *ActionData_.attackmove_
      : reinterpret_cast< ::CMsgBotWorldState_Action_AttackMove&>(::_CMsgBotWorldState_Action_AttackMove_default_instance_);
}
inline const ::CMsgBotWorldState_Action_AttackMove& CMsgBotWorldState_Action::attackmove() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.attackMove)
  return _internal_attackmove();
}
inline ::CMsgBotWorldState_Action_AttackMove* CMsgBotWorldState_Action::unsafe_arena_release_attackmove() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.attackMove)
  if (_internal_has_attackmove()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_AttackMove* temp = ActionData_.attackmove_;
    ActionData_.attackmove_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_attackmove(::CMsgBotWorldState_Action_AttackMove* attackmove) {
  clear_ActionData();
  if (attackmove) {
    set_has_attackmove();
    ActionData_.attackmove_ = attackmove;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.attackMove)
}
inline ::CMsgBotWorldState_Action_AttackMove* CMsgBotWorldState_Action::_internal_mutable_attackmove() {
  if (!_internal_has_attackmove()) {
    clear_ActionData();
    set_has_attackmove();
    ActionData_.attackmove_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_AttackMove >(GetArena());
  }
  return ActionData_.attackmove_;
}
inline ::CMsgBotWorldState_Action_AttackMove* CMsgBotWorldState_Action::mutable_attackmove() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.attackMove)
  return _internal_mutable_attackmove();
}

// .CMsgBotWorldState.Action.AttackTarget attackTarget = 104;
inline bool CMsgBotWorldState_Action::_internal_has_attacktarget() const {
  return ActionData_case() == kAttackTarget;
}
inline bool CMsgBotWorldState_Action::has_attacktarget() const {
  return _internal_has_attacktarget();
}
inline void CMsgBotWorldState_Action::set_has_attacktarget() {
  _oneof_case_[0] = kAttackTarget;
}
inline void CMsgBotWorldState_Action::clear_attacktarget() {
  if (_internal_has_attacktarget()) {
    if (GetArena() == nullptr) {
      delete ActionData_.attacktarget_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_AttackTarget* CMsgBotWorldState_Action::release_attacktarget() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.attackTarget)
  if (_internal_has_attacktarget()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_AttackTarget* temp = ActionData_.attacktarget_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.attacktarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_AttackTarget& CMsgBotWorldState_Action::_internal_attacktarget() const {
  return _internal_has_attacktarget()
      ? *ActionData_.attacktarget_
      : reinterpret_cast< ::CMsgBotWorldState_Action_AttackTarget&>(::_CMsgBotWorldState_Action_AttackTarget_default_instance_);
}
inline const ::CMsgBotWorldState_Action_AttackTarget& CMsgBotWorldState_Action::attacktarget() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.attackTarget)
  return _internal_attacktarget();
}
inline ::CMsgBotWorldState_Action_AttackTarget* CMsgBotWorldState_Action::unsafe_arena_release_attacktarget() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.attackTarget)
  if (_internal_has_attacktarget()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_AttackTarget* temp = ActionData_.attacktarget_;
    ActionData_.attacktarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_attacktarget(::CMsgBotWorldState_Action_AttackTarget* attacktarget) {
  clear_ActionData();
  if (attacktarget) {
    set_has_attacktarget();
    ActionData_.attacktarget_ = attacktarget;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.attackTarget)
}
inline ::CMsgBotWorldState_Action_AttackTarget* CMsgBotWorldState_Action::_internal_mutable_attacktarget() {
  if (!_internal_has_attacktarget()) {
    clear_ActionData();
    set_has_attacktarget();
    ActionData_.attacktarget_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_AttackTarget >(GetArena());
  }
  return ActionData_.attacktarget_;
}
inline ::CMsgBotWorldState_Action_AttackTarget* CMsgBotWorldState_Action::mutable_attacktarget() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.attackTarget)
  return _internal_mutable_attacktarget();
}

// .CMsgBotWorldState.Action.CastLocation castLocation = 105;
inline bool CMsgBotWorldState_Action::_internal_has_castlocation() const {
  return ActionData_case() == kCastLocation;
}
inline bool CMsgBotWorldState_Action::has_castlocation() const {
  return _internal_has_castlocation();
}
inline void CMsgBotWorldState_Action::set_has_castlocation() {
  _oneof_case_[0] = kCastLocation;
}
inline void CMsgBotWorldState_Action::clear_castlocation() {
  if (_internal_has_castlocation()) {
    if (GetArena() == nullptr) {
      delete ActionData_.castlocation_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_CastLocation* CMsgBotWorldState_Action::release_castlocation() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.castLocation)
  if (_internal_has_castlocation()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_CastLocation* temp = ActionData_.castlocation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.castlocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_CastLocation& CMsgBotWorldState_Action::_internal_castlocation() const {
  return _internal_has_castlocation()
      ? *ActionData_.castlocation_
      : reinterpret_cast< ::CMsgBotWorldState_Action_CastLocation&>(::_CMsgBotWorldState_Action_CastLocation_default_instance_);
}
inline const ::CMsgBotWorldState_Action_CastLocation& CMsgBotWorldState_Action::castlocation() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.castLocation)
  return _internal_castlocation();
}
inline ::CMsgBotWorldState_Action_CastLocation* CMsgBotWorldState_Action::unsafe_arena_release_castlocation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.castLocation)
  if (_internal_has_castlocation()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_CastLocation* temp = ActionData_.castlocation_;
    ActionData_.castlocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_castlocation(::CMsgBotWorldState_Action_CastLocation* castlocation) {
  clear_ActionData();
  if (castlocation) {
    set_has_castlocation();
    ActionData_.castlocation_ = castlocation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.castLocation)
}
inline ::CMsgBotWorldState_Action_CastLocation* CMsgBotWorldState_Action::_internal_mutable_castlocation() {
  if (!_internal_has_castlocation()) {
    clear_ActionData();
    set_has_castlocation();
    ActionData_.castlocation_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_CastLocation >(GetArena());
  }
  return ActionData_.castlocation_;
}
inline ::CMsgBotWorldState_Action_CastLocation* CMsgBotWorldState_Action::mutable_castlocation() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.castLocation)
  return _internal_mutable_castlocation();
}

// .CMsgBotWorldState.Action.CastTarget castTarget = 106;
inline bool CMsgBotWorldState_Action::_internal_has_casttarget() const {
  return ActionData_case() == kCastTarget;
}
inline bool CMsgBotWorldState_Action::has_casttarget() const {
  return _internal_has_casttarget();
}
inline void CMsgBotWorldState_Action::set_has_casttarget() {
  _oneof_case_[0] = kCastTarget;
}
inline void CMsgBotWorldState_Action::clear_casttarget() {
  if (_internal_has_casttarget()) {
    if (GetArena() == nullptr) {
      delete ActionData_.casttarget_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_CastTarget* CMsgBotWorldState_Action::release_casttarget() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.castTarget)
  if (_internal_has_casttarget()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_CastTarget* temp = ActionData_.casttarget_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.casttarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_CastTarget& CMsgBotWorldState_Action::_internal_casttarget() const {
  return _internal_has_casttarget()
      ? *ActionData_.casttarget_
      : reinterpret_cast< ::CMsgBotWorldState_Action_CastTarget&>(::_CMsgBotWorldState_Action_CastTarget_default_instance_);
}
inline const ::CMsgBotWorldState_Action_CastTarget& CMsgBotWorldState_Action::casttarget() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.castTarget)
  return _internal_casttarget();
}
inline ::CMsgBotWorldState_Action_CastTarget* CMsgBotWorldState_Action::unsafe_arena_release_casttarget() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.castTarget)
  if (_internal_has_casttarget()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_CastTarget* temp = ActionData_.casttarget_;
    ActionData_.casttarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_casttarget(::CMsgBotWorldState_Action_CastTarget* casttarget) {
  clear_ActionData();
  if (casttarget) {
    set_has_casttarget();
    ActionData_.casttarget_ = casttarget;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.castTarget)
}
inline ::CMsgBotWorldState_Action_CastTarget* CMsgBotWorldState_Action::_internal_mutable_casttarget() {
  if (!_internal_has_casttarget()) {
    clear_ActionData();
    set_has_casttarget();
    ActionData_.casttarget_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_CastTarget >(GetArena());
  }
  return ActionData_.casttarget_;
}
inline ::CMsgBotWorldState_Action_CastTarget* CMsgBotWorldState_Action::mutable_casttarget() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.castTarget)
  return _internal_mutable_casttarget();
}

// .CMsgBotWorldState.Action.CastTree castTree = 107;
inline bool CMsgBotWorldState_Action::_internal_has_casttree() const {
  return ActionData_case() == kCastTree;
}
inline bool CMsgBotWorldState_Action::has_casttree() const {
  return _internal_has_casttree();
}
inline void CMsgBotWorldState_Action::set_has_casttree() {
  _oneof_case_[0] = kCastTree;
}
inline void CMsgBotWorldState_Action::clear_casttree() {
  if (_internal_has_casttree()) {
    if (GetArena() == nullptr) {
      delete ActionData_.casttree_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_CastTree* CMsgBotWorldState_Action::release_casttree() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.castTree)
  if (_internal_has_casttree()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_CastTree* temp = ActionData_.casttree_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.casttree_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_CastTree& CMsgBotWorldState_Action::_internal_casttree() const {
  return _internal_has_casttree()
      ? *ActionData_.casttree_
      : reinterpret_cast< ::CMsgBotWorldState_Action_CastTree&>(::_CMsgBotWorldState_Action_CastTree_default_instance_);
}
inline const ::CMsgBotWorldState_Action_CastTree& CMsgBotWorldState_Action::casttree() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.castTree)
  return _internal_casttree();
}
inline ::CMsgBotWorldState_Action_CastTree* CMsgBotWorldState_Action::unsafe_arena_release_casttree() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.castTree)
  if (_internal_has_casttree()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_CastTree* temp = ActionData_.casttree_;
    ActionData_.casttree_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_casttree(::CMsgBotWorldState_Action_CastTree* casttree) {
  clear_ActionData();
  if (casttree) {
    set_has_casttree();
    ActionData_.casttree_ = casttree;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.castTree)
}
inline ::CMsgBotWorldState_Action_CastTree* CMsgBotWorldState_Action::_internal_mutable_casttree() {
  if (!_internal_has_casttree()) {
    clear_ActionData();
    set_has_casttree();
    ActionData_.casttree_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_CastTree >(GetArena());
  }
  return ActionData_.casttree_;
}
inline ::CMsgBotWorldState_Action_CastTree* CMsgBotWorldState_Action::mutable_casttree() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.castTree)
  return _internal_mutable_casttree();
}

// .CMsgBotWorldState.Action.Cast cast = 108;
inline bool CMsgBotWorldState_Action::_internal_has_cast() const {
  return ActionData_case() == kCast;
}
inline bool CMsgBotWorldState_Action::has_cast() const {
  return _internal_has_cast();
}
inline void CMsgBotWorldState_Action::set_has_cast() {
  _oneof_case_[0] = kCast;
}
inline void CMsgBotWorldState_Action::clear_cast() {
  if (_internal_has_cast()) {
    if (GetArena() == nullptr) {
      delete ActionData_.cast_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Cast* CMsgBotWorldState_Action::release_cast() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.cast)
  if (_internal_has_cast()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Cast* temp = ActionData_.cast_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.cast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Cast& CMsgBotWorldState_Action::_internal_cast() const {
  return _internal_has_cast()
      ? *ActionData_.cast_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Cast&>(::_CMsgBotWorldState_Action_Cast_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Cast& CMsgBotWorldState_Action::cast() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.cast)
  return _internal_cast();
}
inline ::CMsgBotWorldState_Action_Cast* CMsgBotWorldState_Action::unsafe_arena_release_cast() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.cast)
  if (_internal_has_cast()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Cast* temp = ActionData_.cast_;
    ActionData_.cast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_cast(::CMsgBotWorldState_Action_Cast* cast) {
  clear_ActionData();
  if (cast) {
    set_has_cast();
    ActionData_.cast_ = cast;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.cast)
}
inline ::CMsgBotWorldState_Action_Cast* CMsgBotWorldState_Action::_internal_mutable_cast() {
  if (!_internal_has_cast()) {
    clear_ActionData();
    set_has_cast();
    ActionData_.cast_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Cast >(GetArena());
  }
  return ActionData_.cast_;
}
inline ::CMsgBotWorldState_Action_Cast* CMsgBotWorldState_Action::mutable_cast() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.cast)
  return _internal_mutable_cast();
}

// .CMsgBotWorldState.Action.CastToggle castToggle = 109;
inline bool CMsgBotWorldState_Action::_internal_has_casttoggle() const {
  return ActionData_case() == kCastToggle;
}
inline bool CMsgBotWorldState_Action::has_casttoggle() const {
  return _internal_has_casttoggle();
}
inline void CMsgBotWorldState_Action::set_has_casttoggle() {
  _oneof_case_[0] = kCastToggle;
}
inline void CMsgBotWorldState_Action::clear_casttoggle() {
  if (_internal_has_casttoggle()) {
    if (GetArena() == nullptr) {
      delete ActionData_.casttoggle_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_CastToggle* CMsgBotWorldState_Action::release_casttoggle() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.castToggle)
  if (_internal_has_casttoggle()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_CastToggle* temp = ActionData_.casttoggle_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.casttoggle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_CastToggle& CMsgBotWorldState_Action::_internal_casttoggle() const {
  return _internal_has_casttoggle()
      ? *ActionData_.casttoggle_
      : reinterpret_cast< ::CMsgBotWorldState_Action_CastToggle&>(::_CMsgBotWorldState_Action_CastToggle_default_instance_);
}
inline const ::CMsgBotWorldState_Action_CastToggle& CMsgBotWorldState_Action::casttoggle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.castToggle)
  return _internal_casttoggle();
}
inline ::CMsgBotWorldState_Action_CastToggle* CMsgBotWorldState_Action::unsafe_arena_release_casttoggle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.castToggle)
  if (_internal_has_casttoggle()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_CastToggle* temp = ActionData_.casttoggle_;
    ActionData_.casttoggle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_casttoggle(::CMsgBotWorldState_Action_CastToggle* casttoggle) {
  clear_ActionData();
  if (casttoggle) {
    set_has_casttoggle();
    ActionData_.casttoggle_ = casttoggle;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.castToggle)
}
inline ::CMsgBotWorldState_Action_CastToggle* CMsgBotWorldState_Action::_internal_mutable_casttoggle() {
  if (!_internal_has_casttoggle()) {
    clear_ActionData();
    set_has_casttoggle();
    ActionData_.casttoggle_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_CastToggle >(GetArena());
  }
  return ActionData_.casttoggle_;
}
inline ::CMsgBotWorldState_Action_CastToggle* CMsgBotWorldState_Action::mutable_casttoggle() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.castToggle)
  return _internal_mutable_casttoggle();
}

// .CMsgBotWorldState.Action.HoldLocation holdLocation = 110;
inline bool CMsgBotWorldState_Action::_internal_has_holdlocation() const {
  return ActionData_case() == kHoldLocation;
}
inline bool CMsgBotWorldState_Action::has_holdlocation() const {
  return _internal_has_holdlocation();
}
inline void CMsgBotWorldState_Action::set_has_holdlocation() {
  _oneof_case_[0] = kHoldLocation;
}
inline void CMsgBotWorldState_Action::clear_holdlocation() {
  if (_internal_has_holdlocation()) {
    if (GetArena() == nullptr) {
      delete ActionData_.holdlocation_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_HoldLocation* CMsgBotWorldState_Action::release_holdlocation() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.holdLocation)
  if (_internal_has_holdlocation()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_HoldLocation* temp = ActionData_.holdlocation_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.holdlocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_HoldLocation& CMsgBotWorldState_Action::_internal_holdlocation() const {
  return _internal_has_holdlocation()
      ? *ActionData_.holdlocation_
      : reinterpret_cast< ::CMsgBotWorldState_Action_HoldLocation&>(::_CMsgBotWorldState_Action_HoldLocation_default_instance_);
}
inline const ::CMsgBotWorldState_Action_HoldLocation& CMsgBotWorldState_Action::holdlocation() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.holdLocation)
  return _internal_holdlocation();
}
inline ::CMsgBotWorldState_Action_HoldLocation* CMsgBotWorldState_Action::unsafe_arena_release_holdlocation() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.holdLocation)
  if (_internal_has_holdlocation()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_HoldLocation* temp = ActionData_.holdlocation_;
    ActionData_.holdlocation_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_holdlocation(::CMsgBotWorldState_Action_HoldLocation* holdlocation) {
  clear_ActionData();
  if (holdlocation) {
    set_has_holdlocation();
    ActionData_.holdlocation_ = holdlocation;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.holdLocation)
}
inline ::CMsgBotWorldState_Action_HoldLocation* CMsgBotWorldState_Action::_internal_mutable_holdlocation() {
  if (!_internal_has_holdlocation()) {
    clear_ActionData();
    set_has_holdlocation();
    ActionData_.holdlocation_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_HoldLocation >(GetArena());
  }
  return ActionData_.holdlocation_;
}
inline ::CMsgBotWorldState_Action_HoldLocation* CMsgBotWorldState_Action::mutable_holdlocation() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.holdLocation)
  return _internal_mutable_holdlocation();
}

// .CMsgBotWorldState.Action.TrainAbility trainAbility = 111;
inline bool CMsgBotWorldState_Action::_internal_has_trainability() const {
  return ActionData_case() == kTrainAbility;
}
inline bool CMsgBotWorldState_Action::has_trainability() const {
  return _internal_has_trainability();
}
inline void CMsgBotWorldState_Action::set_has_trainability() {
  _oneof_case_[0] = kTrainAbility;
}
inline void CMsgBotWorldState_Action::clear_trainability() {
  if (_internal_has_trainability()) {
    if (GetArena() == nullptr) {
      delete ActionData_.trainability_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_TrainAbility* CMsgBotWorldState_Action::release_trainability() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.trainAbility)
  if (_internal_has_trainability()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_TrainAbility* temp = ActionData_.trainability_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.trainability_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_TrainAbility& CMsgBotWorldState_Action::_internal_trainability() const {
  return _internal_has_trainability()
      ? *ActionData_.trainability_
      : reinterpret_cast< ::CMsgBotWorldState_Action_TrainAbility&>(::_CMsgBotWorldState_Action_TrainAbility_default_instance_);
}
inline const ::CMsgBotWorldState_Action_TrainAbility& CMsgBotWorldState_Action::trainability() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.trainAbility)
  return _internal_trainability();
}
inline ::CMsgBotWorldState_Action_TrainAbility* CMsgBotWorldState_Action::unsafe_arena_release_trainability() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.trainAbility)
  if (_internal_has_trainability()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_TrainAbility* temp = ActionData_.trainability_;
    ActionData_.trainability_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_trainability(::CMsgBotWorldState_Action_TrainAbility* trainability) {
  clear_ActionData();
  if (trainability) {
    set_has_trainability();
    ActionData_.trainability_ = trainability;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.trainAbility)
}
inline ::CMsgBotWorldState_Action_TrainAbility* CMsgBotWorldState_Action::_internal_mutable_trainability() {
  if (!_internal_has_trainability()) {
    clear_ActionData();
    set_has_trainability();
    ActionData_.trainability_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_TrainAbility >(GetArena());
  }
  return ActionData_.trainability_;
}
inline ::CMsgBotWorldState_Action_TrainAbility* CMsgBotWorldState_Action::mutable_trainability() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.trainAbility)
  return _internal_mutable_trainability();
}

// .CMsgBotWorldState.Action.DropItem dropItem = 112;
inline bool CMsgBotWorldState_Action::_internal_has_dropitem() const {
  return ActionData_case() == kDropItem;
}
inline bool CMsgBotWorldState_Action::has_dropitem() const {
  return _internal_has_dropitem();
}
inline void CMsgBotWorldState_Action::set_has_dropitem() {
  _oneof_case_[0] = kDropItem;
}
inline void CMsgBotWorldState_Action::clear_dropitem() {
  if (_internal_has_dropitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.dropitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_DropItem* CMsgBotWorldState_Action::release_dropitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.dropItem)
  if (_internal_has_dropitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_DropItem* temp = ActionData_.dropitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.dropitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_DropItem& CMsgBotWorldState_Action::_internal_dropitem() const {
  return _internal_has_dropitem()
      ? *ActionData_.dropitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_DropItem&>(::_CMsgBotWorldState_Action_DropItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_DropItem& CMsgBotWorldState_Action::dropitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.dropItem)
  return _internal_dropitem();
}
inline ::CMsgBotWorldState_Action_DropItem* CMsgBotWorldState_Action::unsafe_arena_release_dropitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.dropItem)
  if (_internal_has_dropitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_DropItem* temp = ActionData_.dropitem_;
    ActionData_.dropitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_dropitem(::CMsgBotWorldState_Action_DropItem* dropitem) {
  clear_ActionData();
  if (dropitem) {
    set_has_dropitem();
    ActionData_.dropitem_ = dropitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.dropItem)
}
inline ::CMsgBotWorldState_Action_DropItem* CMsgBotWorldState_Action::_internal_mutable_dropitem() {
  if (!_internal_has_dropitem()) {
    clear_ActionData();
    set_has_dropitem();
    ActionData_.dropitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_DropItem >(GetArena());
  }
  return ActionData_.dropitem_;
}
inline ::CMsgBotWorldState_Action_DropItem* CMsgBotWorldState_Action::mutable_dropitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.dropItem)
  return _internal_mutable_dropitem();
}

// .CMsgBotWorldState.Action.PickUpItem pickUpItem = 114;
inline bool CMsgBotWorldState_Action::_internal_has_pickupitem() const {
  return ActionData_case() == kPickUpItem;
}
inline bool CMsgBotWorldState_Action::has_pickupitem() const {
  return _internal_has_pickupitem();
}
inline void CMsgBotWorldState_Action::set_has_pickupitem() {
  _oneof_case_[0] = kPickUpItem;
}
inline void CMsgBotWorldState_Action::clear_pickupitem() {
  if (_internal_has_pickupitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.pickupitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_PickUpItem* CMsgBotWorldState_Action::release_pickupitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.pickUpItem)
  if (_internal_has_pickupitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_PickUpItem* temp = ActionData_.pickupitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.pickupitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_PickUpItem& CMsgBotWorldState_Action::_internal_pickupitem() const {
  return _internal_has_pickupitem()
      ? *ActionData_.pickupitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_PickUpItem&>(::_CMsgBotWorldState_Action_PickUpItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_PickUpItem& CMsgBotWorldState_Action::pickupitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.pickUpItem)
  return _internal_pickupitem();
}
inline ::CMsgBotWorldState_Action_PickUpItem* CMsgBotWorldState_Action::unsafe_arena_release_pickupitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.pickUpItem)
  if (_internal_has_pickupitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_PickUpItem* temp = ActionData_.pickupitem_;
    ActionData_.pickupitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_pickupitem(::CMsgBotWorldState_Action_PickUpItem* pickupitem) {
  clear_ActionData();
  if (pickupitem) {
    set_has_pickupitem();
    ActionData_.pickupitem_ = pickupitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.pickUpItem)
}
inline ::CMsgBotWorldState_Action_PickUpItem* CMsgBotWorldState_Action::_internal_mutable_pickupitem() {
  if (!_internal_has_pickupitem()) {
    clear_ActionData();
    set_has_pickupitem();
    ActionData_.pickupitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_PickUpItem >(GetArena());
  }
  return ActionData_.pickupitem_;
}
inline ::CMsgBotWorldState_Action_PickUpItem* CMsgBotWorldState_Action::mutable_pickupitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.pickUpItem)
  return _internal_mutable_pickupitem();
}

// .CMsgBotWorldState.Action.PickupRune pickupRune = 115;
inline bool CMsgBotWorldState_Action::_internal_has_pickuprune() const {
  return ActionData_case() == kPickupRune;
}
inline bool CMsgBotWorldState_Action::has_pickuprune() const {
  return _internal_has_pickuprune();
}
inline void CMsgBotWorldState_Action::set_has_pickuprune() {
  _oneof_case_[0] = kPickupRune;
}
inline void CMsgBotWorldState_Action::clear_pickuprune() {
  if (_internal_has_pickuprune()) {
    if (GetArena() == nullptr) {
      delete ActionData_.pickuprune_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_PickupRune* CMsgBotWorldState_Action::release_pickuprune() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.pickupRune)
  if (_internal_has_pickuprune()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_PickupRune* temp = ActionData_.pickuprune_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.pickuprune_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_PickupRune& CMsgBotWorldState_Action::_internal_pickuprune() const {
  return _internal_has_pickuprune()
      ? *ActionData_.pickuprune_
      : reinterpret_cast< ::CMsgBotWorldState_Action_PickupRune&>(::_CMsgBotWorldState_Action_PickupRune_default_instance_);
}
inline const ::CMsgBotWorldState_Action_PickupRune& CMsgBotWorldState_Action::pickuprune() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.pickupRune)
  return _internal_pickuprune();
}
inline ::CMsgBotWorldState_Action_PickupRune* CMsgBotWorldState_Action::unsafe_arena_release_pickuprune() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.pickupRune)
  if (_internal_has_pickuprune()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_PickupRune* temp = ActionData_.pickuprune_;
    ActionData_.pickuprune_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_pickuprune(::CMsgBotWorldState_Action_PickupRune* pickuprune) {
  clear_ActionData();
  if (pickuprune) {
    set_has_pickuprune();
    ActionData_.pickuprune_ = pickuprune;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.pickupRune)
}
inline ::CMsgBotWorldState_Action_PickupRune* CMsgBotWorldState_Action::_internal_mutable_pickuprune() {
  if (!_internal_has_pickuprune()) {
    clear_ActionData();
    set_has_pickuprune();
    ActionData_.pickuprune_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_PickupRune >(GetArena());
  }
  return ActionData_.pickuprune_;
}
inline ::CMsgBotWorldState_Action_PickupRune* CMsgBotWorldState_Action::mutable_pickuprune() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.pickupRune)
  return _internal_mutable_pickuprune();
}

// .CMsgBotWorldState.Action.PurchaseItem purchaseItem = 116;
inline bool CMsgBotWorldState_Action::_internal_has_purchaseitem() const {
  return ActionData_case() == kPurchaseItem;
}
inline bool CMsgBotWorldState_Action::has_purchaseitem() const {
  return _internal_has_purchaseitem();
}
inline void CMsgBotWorldState_Action::set_has_purchaseitem() {
  _oneof_case_[0] = kPurchaseItem;
}
inline void CMsgBotWorldState_Action::clear_purchaseitem() {
  if (_internal_has_purchaseitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.purchaseitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_PurchaseItem* CMsgBotWorldState_Action::release_purchaseitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.purchaseItem)
  if (_internal_has_purchaseitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_PurchaseItem* temp = ActionData_.purchaseitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.purchaseitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_PurchaseItem& CMsgBotWorldState_Action::_internal_purchaseitem() const {
  return _internal_has_purchaseitem()
      ? *ActionData_.purchaseitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_PurchaseItem&>(::_CMsgBotWorldState_Action_PurchaseItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_PurchaseItem& CMsgBotWorldState_Action::purchaseitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.purchaseItem)
  return _internal_purchaseitem();
}
inline ::CMsgBotWorldState_Action_PurchaseItem* CMsgBotWorldState_Action::unsafe_arena_release_purchaseitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.purchaseItem)
  if (_internal_has_purchaseitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_PurchaseItem* temp = ActionData_.purchaseitem_;
    ActionData_.purchaseitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_purchaseitem(::CMsgBotWorldState_Action_PurchaseItem* purchaseitem) {
  clear_ActionData();
  if (purchaseitem) {
    set_has_purchaseitem();
    ActionData_.purchaseitem_ = purchaseitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.purchaseItem)
}
inline ::CMsgBotWorldState_Action_PurchaseItem* CMsgBotWorldState_Action::_internal_mutable_purchaseitem() {
  if (!_internal_has_purchaseitem()) {
    clear_ActionData();
    set_has_purchaseitem();
    ActionData_.purchaseitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_PurchaseItem >(GetArena());
  }
  return ActionData_.purchaseitem_;
}
inline ::CMsgBotWorldState_Action_PurchaseItem* CMsgBotWorldState_Action::mutable_purchaseitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.purchaseItem)
  return _internal_mutable_purchaseitem();
}

// .CMsgBotWorldState.Action.SellItem sellItem = 117;
inline bool CMsgBotWorldState_Action::_internal_has_sellitem() const {
  return ActionData_case() == kSellItem;
}
inline bool CMsgBotWorldState_Action::has_sellitem() const {
  return _internal_has_sellitem();
}
inline void CMsgBotWorldState_Action::set_has_sellitem() {
  _oneof_case_[0] = kSellItem;
}
inline void CMsgBotWorldState_Action::clear_sellitem() {
  if (_internal_has_sellitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.sellitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_SellItem* CMsgBotWorldState_Action::release_sellitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.sellItem)
  if (_internal_has_sellitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_SellItem* temp = ActionData_.sellitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.sellitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_SellItem& CMsgBotWorldState_Action::_internal_sellitem() const {
  return _internal_has_sellitem()
      ? *ActionData_.sellitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_SellItem&>(::_CMsgBotWorldState_Action_SellItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_SellItem& CMsgBotWorldState_Action::sellitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.sellItem)
  return _internal_sellitem();
}
inline ::CMsgBotWorldState_Action_SellItem* CMsgBotWorldState_Action::unsafe_arena_release_sellitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.sellItem)
  if (_internal_has_sellitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_SellItem* temp = ActionData_.sellitem_;
    ActionData_.sellitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_sellitem(::CMsgBotWorldState_Action_SellItem* sellitem) {
  clear_ActionData();
  if (sellitem) {
    set_has_sellitem();
    ActionData_.sellitem_ = sellitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.sellItem)
}
inline ::CMsgBotWorldState_Action_SellItem* CMsgBotWorldState_Action::_internal_mutable_sellitem() {
  if (!_internal_has_sellitem()) {
    clear_ActionData();
    set_has_sellitem();
    ActionData_.sellitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_SellItem >(GetArena());
  }
  return ActionData_.sellitem_;
}
inline ::CMsgBotWorldState_Action_SellItem* CMsgBotWorldState_Action::mutable_sellitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.sellItem)
  return _internal_mutable_sellitem();
}

// .CMsgBotWorldState.Action.DisassembleItem disassembleItem = 118;
inline bool CMsgBotWorldState_Action::_internal_has_disassembleitem() const {
  return ActionData_case() == kDisassembleItem;
}
inline bool CMsgBotWorldState_Action::has_disassembleitem() const {
  return _internal_has_disassembleitem();
}
inline void CMsgBotWorldState_Action::set_has_disassembleitem() {
  _oneof_case_[0] = kDisassembleItem;
}
inline void CMsgBotWorldState_Action::clear_disassembleitem() {
  if (_internal_has_disassembleitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.disassembleitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_DisassembleItem* CMsgBotWorldState_Action::release_disassembleitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.disassembleItem)
  if (_internal_has_disassembleitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_DisassembleItem* temp = ActionData_.disassembleitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.disassembleitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_DisassembleItem& CMsgBotWorldState_Action::_internal_disassembleitem() const {
  return _internal_has_disassembleitem()
      ? *ActionData_.disassembleitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_DisassembleItem&>(::_CMsgBotWorldState_Action_DisassembleItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_DisassembleItem& CMsgBotWorldState_Action::disassembleitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.disassembleItem)
  return _internal_disassembleitem();
}
inline ::CMsgBotWorldState_Action_DisassembleItem* CMsgBotWorldState_Action::unsafe_arena_release_disassembleitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.disassembleItem)
  if (_internal_has_disassembleitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_DisassembleItem* temp = ActionData_.disassembleitem_;
    ActionData_.disassembleitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_disassembleitem(::CMsgBotWorldState_Action_DisassembleItem* disassembleitem) {
  clear_ActionData();
  if (disassembleitem) {
    set_has_disassembleitem();
    ActionData_.disassembleitem_ = disassembleitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.disassembleItem)
}
inline ::CMsgBotWorldState_Action_DisassembleItem* CMsgBotWorldState_Action::_internal_mutable_disassembleitem() {
  if (!_internal_has_disassembleitem()) {
    clear_ActionData();
    set_has_disassembleitem();
    ActionData_.disassembleitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_DisassembleItem >(GetArena());
  }
  return ActionData_.disassembleitem_;
}
inline ::CMsgBotWorldState_Action_DisassembleItem* CMsgBotWorldState_Action::mutable_disassembleitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.disassembleItem)
  return _internal_mutable_disassembleitem();
}

// .CMsgBotWorldState.Action.SetCombineLockItem setCombineLockItem = 132;
inline bool CMsgBotWorldState_Action::_internal_has_setcombinelockitem() const {
  return ActionData_case() == kSetCombineLockItem;
}
inline bool CMsgBotWorldState_Action::has_setcombinelockitem() const {
  return _internal_has_setcombinelockitem();
}
inline void CMsgBotWorldState_Action::set_has_setcombinelockitem() {
  _oneof_case_[0] = kSetCombineLockItem;
}
inline void CMsgBotWorldState_Action::clear_setcombinelockitem() {
  if (_internal_has_setcombinelockitem()) {
    if (GetArena() == nullptr) {
      delete ActionData_.setcombinelockitem_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_SetCombineLockItem* CMsgBotWorldState_Action::release_setcombinelockitem() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.setCombineLockItem)
  if (_internal_has_setcombinelockitem()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_SetCombineLockItem* temp = ActionData_.setcombinelockitem_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.setcombinelockitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_SetCombineLockItem& CMsgBotWorldState_Action::_internal_setcombinelockitem() const {
  return _internal_has_setcombinelockitem()
      ? *ActionData_.setcombinelockitem_
      : reinterpret_cast< ::CMsgBotWorldState_Action_SetCombineLockItem&>(::_CMsgBotWorldState_Action_SetCombineLockItem_default_instance_);
}
inline const ::CMsgBotWorldState_Action_SetCombineLockItem& CMsgBotWorldState_Action::setcombinelockitem() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.setCombineLockItem)
  return _internal_setcombinelockitem();
}
inline ::CMsgBotWorldState_Action_SetCombineLockItem* CMsgBotWorldState_Action::unsafe_arena_release_setcombinelockitem() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.setCombineLockItem)
  if (_internal_has_setcombinelockitem()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_SetCombineLockItem* temp = ActionData_.setcombinelockitem_;
    ActionData_.setcombinelockitem_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_setcombinelockitem(::CMsgBotWorldState_Action_SetCombineLockItem* setcombinelockitem) {
  clear_ActionData();
  if (setcombinelockitem) {
    set_has_setcombinelockitem();
    ActionData_.setcombinelockitem_ = setcombinelockitem;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.setCombineLockItem)
}
inline ::CMsgBotWorldState_Action_SetCombineLockItem* CMsgBotWorldState_Action::_internal_mutable_setcombinelockitem() {
  if (!_internal_has_setcombinelockitem()) {
    clear_ActionData();
    set_has_setcombinelockitem();
    ActionData_.setcombinelockitem_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_SetCombineLockItem >(GetArena());
  }
  return ActionData_.setcombinelockitem_;
}
inline ::CMsgBotWorldState_Action_SetCombineLockItem* CMsgBotWorldState_Action::mutable_setcombinelockitem() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.setCombineLockItem)
  return _internal_mutable_setcombinelockitem();
}

// .CMsgBotWorldState.Action.Stop stop = 121;
inline bool CMsgBotWorldState_Action::_internal_has_stop() const {
  return ActionData_case() == kStop;
}
inline bool CMsgBotWorldState_Action::has_stop() const {
  return _internal_has_stop();
}
inline void CMsgBotWorldState_Action::set_has_stop() {
  _oneof_case_[0] = kStop;
}
inline void CMsgBotWorldState_Action::clear_stop() {
  if (_internal_has_stop()) {
    if (GetArena() == nullptr) {
      delete ActionData_.stop_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Stop* CMsgBotWorldState_Action::release_stop() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.stop)
  if (_internal_has_stop()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Stop* temp = ActionData_.stop_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Stop& CMsgBotWorldState_Action::_internal_stop() const {
  return _internal_has_stop()
      ? *ActionData_.stop_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Stop&>(::_CMsgBotWorldState_Action_Stop_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Stop& CMsgBotWorldState_Action::stop() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.stop)
  return _internal_stop();
}
inline ::CMsgBotWorldState_Action_Stop* CMsgBotWorldState_Action::unsafe_arena_release_stop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.stop)
  if (_internal_has_stop()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Stop* temp = ActionData_.stop_;
    ActionData_.stop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_stop(::CMsgBotWorldState_Action_Stop* stop) {
  clear_ActionData();
  if (stop) {
    set_has_stop();
    ActionData_.stop_ = stop;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.stop)
}
inline ::CMsgBotWorldState_Action_Stop* CMsgBotWorldState_Action::_internal_mutable_stop() {
  if (!_internal_has_stop()) {
    clear_ActionData();
    set_has_stop();
    ActionData_.stop_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Stop >(GetArena());
  }
  return ActionData_.stop_;
}
inline ::CMsgBotWorldState_Action_Stop* CMsgBotWorldState_Action::mutable_stop() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.stop)
  return _internal_mutable_stop();
}

// .CMsgBotWorldState.Action.Chat chat = 140;
inline bool CMsgBotWorldState_Action::_internal_has_chat() const {
  return ActionData_case() == kChat;
}
inline bool CMsgBotWorldState_Action::has_chat() const {
  return _internal_has_chat();
}
inline void CMsgBotWorldState_Action::set_has_chat() {
  _oneof_case_[0] = kChat;
}
inline void CMsgBotWorldState_Action::clear_chat() {
  if (_internal_has_chat()) {
    if (GetArena() == nullptr) {
      delete ActionData_.chat_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Chat* CMsgBotWorldState_Action::release_chat() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.chat)
  if (_internal_has_chat()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Chat* temp = ActionData_.chat_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.chat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Chat& CMsgBotWorldState_Action::_internal_chat() const {
  return _internal_has_chat()
      ? *ActionData_.chat_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Chat&>(::_CMsgBotWorldState_Action_Chat_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Chat& CMsgBotWorldState_Action::chat() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.chat)
  return _internal_chat();
}
inline ::CMsgBotWorldState_Action_Chat* CMsgBotWorldState_Action::unsafe_arena_release_chat() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.chat)
  if (_internal_has_chat()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Chat* temp = ActionData_.chat_;
    ActionData_.chat_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_chat(::CMsgBotWorldState_Action_Chat* chat) {
  clear_ActionData();
  if (chat) {
    set_has_chat();
    ActionData_.chat_ = chat;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.chat)
}
inline ::CMsgBotWorldState_Action_Chat* CMsgBotWorldState_Action::_internal_mutable_chat() {
  if (!_internal_has_chat()) {
    clear_ActionData();
    set_has_chat();
    ActionData_.chat_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Chat >(GetArena());
  }
  return ActionData_.chat_;
}
inline ::CMsgBotWorldState_Action_Chat* CMsgBotWorldState_Action::mutable_chat() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.chat)
  return _internal_mutable_chat();
}

// .CMsgBotWorldState.Action.SwapItems swapItems = 141;
inline bool CMsgBotWorldState_Action::_internal_has_swapitems() const {
  return ActionData_case() == kSwapItems;
}
inline bool CMsgBotWorldState_Action::has_swapitems() const {
  return _internal_has_swapitems();
}
inline void CMsgBotWorldState_Action::set_has_swapitems() {
  _oneof_case_[0] = kSwapItems;
}
inline void CMsgBotWorldState_Action::clear_swapitems() {
  if (_internal_has_swapitems()) {
    if (GetArena() == nullptr) {
      delete ActionData_.swapitems_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_SwapItems* CMsgBotWorldState_Action::release_swapitems() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.swapItems)
  if (_internal_has_swapitems()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_SwapItems* temp = ActionData_.swapitems_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.swapitems_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_SwapItems& CMsgBotWorldState_Action::_internal_swapitems() const {
  return _internal_has_swapitems()
      ? *ActionData_.swapitems_
      : reinterpret_cast< ::CMsgBotWorldState_Action_SwapItems&>(::_CMsgBotWorldState_Action_SwapItems_default_instance_);
}
inline const ::CMsgBotWorldState_Action_SwapItems& CMsgBotWorldState_Action::swapitems() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.swapItems)
  return _internal_swapitems();
}
inline ::CMsgBotWorldState_Action_SwapItems* CMsgBotWorldState_Action::unsafe_arena_release_swapitems() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.swapItems)
  if (_internal_has_swapitems()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_SwapItems* temp = ActionData_.swapitems_;
    ActionData_.swapitems_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_swapitems(::CMsgBotWorldState_Action_SwapItems* swapitems) {
  clear_ActionData();
  if (swapitems) {
    set_has_swapitems();
    ActionData_.swapitems_ = swapitems;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.swapItems)
}
inline ::CMsgBotWorldState_Action_SwapItems* CMsgBotWorldState_Action::_internal_mutable_swapitems() {
  if (!_internal_has_swapitems()) {
    clear_ActionData();
    set_has_swapitems();
    ActionData_.swapitems_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_SwapItems >(GetArena());
  }
  return ActionData_.swapitems_;
}
inline ::CMsgBotWorldState_Action_SwapItems* CMsgBotWorldState_Action::mutable_swapitems() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.swapItems)
  return _internal_mutable_swapitems();
}

// .CMsgBotWorldState.Action.UseShrine useShrine = 142;
inline bool CMsgBotWorldState_Action::_internal_has_useshrine() const {
  return ActionData_case() == kUseShrine;
}
inline bool CMsgBotWorldState_Action::has_useshrine() const {
  return _internal_has_useshrine();
}
inline void CMsgBotWorldState_Action::set_has_useshrine() {
  _oneof_case_[0] = kUseShrine;
}
inline void CMsgBotWorldState_Action::clear_useshrine() {
  if (_internal_has_useshrine()) {
    if (GetArena() == nullptr) {
      delete ActionData_.useshrine_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_UseShrine* CMsgBotWorldState_Action::release_useshrine() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.useShrine)
  if (_internal_has_useshrine()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_UseShrine* temp = ActionData_.useshrine_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.useshrine_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_UseShrine& CMsgBotWorldState_Action::_internal_useshrine() const {
  return _internal_has_useshrine()
      ? *ActionData_.useshrine_
      : reinterpret_cast< ::CMsgBotWorldState_Action_UseShrine&>(::_CMsgBotWorldState_Action_UseShrine_default_instance_);
}
inline const ::CMsgBotWorldState_Action_UseShrine& CMsgBotWorldState_Action::useshrine() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.useShrine)
  return _internal_useshrine();
}
inline ::CMsgBotWorldState_Action_UseShrine* CMsgBotWorldState_Action::unsafe_arena_release_useshrine() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.useShrine)
  if (_internal_has_useshrine()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_UseShrine* temp = ActionData_.useshrine_;
    ActionData_.useshrine_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_useshrine(::CMsgBotWorldState_Action_UseShrine* useshrine) {
  clear_ActionData();
  if (useshrine) {
    set_has_useshrine();
    ActionData_.useshrine_ = useshrine;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.useShrine)
}
inline ::CMsgBotWorldState_Action_UseShrine* CMsgBotWorldState_Action::_internal_mutable_useshrine() {
  if (!_internal_has_useshrine()) {
    clear_ActionData();
    set_has_useshrine();
    ActionData_.useshrine_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_UseShrine >(GetArena());
  }
  return ActionData_.useshrine_;
}
inline ::CMsgBotWorldState_Action_UseShrine* CMsgBotWorldState_Action::mutable_useshrine() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.useShrine)
  return _internal_mutable_useshrine();
}

// .CMsgBotWorldState.Action.Courier courier = 143;
inline bool CMsgBotWorldState_Action::_internal_has_courier() const {
  return ActionData_case() == kCourier;
}
inline bool CMsgBotWorldState_Action::has_courier() const {
  return _internal_has_courier();
}
inline void CMsgBotWorldState_Action::set_has_courier() {
  _oneof_case_[0] = kCourier;
}
inline void CMsgBotWorldState_Action::clear_courier() {
  if (_internal_has_courier()) {
    if (GetArena() == nullptr) {
      delete ActionData_.courier_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Courier* CMsgBotWorldState_Action::release_courier() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.courier)
  if (_internal_has_courier()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Courier* temp = ActionData_.courier_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.courier_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Courier& CMsgBotWorldState_Action::_internal_courier() const {
  return _internal_has_courier()
      ? *ActionData_.courier_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Courier&>(::_CMsgBotWorldState_Action_Courier_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Courier& CMsgBotWorldState_Action::courier() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.courier)
  return _internal_courier();
}
inline ::CMsgBotWorldState_Action_Courier* CMsgBotWorldState_Action::unsafe_arena_release_courier() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.courier)
  if (_internal_has_courier()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Courier* temp = ActionData_.courier_;
    ActionData_.courier_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_courier(::CMsgBotWorldState_Action_Courier* courier) {
  clear_ActionData();
  if (courier) {
    set_has_courier();
    ActionData_.courier_ = courier;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.courier)
}
inline ::CMsgBotWorldState_Action_Courier* CMsgBotWorldState_Action::_internal_mutable_courier() {
  if (!_internal_has_courier()) {
    clear_ActionData();
    set_has_courier();
    ActionData_.courier_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Courier >(GetArena());
  }
  return ActionData_.courier_;
}
inline ::CMsgBotWorldState_Action_Courier* CMsgBotWorldState_Action::mutable_courier() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.courier)
  return _internal_mutable_courier();
}

// .CMsgBotWorldState.Action.GetActualIncomingDamage getActualIncomingDamage = 144;
inline bool CMsgBotWorldState_Action::_internal_has_getactualincomingdamage() const {
  return ActionData_case() == kGetActualIncomingDamage;
}
inline bool CMsgBotWorldState_Action::has_getactualincomingdamage() const {
  return _internal_has_getactualincomingdamage();
}
inline void CMsgBotWorldState_Action::set_has_getactualincomingdamage() {
  _oneof_case_[0] = kGetActualIncomingDamage;
}
inline void CMsgBotWorldState_Action::clear_getactualincomingdamage() {
  if (_internal_has_getactualincomingdamage()) {
    if (GetArena() == nullptr) {
      delete ActionData_.getactualincomingdamage_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_GetActualIncomingDamage* CMsgBotWorldState_Action::release_getactualincomingdamage() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.getActualIncomingDamage)
  if (_internal_has_getactualincomingdamage()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_GetActualIncomingDamage* temp = ActionData_.getactualincomingdamage_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.getactualincomingdamage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_GetActualIncomingDamage& CMsgBotWorldState_Action::_internal_getactualincomingdamage() const {
  return _internal_has_getactualincomingdamage()
      ? *ActionData_.getactualincomingdamage_
      : reinterpret_cast< ::CMsgBotWorldState_Action_GetActualIncomingDamage&>(::_CMsgBotWorldState_Action_GetActualIncomingDamage_default_instance_);
}
inline const ::CMsgBotWorldState_Action_GetActualIncomingDamage& CMsgBotWorldState_Action::getactualincomingdamage() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.getActualIncomingDamage)
  return _internal_getactualincomingdamage();
}
inline ::CMsgBotWorldState_Action_GetActualIncomingDamage* CMsgBotWorldState_Action::unsafe_arena_release_getactualincomingdamage() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.getActualIncomingDamage)
  if (_internal_has_getactualincomingdamage()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_GetActualIncomingDamage* temp = ActionData_.getactualincomingdamage_;
    ActionData_.getactualincomingdamage_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_getactualincomingdamage(::CMsgBotWorldState_Action_GetActualIncomingDamage* getactualincomingdamage) {
  clear_ActionData();
  if (getactualincomingdamage) {
    set_has_getactualincomingdamage();
    ActionData_.getactualincomingdamage_ = getactualincomingdamage;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.getActualIncomingDamage)
}
inline ::CMsgBotWorldState_Action_GetActualIncomingDamage* CMsgBotWorldState_Action::_internal_mutable_getactualincomingdamage() {
  if (!_internal_has_getactualincomingdamage()) {
    clear_ActionData();
    set_has_getactualincomingdamage();
    ActionData_.getactualincomingdamage_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_GetActualIncomingDamage >(GetArena());
  }
  return ActionData_.getactualincomingdamage_;
}
inline ::CMsgBotWorldState_Action_GetActualIncomingDamage* CMsgBotWorldState_Action::mutable_getactualincomingdamage() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.getActualIncomingDamage)
  return _internal_mutable_getactualincomingdamage();
}

// .CMsgBotWorldState.Action.GetEstimatedDamageToTarget getEstimatedDamageToTarget = 145;
inline bool CMsgBotWorldState_Action::_internal_has_getestimateddamagetotarget() const {
  return ActionData_case() == kGetEstimatedDamageToTarget;
}
inline bool CMsgBotWorldState_Action::has_getestimateddamagetotarget() const {
  return _internal_has_getestimateddamagetotarget();
}
inline void CMsgBotWorldState_Action::set_has_getestimateddamagetotarget() {
  _oneof_case_[0] = kGetEstimatedDamageToTarget;
}
inline void CMsgBotWorldState_Action::clear_getestimateddamagetotarget() {
  if (_internal_has_getestimateddamagetotarget()) {
    if (GetArena() == nullptr) {
      delete ActionData_.getestimateddamagetotarget_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* CMsgBotWorldState_Action::release_getestimateddamagetotarget() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
  if (_internal_has_getestimateddamagetotarget()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* temp = ActionData_.getestimateddamagetotarget_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.getestimateddamagetotarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget& CMsgBotWorldState_Action::_internal_getestimateddamagetotarget() const {
  return _internal_has_getestimateddamagetotarget()
      ? *ActionData_.getestimateddamagetotarget_
      : reinterpret_cast< ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget&>(::_CMsgBotWorldState_Action_GetEstimatedDamageToTarget_default_instance_);
}
inline const ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget& CMsgBotWorldState_Action::getestimateddamagetotarget() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
  return _internal_getestimateddamagetotarget();
}
inline ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* CMsgBotWorldState_Action::unsafe_arena_release_getestimateddamagetotarget() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
  if (_internal_has_getestimateddamagetotarget()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* temp = ActionData_.getestimateddamagetotarget_;
    ActionData_.getestimateddamagetotarget_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_getestimateddamagetotarget(::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* getestimateddamagetotarget) {
  clear_ActionData();
  if (getestimateddamagetotarget) {
    set_has_getestimateddamagetotarget();
    ActionData_.getestimateddamagetotarget_ = getestimateddamagetotarget;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
}
inline ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* CMsgBotWorldState_Action::_internal_mutable_getestimateddamagetotarget() {
  if (!_internal_has_getestimateddamagetotarget()) {
    clear_ActionData();
    set_has_getestimateddamagetotarget();
    ActionData_.getestimateddamagetotarget_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget >(GetArena());
  }
  return ActionData_.getestimateddamagetotarget_;
}
inline ::CMsgBotWorldState_Action_GetEstimatedDamageToTarget* CMsgBotWorldState_Action::mutable_getestimateddamagetotarget() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.getEstimatedDamageToTarget)
  return _internal_mutable_getestimateddamagetotarget();
}

// .CMsgBotWorldState.Action.Glyph glyph = 146;
inline bool CMsgBotWorldState_Action::_internal_has_glyph() const {
  return ActionData_case() == kGlyph;
}
inline bool CMsgBotWorldState_Action::has_glyph() const {
  return _internal_has_glyph();
}
inline void CMsgBotWorldState_Action::set_has_glyph() {
  _oneof_case_[0] = kGlyph;
}
inline void CMsgBotWorldState_Action::clear_glyph() {
  if (_internal_has_glyph()) {
    if (GetArena() == nullptr) {
      delete ActionData_.glyph_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Glyph* CMsgBotWorldState_Action::release_glyph() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.glyph)
  if (_internal_has_glyph()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Glyph* temp = ActionData_.glyph_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.glyph_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Glyph& CMsgBotWorldState_Action::_internal_glyph() const {
  return _internal_has_glyph()
      ? *ActionData_.glyph_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Glyph&>(::_CMsgBotWorldState_Action_Glyph_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Glyph& CMsgBotWorldState_Action::glyph() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.glyph)
  return _internal_glyph();
}
inline ::CMsgBotWorldState_Action_Glyph* CMsgBotWorldState_Action::unsafe_arena_release_glyph() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.glyph)
  if (_internal_has_glyph()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Glyph* temp = ActionData_.glyph_;
    ActionData_.glyph_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_glyph(::CMsgBotWorldState_Action_Glyph* glyph) {
  clear_ActionData();
  if (glyph) {
    set_has_glyph();
    ActionData_.glyph_ = glyph;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.glyph)
}
inline ::CMsgBotWorldState_Action_Glyph* CMsgBotWorldState_Action::_internal_mutable_glyph() {
  if (!_internal_has_glyph()) {
    clear_ActionData();
    set_has_glyph();
    ActionData_.glyph_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Glyph >(GetArena());
  }
  return ActionData_.glyph_;
}
inline ::CMsgBotWorldState_Action_Glyph* CMsgBotWorldState_Action::mutable_glyph() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.glyph)
  return _internal_mutable_glyph();
}

// .CMsgBotWorldState.Action.SoftReset softReset = 148;
inline bool CMsgBotWorldState_Action::_internal_has_softreset() const {
  return ActionData_case() == kSoftReset;
}
inline bool CMsgBotWorldState_Action::has_softreset() const {
  return _internal_has_softreset();
}
inline void CMsgBotWorldState_Action::set_has_softreset() {
  _oneof_case_[0] = kSoftReset;
}
inline void CMsgBotWorldState_Action::clear_softreset() {
  if (_internal_has_softreset()) {
    if (GetArena() == nullptr) {
      delete ActionData_.softreset_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_SoftReset* CMsgBotWorldState_Action::release_softreset() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.softReset)
  if (_internal_has_softreset()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_SoftReset* temp = ActionData_.softreset_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.softreset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_SoftReset& CMsgBotWorldState_Action::_internal_softreset() const {
  return _internal_has_softreset()
      ? *ActionData_.softreset_
      : reinterpret_cast< ::CMsgBotWorldState_Action_SoftReset&>(::_CMsgBotWorldState_Action_SoftReset_default_instance_);
}
inline const ::CMsgBotWorldState_Action_SoftReset& CMsgBotWorldState_Action::softreset() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.softReset)
  return _internal_softreset();
}
inline ::CMsgBotWorldState_Action_SoftReset* CMsgBotWorldState_Action::unsafe_arena_release_softreset() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.softReset)
  if (_internal_has_softreset()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_SoftReset* temp = ActionData_.softreset_;
    ActionData_.softreset_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_softreset(::CMsgBotWorldState_Action_SoftReset* softreset) {
  clear_ActionData();
  if (softreset) {
    set_has_softreset();
    ActionData_.softreset_ = softreset;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.softReset)
}
inline ::CMsgBotWorldState_Action_SoftReset* CMsgBotWorldState_Action::_internal_mutable_softreset() {
  if (!_internal_has_softreset()) {
    clear_ActionData();
    set_has_softreset();
    ActionData_.softreset_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_SoftReset >(GetArena());
  }
  return ActionData_.softreset_;
}
inline ::CMsgBotWorldState_Action_SoftReset* CMsgBotWorldState_Action::mutable_softreset() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.softReset)
  return _internal_mutable_softreset();
}

// .CMsgBotWorldState.Action.Buyback buyback = 149;
inline bool CMsgBotWorldState_Action::_internal_has_buyback() const {
  return ActionData_case() == kBuyback;
}
inline bool CMsgBotWorldState_Action::has_buyback() const {
  return _internal_has_buyback();
}
inline void CMsgBotWorldState_Action::set_has_buyback() {
  _oneof_case_[0] = kBuyback;
}
inline void CMsgBotWorldState_Action::clear_buyback() {
  if (_internal_has_buyback()) {
    if (GetArena() == nullptr) {
      delete ActionData_.buyback_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_Buyback* CMsgBotWorldState_Action::release_buyback() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.buyback)
  if (_internal_has_buyback()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_Buyback* temp = ActionData_.buyback_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.buyback_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_Buyback& CMsgBotWorldState_Action::_internal_buyback() const {
  return _internal_has_buyback()
      ? *ActionData_.buyback_
      : reinterpret_cast< ::CMsgBotWorldState_Action_Buyback&>(::_CMsgBotWorldState_Action_Buyback_default_instance_);
}
inline const ::CMsgBotWorldState_Action_Buyback& CMsgBotWorldState_Action::buyback() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.buyback)
  return _internal_buyback();
}
inline ::CMsgBotWorldState_Action_Buyback* CMsgBotWorldState_Action::unsafe_arena_release_buyback() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.buyback)
  if (_internal_has_buyback()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_Buyback* temp = ActionData_.buyback_;
    ActionData_.buyback_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_buyback(::CMsgBotWorldState_Action_Buyback* buyback) {
  clear_ActionData();
  if (buyback) {
    set_has_buyback();
    ActionData_.buyback_ = buyback;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.buyback)
}
inline ::CMsgBotWorldState_Action_Buyback* CMsgBotWorldState_Action::_internal_mutable_buyback() {
  if (!_internal_has_buyback()) {
    clear_ActionData();
    set_has_buyback();
    ActionData_.buyback_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_Buyback >(GetArena());
  }
  return ActionData_.buyback_;
}
inline ::CMsgBotWorldState_Action_Buyback* CMsgBotWorldState_Action::mutable_buyback() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.buyback)
  return _internal_mutable_buyback();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawText scriptingDebugDrawText = 150;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawtext() const {
  return ActionData_case() == kScriptingDebugDrawText;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawtext() const {
  return _internal_has_scriptingdebugdrawtext();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawtext() {
  _oneof_case_[0] = kScriptingDebugDrawText;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawtext() {
  if (_internal_has_scriptingdebugdrawtext()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawtext_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawText* CMsgBotWorldState_Action::release_scriptingdebugdrawtext() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawText)
  if (_internal_has_scriptingdebugdrawtext()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawText* temp = ActionData_.scriptingdebugdrawtext_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawtext_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawText& CMsgBotWorldState_Action::_internal_scriptingdebugdrawtext() const {
  return _internal_has_scriptingdebugdrawtext()
      ? *ActionData_.scriptingdebugdrawtext_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawText&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawText_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawText& CMsgBotWorldState_Action::scriptingdebugdrawtext() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawText)
  return _internal_scriptingdebugdrawtext();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawText* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawtext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawText)
  if (_internal_has_scriptingdebugdrawtext()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawText* temp = ActionData_.scriptingdebugdrawtext_;
    ActionData_.scriptingdebugdrawtext_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawtext(::CMsgBotWorldState_Action_ScriptingDebugDrawText* scriptingdebugdrawtext) {
  clear_ActionData();
  if (scriptingdebugdrawtext) {
    set_has_scriptingdebugdrawtext();
    ActionData_.scriptingdebugdrawtext_ = scriptingdebugdrawtext;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawText)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawText* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawtext() {
  if (!_internal_has_scriptingdebugdrawtext()) {
    clear_ActionData();
    set_has_scriptingdebugdrawtext();
    ActionData_.scriptingdebugdrawtext_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawText >(GetArena());
  }
  return ActionData_.scriptingdebugdrawtext_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawText* CMsgBotWorldState_Action::mutable_scriptingdebugdrawtext() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawText)
  return _internal_mutable_scriptingdebugdrawtext();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawLine scriptingDebugDrawLine = 151;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawline() const {
  return ActionData_case() == kScriptingDebugDrawLine;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawline() const {
  return _internal_has_scriptingdebugdrawline();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawline() {
  _oneof_case_[0] = kScriptingDebugDrawLine;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawline() {
  if (_internal_has_scriptingdebugdrawline()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawline_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* CMsgBotWorldState_Action::release_scriptingdebugdrawline() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawLine)
  if (_internal_has_scriptingdebugdrawline()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* temp = ActionData_.scriptingdebugdrawline_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawline_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawLine& CMsgBotWorldState_Action::_internal_scriptingdebugdrawline() const {
  return _internal_has_scriptingdebugdrawline()
      ? *ActionData_.scriptingdebugdrawline_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawLine&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawLine_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawLine& CMsgBotWorldState_Action::scriptingdebugdrawline() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawLine)
  return _internal_scriptingdebugdrawline();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawline() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawLine)
  if (_internal_has_scriptingdebugdrawline()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* temp = ActionData_.scriptingdebugdrawline_;
    ActionData_.scriptingdebugdrawline_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawline(::CMsgBotWorldState_Action_ScriptingDebugDrawLine* scriptingdebugdrawline) {
  clear_ActionData();
  if (scriptingdebugdrawline) {
    set_has_scriptingdebugdrawline();
    ActionData_.scriptingdebugdrawline_ = scriptingdebugdrawline;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawLine)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawline() {
  if (!_internal_has_scriptingdebugdrawline()) {
    clear_ActionData();
    set_has_scriptingdebugdrawline();
    ActionData_.scriptingdebugdrawline_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawLine >(GetArena());
  }
  return ActionData_.scriptingdebugdrawline_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawLine* CMsgBotWorldState_Action::mutable_scriptingdebugdrawline() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawLine)
  return _internal_mutable_scriptingdebugdrawline();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawScreenText scriptingDebugDrawScreenText = 152;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawscreentext() const {
  return ActionData_case() == kScriptingDebugDrawScreenText;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawscreentext() const {
  return _internal_has_scriptingdebugdrawscreentext();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawscreentext() {
  _oneof_case_[0] = kScriptingDebugDrawScreenText;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawscreentext() {
  if (_internal_has_scriptingdebugdrawscreentext()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawscreentext_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* CMsgBotWorldState_Action::release_scriptingdebugdrawscreentext() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
  if (_internal_has_scriptingdebugdrawscreentext()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* temp = ActionData_.scriptingdebugdrawscreentext_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawscreentext_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& CMsgBotWorldState_Action::_internal_scriptingdebugdrawscreentext() const {
  return _internal_has_scriptingdebugdrawscreentext()
      ? *ActionData_.scriptingdebugdrawscreentext_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawScreenText_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText& CMsgBotWorldState_Action::scriptingdebugdrawscreentext() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
  return _internal_scriptingdebugdrawscreentext();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawscreentext() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
  if (_internal_has_scriptingdebugdrawscreentext()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* temp = ActionData_.scriptingdebugdrawscreentext_;
    ActionData_.scriptingdebugdrawscreentext_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawscreentext(::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* scriptingdebugdrawscreentext) {
  clear_ActionData();
  if (scriptingdebugdrawscreentext) {
    set_has_scriptingdebugdrawscreentext();
    ActionData_.scriptingdebugdrawscreentext_ = scriptingdebugdrawscreentext;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawscreentext() {
  if (!_internal_has_scriptingdebugdrawscreentext()) {
    clear_ActionData();
    set_has_scriptingdebugdrawscreentext();
    ActionData_.scriptingdebugdrawscreentext_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText >(GetArena());
  }
  return ActionData_.scriptingdebugdrawscreentext_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawScreenText* CMsgBotWorldState_Action::mutable_scriptingdebugdrawscreentext() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawScreenText)
  return _internal_mutable_scriptingdebugdrawscreentext();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawBox scriptingDebugDrawBox = 153;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawbox() const {
  return ActionData_case() == kScriptingDebugDrawBox;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawbox() const {
  return _internal_has_scriptingdebugdrawbox();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawbox() {
  _oneof_case_[0] = kScriptingDebugDrawBox;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawbox() {
  if (_internal_has_scriptingdebugdrawbox()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawbox_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* CMsgBotWorldState_Action::release_scriptingdebugdrawbox() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawBox)
  if (_internal_has_scriptingdebugdrawbox()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* temp = ActionData_.scriptingdebugdrawbox_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawbox_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawBox& CMsgBotWorldState_Action::_internal_scriptingdebugdrawbox() const {
  return _internal_has_scriptingdebugdrawbox()
      ? *ActionData_.scriptingdebugdrawbox_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawBox&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawBox_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawBox& CMsgBotWorldState_Action::scriptingdebugdrawbox() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawBox)
  return _internal_scriptingdebugdrawbox();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawbox() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawBox)
  if (_internal_has_scriptingdebugdrawbox()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* temp = ActionData_.scriptingdebugdrawbox_;
    ActionData_.scriptingdebugdrawbox_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawbox(::CMsgBotWorldState_Action_ScriptingDebugDrawBox* scriptingdebugdrawbox) {
  clear_ActionData();
  if (scriptingdebugdrawbox) {
    set_has_scriptingdebugdrawbox();
    ActionData_.scriptingdebugdrawbox_ = scriptingdebugdrawbox;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawBox)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawbox() {
  if (!_internal_has_scriptingdebugdrawbox()) {
    clear_ActionData();
    set_has_scriptingdebugdrawbox();
    ActionData_.scriptingdebugdrawbox_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawBox >(GetArena());
  }
  return ActionData_.scriptingdebugdrawbox_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawBox* CMsgBotWorldState_Action::mutable_scriptingdebugdrawbox() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawBox)
  return _internal_mutable_scriptingdebugdrawbox();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawCircle scriptingDebugDrawCircle = 154;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawcircle() const {
  return ActionData_case() == kScriptingDebugDrawCircle;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawcircle() const {
  return _internal_has_scriptingdebugdrawcircle();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawcircle() {
  _oneof_case_[0] = kScriptingDebugDrawCircle;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawcircle() {
  if (_internal_has_scriptingdebugdrawcircle()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawcircle_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* CMsgBotWorldState_Action::release_scriptingdebugdrawcircle() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
  if (_internal_has_scriptingdebugdrawcircle()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* temp = ActionData_.scriptingdebugdrawcircle_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawcircle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle& CMsgBotWorldState_Action::_internal_scriptingdebugdrawcircle() const {
  return _internal_has_scriptingdebugdrawcircle()
      ? *ActionData_.scriptingdebugdrawcircle_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawCircle_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle& CMsgBotWorldState_Action::scriptingdebugdrawcircle() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
  return _internal_scriptingdebugdrawcircle();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawcircle() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
  if (_internal_has_scriptingdebugdrawcircle()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* temp = ActionData_.scriptingdebugdrawcircle_;
    ActionData_.scriptingdebugdrawcircle_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawcircle(::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* scriptingdebugdrawcircle) {
  clear_ActionData();
  if (scriptingdebugdrawcircle) {
    set_has_scriptingdebugdrawcircle();
    ActionData_.scriptingdebugdrawcircle_ = scriptingdebugdrawcircle;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawcircle() {
  if (!_internal_has_scriptingdebugdrawcircle()) {
    clear_ActionData();
    set_has_scriptingdebugdrawcircle();
    ActionData_.scriptingdebugdrawcircle_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle >(GetArena());
  }
  return ActionData_.scriptingdebugdrawcircle_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawCircle* CMsgBotWorldState_Action::mutable_scriptingdebugdrawcircle() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawCircle)
  return _internal_mutable_scriptingdebugdrawcircle();
}

// .CMsgBotWorldState.Action.ScriptingDebugDrawClear scriptingDebugDrawClear = 155;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugdrawclear() const {
  return ActionData_case() == kScriptingDebugDrawClear;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugdrawclear() const {
  return _internal_has_scriptingdebugdrawclear();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugdrawclear() {
  _oneof_case_[0] = kScriptingDebugDrawClear;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugdrawclear() {
  if (_internal_has_scriptingdebugdrawclear()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugdrawclear_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* CMsgBotWorldState_Action::release_scriptingdebugdrawclear() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugDrawClear)
  if (_internal_has_scriptingdebugdrawclear()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* temp = ActionData_.scriptingdebugdrawclear_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugdrawclear_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawClear& CMsgBotWorldState_Action::_internal_scriptingdebugdrawclear() const {
  return _internal_has_scriptingdebugdrawclear()
      ? *ActionData_.scriptingdebugdrawclear_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugDrawClear&>(::_CMsgBotWorldState_Action_ScriptingDebugDrawClear_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugDrawClear& CMsgBotWorldState_Action::scriptingdebugdrawclear() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugDrawClear)
  return _internal_scriptingdebugdrawclear();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugdrawclear() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugDrawClear)
  if (_internal_has_scriptingdebugdrawclear()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* temp = ActionData_.scriptingdebugdrawclear_;
    ActionData_.scriptingdebugdrawclear_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugdrawclear(::CMsgBotWorldState_Action_ScriptingDebugDrawClear* scriptingdebugdrawclear) {
  clear_ActionData();
  if (scriptingdebugdrawclear) {
    set_has_scriptingdebugdrawclear();
    ActionData_.scriptingdebugdrawclear_ = scriptingdebugdrawclear;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugDrawClear)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugdrawclear() {
  if (!_internal_has_scriptingdebugdrawclear()) {
    clear_ActionData();
    set_has_scriptingdebugdrawclear();
    ActionData_.scriptingdebugdrawclear_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugDrawClear >(GetArena());
  }
  return ActionData_.scriptingdebugdrawclear_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugDrawClear* CMsgBotWorldState_Action::mutable_scriptingdebugdrawclear() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugDrawClear)
  return _internal_mutable_scriptingdebugdrawclear();
}

// .CMsgBotWorldState.Action.ScriptingDebugScreenTextPretty scriptingDebugScreenTextPretty = 159;
inline bool CMsgBotWorldState_Action::_internal_has_scriptingdebugscreentextpretty() const {
  return ActionData_case() == kScriptingDebugScreenTextPretty;
}
inline bool CMsgBotWorldState_Action::has_scriptingdebugscreentextpretty() const {
  return _internal_has_scriptingdebugscreentextpretty();
}
inline void CMsgBotWorldState_Action::set_has_scriptingdebugscreentextpretty() {
  _oneof_case_[0] = kScriptingDebugScreenTextPretty;
}
inline void CMsgBotWorldState_Action::clear_scriptingdebugscreentextpretty() {
  if (_internal_has_scriptingdebugscreentextpretty()) {
    if (GetArena() == nullptr) {
      delete ActionData_.scriptingdebugscreentextpretty_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* CMsgBotWorldState_Action::release_scriptingdebugscreentextpretty() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
  if (_internal_has_scriptingdebugscreentextpretty()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* temp = ActionData_.scriptingdebugscreentextpretty_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.scriptingdebugscreentextpretty_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& CMsgBotWorldState_Action::_internal_scriptingdebugscreentextpretty() const {
  return _internal_has_scriptingdebugscreentextpretty()
      ? *ActionData_.scriptingdebugscreentextpretty_
      : reinterpret_cast< ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty&>(::_CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty_default_instance_);
}
inline const ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty& CMsgBotWorldState_Action::scriptingdebugscreentextpretty() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
  return _internal_scriptingdebugscreentextpretty();
}
inline ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* CMsgBotWorldState_Action::unsafe_arena_release_scriptingdebugscreentextpretty() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
  if (_internal_has_scriptingdebugscreentextpretty()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* temp = ActionData_.scriptingdebugscreentextpretty_;
    ActionData_.scriptingdebugscreentextpretty_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_scriptingdebugscreentextpretty(::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* scriptingdebugscreentextpretty) {
  clear_ActionData();
  if (scriptingdebugscreentextpretty) {
    set_has_scriptingdebugscreentextpretty();
    ActionData_.scriptingdebugscreentextpretty_ = scriptingdebugscreentextpretty;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
}
inline ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* CMsgBotWorldState_Action::_internal_mutable_scriptingdebugscreentextpretty() {
  if (!_internal_has_scriptingdebugscreentextpretty()) {
    clear_ActionData();
    set_has_scriptingdebugscreentextpretty();
    ActionData_.scriptingdebugscreentextpretty_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty >(GetArena());
  }
  return ActionData_.scriptingdebugscreentextpretty_;
}
inline ::CMsgBotWorldState_Action_ScriptingDebugScreenTextPretty* CMsgBotWorldState_Action::mutable_scriptingdebugscreentextpretty() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.scriptingDebugScreenTextPretty)
  return _internal_mutable_scriptingdebugscreentextpretty();
}

// .CMsgBotWorldState.Action.MoveToLocation moveDirectly = 156;
inline bool CMsgBotWorldState_Action::_internal_has_movedirectly() const {
  return ActionData_case() == kMoveDirectly;
}
inline bool CMsgBotWorldState_Action::has_movedirectly() const {
  return _internal_has_movedirectly();
}
inline void CMsgBotWorldState_Action::set_has_movedirectly() {
  _oneof_case_[0] = kMoveDirectly;
}
inline void CMsgBotWorldState_Action::clear_movedirectly() {
  if (_internal_has_movedirectly()) {
    if (GetArena() == nullptr) {
      delete ActionData_.movedirectly_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::release_movedirectly() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.moveDirectly)
  if (_internal_has_movedirectly()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_MoveToLocation* temp = ActionData_.movedirectly_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.movedirectly_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_MoveToLocation& CMsgBotWorldState_Action::_internal_movedirectly() const {
  return _internal_has_movedirectly()
      ? *ActionData_.movedirectly_
      : reinterpret_cast< ::CMsgBotWorldState_Action_MoveToLocation&>(::_CMsgBotWorldState_Action_MoveToLocation_default_instance_);
}
inline const ::CMsgBotWorldState_Action_MoveToLocation& CMsgBotWorldState_Action::movedirectly() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.moveDirectly)
  return _internal_movedirectly();
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::unsafe_arena_release_movedirectly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.moveDirectly)
  if (_internal_has_movedirectly()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_MoveToLocation* temp = ActionData_.movedirectly_;
    ActionData_.movedirectly_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_movedirectly(::CMsgBotWorldState_Action_MoveToLocation* movedirectly) {
  clear_ActionData();
  if (movedirectly) {
    set_has_movedirectly();
    ActionData_.movedirectly_ = movedirectly;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.moveDirectly)
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::_internal_mutable_movedirectly() {
  if (!_internal_has_movedirectly()) {
    clear_ActionData();
    set_has_movedirectly();
    ActionData_.movedirectly_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_MoveToLocation >(GetArena());
  }
  return ActionData_.movedirectly_;
}
inline ::CMsgBotWorldState_Action_MoveToLocation* CMsgBotWorldState_Action::mutable_movedirectly() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.moveDirectly)
  return _internal_mutable_movedirectly();
}

// .CMsgBotWorldState.Action.OceanWinGame oceanWinGame = 157;
inline bool CMsgBotWorldState_Action::_internal_has_oceanwingame() const {
  return ActionData_case() == kOceanWinGame;
}
inline bool CMsgBotWorldState_Action::has_oceanwingame() const {
  return _internal_has_oceanwingame();
}
inline void CMsgBotWorldState_Action::set_has_oceanwingame() {
  _oneof_case_[0] = kOceanWinGame;
}
inline void CMsgBotWorldState_Action::clear_oceanwingame() {
  if (_internal_has_oceanwingame()) {
    if (GetArena() == nullptr) {
      delete ActionData_.oceanwingame_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_OceanWinGame* CMsgBotWorldState_Action::release_oceanwingame() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.oceanWinGame)
  if (_internal_has_oceanwingame()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_OceanWinGame* temp = ActionData_.oceanwingame_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.oceanwingame_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_OceanWinGame& CMsgBotWorldState_Action::_internal_oceanwingame() const {
  return _internal_has_oceanwingame()
      ? *ActionData_.oceanwingame_
      : reinterpret_cast< ::CMsgBotWorldState_Action_OceanWinGame&>(::_CMsgBotWorldState_Action_OceanWinGame_default_instance_);
}
inline const ::CMsgBotWorldState_Action_OceanWinGame& CMsgBotWorldState_Action::oceanwingame() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.oceanWinGame)
  return _internal_oceanwingame();
}
inline ::CMsgBotWorldState_Action_OceanWinGame* CMsgBotWorldState_Action::unsafe_arena_release_oceanwingame() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.oceanWinGame)
  if (_internal_has_oceanwingame()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_OceanWinGame* temp = ActionData_.oceanwingame_;
    ActionData_.oceanwingame_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_oceanwingame(::CMsgBotWorldState_Action_OceanWinGame* oceanwingame) {
  clear_ActionData();
  if (oceanwingame) {
    set_has_oceanwingame();
    ActionData_.oceanwingame_ = oceanwingame;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.oceanWinGame)
}
inline ::CMsgBotWorldState_Action_OceanWinGame* CMsgBotWorldState_Action::_internal_mutable_oceanwingame() {
  if (!_internal_has_oceanwingame()) {
    clear_ActionData();
    set_has_oceanwingame();
    ActionData_.oceanwingame_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_OceanWinGame >(GetArena());
  }
  return ActionData_.oceanwingame_;
}
inline ::CMsgBotWorldState_Action_OceanWinGame* CMsgBotWorldState_Action::mutable_oceanwingame() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.oceanWinGame)
  return _internal_mutable_oceanwingame();
}

// .CMsgBotWorldState.Action.OceanReplayCorrectTime oceanReplayCorrectTime = 158;
inline bool CMsgBotWorldState_Action::_internal_has_oceanreplaycorrecttime() const {
  return ActionData_case() == kOceanReplayCorrectTime;
}
inline bool CMsgBotWorldState_Action::has_oceanreplaycorrecttime() const {
  return _internal_has_oceanreplaycorrecttime();
}
inline void CMsgBotWorldState_Action::set_has_oceanreplaycorrecttime() {
  _oneof_case_[0] = kOceanReplayCorrectTime;
}
inline void CMsgBotWorldState_Action::clear_oceanreplaycorrecttime() {
  if (_internal_has_oceanreplaycorrecttime()) {
    if (GetArena() == nullptr) {
      delete ActionData_.oceanreplaycorrecttime_;
    }
    clear_has_ActionData();
  }
}
inline ::CMsgBotWorldState_Action_OceanReplayCorrectTime* CMsgBotWorldState_Action::release_oceanreplaycorrecttime() {
  // @@protoc_insertion_point(field_release:CMsgBotWorldState.Action.oceanReplayCorrectTime)
  if (_internal_has_oceanreplaycorrecttime()) {
    clear_has_ActionData();
      ::CMsgBotWorldState_Action_OceanReplayCorrectTime* temp = ActionData_.oceanreplaycorrecttime_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    ActionData_.oceanreplaycorrecttime_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::CMsgBotWorldState_Action_OceanReplayCorrectTime& CMsgBotWorldState_Action::_internal_oceanreplaycorrecttime() const {
  return _internal_has_oceanreplaycorrecttime()
      ? *ActionData_.oceanreplaycorrecttime_
      : reinterpret_cast< ::CMsgBotWorldState_Action_OceanReplayCorrectTime&>(::_CMsgBotWorldState_Action_OceanReplayCorrectTime_default_instance_);
}
inline const ::CMsgBotWorldState_Action_OceanReplayCorrectTime& CMsgBotWorldState_Action::oceanreplaycorrecttime() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.Action.oceanReplayCorrectTime)
  return _internal_oceanreplaycorrecttime();
}
inline ::CMsgBotWorldState_Action_OceanReplayCorrectTime* CMsgBotWorldState_Action::unsafe_arena_release_oceanreplaycorrecttime() {
  // @@protoc_insertion_point(field_unsafe_arena_release:CMsgBotWorldState.Action.oceanReplayCorrectTime)
  if (_internal_has_oceanreplaycorrecttime()) {
    clear_has_ActionData();
    ::CMsgBotWorldState_Action_OceanReplayCorrectTime* temp = ActionData_.oceanreplaycorrecttime_;
    ActionData_.oceanreplaycorrecttime_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CMsgBotWorldState_Action::unsafe_arena_set_allocated_oceanreplaycorrecttime(::CMsgBotWorldState_Action_OceanReplayCorrectTime* oceanreplaycorrecttime) {
  clear_ActionData();
  if (oceanreplaycorrecttime) {
    set_has_oceanreplaycorrecttime();
    ActionData_.oceanreplaycorrecttime_ = oceanreplaycorrecttime;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgBotWorldState.Action.oceanReplayCorrectTime)
}
inline ::CMsgBotWorldState_Action_OceanReplayCorrectTime* CMsgBotWorldState_Action::_internal_mutable_oceanreplaycorrecttime() {
  if (!_internal_has_oceanreplaycorrecttime()) {
    clear_ActionData();
    set_has_oceanreplaycorrecttime();
    ActionData_.oceanreplaycorrecttime_ = CreateMaybeMessage< ::CMsgBotWorldState_Action_OceanReplayCorrectTime >(GetArena());
  }
  return ActionData_.oceanreplaycorrecttime_;
}
inline ::CMsgBotWorldState_Action_OceanReplayCorrectTime* CMsgBotWorldState_Action::mutable_oceanreplaycorrecttime() {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.Action.oceanReplayCorrectTime)
  return _internal_mutable_oceanreplaycorrecttime();
}

inline bool CMsgBotWorldState_Action::has_ActionData() const {
  return ActionData_case() != ACTIONDATA_NOT_SET;
}
inline void CMsgBotWorldState_Action::clear_has_ActionData() {
  _oneof_case_[0] = ACTIONDATA_NOT_SET;
}
inline CMsgBotWorldState_Action::ActionDataCase CMsgBotWorldState_Action::ActionData_case() const {
  return CMsgBotWorldState_Action::ActionDataCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// CMsgBotWorldState

// optional uint32 team_id = 1;
inline bool CMsgBotWorldState::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_team_id() const {
  return _internal_has_team_id();
}
inline void CMsgBotWorldState::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::team_id() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.team_id)
  return _internal_team_id();
}
inline void CMsgBotWorldState::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_id_ = value;
}
inline void CMsgBotWorldState::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.team_id)
}

// optional float game_time = 2;
inline bool CMsgBotWorldState::_internal_has_game_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_game_time() const {
  return _internal_has_game_time();
}
inline void CMsgBotWorldState::clear_game_time() {
  game_time_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CMsgBotWorldState::_internal_game_time() const {
  return game_time_;
}
inline float CMsgBotWorldState::game_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.game_time)
  return _internal_game_time();
}
inline void CMsgBotWorldState::_internal_set_game_time(float value) {
  _has_bits_[0] |= 0x00000002u;
  game_time_ = value;
}
inline void CMsgBotWorldState::set_game_time(float value) {
  _internal_set_game_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.game_time)
}

// optional float dota_time = 3;
inline bool CMsgBotWorldState::_internal_has_dota_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_dota_time() const {
  return _internal_has_dota_time();
}
inline void CMsgBotWorldState::clear_dota_time() {
  dota_time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgBotWorldState::_internal_dota_time() const {
  return dota_time_;
}
inline float CMsgBotWorldState::dota_time() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.dota_time)
  return _internal_dota_time();
}
inline void CMsgBotWorldState::_internal_set_dota_time(float value) {
  _has_bits_[0] |= 0x00000004u;
  dota_time_ = value;
}
inline void CMsgBotWorldState::set_dota_time(float value) {
  _internal_set_dota_time(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.dota_time)
}

// optional uint32 game_state = 4;
inline bool CMsgBotWorldState::_internal_has_game_state() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_game_state() const {
  return _internal_has_game_state();
}
inline void CMsgBotWorldState::clear_game_state() {
  game_state_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::_internal_game_state() const {
  return game_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::game_state() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.game_state)
  return _internal_game_state();
}
inline void CMsgBotWorldState::_internal_set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  game_state_ = value;
}
inline void CMsgBotWorldState::set_game_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_game_state(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.game_state)
}

// optional uint32 hero_pick_state = 5;
inline bool CMsgBotWorldState::_internal_has_hero_pick_state() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_hero_pick_state() const {
  return _internal_has_hero_pick_state();
}
inline void CMsgBotWorldState::clear_hero_pick_state() {
  hero_pick_state_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::_internal_hero_pick_state() const {
  return hero_pick_state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::hero_pick_state() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.hero_pick_state)
  return _internal_hero_pick_state();
}
inline void CMsgBotWorldState::_internal_set_hero_pick_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  hero_pick_state_ = value;
}
inline void CMsgBotWorldState::set_hero_pick_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_pick_state(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.hero_pick_state)
}

// optional float time_of_day = 6;
inline bool CMsgBotWorldState::_internal_has_time_of_day() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_time_of_day() const {
  return _internal_has_time_of_day();
}
inline void CMsgBotWorldState::clear_time_of_day() {
  time_of_day_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgBotWorldState::_internal_time_of_day() const {
  return time_of_day_;
}
inline float CMsgBotWorldState::time_of_day() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.time_of_day)
  return _internal_time_of_day();
}
inline void CMsgBotWorldState::_internal_set_time_of_day(float value) {
  _has_bits_[0] |= 0x00000020u;
  time_of_day_ = value;
}
inline void CMsgBotWorldState::set_time_of_day(float value) {
  _internal_set_time_of_day(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.time_of_day)
}

// optional float glyph_cooldown = 7;
inline bool CMsgBotWorldState::_internal_has_glyph_cooldown() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_glyph_cooldown() const {
  return _internal_has_glyph_cooldown();
}
inline void CMsgBotWorldState::clear_glyph_cooldown() {
  glyph_cooldown_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgBotWorldState::_internal_glyph_cooldown() const {
  return glyph_cooldown_;
}
inline float CMsgBotWorldState::glyph_cooldown() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.glyph_cooldown)
  return _internal_glyph_cooldown();
}
inline void CMsgBotWorldState::_internal_set_glyph_cooldown(float value) {
  _has_bits_[0] |= 0x00000040u;
  glyph_cooldown_ = value;
}
inline void CMsgBotWorldState::set_glyph_cooldown(float value) {
  _internal_set_glyph_cooldown(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.glyph_cooldown)
}

// optional uint32 glyph_cooldown_enemy = 8;
inline bool CMsgBotWorldState::_internal_has_glyph_cooldown_enemy() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgBotWorldState::has_glyph_cooldown_enemy() const {
  return _internal_has_glyph_cooldown_enemy();
}
inline void CMsgBotWorldState::clear_glyph_cooldown_enemy() {
  glyph_cooldown_enemy_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::_internal_glyph_cooldown_enemy() const {
  return glyph_cooldown_enemy_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgBotWorldState::glyph_cooldown_enemy() const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.glyph_cooldown_enemy)
  return _internal_glyph_cooldown_enemy();
}
inline void CMsgBotWorldState::_internal_set_glyph_cooldown_enemy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  glyph_cooldown_enemy_ = value;
}
inline void CMsgBotWorldState::set_glyph_cooldown_enemy(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_glyph_cooldown_enemy(value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.glyph_cooldown_enemy)
}

// repeated .CMsgBotWorldState.Player players = 10 [(.map_field) = true];
inline int CMsgBotWorldState::_internal_players_size() const {
  return players_.size();
}
inline int CMsgBotWorldState::players_size() const {
  return _internal_players_size();
}
inline void CMsgBotWorldState::clear_players() {
  players_.Clear();
}
inline ::CMsgBotWorldState_Player* CMsgBotWorldState::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.players)
  return players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Player >*
CMsgBotWorldState::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.players)
  return &players_;
}
inline const ::CMsgBotWorldState_Player& CMsgBotWorldState::_internal_players(int index) const {
  return players_.Get(index);
}
inline const ::CMsgBotWorldState_Player& CMsgBotWorldState::players(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.players)
  return _internal_players(index);
}
inline ::CMsgBotWorldState_Player* CMsgBotWorldState::_internal_add_players() {
  return players_.Add();
}
inline ::CMsgBotWorldState_Player* CMsgBotWorldState::add_players() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.players)
  return _internal_add_players();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Player >&
CMsgBotWorldState::players() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.players)
  return players_;
}

// repeated .CMsgBotWorldState.Unit units = 11 [(.map_field) = true];
inline int CMsgBotWorldState::_internal_units_size() const {
  return units_.size();
}
inline int CMsgBotWorldState::units_size() const {
  return _internal_units_size();
}
inline void CMsgBotWorldState::clear_units() {
  units_.Clear();
}
inline ::CMsgBotWorldState_Unit* CMsgBotWorldState::mutable_units(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.units)
  return units_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Unit >*
CMsgBotWorldState::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.units)
  return &units_;
}
inline const ::CMsgBotWorldState_Unit& CMsgBotWorldState::_internal_units(int index) const {
  return units_.Get(index);
}
inline const ::CMsgBotWorldState_Unit& CMsgBotWorldState::units(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.units)
  return _internal_units(index);
}
inline ::CMsgBotWorldState_Unit* CMsgBotWorldState::_internal_add_units() {
  return units_.Add();
}
inline ::CMsgBotWorldState_Unit* CMsgBotWorldState::add_units() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.units)
  return _internal_add_units();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Unit >&
CMsgBotWorldState::units() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.units)
  return units_;
}

// repeated .CMsgBotWorldState.DroppedItem dropped_items = 12 [(.diff_encode_field) = 112];
inline int CMsgBotWorldState::_internal_dropped_items_size() const {
  return dropped_items_.size();
}
inline int CMsgBotWorldState::dropped_items_size() const {
  return _internal_dropped_items_size();
}
inline void CMsgBotWorldState::clear_dropped_items() {
  dropped_items_.Clear();
}
inline ::CMsgBotWorldState_DroppedItem* CMsgBotWorldState::mutable_dropped_items(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.dropped_items)
  return dropped_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_DroppedItem >*
CMsgBotWorldState::mutable_dropped_items() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.dropped_items)
  return &dropped_items_;
}
inline const ::CMsgBotWorldState_DroppedItem& CMsgBotWorldState::_internal_dropped_items(int index) const {
  return dropped_items_.Get(index);
}
inline const ::CMsgBotWorldState_DroppedItem& CMsgBotWorldState::dropped_items(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.dropped_items)
  return _internal_dropped_items(index);
}
inline ::CMsgBotWorldState_DroppedItem* CMsgBotWorldState::_internal_add_dropped_items() {
  return dropped_items_.Add();
}
inline ::CMsgBotWorldState_DroppedItem* CMsgBotWorldState::add_dropped_items() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.dropped_items)
  return _internal_add_dropped_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_DroppedItem >&
CMsgBotWorldState::dropped_items() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.dropped_items)
  return dropped_items_;
}

// repeated int32 dropped_items_deltas = 112;
inline int CMsgBotWorldState::_internal_dropped_items_deltas_size() const {
  return dropped_items_deltas_.size();
}
inline int CMsgBotWorldState::dropped_items_deltas_size() const {
  return _internal_dropped_items_deltas_size();
}
inline void CMsgBotWorldState::clear_dropped_items_deltas() {
  dropped_items_deltas_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState::_internal_dropped_items_deltas(int index) const {
  return dropped_items_deltas_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState::dropped_items_deltas(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.dropped_items_deltas)
  return _internal_dropped_items_deltas(index);
}
inline void CMsgBotWorldState::set_dropped_items_deltas(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  dropped_items_deltas_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.dropped_items_deltas)
}
inline void CMsgBotWorldState::_internal_add_dropped_items_deltas(::PROTOBUF_NAMESPACE_ID::int32 value) {
  dropped_items_deltas_.Add(value);
}
inline void CMsgBotWorldState::add_dropped_items_deltas(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_dropped_items_deltas(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.dropped_items_deltas)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState::_internal_dropped_items_deltas() const {
  return dropped_items_deltas_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState::dropped_items_deltas() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.dropped_items_deltas)
  return _internal_dropped_items_deltas();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState::_internal_mutable_dropped_items_deltas() {
  return &dropped_items_deltas_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState::mutable_dropped_items_deltas() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.dropped_items_deltas)
  return _internal_mutable_dropped_items_deltas();
}

// repeated .CMsgBotWorldState.RuneInfo rune_infos = 13 [(.diff_encode_field) = 113];
inline int CMsgBotWorldState::_internal_rune_infos_size() const {
  return rune_infos_.size();
}
inline int CMsgBotWorldState::rune_infos_size() const {
  return _internal_rune_infos_size();
}
inline void CMsgBotWorldState::clear_rune_infos() {
  rune_infos_.Clear();
}
inline ::CMsgBotWorldState_RuneInfo* CMsgBotWorldState::mutable_rune_infos(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.rune_infos)
  return rune_infos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_RuneInfo >*
CMsgBotWorldState::mutable_rune_infos() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.rune_infos)
  return &rune_infos_;
}
inline const ::CMsgBotWorldState_RuneInfo& CMsgBotWorldState::_internal_rune_infos(int index) const {
  return rune_infos_.Get(index);
}
inline const ::CMsgBotWorldState_RuneInfo& CMsgBotWorldState::rune_infos(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.rune_infos)
  return _internal_rune_infos(index);
}
inline ::CMsgBotWorldState_RuneInfo* CMsgBotWorldState::_internal_add_rune_infos() {
  return rune_infos_.Add();
}
inline ::CMsgBotWorldState_RuneInfo* CMsgBotWorldState::add_rune_infos() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.rune_infos)
  return _internal_add_rune_infos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_RuneInfo >&
CMsgBotWorldState::rune_infos() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.rune_infos)
  return rune_infos_;
}

// repeated int32 rune_infos_deltas = 113;
inline int CMsgBotWorldState::_internal_rune_infos_deltas_size() const {
  return rune_infos_deltas_.size();
}
inline int CMsgBotWorldState::rune_infos_deltas_size() const {
  return _internal_rune_infos_deltas_size();
}
inline void CMsgBotWorldState::clear_rune_infos_deltas() {
  rune_infos_deltas_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState::_internal_rune_infos_deltas(int index) const {
  return rune_infos_deltas_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgBotWorldState::rune_infos_deltas(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.rune_infos_deltas)
  return _internal_rune_infos_deltas(index);
}
inline void CMsgBotWorldState::set_rune_infos_deltas(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  rune_infos_deltas_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgBotWorldState.rune_infos_deltas)
}
inline void CMsgBotWorldState::_internal_add_rune_infos_deltas(::PROTOBUF_NAMESPACE_ID::int32 value) {
  rune_infos_deltas_.Add(value);
}
inline void CMsgBotWorldState::add_rune_infos_deltas(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_rune_infos_deltas(value);
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.rune_infos_deltas)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState::_internal_rune_infos_deltas() const {
  return rune_infos_deltas_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CMsgBotWorldState::rune_infos_deltas() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.rune_infos_deltas)
  return _internal_rune_infos_deltas();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState::_internal_mutable_rune_infos_deltas() {
  return &rune_infos_deltas_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CMsgBotWorldState::mutable_rune_infos_deltas() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.rune_infos_deltas)
  return _internal_mutable_rune_infos_deltas();
}

// repeated .CMsgBotWorldState.TeleportInfo incoming_teleports = 14;
inline int CMsgBotWorldState::_internal_incoming_teleports_size() const {
  return incoming_teleports_.size();
}
inline int CMsgBotWorldState::incoming_teleports_size() const {
  return _internal_incoming_teleports_size();
}
inline void CMsgBotWorldState::clear_incoming_teleports() {
  incoming_teleports_.Clear();
}
inline ::CMsgBotWorldState_TeleportInfo* CMsgBotWorldState::mutable_incoming_teleports(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.incoming_teleports)
  return incoming_teleports_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TeleportInfo >*
CMsgBotWorldState::mutable_incoming_teleports() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.incoming_teleports)
  return &incoming_teleports_;
}
inline const ::CMsgBotWorldState_TeleportInfo& CMsgBotWorldState::_internal_incoming_teleports(int index) const {
  return incoming_teleports_.Get(index);
}
inline const ::CMsgBotWorldState_TeleportInfo& CMsgBotWorldState::incoming_teleports(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.incoming_teleports)
  return _internal_incoming_teleports(index);
}
inline ::CMsgBotWorldState_TeleportInfo* CMsgBotWorldState::_internal_add_incoming_teleports() {
  return incoming_teleports_.Add();
}
inline ::CMsgBotWorldState_TeleportInfo* CMsgBotWorldState::add_incoming_teleports() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.incoming_teleports)
  return _internal_add_incoming_teleports();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_TeleportInfo >&
CMsgBotWorldState::incoming_teleports() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.incoming_teleports)
  return incoming_teleports_;
}

// repeated .CMsgBotWorldState.LinearProjectile linear_projectiles = 15 [(.map_field) = true];
inline int CMsgBotWorldState::_internal_linear_projectiles_size() const {
  return linear_projectiles_.size();
}
inline int CMsgBotWorldState::linear_projectiles_size() const {
  return _internal_linear_projectiles_size();
}
inline void CMsgBotWorldState::clear_linear_projectiles() {
  linear_projectiles_.Clear();
}
inline ::CMsgBotWorldState_LinearProjectile* CMsgBotWorldState::mutable_linear_projectiles(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.linear_projectiles)
  return linear_projectiles_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_LinearProjectile >*
CMsgBotWorldState::mutable_linear_projectiles() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.linear_projectiles)
  return &linear_projectiles_;
}
inline const ::CMsgBotWorldState_LinearProjectile& CMsgBotWorldState::_internal_linear_projectiles(int index) const {
  return linear_projectiles_.Get(index);
}
inline const ::CMsgBotWorldState_LinearProjectile& CMsgBotWorldState::linear_projectiles(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.linear_projectiles)
  return _internal_linear_projectiles(index);
}
inline ::CMsgBotWorldState_LinearProjectile* CMsgBotWorldState::_internal_add_linear_projectiles() {
  return linear_projectiles_.Add();
}
inline ::CMsgBotWorldState_LinearProjectile* CMsgBotWorldState::add_linear_projectiles() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.linear_projectiles)
  return _internal_add_linear_projectiles();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_LinearProjectile >&
CMsgBotWorldState::linear_projectiles() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.linear_projectiles)
  return linear_projectiles_;
}

// repeated .CMsgBotWorldState.AvoidanceZone avoidance_zones = 16;
inline int CMsgBotWorldState::_internal_avoidance_zones_size() const {
  return avoidance_zones_.size();
}
inline int CMsgBotWorldState::avoidance_zones_size() const {
  return _internal_avoidance_zones_size();
}
inline void CMsgBotWorldState::clear_avoidance_zones() {
  avoidance_zones_.Clear();
}
inline ::CMsgBotWorldState_AvoidanceZone* CMsgBotWorldState::mutable_avoidance_zones(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.avoidance_zones)
  return avoidance_zones_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_AvoidanceZone >*
CMsgBotWorldState::mutable_avoidance_zones() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.avoidance_zones)
  return &avoidance_zones_;
}
inline const ::CMsgBotWorldState_AvoidanceZone& CMsgBotWorldState::_internal_avoidance_zones(int index) const {
  return avoidance_zones_.Get(index);
}
inline const ::CMsgBotWorldState_AvoidanceZone& CMsgBotWorldState::avoidance_zones(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.avoidance_zones)
  return _internal_avoidance_zones(index);
}
inline ::CMsgBotWorldState_AvoidanceZone* CMsgBotWorldState::_internal_add_avoidance_zones() {
  return avoidance_zones_.Add();
}
inline ::CMsgBotWorldState_AvoidanceZone* CMsgBotWorldState::add_avoidance_zones() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.avoidance_zones)
  return _internal_add_avoidance_zones();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_AvoidanceZone >&
CMsgBotWorldState::avoidance_zones() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.avoidance_zones)
  return avoidance_zones_;
}

// repeated .CMsgBotWorldState.Courier couriers = 17 [(.map_field) = true];
inline int CMsgBotWorldState::_internal_couriers_size() const {
  return couriers_.size();
}
inline int CMsgBotWorldState::couriers_size() const {
  return _internal_couriers_size();
}
inline void CMsgBotWorldState::clear_couriers() {
  couriers_.Clear();
}
inline ::CMsgBotWorldState_Courier* CMsgBotWorldState::mutable_couriers(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.couriers)
  return couriers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Courier >*
CMsgBotWorldState::mutable_couriers() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.couriers)
  return &couriers_;
}
inline const ::CMsgBotWorldState_Courier& CMsgBotWorldState::_internal_couriers(int index) const {
  return couriers_.Get(index);
}
inline const ::CMsgBotWorldState_Courier& CMsgBotWorldState::couriers(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.couriers)
  return _internal_couriers(index);
}
inline ::CMsgBotWorldState_Courier* CMsgBotWorldState::_internal_add_couriers() {
  return couriers_.Add();
}
inline ::CMsgBotWorldState_Courier* CMsgBotWorldState::add_couriers() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.couriers)
  return _internal_add_couriers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_Courier >&
CMsgBotWorldState::couriers() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.couriers)
  return couriers_;
}

// repeated .CMsgBotWorldState.EventAbility ability_events = 20;
inline int CMsgBotWorldState::_internal_ability_events_size() const {
  return ability_events_.size();
}
inline int CMsgBotWorldState::ability_events_size() const {
  return _internal_ability_events_size();
}
inline void CMsgBotWorldState::clear_ability_events() {
  ability_events_.Clear();
}
inline ::CMsgBotWorldState_EventAbility* CMsgBotWorldState::mutable_ability_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.ability_events)
  return ability_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventAbility >*
CMsgBotWorldState::mutable_ability_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.ability_events)
  return &ability_events_;
}
inline const ::CMsgBotWorldState_EventAbility& CMsgBotWorldState::_internal_ability_events(int index) const {
  return ability_events_.Get(index);
}
inline const ::CMsgBotWorldState_EventAbility& CMsgBotWorldState::ability_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.ability_events)
  return _internal_ability_events(index);
}
inline ::CMsgBotWorldState_EventAbility* CMsgBotWorldState::_internal_add_ability_events() {
  return ability_events_.Add();
}
inline ::CMsgBotWorldState_EventAbility* CMsgBotWorldState::add_ability_events() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.ability_events)
  return _internal_add_ability_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventAbility >&
CMsgBotWorldState::ability_events() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.ability_events)
  return ability_events_;
}

// repeated .CMsgBotWorldState.EventDamage damage_events = 21;
inline int CMsgBotWorldState::_internal_damage_events_size() const {
  return damage_events_.size();
}
inline int CMsgBotWorldState::damage_events_size() const {
  return _internal_damage_events_size();
}
inline void CMsgBotWorldState::clear_damage_events() {
  damage_events_.Clear();
}
inline ::CMsgBotWorldState_EventDamage* CMsgBotWorldState::mutable_damage_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.damage_events)
  return damage_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventDamage >*
CMsgBotWorldState::mutable_damage_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.damage_events)
  return &damage_events_;
}
inline const ::CMsgBotWorldState_EventDamage& CMsgBotWorldState::_internal_damage_events(int index) const {
  return damage_events_.Get(index);
}
inline const ::CMsgBotWorldState_EventDamage& CMsgBotWorldState::damage_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.damage_events)
  return _internal_damage_events(index);
}
inline ::CMsgBotWorldState_EventDamage* CMsgBotWorldState::_internal_add_damage_events() {
  return damage_events_.Add();
}
inline ::CMsgBotWorldState_EventDamage* CMsgBotWorldState::add_damage_events() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.damage_events)
  return _internal_add_damage_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventDamage >&
CMsgBotWorldState::damage_events() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.damage_events)
  return damage_events_;
}

// repeated .CMsgBotWorldState.EventCourierKilled courier_killed_events = 22;
inline int CMsgBotWorldState::_internal_courier_killed_events_size() const {
  return courier_killed_events_.size();
}
inline int CMsgBotWorldState::courier_killed_events_size() const {
  return _internal_courier_killed_events_size();
}
inline void CMsgBotWorldState::clear_courier_killed_events() {
  courier_killed_events_.Clear();
}
inline ::CMsgBotWorldState_EventCourierKilled* CMsgBotWorldState::mutable_courier_killed_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.courier_killed_events)
  return courier_killed_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventCourierKilled >*
CMsgBotWorldState::mutable_courier_killed_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.courier_killed_events)
  return &courier_killed_events_;
}
inline const ::CMsgBotWorldState_EventCourierKilled& CMsgBotWorldState::_internal_courier_killed_events(int index) const {
  return courier_killed_events_.Get(index);
}
inline const ::CMsgBotWorldState_EventCourierKilled& CMsgBotWorldState::courier_killed_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.courier_killed_events)
  return _internal_courier_killed_events(index);
}
inline ::CMsgBotWorldState_EventCourierKilled* CMsgBotWorldState::_internal_add_courier_killed_events() {
  return courier_killed_events_.Add();
}
inline ::CMsgBotWorldState_EventCourierKilled* CMsgBotWorldState::add_courier_killed_events() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.courier_killed_events)
  return _internal_add_courier_killed_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventCourierKilled >&
CMsgBotWorldState::courier_killed_events() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.courier_killed_events)
  return courier_killed_events_;
}

// repeated .CMsgBotWorldState.EventRoshanKilled roshan_killed_events = 23;
inline int CMsgBotWorldState::_internal_roshan_killed_events_size() const {
  return roshan_killed_events_.size();
}
inline int CMsgBotWorldState::roshan_killed_events_size() const {
  return _internal_roshan_killed_events_size();
}
inline void CMsgBotWorldState::clear_roshan_killed_events() {
  roshan_killed_events_.Clear();
}
inline ::CMsgBotWorldState_EventRoshanKilled* CMsgBotWorldState::mutable_roshan_killed_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.roshan_killed_events)
  return roshan_killed_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventRoshanKilled >*
CMsgBotWorldState::mutable_roshan_killed_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.roshan_killed_events)
  return &roshan_killed_events_;
}
inline const ::CMsgBotWorldState_EventRoshanKilled& CMsgBotWorldState::_internal_roshan_killed_events(int index) const {
  return roshan_killed_events_.Get(index);
}
inline const ::CMsgBotWorldState_EventRoshanKilled& CMsgBotWorldState::roshan_killed_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.roshan_killed_events)
  return _internal_roshan_killed_events(index);
}
inline ::CMsgBotWorldState_EventRoshanKilled* CMsgBotWorldState::_internal_add_roshan_killed_events() {
  return roshan_killed_events_.Add();
}
inline ::CMsgBotWorldState_EventRoshanKilled* CMsgBotWorldState::add_roshan_killed_events() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.roshan_killed_events)
  return _internal_add_roshan_killed_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventRoshanKilled >&
CMsgBotWorldState::roshan_killed_events() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.roshan_killed_events)
  return roshan_killed_events_;
}

// repeated .CMsgBotWorldState.EventTree tree_events = 24;
inline int CMsgBotWorldState::_internal_tree_events_size() const {
  return tree_events_.size();
}
inline int CMsgBotWorldState::tree_events_size() const {
  return _internal_tree_events_size();
}
inline void CMsgBotWorldState::clear_tree_events() {
  tree_events_.Clear();
}
inline ::CMsgBotWorldState_EventTree* CMsgBotWorldState::mutable_tree_events(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgBotWorldState.tree_events)
  return tree_events_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventTree >*
CMsgBotWorldState::mutable_tree_events() {
  // @@protoc_insertion_point(field_mutable_list:CMsgBotWorldState.tree_events)
  return &tree_events_;
}
inline const ::CMsgBotWorldState_EventTree& CMsgBotWorldState::_internal_tree_events(int index) const {
  return tree_events_.Get(index);
}
inline const ::CMsgBotWorldState_EventTree& CMsgBotWorldState::tree_events(int index) const {
  // @@protoc_insertion_point(field_get:CMsgBotWorldState.tree_events)
  return _internal_tree_events(index);
}
inline ::CMsgBotWorldState_EventTree* CMsgBotWorldState::_internal_add_tree_events() {
  return tree_events_.Add();
}
inline ::CMsgBotWorldState_EventTree* CMsgBotWorldState::add_tree_events() {
  // @@protoc_insertion_point(field_add:CMsgBotWorldState.tree_events)
  return _internal_add_tree_events();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgBotWorldState_EventTree >&
CMsgBotWorldState::tree_events() const {
  // @@protoc_insertion_point(field_list:CMsgBotWorldState.tree_events)
  return tree_events_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgBotWorldState_Action_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgBotWorldState_Action_Type>() {
  return ::CMsgBotWorldState_Action_Type_descriptor();
}
template <> struct is_proto_enum< ::CMsgBotWorldState_UnitType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgBotWorldState_UnitType>() {
  return ::CMsgBotWorldState_UnitType_descriptor();
}
template <> struct is_proto_enum< ::CMsgBotWorldState_CourierState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgBotWorldState_CourierState>() {
  return ::CMsgBotWorldState_CourierState_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fcommon_5fbot_5fscript_2eproto
