// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameevents.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gameevents_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gameevents_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gameevents_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gameevents_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[16]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gameevents_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_gameevents_2eproto_metadata_getter(int index);
class CMsgClearDecalsForSkeletonInstanceEvent;
struct CMsgClearDecalsForSkeletonInstanceEventDefaultTypeInternal;
extern CMsgClearDecalsForSkeletonInstanceEventDefaultTypeInternal _CMsgClearDecalsForSkeletonInstanceEvent_default_instance_;
class CMsgClearEntityDecalsEvent;
struct CMsgClearEntityDecalsEventDefaultTypeInternal;
extern CMsgClearEntityDecalsEventDefaultTypeInternal _CMsgClearEntityDecalsEvent_default_instance_;
class CMsgClearWorldDecalsEvent;
struct CMsgClearWorldDecalsEventDefaultTypeInternal;
extern CMsgClearWorldDecalsEventDefaultTypeInternal _CMsgClearWorldDecalsEvent_default_instance_;
class CMsgPlaceDecalEvent;
struct CMsgPlaceDecalEventDefaultTypeInternal;
extern CMsgPlaceDecalEventDefaultTypeInternal _CMsgPlaceDecalEvent_default_instance_;
class CMsgSosSetLibraryStackFields;
struct CMsgSosSetLibraryStackFieldsDefaultTypeInternal;
extern CMsgSosSetLibraryStackFieldsDefaultTypeInternal _CMsgSosSetLibraryStackFields_default_instance_;
class CMsgSosSetSoundEventParams;
struct CMsgSosSetSoundEventParamsDefaultTypeInternal;
extern CMsgSosSetSoundEventParamsDefaultTypeInternal _CMsgSosSetSoundEventParams_default_instance_;
class CMsgSosStartSoundEvent;
struct CMsgSosStartSoundEventDefaultTypeInternal;
extern CMsgSosStartSoundEventDefaultTypeInternal _CMsgSosStartSoundEvent_default_instance_;
class CMsgSosStopSoundEvent;
struct CMsgSosStopSoundEventDefaultTypeInternal;
extern CMsgSosStopSoundEventDefaultTypeInternal _CMsgSosStopSoundEvent_default_instance_;
class CMsgSosStopSoundEventHash;
struct CMsgSosStopSoundEventHashDefaultTypeInternal;
extern CMsgSosStopSoundEventHashDefaultTypeInternal _CMsgSosStopSoundEventHash_default_instance_;
class CMsgSource1LegacyGameEvent;
struct CMsgSource1LegacyGameEventDefaultTypeInternal;
extern CMsgSource1LegacyGameEventDefaultTypeInternal _CMsgSource1LegacyGameEvent_default_instance_;
class CMsgSource1LegacyGameEventList;
struct CMsgSource1LegacyGameEventListDefaultTypeInternal;
extern CMsgSource1LegacyGameEventListDefaultTypeInternal _CMsgSource1LegacyGameEventList_default_instance_;
class CMsgSource1LegacyGameEventList_descriptor_t;
struct CMsgSource1LegacyGameEventList_descriptor_tDefaultTypeInternal;
extern CMsgSource1LegacyGameEventList_descriptor_tDefaultTypeInternal _CMsgSource1LegacyGameEventList_descriptor_t_default_instance_;
class CMsgSource1LegacyGameEventList_key_t;
struct CMsgSource1LegacyGameEventList_key_tDefaultTypeInternal;
extern CMsgSource1LegacyGameEventList_key_tDefaultTypeInternal _CMsgSource1LegacyGameEventList_key_t_default_instance_;
class CMsgSource1LegacyGameEvent_key_t;
struct CMsgSource1LegacyGameEvent_key_tDefaultTypeInternal;
extern CMsgSource1LegacyGameEvent_key_tDefaultTypeInternal _CMsgSource1LegacyGameEvent_key_t_default_instance_;
class CMsgSource1LegacyListenEvents;
struct CMsgSource1LegacyListenEventsDefaultTypeInternal;
extern CMsgSource1LegacyListenEventsDefaultTypeInternal _CMsgSource1LegacyListenEvents_default_instance_;
class CMsgVDebugGameSessionIDEvent;
struct CMsgVDebugGameSessionIDEventDefaultTypeInternal;
extern CMsgVDebugGameSessionIDEventDefaultTypeInternal _CMsgVDebugGameSessionIDEvent_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgClearDecalsForSkeletonInstanceEvent* Arena::CreateMaybeMessage<::CMsgClearDecalsForSkeletonInstanceEvent>(Arena*);
template<> ::CMsgClearEntityDecalsEvent* Arena::CreateMaybeMessage<::CMsgClearEntityDecalsEvent>(Arena*);
template<> ::CMsgClearWorldDecalsEvent* Arena::CreateMaybeMessage<::CMsgClearWorldDecalsEvent>(Arena*);
template<> ::CMsgPlaceDecalEvent* Arena::CreateMaybeMessage<::CMsgPlaceDecalEvent>(Arena*);
template<> ::CMsgSosSetLibraryStackFields* Arena::CreateMaybeMessage<::CMsgSosSetLibraryStackFields>(Arena*);
template<> ::CMsgSosSetSoundEventParams* Arena::CreateMaybeMessage<::CMsgSosSetSoundEventParams>(Arena*);
template<> ::CMsgSosStartSoundEvent* Arena::CreateMaybeMessage<::CMsgSosStartSoundEvent>(Arena*);
template<> ::CMsgSosStopSoundEvent* Arena::CreateMaybeMessage<::CMsgSosStopSoundEvent>(Arena*);
template<> ::CMsgSosStopSoundEventHash* Arena::CreateMaybeMessage<::CMsgSosStopSoundEventHash>(Arena*);
template<> ::CMsgSource1LegacyGameEvent* Arena::CreateMaybeMessage<::CMsgSource1LegacyGameEvent>(Arena*);
template<> ::CMsgSource1LegacyGameEventList* Arena::CreateMaybeMessage<::CMsgSource1LegacyGameEventList>(Arena*);
template<> ::CMsgSource1LegacyGameEventList_descriptor_t* Arena::CreateMaybeMessage<::CMsgSource1LegacyGameEventList_descriptor_t>(Arena*);
template<> ::CMsgSource1LegacyGameEventList_key_t* Arena::CreateMaybeMessage<::CMsgSource1LegacyGameEventList_key_t>(Arena*);
template<> ::CMsgSource1LegacyGameEvent_key_t* Arena::CreateMaybeMessage<::CMsgSource1LegacyGameEvent_key_t>(Arena*);
template<> ::CMsgSource1LegacyListenEvents* Arena::CreateMaybeMessage<::CMsgSource1LegacyListenEvents>(Arena*);
template<> ::CMsgVDebugGameSessionIDEvent* Arena::CreateMaybeMessage<::CMsgVDebugGameSessionIDEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum EBaseGameEvents : int {
  GE_VDebugGameSessionIDEvent = 200,
  GE_PlaceDecalEvent = 201,
  GE_ClearWorldDecalsEvent = 202,
  GE_ClearEntityDecalsEvent = 203,
  GE_ClearDecalsForSkeletonInstanceEvent = 204,
  GE_Source1LegacyGameEventList = 205,
  GE_Source1LegacyListenEvents = 206,
  GE_Source1LegacyGameEvent = 207,
  GE_SosStartSoundEvent = 208,
  GE_SosStopSoundEvent = 209,
  GE_SosSetSoundEventParams = 210,
  GE_SosSetLibraryStackFields = 211,
  GE_SosStopSoundEventHash = 212
};
bool EBaseGameEvents_IsValid(int value);
constexpr EBaseGameEvents EBaseGameEvents_MIN = GE_VDebugGameSessionIDEvent;
constexpr EBaseGameEvents EBaseGameEvents_MAX = GE_SosStopSoundEventHash;
constexpr int EBaseGameEvents_ARRAYSIZE = EBaseGameEvents_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EBaseGameEvents_descriptor();
template<typename T>
inline const std::string& EBaseGameEvents_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EBaseGameEvents>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EBaseGameEvents_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EBaseGameEvents_descriptor(), enum_t_value);
}
inline bool EBaseGameEvents_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EBaseGameEvents* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EBaseGameEvents>(
    EBaseGameEvents_descriptor(), name, value);
}
// ===================================================================

class CMsgVDebugGameSessionIDEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgVDebugGameSessionIDEvent) */ {
 public:
  inline CMsgVDebugGameSessionIDEvent() : CMsgVDebugGameSessionIDEvent(nullptr) {}
  virtual ~CMsgVDebugGameSessionIDEvent();
  explicit constexpr CMsgVDebugGameSessionIDEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgVDebugGameSessionIDEvent(const CMsgVDebugGameSessionIDEvent& from);
  CMsgVDebugGameSessionIDEvent(CMsgVDebugGameSessionIDEvent&& from) noexcept
    : CMsgVDebugGameSessionIDEvent() {
    *this = ::std::move(from);
  }

  inline CMsgVDebugGameSessionIDEvent& operator=(const CMsgVDebugGameSessionIDEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgVDebugGameSessionIDEvent& operator=(CMsgVDebugGameSessionIDEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgVDebugGameSessionIDEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgVDebugGameSessionIDEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgVDebugGameSessionIDEvent*>(
               &_CMsgVDebugGameSessionIDEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgVDebugGameSessionIDEvent& a, CMsgVDebugGameSessionIDEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgVDebugGameSessionIDEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgVDebugGameSessionIDEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgVDebugGameSessionIDEvent* New() const final {
    return CreateMaybeMessage<CMsgVDebugGameSessionIDEvent>(nullptr);
  }

  CMsgVDebugGameSessionIDEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgVDebugGameSessionIDEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgVDebugGameSessionIDEvent& from);
  void MergeFrom(const CMsgVDebugGameSessionIDEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgVDebugGameSessionIDEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgVDebugGameSessionIDEvent";
  }
  protected:
  explicit CMsgVDebugGameSessionIDEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGamesessionidFieldNumber = 2,
    kClientidFieldNumber = 1,
  };
  // optional string gamesessionid = 2;
  bool has_gamesessionid() const;
  private:
  bool _internal_has_gamesessionid() const;
  public:
  void clear_gamesessionid();
  const std::string& gamesessionid() const;
  void set_gamesessionid(const std::string& value);
  void set_gamesessionid(std::string&& value);
  void set_gamesessionid(const char* value);
  void set_gamesessionid(const char* value, size_t size);
  std::string* mutable_gamesessionid();
  std::string* release_gamesessionid();
  void set_allocated_gamesessionid(std::string* gamesessionid);
  private:
  const std::string& _internal_gamesessionid() const;
  void _internal_set_gamesessionid(const std::string& value);
  std::string* _internal_mutable_gamesessionid();
  public:

  // optional int32 clientid = 1;
  bool has_clientid() const;
  private:
  bool _internal_has_clientid() const;
  public:
  void clear_clientid();
  ::PROTOBUF_NAMESPACE_ID::int32 clientid() const;
  void set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_clientid() const;
  void _internal_set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgVDebugGameSessionIDEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr gamesessionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 clientid_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgPlaceDecalEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPlaceDecalEvent) */ {
 public:
  inline CMsgPlaceDecalEvent() : CMsgPlaceDecalEvent(nullptr) {}
  virtual ~CMsgPlaceDecalEvent();
  explicit constexpr CMsgPlaceDecalEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPlaceDecalEvent(const CMsgPlaceDecalEvent& from);
  CMsgPlaceDecalEvent(CMsgPlaceDecalEvent&& from) noexcept
    : CMsgPlaceDecalEvent() {
    *this = ::std::move(from);
  }

  inline CMsgPlaceDecalEvent& operator=(const CMsgPlaceDecalEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPlaceDecalEvent& operator=(CMsgPlaceDecalEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgPlaceDecalEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPlaceDecalEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgPlaceDecalEvent*>(
               &_CMsgPlaceDecalEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgPlaceDecalEvent& a, CMsgPlaceDecalEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPlaceDecalEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPlaceDecalEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlaceDecalEvent* New() const final {
    return CreateMaybeMessage<CMsgPlaceDecalEvent>(nullptr);
  }

  CMsgPlaceDecalEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPlaceDecalEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgPlaceDecalEvent& from);
  void MergeFrom(const CMsgPlaceDecalEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPlaceDecalEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPlaceDecalEvent";
  }
  protected:
  explicit CMsgPlaceDecalEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionFieldNumber = 1,
    kNormalFieldNumber = 2,
    kSaxisFieldNumber = 3,
    kDecalmaterialindexFieldNumber = 4,
    kFlagsFieldNumber = 5,
    kColorFieldNumber = 6,
    kWidthFieldNumber = 7,
    kHeightFieldNumber = 8,
    kDepthFieldNumber = 9,
    kEntityhandleindexFieldNumber = 10,
    kSkeletoninstancehashFieldNumber = 11,
    kBoneindexFieldNumber = 12,
    kTranslucenthitFieldNumber = 13,
    kIsAdjacentFieldNumber = 14,
  };
  // optional .CMsgVector position = 1;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::CMsgVector& position() const;
  ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* position);
  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::CMsgVector* position);
  ::CMsgVector* unsafe_arena_release_position();

  // optional .CMsgVector normal = 2;
  bool has_normal() const;
  private:
  bool _internal_has_normal() const;
  public:
  void clear_normal();
  const ::CMsgVector& normal() const;
  ::CMsgVector* release_normal();
  ::CMsgVector* mutable_normal();
  void set_allocated_normal(::CMsgVector* normal);
  private:
  const ::CMsgVector& _internal_normal() const;
  ::CMsgVector* _internal_mutable_normal();
  public:
  void unsafe_arena_set_allocated_normal(
      ::CMsgVector* normal);
  ::CMsgVector* unsafe_arena_release_normal();

  // optional .CMsgVector saxis = 3;
  bool has_saxis() const;
  private:
  bool _internal_has_saxis() const;
  public:
  void clear_saxis();
  const ::CMsgVector& saxis() const;
  ::CMsgVector* release_saxis();
  ::CMsgVector* mutable_saxis();
  void set_allocated_saxis(::CMsgVector* saxis);
  private:
  const ::CMsgVector& _internal_saxis() const;
  ::CMsgVector* _internal_mutable_saxis();
  public:
  void unsafe_arena_set_allocated_saxis(
      ::CMsgVector* saxis);
  ::CMsgVector* unsafe_arena_release_saxis();

  // optional uint32 decalmaterialindex = 4;
  bool has_decalmaterialindex() const;
  private:
  bool _internal_has_decalmaterialindex() const;
  public:
  void clear_decalmaterialindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 decalmaterialindex() const;
  void set_decalmaterialindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_decalmaterialindex() const;
  void _internal_set_decalmaterialindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 flags = 5;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 color = 6;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  ::PROTOBUF_NAMESPACE_ID::uint32 color() const;
  void set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color() const;
  void _internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float width = 7;
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  float width() const;
  void set_width(float value);
  private:
  float _internal_width() const;
  void _internal_set_width(float value);
  public:

  // optional float height = 8;
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  float height() const;
  void set_height(float value);
  private:
  float _internal_height() const;
  void _internal_set_height(float value);
  public:

  // optional float depth = 9;
  bool has_depth() const;
  private:
  bool _internal_has_depth() const;
  public:
  void clear_depth();
  float depth() const;
  void set_depth(float value);
  private:
  float _internal_depth() const;
  void _internal_set_depth(float value);
  public:

  // optional uint32 entityhandleindex = 10;
  bool has_entityhandleindex() const;
  private:
  bool _internal_has_entityhandleindex() const;
  public:
  void clear_entityhandleindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 entityhandleindex() const;
  void set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entityhandleindex() const;
  void _internal_set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 skeletoninstancehash = 11;
  bool has_skeletoninstancehash() const;
  private:
  bool _internal_has_skeletoninstancehash() const;
  public:
  void clear_skeletoninstancehash();
  ::PROTOBUF_NAMESPACE_ID::uint32 skeletoninstancehash() const;
  void set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skeletoninstancehash() const;
  void _internal_set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 boneindex = 12;
  bool has_boneindex() const;
  private:
  bool _internal_has_boneindex() const;
  public:
  void clear_boneindex();
  ::PROTOBUF_NAMESPACE_ID::int32 boneindex() const;
  void set_boneindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_boneindex() const;
  void _internal_set_boneindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool translucenthit = 13;
  bool has_translucenthit() const;
  private:
  bool _internal_has_translucenthit() const;
  public:
  void clear_translucenthit();
  bool translucenthit() const;
  void set_translucenthit(bool value);
  private:
  bool _internal_translucenthit() const;
  void _internal_set_translucenthit(bool value);
  public:

  // optional bool is_adjacent = 14;
  bool has_is_adjacent() const;
  private:
  bool _internal_has_is_adjacent() const;
  public:
  void clear_is_adjacent();
  bool is_adjacent() const;
  void set_is_adjacent(bool value);
  private:
  bool _internal_is_adjacent() const;
  void _internal_set_is_adjacent(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPlaceDecalEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* position_;
  ::CMsgVector* normal_;
  ::CMsgVector* saxis_;
  ::PROTOBUF_NAMESPACE_ID::uint32 decalmaterialindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_;
  float width_;
  float height_;
  float depth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entityhandleindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skeletoninstancehash_;
  ::PROTOBUF_NAMESPACE_ID::int32 boneindex_;
  bool translucenthit_;
  bool is_adjacent_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClearWorldDecalsEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClearWorldDecalsEvent) */ {
 public:
  inline CMsgClearWorldDecalsEvent() : CMsgClearWorldDecalsEvent(nullptr) {}
  virtual ~CMsgClearWorldDecalsEvent();
  explicit constexpr CMsgClearWorldDecalsEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClearWorldDecalsEvent(const CMsgClearWorldDecalsEvent& from);
  CMsgClearWorldDecalsEvent(CMsgClearWorldDecalsEvent&& from) noexcept
    : CMsgClearWorldDecalsEvent() {
    *this = ::std::move(from);
  }

  inline CMsgClearWorldDecalsEvent& operator=(const CMsgClearWorldDecalsEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClearWorldDecalsEvent& operator=(CMsgClearWorldDecalsEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClearWorldDecalsEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClearWorldDecalsEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClearWorldDecalsEvent*>(
               &_CMsgClearWorldDecalsEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgClearWorldDecalsEvent& a, CMsgClearWorldDecalsEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClearWorldDecalsEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClearWorldDecalsEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClearWorldDecalsEvent* New() const final {
    return CreateMaybeMessage<CMsgClearWorldDecalsEvent>(nullptr);
  }

  CMsgClearWorldDecalsEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClearWorldDecalsEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClearWorldDecalsEvent& from);
  void MergeFrom(const CMsgClearWorldDecalsEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClearWorldDecalsEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClearWorldDecalsEvent";
  }
  protected:
  explicit CMsgClearWorldDecalsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagstoclearFieldNumber = 1,
  };
  // optional uint32 flagstoclear = 1;
  bool has_flagstoclear() const;
  private:
  bool _internal_has_flagstoclear() const;
  public:
  void clear_flagstoclear();
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear() const;
  void set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flagstoclear() const;
  void _internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClearWorldDecalsEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClearEntityDecalsEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClearEntityDecalsEvent) */ {
 public:
  inline CMsgClearEntityDecalsEvent() : CMsgClearEntityDecalsEvent(nullptr) {}
  virtual ~CMsgClearEntityDecalsEvent();
  explicit constexpr CMsgClearEntityDecalsEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClearEntityDecalsEvent(const CMsgClearEntityDecalsEvent& from);
  CMsgClearEntityDecalsEvent(CMsgClearEntityDecalsEvent&& from) noexcept
    : CMsgClearEntityDecalsEvent() {
    *this = ::std::move(from);
  }

  inline CMsgClearEntityDecalsEvent& operator=(const CMsgClearEntityDecalsEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClearEntityDecalsEvent& operator=(CMsgClearEntityDecalsEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClearEntityDecalsEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClearEntityDecalsEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClearEntityDecalsEvent*>(
               &_CMsgClearEntityDecalsEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgClearEntityDecalsEvent& a, CMsgClearEntityDecalsEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClearEntityDecalsEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClearEntityDecalsEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClearEntityDecalsEvent* New() const final {
    return CreateMaybeMessage<CMsgClearEntityDecalsEvent>(nullptr);
  }

  CMsgClearEntityDecalsEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClearEntityDecalsEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClearEntityDecalsEvent& from);
  void MergeFrom(const CMsgClearEntityDecalsEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClearEntityDecalsEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClearEntityDecalsEvent";
  }
  protected:
  explicit CMsgClearEntityDecalsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagstoclearFieldNumber = 1,
  };
  // optional uint32 flagstoclear = 1;
  bool has_flagstoclear() const;
  private:
  bool _internal_has_flagstoclear() const;
  public:
  void clear_flagstoclear();
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear() const;
  void set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flagstoclear() const;
  void _internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClearEntityDecalsEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgClearDecalsForSkeletonInstanceEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClearDecalsForSkeletonInstanceEvent) */ {
 public:
  inline CMsgClearDecalsForSkeletonInstanceEvent() : CMsgClearDecalsForSkeletonInstanceEvent(nullptr) {}
  virtual ~CMsgClearDecalsForSkeletonInstanceEvent();
  explicit constexpr CMsgClearDecalsForSkeletonInstanceEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClearDecalsForSkeletonInstanceEvent(const CMsgClearDecalsForSkeletonInstanceEvent& from);
  CMsgClearDecalsForSkeletonInstanceEvent(CMsgClearDecalsForSkeletonInstanceEvent&& from) noexcept
    : CMsgClearDecalsForSkeletonInstanceEvent() {
    *this = ::std::move(from);
  }

  inline CMsgClearDecalsForSkeletonInstanceEvent& operator=(const CMsgClearDecalsForSkeletonInstanceEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClearDecalsForSkeletonInstanceEvent& operator=(CMsgClearDecalsForSkeletonInstanceEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClearDecalsForSkeletonInstanceEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClearDecalsForSkeletonInstanceEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClearDecalsForSkeletonInstanceEvent*>(
               &_CMsgClearDecalsForSkeletonInstanceEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgClearDecalsForSkeletonInstanceEvent& a, CMsgClearDecalsForSkeletonInstanceEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClearDecalsForSkeletonInstanceEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClearDecalsForSkeletonInstanceEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClearDecalsForSkeletonInstanceEvent* New() const final {
    return CreateMaybeMessage<CMsgClearDecalsForSkeletonInstanceEvent>(nullptr);
  }

  CMsgClearDecalsForSkeletonInstanceEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClearDecalsForSkeletonInstanceEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from);
  void MergeFrom(const CMsgClearDecalsForSkeletonInstanceEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClearDecalsForSkeletonInstanceEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClearDecalsForSkeletonInstanceEvent";
  }
  protected:
  explicit CMsgClearDecalsForSkeletonInstanceEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagstoclearFieldNumber = 1,
    kEntityhandleindexFieldNumber = 2,
    kSkeletoninstancehashFieldNumber = 3,
  };
  // optional uint32 flagstoclear = 1;
  bool has_flagstoclear() const;
  private:
  bool _internal_has_flagstoclear() const;
  public:
  void clear_flagstoclear();
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear() const;
  void set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flagstoclear() const;
  void _internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 entityhandleindex = 2;
  bool has_entityhandleindex() const;
  private:
  bool _internal_has_entityhandleindex() const;
  public:
  void clear_entityhandleindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 entityhandleindex() const;
  void set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entityhandleindex() const;
  void _internal_set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 skeletoninstancehash = 3;
  bool has_skeletoninstancehash() const;
  private:
  bool _internal_has_skeletoninstancehash() const;
  public:
  void clear_skeletoninstancehash();
  ::PROTOBUF_NAMESPACE_ID::uint32 skeletoninstancehash() const;
  void set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skeletoninstancehash() const;
  void _internal_set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClearDecalsForSkeletonInstanceEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flagstoclear_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entityhandleindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skeletoninstancehash_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyGameEventList_key_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyGameEventList.key_t) */ {
 public:
  inline CMsgSource1LegacyGameEventList_key_t() : CMsgSource1LegacyGameEventList_key_t(nullptr) {}
  virtual ~CMsgSource1LegacyGameEventList_key_t();
  explicit constexpr CMsgSource1LegacyGameEventList_key_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyGameEventList_key_t(const CMsgSource1LegacyGameEventList_key_t& from);
  CMsgSource1LegacyGameEventList_key_t(CMsgSource1LegacyGameEventList_key_t&& from) noexcept
    : CMsgSource1LegacyGameEventList_key_t() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyGameEventList_key_t& operator=(const CMsgSource1LegacyGameEventList_key_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyGameEventList_key_t& operator=(CMsgSource1LegacyGameEventList_key_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyGameEventList_key_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyGameEventList_key_t* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyGameEventList_key_t*>(
               &_CMsgSource1LegacyGameEventList_key_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgSource1LegacyGameEventList_key_t& a, CMsgSource1LegacyGameEventList_key_t& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyGameEventList_key_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyGameEventList_key_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyGameEventList_key_t* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList_key_t>(nullptr);
  }

  CMsgSource1LegacyGameEventList_key_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList_key_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyGameEventList_key_t& from);
  void MergeFrom(const CMsgSource1LegacyGameEventList_key_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyGameEventList_key_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyGameEventList.key_t";
  }
  protected:
  explicit CMsgSource1LegacyGameEventList_key_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyGameEventList.key_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyGameEventList_descriptor_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyGameEventList.descriptor_t) */ {
 public:
  inline CMsgSource1LegacyGameEventList_descriptor_t() : CMsgSource1LegacyGameEventList_descriptor_t(nullptr) {}
  virtual ~CMsgSource1LegacyGameEventList_descriptor_t();
  explicit constexpr CMsgSource1LegacyGameEventList_descriptor_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyGameEventList_descriptor_t(const CMsgSource1LegacyGameEventList_descriptor_t& from);
  CMsgSource1LegacyGameEventList_descriptor_t(CMsgSource1LegacyGameEventList_descriptor_t&& from) noexcept
    : CMsgSource1LegacyGameEventList_descriptor_t() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyGameEventList_descriptor_t& operator=(const CMsgSource1LegacyGameEventList_descriptor_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyGameEventList_descriptor_t& operator=(CMsgSource1LegacyGameEventList_descriptor_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyGameEventList_descriptor_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyGameEventList_descriptor_t* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyGameEventList_descriptor_t*>(
               &_CMsgSource1LegacyGameEventList_descriptor_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgSource1LegacyGameEventList_descriptor_t& a, CMsgSource1LegacyGameEventList_descriptor_t& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyGameEventList_descriptor_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyGameEventList_descriptor_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyGameEventList_descriptor_t* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList_descriptor_t>(nullptr);
  }

  CMsgSource1LegacyGameEventList_descriptor_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList_descriptor_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from);
  void MergeFrom(const CMsgSource1LegacyGameEventList_descriptor_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyGameEventList_descriptor_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyGameEventList.descriptor_t";
  }
  protected:
  explicit CMsgSource1LegacyGameEventList_descriptor_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 3,
    kNameFieldNumber = 2,
    kEventidFieldNumber = 1,
  };
  // repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
  int keys_size() const;
  private:
  int _internal_keys_size() const;
  public:
  void clear_keys();
  ::CMsgSource1LegacyGameEventList_key_t* mutable_keys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_key_t >*
      mutable_keys();
  private:
  const ::CMsgSource1LegacyGameEventList_key_t& _internal_keys(int index) const;
  ::CMsgSource1LegacyGameEventList_key_t* _internal_add_keys();
  public:
  const ::CMsgSource1LegacyGameEventList_key_t& keys(int index) const;
  ::CMsgSource1LegacyGameEventList_key_t* add_keys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_key_t >&
      keys() const;

  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int32 eventid = 1;
  bool has_eventid() const;
  private:
  bool _internal_has_eventid() const;
  public:
  void clear_eventid();
  ::PROTOBUF_NAMESPACE_ID::int32 eventid() const;
  void set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eventid() const;
  void _internal_set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyGameEventList.descriptor_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_key_t > keys_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 eventid_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyGameEventList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyGameEventList) */ {
 public:
  inline CMsgSource1LegacyGameEventList() : CMsgSource1LegacyGameEventList(nullptr) {}
  virtual ~CMsgSource1LegacyGameEventList();
  explicit constexpr CMsgSource1LegacyGameEventList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyGameEventList(const CMsgSource1LegacyGameEventList& from);
  CMsgSource1LegacyGameEventList(CMsgSource1LegacyGameEventList&& from) noexcept
    : CMsgSource1LegacyGameEventList() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyGameEventList& operator=(const CMsgSource1LegacyGameEventList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyGameEventList& operator=(CMsgSource1LegacyGameEventList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyGameEventList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyGameEventList* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyGameEventList*>(
               &_CMsgSource1LegacyGameEventList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgSource1LegacyGameEventList& a, CMsgSource1LegacyGameEventList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyGameEventList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyGameEventList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyGameEventList* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList>(nullptr);
  }

  CMsgSource1LegacyGameEventList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEventList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyGameEventList& from);
  void MergeFrom(const CMsgSource1LegacyGameEventList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyGameEventList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyGameEventList";
  }
  protected:
  explicit CMsgSource1LegacyGameEventList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSource1LegacyGameEventList_key_t key_t;
  typedef CMsgSource1LegacyGameEventList_descriptor_t descriptor_t;

  // accessors -------------------------------------------------------

  enum : int {
    kDescriptorsFieldNumber = 1,
  };
  // repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
  int descriptors_size() const;
  private:
  int _internal_descriptors_size() const;
  public:
  void clear_descriptors();
  ::CMsgSource1LegacyGameEventList_descriptor_t* mutable_descriptors(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_descriptor_t >*
      mutable_descriptors();
  private:
  const ::CMsgSource1LegacyGameEventList_descriptor_t& _internal_descriptors(int index) const;
  ::CMsgSource1LegacyGameEventList_descriptor_t* _internal_add_descriptors();
  public:
  const ::CMsgSource1LegacyGameEventList_descriptor_t& descriptors(int index) const;
  ::CMsgSource1LegacyGameEventList_descriptor_t* add_descriptors();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_descriptor_t >&
      descriptors() const;

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyGameEventList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_descriptor_t > descriptors_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyListenEvents PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyListenEvents) */ {
 public:
  inline CMsgSource1LegacyListenEvents() : CMsgSource1LegacyListenEvents(nullptr) {}
  virtual ~CMsgSource1LegacyListenEvents();
  explicit constexpr CMsgSource1LegacyListenEvents(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyListenEvents(const CMsgSource1LegacyListenEvents& from);
  CMsgSource1LegacyListenEvents(CMsgSource1LegacyListenEvents&& from) noexcept
    : CMsgSource1LegacyListenEvents() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyListenEvents& operator=(const CMsgSource1LegacyListenEvents& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyListenEvents& operator=(CMsgSource1LegacyListenEvents&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyListenEvents& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyListenEvents* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyListenEvents*>(
               &_CMsgSource1LegacyListenEvents_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgSource1LegacyListenEvents& a, CMsgSource1LegacyListenEvents& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyListenEvents* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyListenEvents* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyListenEvents* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyListenEvents>(nullptr);
  }

  CMsgSource1LegacyListenEvents* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyListenEvents>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyListenEvents& from);
  void MergeFrom(const CMsgSource1LegacyListenEvents& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyListenEvents* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyListenEvents";
  }
  protected:
  explicit CMsgSource1LegacyListenEvents(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventarraybitsFieldNumber = 2,
    kPlayerslotFieldNumber = 1,
  };
  // repeated uint32 eventarraybits = 2;
  int eventarraybits_size() const;
  private:
  int _internal_eventarraybits_size() const;
  public:
  void clear_eventarraybits();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_eventarraybits(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_eventarraybits() const;
  void _internal_add_eventarraybits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_eventarraybits();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 eventarraybits(int index) const;
  void set_eventarraybits(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_eventarraybits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      eventarraybits() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_eventarraybits();

  // optional int32 playerslot = 1;
  bool has_playerslot() const;
  private:
  bool _internal_has_playerslot() const;
  public:
  void clear_playerslot();
  ::PROTOBUF_NAMESPACE_ID::int32 playerslot() const;
  void set_playerslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerslot() const;
  void _internal_set_playerslot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyListenEvents)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > eventarraybits_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerslot_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyGameEvent_key_t PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyGameEvent.key_t) */ {
 public:
  inline CMsgSource1LegacyGameEvent_key_t() : CMsgSource1LegacyGameEvent_key_t(nullptr) {}
  virtual ~CMsgSource1LegacyGameEvent_key_t();
  explicit constexpr CMsgSource1LegacyGameEvent_key_t(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyGameEvent_key_t(const CMsgSource1LegacyGameEvent_key_t& from);
  CMsgSource1LegacyGameEvent_key_t(CMsgSource1LegacyGameEvent_key_t&& from) noexcept
    : CMsgSource1LegacyGameEvent_key_t() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyGameEvent_key_t& operator=(const CMsgSource1LegacyGameEvent_key_t& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyGameEvent_key_t& operator=(CMsgSource1LegacyGameEvent_key_t&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyGameEvent_key_t& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyGameEvent_key_t* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyGameEvent_key_t*>(
               &_CMsgSource1LegacyGameEvent_key_t_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgSource1LegacyGameEvent_key_t& a, CMsgSource1LegacyGameEvent_key_t& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyGameEvent_key_t* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyGameEvent_key_t* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyGameEvent_key_t* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEvent_key_t>(nullptr);
  }

  CMsgSource1LegacyGameEvent_key_t* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEvent_key_t>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyGameEvent_key_t& from);
  void MergeFrom(const CMsgSource1LegacyGameEvent_key_t& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyGameEvent_key_t* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyGameEvent.key_t";
  }
  protected:
  explicit CMsgSource1LegacyGameEvent_key_t(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValStringFieldNumber = 2,
    kTypeFieldNumber = 1,
    kValFloatFieldNumber = 3,
    kValLongFieldNumber = 4,
    kValShortFieldNumber = 5,
    kValByteFieldNumber = 6,
    kValBoolFieldNumber = 7,
    kValUint64FieldNumber = 8,
  };
  // optional string val_string = 2;
  bool has_val_string() const;
  private:
  bool _internal_has_val_string() const;
  public:
  void clear_val_string();
  const std::string& val_string() const;
  void set_val_string(const std::string& value);
  void set_val_string(std::string&& value);
  void set_val_string(const char* value);
  void set_val_string(const char* value, size_t size);
  std::string* mutable_val_string();
  std::string* release_val_string();
  void set_allocated_val_string(std::string* val_string);
  private:
  const std::string& _internal_val_string() const;
  void _internal_set_val_string(const std::string& value);
  std::string* _internal_mutable_val_string();
  public:

  // optional int32 type = 1;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float val_float = 3;
  bool has_val_float() const;
  private:
  bool _internal_has_val_float() const;
  public:
  void clear_val_float();
  float val_float() const;
  void set_val_float(float value);
  private:
  float _internal_val_float() const;
  void _internal_set_val_float(float value);
  public:

  // optional int32 val_long = 4;
  bool has_val_long() const;
  private:
  bool _internal_has_val_long() const;
  public:
  void clear_val_long();
  ::PROTOBUF_NAMESPACE_ID::int32 val_long() const;
  void set_val_long(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_val_long() const;
  void _internal_set_val_long(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 val_short = 5;
  bool has_val_short() const;
  private:
  bool _internal_has_val_short() const;
  public:
  void clear_val_short();
  ::PROTOBUF_NAMESPACE_ID::int32 val_short() const;
  void set_val_short(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_val_short() const;
  void _internal_set_val_short(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 val_byte = 6;
  bool has_val_byte() const;
  private:
  bool _internal_has_val_byte() const;
  public:
  void clear_val_byte();
  ::PROTOBUF_NAMESPACE_ID::int32 val_byte() const;
  void set_val_byte(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_val_byte() const;
  void _internal_set_val_byte(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool val_bool = 7;
  bool has_val_bool() const;
  private:
  bool _internal_has_val_bool() const;
  public:
  void clear_val_bool();
  bool val_bool() const;
  void set_val_bool(bool value);
  private:
  bool _internal_val_bool() const;
  void _internal_set_val_bool(bool value);
  public:

  // optional uint64 val_uint64 = 8;
  bool has_val_uint64() const;
  private:
  bool _internal_has_val_uint64() const;
  public:
  void clear_val_uint64();
  ::PROTOBUF_NAMESPACE_ID::uint64 val_uint64() const;
  void set_val_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_val_uint64() const;
  void _internal_set_val_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyGameEvent.key_t)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr val_string_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  float val_float_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_long_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_short_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_byte_;
  bool val_bool_;
  ::PROTOBUF_NAMESPACE_ID::uint64 val_uint64_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSource1LegacyGameEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSource1LegacyGameEvent) */ {
 public:
  inline CMsgSource1LegacyGameEvent() : CMsgSource1LegacyGameEvent(nullptr) {}
  virtual ~CMsgSource1LegacyGameEvent();
  explicit constexpr CMsgSource1LegacyGameEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSource1LegacyGameEvent(const CMsgSource1LegacyGameEvent& from);
  CMsgSource1LegacyGameEvent(CMsgSource1LegacyGameEvent&& from) noexcept
    : CMsgSource1LegacyGameEvent() {
    *this = ::std::move(from);
  }

  inline CMsgSource1LegacyGameEvent& operator=(const CMsgSource1LegacyGameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSource1LegacyGameEvent& operator=(CMsgSource1LegacyGameEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSource1LegacyGameEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSource1LegacyGameEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgSource1LegacyGameEvent*>(
               &_CMsgSource1LegacyGameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgSource1LegacyGameEvent& a, CMsgSource1LegacyGameEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSource1LegacyGameEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSource1LegacyGameEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSource1LegacyGameEvent* New() const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEvent>(nullptr);
  }

  CMsgSource1LegacyGameEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSource1LegacyGameEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSource1LegacyGameEvent& from);
  void MergeFrom(const CMsgSource1LegacyGameEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSource1LegacyGameEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSource1LegacyGameEvent";
  }
  protected:
  explicit CMsgSource1LegacyGameEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgSource1LegacyGameEvent_key_t key_t;

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 3,
    kEventNameFieldNumber = 1,
    kEventidFieldNumber = 2,
  };
  // repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
  int keys_size() const;
  private:
  int _internal_keys_size() const;
  public:
  void clear_keys();
  ::CMsgSource1LegacyGameEvent_key_t* mutable_keys(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEvent_key_t >*
      mutable_keys();
  private:
  const ::CMsgSource1LegacyGameEvent_key_t& _internal_keys(int index) const;
  ::CMsgSource1LegacyGameEvent_key_t* _internal_add_keys();
  public:
  const ::CMsgSource1LegacyGameEvent_key_t& keys(int index) const;
  ::CMsgSource1LegacyGameEvent_key_t* add_keys();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEvent_key_t >&
      keys() const;

  // optional string event_name = 1;
  bool has_event_name() const;
  private:
  bool _internal_has_event_name() const;
  public:
  void clear_event_name();
  const std::string& event_name() const;
  void set_event_name(const std::string& value);
  void set_event_name(std::string&& value);
  void set_event_name(const char* value);
  void set_event_name(const char* value, size_t size);
  std::string* mutable_event_name();
  std::string* release_event_name();
  void set_allocated_event_name(std::string* event_name);
  private:
  const std::string& _internal_event_name() const;
  void _internal_set_event_name(const std::string& value);
  std::string* _internal_mutable_event_name();
  public:

  // optional int32 eventid = 2;
  bool has_eventid() const;
  private:
  bool _internal_has_eventid() const;
  public:
  void clear_eventid();
  ::PROTOBUF_NAMESPACE_ID::int32 eventid() const;
  void set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_eventid() const;
  void _internal_set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSource1LegacyGameEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEvent_key_t > keys_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr event_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 eventid_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSosStartSoundEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSosStartSoundEvent) */ {
 public:
  inline CMsgSosStartSoundEvent() : CMsgSosStartSoundEvent(nullptr) {}
  virtual ~CMsgSosStartSoundEvent();
  explicit constexpr CMsgSosStartSoundEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSosStartSoundEvent(const CMsgSosStartSoundEvent& from);
  CMsgSosStartSoundEvent(CMsgSosStartSoundEvent&& from) noexcept
    : CMsgSosStartSoundEvent() {
    *this = ::std::move(from);
  }

  inline CMsgSosStartSoundEvent& operator=(const CMsgSosStartSoundEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSosStartSoundEvent& operator=(CMsgSosStartSoundEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSosStartSoundEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSosStartSoundEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgSosStartSoundEvent*>(
               &_CMsgSosStartSoundEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgSosStartSoundEvent& a, CMsgSosStartSoundEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSosStartSoundEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSosStartSoundEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSosStartSoundEvent* New() const final {
    return CreateMaybeMessage<CMsgSosStartSoundEvent>(nullptr);
  }

  CMsgSosStartSoundEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSosStartSoundEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSosStartSoundEvent& from);
  void MergeFrom(const CMsgSosStartSoundEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSosStartSoundEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSosStartSoundEvent";
  }
  protected:
  explicit CMsgSosStartSoundEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackedParamsFieldNumber = 5,
    kSoundeventGuidFieldNumber = 1,
    kSoundeventHashFieldNumber = 2,
    kSourceEntityIndexFieldNumber = 3,
    kSeedFieldNumber = 4,
    kStartTimeFieldNumber = 6,
  };
  // optional bytes packed_params = 5;
  bool has_packed_params() const;
  private:
  bool _internal_has_packed_params() const;
  public:
  void clear_packed_params();
  const std::string& packed_params() const;
  void set_packed_params(const std::string& value);
  void set_packed_params(std::string&& value);
  void set_packed_params(const char* value);
  void set_packed_params(const void* value, size_t size);
  std::string* mutable_packed_params();
  std::string* release_packed_params();
  void set_allocated_packed_params(std::string* packed_params);
  private:
  const std::string& _internal_packed_params() const;
  void _internal_set_packed_params(const std::string& value);
  std::string* _internal_mutable_packed_params();
  public:

  // optional int32 soundevent_guid = 1;
  bool has_soundevent_guid() const;
  private:
  bool _internal_has_soundevent_guid() const;
  public:
  void clear_soundevent_guid();
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid() const;
  void set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_soundevent_guid() const;
  void _internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional fixed32 soundevent_hash = 2;
  bool has_soundevent_hash() const;
  private:
  bool _internal_has_soundevent_hash() const;
  public:
  void clear_soundevent_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 soundevent_hash() const;
  void set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soundevent_hash() const;
  void _internal_set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 source_entity_index = 3;
  bool has_source_entity_index() const;
  private:
  bool _internal_has_source_entity_index() const;
  public:
  void clear_source_entity_index();
  ::PROTOBUF_NAMESPACE_ID::int32 source_entity_index() const;
  void set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_entity_index() const;
  void _internal_set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 seed = 4;
  bool has_seed() const;
  private:
  bool _internal_has_seed() const;
  public:
  void clear_seed();
  ::PROTOBUF_NAMESPACE_ID::int32 seed() const;
  void set_seed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_seed() const;
  void _internal_set_seed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float start_time = 6;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  float start_time() const;
  void set_start_time(float value);
  private:
  float _internal_start_time() const;
  void _internal_set_start_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSosStartSoundEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr packed_params_;
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soundevent_hash_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_entity_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 seed_;
  float start_time_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSosStopSoundEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSosStopSoundEvent) */ {
 public:
  inline CMsgSosStopSoundEvent() : CMsgSosStopSoundEvent(nullptr) {}
  virtual ~CMsgSosStopSoundEvent();
  explicit constexpr CMsgSosStopSoundEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSosStopSoundEvent(const CMsgSosStopSoundEvent& from);
  CMsgSosStopSoundEvent(CMsgSosStopSoundEvent&& from) noexcept
    : CMsgSosStopSoundEvent() {
    *this = ::std::move(from);
  }

  inline CMsgSosStopSoundEvent& operator=(const CMsgSosStopSoundEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSosStopSoundEvent& operator=(CMsgSosStopSoundEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSosStopSoundEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSosStopSoundEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgSosStopSoundEvent*>(
               &_CMsgSosStopSoundEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgSosStopSoundEvent& a, CMsgSosStopSoundEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSosStopSoundEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSosStopSoundEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSosStopSoundEvent* New() const final {
    return CreateMaybeMessage<CMsgSosStopSoundEvent>(nullptr);
  }

  CMsgSosStopSoundEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSosStopSoundEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSosStopSoundEvent& from);
  void MergeFrom(const CMsgSosStopSoundEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSosStopSoundEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSosStopSoundEvent";
  }
  protected:
  explicit CMsgSosStopSoundEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSoundeventGuidFieldNumber = 1,
  };
  // optional int32 soundevent_guid = 1;
  bool has_soundevent_guid() const;
  private:
  bool _internal_has_soundevent_guid() const;
  public:
  void clear_soundevent_guid();
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid() const;
  void set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_soundevent_guid() const;
  void _internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSosStopSoundEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSosStopSoundEventHash PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSosStopSoundEventHash) */ {
 public:
  inline CMsgSosStopSoundEventHash() : CMsgSosStopSoundEventHash(nullptr) {}
  virtual ~CMsgSosStopSoundEventHash();
  explicit constexpr CMsgSosStopSoundEventHash(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSosStopSoundEventHash(const CMsgSosStopSoundEventHash& from);
  CMsgSosStopSoundEventHash(CMsgSosStopSoundEventHash&& from) noexcept
    : CMsgSosStopSoundEventHash() {
    *this = ::std::move(from);
  }

  inline CMsgSosStopSoundEventHash& operator=(const CMsgSosStopSoundEventHash& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSosStopSoundEventHash& operator=(CMsgSosStopSoundEventHash&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSosStopSoundEventHash& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSosStopSoundEventHash* internal_default_instance() {
    return reinterpret_cast<const CMsgSosStopSoundEventHash*>(
               &_CMsgSosStopSoundEventHash_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgSosStopSoundEventHash& a, CMsgSosStopSoundEventHash& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSosStopSoundEventHash* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSosStopSoundEventHash* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSosStopSoundEventHash* New() const final {
    return CreateMaybeMessage<CMsgSosStopSoundEventHash>(nullptr);
  }

  CMsgSosStopSoundEventHash* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSosStopSoundEventHash>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSosStopSoundEventHash& from);
  void MergeFrom(const CMsgSosStopSoundEventHash& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSosStopSoundEventHash* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSosStopSoundEventHash";
  }
  protected:
  explicit CMsgSosStopSoundEventHash(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSoundeventHashFieldNumber = 1,
    kSourceEntityIndexFieldNumber = 2,
  };
  // optional fixed32 soundevent_hash = 1;
  bool has_soundevent_hash() const;
  private:
  bool _internal_has_soundevent_hash() const;
  public:
  void clear_soundevent_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 soundevent_hash() const;
  void set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_soundevent_hash() const;
  void _internal_set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 source_entity_index = 2;
  bool has_source_entity_index() const;
  private:
  bool _internal_has_source_entity_index() const;
  public:
  void clear_source_entity_index();
  ::PROTOBUF_NAMESPACE_ID::int32 source_entity_index() const;
  void set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_entity_index() const;
  void _internal_set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSosStopSoundEventHash)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 soundevent_hash_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_entity_index_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSosSetSoundEventParams PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSosSetSoundEventParams) */ {
 public:
  inline CMsgSosSetSoundEventParams() : CMsgSosSetSoundEventParams(nullptr) {}
  virtual ~CMsgSosSetSoundEventParams();
  explicit constexpr CMsgSosSetSoundEventParams(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSosSetSoundEventParams(const CMsgSosSetSoundEventParams& from);
  CMsgSosSetSoundEventParams(CMsgSosSetSoundEventParams&& from) noexcept
    : CMsgSosSetSoundEventParams() {
    *this = ::std::move(from);
  }

  inline CMsgSosSetSoundEventParams& operator=(const CMsgSosSetSoundEventParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSosSetSoundEventParams& operator=(CMsgSosSetSoundEventParams&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSosSetSoundEventParams& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSosSetSoundEventParams* internal_default_instance() {
    return reinterpret_cast<const CMsgSosSetSoundEventParams*>(
               &_CMsgSosSetSoundEventParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgSosSetSoundEventParams& a, CMsgSosSetSoundEventParams& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSosSetSoundEventParams* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSosSetSoundEventParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSosSetSoundEventParams* New() const final {
    return CreateMaybeMessage<CMsgSosSetSoundEventParams>(nullptr);
  }

  CMsgSosSetSoundEventParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSosSetSoundEventParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSosSetSoundEventParams& from);
  void MergeFrom(const CMsgSosSetSoundEventParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSosSetSoundEventParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSosSetSoundEventParams";
  }
  protected:
  explicit CMsgSosSetSoundEventParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackedParamsFieldNumber = 5,
    kSoundeventGuidFieldNumber = 1,
  };
  // optional bytes packed_params = 5;
  bool has_packed_params() const;
  private:
  bool _internal_has_packed_params() const;
  public:
  void clear_packed_params();
  const std::string& packed_params() const;
  void set_packed_params(const std::string& value);
  void set_packed_params(std::string&& value);
  void set_packed_params(const char* value);
  void set_packed_params(const void* value, size_t size);
  std::string* mutable_packed_params();
  std::string* release_packed_params();
  void set_allocated_packed_params(std::string* packed_params);
  private:
  const std::string& _internal_packed_params() const;
  void _internal_set_packed_params(const std::string& value);
  std::string* _internal_mutable_packed_params();
  public:

  // optional int32 soundevent_guid = 1;
  bool has_soundevent_guid() const;
  private:
  bool _internal_has_soundevent_guid() const;
  public:
  void clear_soundevent_guid();
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid() const;
  void set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_soundevent_guid() const;
  void _internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSosSetSoundEventParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr packed_params_;
  ::PROTOBUF_NAMESPACE_ID::int32 soundevent_guid_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// -------------------------------------------------------------------

class CMsgSosSetLibraryStackFields PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgSosSetLibraryStackFields) */ {
 public:
  inline CMsgSosSetLibraryStackFields() : CMsgSosSetLibraryStackFields(nullptr) {}
  virtual ~CMsgSosSetLibraryStackFields();
  explicit constexpr CMsgSosSetLibraryStackFields(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgSosSetLibraryStackFields(const CMsgSosSetLibraryStackFields& from);
  CMsgSosSetLibraryStackFields(CMsgSosSetLibraryStackFields&& from) noexcept
    : CMsgSosSetLibraryStackFields() {
    *this = ::std::move(from);
  }

  inline CMsgSosSetLibraryStackFields& operator=(const CMsgSosSetLibraryStackFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgSosSetLibraryStackFields& operator=(CMsgSosSetLibraryStackFields&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgSosSetLibraryStackFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgSosSetLibraryStackFields* internal_default_instance() {
    return reinterpret_cast<const CMsgSosSetLibraryStackFields*>(
               &_CMsgSosSetLibraryStackFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgSosSetLibraryStackFields& a, CMsgSosSetLibraryStackFields& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgSosSetLibraryStackFields* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgSosSetLibraryStackFields* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgSosSetLibraryStackFields* New() const final {
    return CreateMaybeMessage<CMsgSosSetLibraryStackFields>(nullptr);
  }

  CMsgSosSetLibraryStackFields* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgSosSetLibraryStackFields>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgSosSetLibraryStackFields& from);
  void MergeFrom(const CMsgSosSetLibraryStackFields& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgSosSetLibraryStackFields* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgSosSetLibraryStackFields";
  }
  protected:
  explicit CMsgSosSetLibraryStackFields(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_gameevents_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPackedFieldsFieldNumber = 5,
    kStackHashFieldNumber = 1,
  };
  // optional bytes packed_fields = 5;
  bool has_packed_fields() const;
  private:
  bool _internal_has_packed_fields() const;
  public:
  void clear_packed_fields();
  const std::string& packed_fields() const;
  void set_packed_fields(const std::string& value);
  void set_packed_fields(std::string&& value);
  void set_packed_fields(const char* value);
  void set_packed_fields(const void* value, size_t size);
  std::string* mutable_packed_fields();
  std::string* release_packed_fields();
  void set_allocated_packed_fields(std::string* packed_fields);
  private:
  const std::string& _internal_packed_fields() const;
  void _internal_set_packed_fields(const std::string& value);
  std::string* _internal_mutable_packed_fields();
  public:

  // optional fixed32 stack_hash = 1;
  bool has_stack_hash() const;
  private:
  bool _internal_has_stack_hash() const;
  public:
  void clear_stack_hash();
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_hash() const;
  void set_stack_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stack_hash() const;
  void _internal_set_stack_hash(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgSosSetLibraryStackFields)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr packed_fields_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_hash_;
  friend struct ::TableStruct_gameevents_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgVDebugGameSessionIDEvent

// optional int32 clientid = 1;
inline bool CMsgVDebugGameSessionIDEvent::_internal_has_clientid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgVDebugGameSessionIDEvent::has_clientid() const {
  return _internal_has_clientid();
}
inline void CMsgVDebugGameSessionIDEvent::clear_clientid() {
  clientid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgVDebugGameSessionIDEvent::_internal_clientid() const {
  return clientid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgVDebugGameSessionIDEvent::clientid() const {
  // @@protoc_insertion_point(field_get:CMsgVDebugGameSessionIDEvent.clientid)
  return _internal_clientid();
}
inline void CMsgVDebugGameSessionIDEvent::_internal_set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  clientid_ = value;
}
inline void CMsgVDebugGameSessionIDEvent::set_clientid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_clientid(value);
  // @@protoc_insertion_point(field_set:CMsgVDebugGameSessionIDEvent.clientid)
}

// optional string gamesessionid = 2;
inline bool CMsgVDebugGameSessionIDEvent::_internal_has_gamesessionid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgVDebugGameSessionIDEvent::has_gamesessionid() const {
  return _internal_has_gamesessionid();
}
inline void CMsgVDebugGameSessionIDEvent::clear_gamesessionid() {
  gamesessionid_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgVDebugGameSessionIDEvent::gamesessionid() const {
  // @@protoc_insertion_point(field_get:CMsgVDebugGameSessionIDEvent.gamesessionid)
  return _internal_gamesessionid();
}
inline void CMsgVDebugGameSessionIDEvent::set_gamesessionid(const std::string& value) {
  _internal_set_gamesessionid(value);
  // @@protoc_insertion_point(field_set:CMsgVDebugGameSessionIDEvent.gamesessionid)
}
inline std::string* CMsgVDebugGameSessionIDEvent::mutable_gamesessionid() {
  // @@protoc_insertion_point(field_mutable:CMsgVDebugGameSessionIDEvent.gamesessionid)
  return _internal_mutable_gamesessionid();
}
inline const std::string& CMsgVDebugGameSessionIDEvent::_internal_gamesessionid() const {
  return gamesessionid_.Get();
}
inline void CMsgVDebugGameSessionIDEvent::_internal_set_gamesessionid(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  gamesessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgVDebugGameSessionIDEvent::set_gamesessionid(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  gamesessionid_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgVDebugGameSessionIDEvent.gamesessionid)
}
inline void CMsgVDebugGameSessionIDEvent::set_gamesessionid(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  gamesessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgVDebugGameSessionIDEvent.gamesessionid)
}
inline void CMsgVDebugGameSessionIDEvent::set_gamesessionid(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  gamesessionid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgVDebugGameSessionIDEvent.gamesessionid)
}
inline std::string* CMsgVDebugGameSessionIDEvent::_internal_mutable_gamesessionid() {
  _has_bits_[0] |= 0x00000001u;
  return gamesessionid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgVDebugGameSessionIDEvent::release_gamesessionid() {
  // @@protoc_insertion_point(field_release:CMsgVDebugGameSessionIDEvent.gamesessionid)
  if (!_internal_has_gamesessionid()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return gamesessionid_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgVDebugGameSessionIDEvent::set_allocated_gamesessionid(std::string* gamesessionid) {
  if (gamesessionid != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  gamesessionid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), gamesessionid,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgVDebugGameSessionIDEvent.gamesessionid)
}

// -------------------------------------------------------------------

// CMsgPlaceDecalEvent

// optional .CMsgVector position = 1;
inline bool CMsgPlaceDecalEvent::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || position_ != nullptr);
  return value;
}
inline bool CMsgPlaceDecalEvent::has_position() const {
  return _internal_has_position();
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::_internal_position() const {
  const ::CMsgVector* p = position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::position() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.position)
  return _internal_position();
}
inline void CMsgPlaceDecalEvent::unsafe_arena_set_allocated_position(
    ::CMsgVector* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPlaceDecalEvent.position)
}
inline ::CMsgVector* CMsgPlaceDecalEvent::release_position() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:CMsgPlaceDecalEvent.position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::_internal_mutable_position() {
  _has_bits_[0] |= 0x00000001u;
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::mutable_position() {
  // @@protoc_insertion_point(field_mutable:CMsgPlaceDecalEvent.position)
  return _internal_mutable_position();
}
inline void CMsgPlaceDecalEvent::set_allocated_position(::CMsgVector* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position)->GetArena();
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:CMsgPlaceDecalEvent.position)
}

// optional .CMsgVector normal = 2;
inline bool CMsgPlaceDecalEvent::_internal_has_normal() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || normal_ != nullptr);
  return value;
}
inline bool CMsgPlaceDecalEvent::has_normal() const {
  return _internal_has_normal();
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::_internal_normal() const {
  const ::CMsgVector* p = normal_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::normal() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.normal)
  return _internal_normal();
}
inline void CMsgPlaceDecalEvent::unsafe_arena_set_allocated_normal(
    ::CMsgVector* normal) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(normal_);
  }
  normal_ = normal;
  if (normal) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPlaceDecalEvent.normal)
}
inline ::CMsgVector* CMsgPlaceDecalEvent::release_normal() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = normal_;
  normal_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::unsafe_arena_release_normal() {
  // @@protoc_insertion_point(field_release:CMsgPlaceDecalEvent.normal)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = normal_;
  normal_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::_internal_mutable_normal() {
  _has_bits_[0] |= 0x00000002u;
  if (normal_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    normal_ = p;
  }
  return normal_;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::mutable_normal() {
  // @@protoc_insertion_point(field_mutable:CMsgPlaceDecalEvent.normal)
  return _internal_mutable_normal();
}
inline void CMsgPlaceDecalEvent::set_allocated_normal(::CMsgVector* normal) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(normal_);
  }
  if (normal) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(normal)->GetArena();
    if (message_arena != submessage_arena) {
      normal = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, normal, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  normal_ = normal;
  // @@protoc_insertion_point(field_set_allocated:CMsgPlaceDecalEvent.normal)
}

// optional .CMsgVector saxis = 3;
inline bool CMsgPlaceDecalEvent::_internal_has_saxis() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || saxis_ != nullptr);
  return value;
}
inline bool CMsgPlaceDecalEvent::has_saxis() const {
  return _internal_has_saxis();
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::_internal_saxis() const {
  const ::CMsgVector* p = saxis_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CMsgPlaceDecalEvent::saxis() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.saxis)
  return _internal_saxis();
}
inline void CMsgPlaceDecalEvent::unsafe_arena_set_allocated_saxis(
    ::CMsgVector* saxis) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(saxis_);
  }
  saxis_ = saxis;
  if (saxis) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgPlaceDecalEvent.saxis)
}
inline ::CMsgVector* CMsgPlaceDecalEvent::release_saxis() {
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* temp = saxis_;
  saxis_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::unsafe_arena_release_saxis() {
  // @@protoc_insertion_point(field_release:CMsgPlaceDecalEvent.saxis)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgVector* temp = saxis_;
  saxis_ = nullptr;
  return temp;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::_internal_mutable_saxis() {
  _has_bits_[0] |= 0x00000004u;
  if (saxis_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    saxis_ = p;
  }
  return saxis_;
}
inline ::CMsgVector* CMsgPlaceDecalEvent::mutable_saxis() {
  // @@protoc_insertion_point(field_mutable:CMsgPlaceDecalEvent.saxis)
  return _internal_mutable_saxis();
}
inline void CMsgPlaceDecalEvent::set_allocated_saxis(::CMsgVector* saxis) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(saxis_);
  }
  if (saxis) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(saxis)->GetArena();
    if (message_arena != submessage_arena) {
      saxis = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, saxis, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  saxis_ = saxis;
  // @@protoc_insertion_point(field_set_allocated:CMsgPlaceDecalEvent.saxis)
}

// optional uint32 decalmaterialindex = 4;
inline bool CMsgPlaceDecalEvent::_internal_has_decalmaterialindex() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_decalmaterialindex() const {
  return _internal_has_decalmaterialindex();
}
inline void CMsgPlaceDecalEvent::clear_decalmaterialindex() {
  decalmaterialindex_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::_internal_decalmaterialindex() const {
  return decalmaterialindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::decalmaterialindex() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.decalmaterialindex)
  return _internal_decalmaterialindex();
}
inline void CMsgPlaceDecalEvent::_internal_set_decalmaterialindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  decalmaterialindex_ = value;
}
inline void CMsgPlaceDecalEvent::set_decalmaterialindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_decalmaterialindex(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.decalmaterialindex)
}

// optional uint32 flags = 5;
inline bool CMsgPlaceDecalEvent::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_flags() const {
  return _internal_has_flags();
}
inline void CMsgPlaceDecalEvent::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::flags() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.flags)
  return _internal_flags();
}
inline void CMsgPlaceDecalEvent::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  flags_ = value;
}
inline void CMsgPlaceDecalEvent::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.flags)
}

// optional fixed32 color = 6;
inline bool CMsgPlaceDecalEvent::_internal_has_color() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_color() const {
  return _internal_has_color();
}
inline void CMsgPlaceDecalEvent::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::_internal_color() const {
  return color_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::color() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.color)
  return _internal_color();
}
inline void CMsgPlaceDecalEvent::_internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  color_ = value;
}
inline void CMsgPlaceDecalEvent::set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.color)
}

// optional float width = 7;
inline bool CMsgPlaceDecalEvent::_internal_has_width() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_width() const {
  return _internal_has_width();
}
inline void CMsgPlaceDecalEvent::clear_width() {
  width_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CMsgPlaceDecalEvent::_internal_width() const {
  return width_;
}
inline float CMsgPlaceDecalEvent::width() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.width)
  return _internal_width();
}
inline void CMsgPlaceDecalEvent::_internal_set_width(float value) {
  _has_bits_[0] |= 0x00000040u;
  width_ = value;
}
inline void CMsgPlaceDecalEvent::set_width(float value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.width)
}

// optional float height = 8;
inline bool CMsgPlaceDecalEvent::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_height() const {
  return _internal_has_height();
}
inline void CMsgPlaceDecalEvent::clear_height() {
  height_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CMsgPlaceDecalEvent::_internal_height() const {
  return height_;
}
inline float CMsgPlaceDecalEvent::height() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.height)
  return _internal_height();
}
inline void CMsgPlaceDecalEvent::_internal_set_height(float value) {
  _has_bits_[0] |= 0x00000080u;
  height_ = value;
}
inline void CMsgPlaceDecalEvent::set_height(float value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.height)
}

// optional float depth = 9;
inline bool CMsgPlaceDecalEvent::_internal_has_depth() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_depth() const {
  return _internal_has_depth();
}
inline void CMsgPlaceDecalEvent::clear_depth() {
  depth_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CMsgPlaceDecalEvent::_internal_depth() const {
  return depth_;
}
inline float CMsgPlaceDecalEvent::depth() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.depth)
  return _internal_depth();
}
inline void CMsgPlaceDecalEvent::_internal_set_depth(float value) {
  _has_bits_[0] |= 0x00000100u;
  depth_ = value;
}
inline void CMsgPlaceDecalEvent::set_depth(float value) {
  _internal_set_depth(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.depth)
}

// optional uint32 entityhandleindex = 10;
inline bool CMsgPlaceDecalEvent::_internal_has_entityhandleindex() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_entityhandleindex() const {
  return _internal_has_entityhandleindex();
}
inline void CMsgPlaceDecalEvent::clear_entityhandleindex() {
  entityhandleindex_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::_internal_entityhandleindex() const {
  return entityhandleindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::entityhandleindex() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.entityhandleindex)
  return _internal_entityhandleindex();
}
inline void CMsgPlaceDecalEvent::_internal_set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  entityhandleindex_ = value;
}
inline void CMsgPlaceDecalEvent::set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entityhandleindex(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.entityhandleindex)
}

// optional fixed32 skeletoninstancehash = 11;
inline bool CMsgPlaceDecalEvent::_internal_has_skeletoninstancehash() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_skeletoninstancehash() const {
  return _internal_has_skeletoninstancehash();
}
inline void CMsgPlaceDecalEvent::clear_skeletoninstancehash() {
  skeletoninstancehash_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::_internal_skeletoninstancehash() const {
  return skeletoninstancehash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlaceDecalEvent::skeletoninstancehash() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.skeletoninstancehash)
  return _internal_skeletoninstancehash();
}
inline void CMsgPlaceDecalEvent::_internal_set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  skeletoninstancehash_ = value;
}
inline void CMsgPlaceDecalEvent::set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skeletoninstancehash(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.skeletoninstancehash)
}

// optional int32 boneindex = 12;
inline bool CMsgPlaceDecalEvent::_internal_has_boneindex() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_boneindex() const {
  return _internal_has_boneindex();
}
inline void CMsgPlaceDecalEvent::clear_boneindex() {
  boneindex_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgPlaceDecalEvent::_internal_boneindex() const {
  return boneindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgPlaceDecalEvent::boneindex() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.boneindex)
  return _internal_boneindex();
}
inline void CMsgPlaceDecalEvent::_internal_set_boneindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  boneindex_ = value;
}
inline void CMsgPlaceDecalEvent::set_boneindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_boneindex(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.boneindex)
}

// optional bool translucenthit = 13;
inline bool CMsgPlaceDecalEvent::_internal_has_translucenthit() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_translucenthit() const {
  return _internal_has_translucenthit();
}
inline void CMsgPlaceDecalEvent::clear_translucenthit() {
  translucenthit_ = false;
  _has_bits_[0] &= ~0x00001000u;
}
inline bool CMsgPlaceDecalEvent::_internal_translucenthit() const {
  return translucenthit_;
}
inline bool CMsgPlaceDecalEvent::translucenthit() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.translucenthit)
  return _internal_translucenthit();
}
inline void CMsgPlaceDecalEvent::_internal_set_translucenthit(bool value) {
  _has_bits_[0] |= 0x00001000u;
  translucenthit_ = value;
}
inline void CMsgPlaceDecalEvent::set_translucenthit(bool value) {
  _internal_set_translucenthit(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.translucenthit)
}

// optional bool is_adjacent = 14;
inline bool CMsgPlaceDecalEvent::_internal_has_is_adjacent() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool CMsgPlaceDecalEvent::has_is_adjacent() const {
  return _internal_has_is_adjacent();
}
inline void CMsgPlaceDecalEvent::clear_is_adjacent() {
  is_adjacent_ = false;
  _has_bits_[0] &= ~0x00002000u;
}
inline bool CMsgPlaceDecalEvent::_internal_is_adjacent() const {
  return is_adjacent_;
}
inline bool CMsgPlaceDecalEvent::is_adjacent() const {
  // @@protoc_insertion_point(field_get:CMsgPlaceDecalEvent.is_adjacent)
  return _internal_is_adjacent();
}
inline void CMsgPlaceDecalEvent::_internal_set_is_adjacent(bool value) {
  _has_bits_[0] |= 0x00002000u;
  is_adjacent_ = value;
}
inline void CMsgPlaceDecalEvent::set_is_adjacent(bool value) {
  _internal_set_is_adjacent(value);
  // @@protoc_insertion_point(field_set:CMsgPlaceDecalEvent.is_adjacent)
}

// -------------------------------------------------------------------

// CMsgClearWorldDecalsEvent

// optional uint32 flagstoclear = 1;
inline bool CMsgClearWorldDecalsEvent::_internal_has_flagstoclear() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClearWorldDecalsEvent::has_flagstoclear() const {
  return _internal_has_flagstoclear();
}
inline void CMsgClearWorldDecalsEvent::clear_flagstoclear() {
  flagstoclear_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearWorldDecalsEvent::_internal_flagstoclear() const {
  return flagstoclear_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearWorldDecalsEvent::flagstoclear() const {
  // @@protoc_insertion_point(field_get:CMsgClearWorldDecalsEvent.flagstoclear)
  return _internal_flagstoclear();
}
inline void CMsgClearWorldDecalsEvent::_internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  flagstoclear_ = value;
}
inline void CMsgClearWorldDecalsEvent::set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flagstoclear(value);
  // @@protoc_insertion_point(field_set:CMsgClearWorldDecalsEvent.flagstoclear)
}

// -------------------------------------------------------------------

// CMsgClearEntityDecalsEvent

// optional uint32 flagstoclear = 1;
inline bool CMsgClearEntityDecalsEvent::_internal_has_flagstoclear() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClearEntityDecalsEvent::has_flagstoclear() const {
  return _internal_has_flagstoclear();
}
inline void CMsgClearEntityDecalsEvent::clear_flagstoclear() {
  flagstoclear_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearEntityDecalsEvent::_internal_flagstoclear() const {
  return flagstoclear_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearEntityDecalsEvent::flagstoclear() const {
  // @@protoc_insertion_point(field_get:CMsgClearEntityDecalsEvent.flagstoclear)
  return _internal_flagstoclear();
}
inline void CMsgClearEntityDecalsEvent::_internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  flagstoclear_ = value;
}
inline void CMsgClearEntityDecalsEvent::set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flagstoclear(value);
  // @@protoc_insertion_point(field_set:CMsgClearEntityDecalsEvent.flagstoclear)
}

// -------------------------------------------------------------------

// CMsgClearDecalsForSkeletonInstanceEvent

// optional uint32 flagstoclear = 1;
inline bool CMsgClearDecalsForSkeletonInstanceEvent::_internal_has_flagstoclear() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClearDecalsForSkeletonInstanceEvent::has_flagstoclear() const {
  return _internal_has_flagstoclear();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::clear_flagstoclear() {
  flagstoclear_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::_internal_flagstoclear() const {
  return flagstoclear_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::flagstoclear() const {
  // @@protoc_insertion_point(field_get:CMsgClearDecalsForSkeletonInstanceEvent.flagstoclear)
  return _internal_flagstoclear();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::_internal_set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  flagstoclear_ = value;
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::set_flagstoclear(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flagstoclear(value);
  // @@protoc_insertion_point(field_set:CMsgClearDecalsForSkeletonInstanceEvent.flagstoclear)
}

// optional uint32 entityhandleindex = 2;
inline bool CMsgClearDecalsForSkeletonInstanceEvent::_internal_has_entityhandleindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClearDecalsForSkeletonInstanceEvent::has_entityhandleindex() const {
  return _internal_has_entityhandleindex();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::clear_entityhandleindex() {
  entityhandleindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::_internal_entityhandleindex() const {
  return entityhandleindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::entityhandleindex() const {
  // @@protoc_insertion_point(field_get:CMsgClearDecalsForSkeletonInstanceEvent.entityhandleindex)
  return _internal_entityhandleindex();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::_internal_set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  entityhandleindex_ = value;
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::set_entityhandleindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entityhandleindex(value);
  // @@protoc_insertion_point(field_set:CMsgClearDecalsForSkeletonInstanceEvent.entityhandleindex)
}

// optional uint32 skeletoninstancehash = 3;
inline bool CMsgClearDecalsForSkeletonInstanceEvent::_internal_has_skeletoninstancehash() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClearDecalsForSkeletonInstanceEvent::has_skeletoninstancehash() const {
  return _internal_has_skeletoninstancehash();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::clear_skeletoninstancehash() {
  skeletoninstancehash_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::_internal_skeletoninstancehash() const {
  return skeletoninstancehash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClearDecalsForSkeletonInstanceEvent::skeletoninstancehash() const {
  // @@protoc_insertion_point(field_get:CMsgClearDecalsForSkeletonInstanceEvent.skeletoninstancehash)
  return _internal_skeletoninstancehash();
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::_internal_set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  skeletoninstancehash_ = value;
}
inline void CMsgClearDecalsForSkeletonInstanceEvent::set_skeletoninstancehash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skeletoninstancehash(value);
  // @@protoc_insertion_point(field_set:CMsgClearDecalsForSkeletonInstanceEvent.skeletoninstancehash)
}

// -------------------------------------------------------------------

// CMsgSource1LegacyGameEventList_key_t

// optional int32 type = 1;
inline bool CMsgSource1LegacyGameEventList_key_t::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEventList_key_t::has_type() const {
  return _internal_has_type();
}
inline void CMsgSource1LegacyGameEventList_key_t::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEventList_key_t::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEventList_key_t::type() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.key_t.type)
  return _internal_type();
}
inline void CMsgSource1LegacyGameEventList_key_t::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void CMsgSource1LegacyGameEventList_key_t::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEventList.key_t.type)
}

// optional string name = 2;
inline bool CMsgSource1LegacyGameEventList_key_t::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEventList_key_t::has_name() const {
  return _internal_has_name();
}
inline void CMsgSource1LegacyGameEventList_key_t::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSource1LegacyGameEventList_key_t::name() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.key_t.name)
  return _internal_name();
}
inline void CMsgSource1LegacyGameEventList_key_t::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEventList.key_t.name)
}
inline std::string* CMsgSource1LegacyGameEventList_key_t::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEventList.key_t.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgSource1LegacyGameEventList_key_t::_internal_name() const {
  return name_.Get();
}
inline void CMsgSource1LegacyGameEventList_key_t::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSource1LegacyGameEventList_key_t::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSource1LegacyGameEventList.key_t.name)
}
inline void CMsgSource1LegacyGameEventList_key_t::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSource1LegacyGameEventList.key_t.name)
}
inline void CMsgSource1LegacyGameEventList_key_t::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSource1LegacyGameEventList.key_t.name)
}
inline std::string* CMsgSource1LegacyGameEventList_key_t::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSource1LegacyGameEventList_key_t::release_name() {
  // @@protoc_insertion_point(field_release:CMsgSource1LegacyGameEventList.key_t.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSource1LegacyGameEventList_key_t::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSource1LegacyGameEventList.key_t.name)
}

// -------------------------------------------------------------------

// CMsgSource1LegacyGameEventList_descriptor_t

// optional int32 eventid = 1;
inline bool CMsgSource1LegacyGameEventList_descriptor_t::_internal_has_eventid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEventList_descriptor_t::has_eventid() const {
  return _internal_has_eventid();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::clear_eventid() {
  eventid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEventList_descriptor_t::_internal_eventid() const {
  return eventid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEventList_descriptor_t::eventid() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.descriptor_t.eventid)
  return _internal_eventid();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::_internal_set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eventid_ = value;
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eventid(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEventList.descriptor_t.eventid)
}

// optional string name = 2;
inline bool CMsgSource1LegacyGameEventList_descriptor_t::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEventList_descriptor_t::has_name() const {
  return _internal_has_name();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSource1LegacyGameEventList_descriptor_t::name() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.descriptor_t.name)
  return _internal_name();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEventList.descriptor_t.name)
}
inline std::string* CMsgSource1LegacyGameEventList_descriptor_t::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEventList.descriptor_t.name)
  return _internal_mutable_name();
}
inline const std::string& CMsgSource1LegacyGameEventList_descriptor_t::_internal_name() const {
  return name_.Get();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSource1LegacyGameEventList.descriptor_t.name)
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSource1LegacyGameEventList.descriptor_t.name)
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSource1LegacyGameEventList.descriptor_t.name)
}
inline std::string* CMsgSource1LegacyGameEventList_descriptor_t::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSource1LegacyGameEventList_descriptor_t::release_name() {
  // @@protoc_insertion_point(field_release:CMsgSource1LegacyGameEventList.descriptor_t.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSource1LegacyGameEventList.descriptor_t.name)
}

// repeated .CMsgSource1LegacyGameEventList.key_t keys = 3;
inline int CMsgSource1LegacyGameEventList_descriptor_t::_internal_keys_size() const {
  return keys_.size();
}
inline int CMsgSource1LegacyGameEventList_descriptor_t::keys_size() const {
  return _internal_keys_size();
}
inline void CMsgSource1LegacyGameEventList_descriptor_t::clear_keys() {
  keys_.Clear();
}
inline ::CMsgSource1LegacyGameEventList_key_t* CMsgSource1LegacyGameEventList_descriptor_t::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEventList.descriptor_t.keys)
  return keys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_key_t >*
CMsgSource1LegacyGameEventList_descriptor_t::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSource1LegacyGameEventList.descriptor_t.keys)
  return &keys_;
}
inline const ::CMsgSource1LegacyGameEventList_key_t& CMsgSource1LegacyGameEventList_descriptor_t::_internal_keys(int index) const {
  return keys_.Get(index);
}
inline const ::CMsgSource1LegacyGameEventList_key_t& CMsgSource1LegacyGameEventList_descriptor_t::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.descriptor_t.keys)
  return _internal_keys(index);
}
inline ::CMsgSource1LegacyGameEventList_key_t* CMsgSource1LegacyGameEventList_descriptor_t::_internal_add_keys() {
  return keys_.Add();
}
inline ::CMsgSource1LegacyGameEventList_key_t* CMsgSource1LegacyGameEventList_descriptor_t::add_keys() {
  // @@protoc_insertion_point(field_add:CMsgSource1LegacyGameEventList.descriptor_t.keys)
  return _internal_add_keys();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_key_t >&
CMsgSource1LegacyGameEventList_descriptor_t::keys() const {
  // @@protoc_insertion_point(field_list:CMsgSource1LegacyGameEventList.descriptor_t.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CMsgSource1LegacyGameEventList

// repeated .CMsgSource1LegacyGameEventList.descriptor_t descriptors = 1;
inline int CMsgSource1LegacyGameEventList::_internal_descriptors_size() const {
  return descriptors_.size();
}
inline int CMsgSource1LegacyGameEventList::descriptors_size() const {
  return _internal_descriptors_size();
}
inline void CMsgSource1LegacyGameEventList::clear_descriptors() {
  descriptors_.Clear();
}
inline ::CMsgSource1LegacyGameEventList_descriptor_t* CMsgSource1LegacyGameEventList::mutable_descriptors(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEventList.descriptors)
  return descriptors_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_descriptor_t >*
CMsgSource1LegacyGameEventList::mutable_descriptors() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSource1LegacyGameEventList.descriptors)
  return &descriptors_;
}
inline const ::CMsgSource1LegacyGameEventList_descriptor_t& CMsgSource1LegacyGameEventList::_internal_descriptors(int index) const {
  return descriptors_.Get(index);
}
inline const ::CMsgSource1LegacyGameEventList_descriptor_t& CMsgSource1LegacyGameEventList::descriptors(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEventList.descriptors)
  return _internal_descriptors(index);
}
inline ::CMsgSource1LegacyGameEventList_descriptor_t* CMsgSource1LegacyGameEventList::_internal_add_descriptors() {
  return descriptors_.Add();
}
inline ::CMsgSource1LegacyGameEventList_descriptor_t* CMsgSource1LegacyGameEventList::add_descriptors() {
  // @@protoc_insertion_point(field_add:CMsgSource1LegacyGameEventList.descriptors)
  return _internal_add_descriptors();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEventList_descriptor_t >&
CMsgSource1LegacyGameEventList::descriptors() const {
  // @@protoc_insertion_point(field_list:CMsgSource1LegacyGameEventList.descriptors)
  return descriptors_;
}

// -------------------------------------------------------------------

// CMsgSource1LegacyListenEvents

// optional int32 playerslot = 1;
inline bool CMsgSource1LegacyListenEvents::_internal_has_playerslot() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSource1LegacyListenEvents::has_playerslot() const {
  return _internal_has_playerslot();
}
inline void CMsgSource1LegacyListenEvents::clear_playerslot() {
  playerslot_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyListenEvents::_internal_playerslot() const {
  return playerslot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyListenEvents::playerslot() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyListenEvents.playerslot)
  return _internal_playerslot();
}
inline void CMsgSource1LegacyListenEvents::_internal_set_playerslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  playerslot_ = value;
}
inline void CMsgSource1LegacyListenEvents::set_playerslot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerslot(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyListenEvents.playerslot)
}

// repeated uint32 eventarraybits = 2;
inline int CMsgSource1LegacyListenEvents::_internal_eventarraybits_size() const {
  return eventarraybits_.size();
}
inline int CMsgSource1LegacyListenEvents::eventarraybits_size() const {
  return _internal_eventarraybits_size();
}
inline void CMsgSource1LegacyListenEvents::clear_eventarraybits() {
  eventarraybits_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSource1LegacyListenEvents::_internal_eventarraybits(int index) const {
  return eventarraybits_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSource1LegacyListenEvents::eventarraybits(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyListenEvents.eventarraybits)
  return _internal_eventarraybits(index);
}
inline void CMsgSource1LegacyListenEvents::set_eventarraybits(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  eventarraybits_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyListenEvents.eventarraybits)
}
inline void CMsgSource1LegacyListenEvents::_internal_add_eventarraybits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  eventarraybits_.Add(value);
}
inline void CMsgSource1LegacyListenEvents::add_eventarraybits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_eventarraybits(value);
  // @@protoc_insertion_point(field_add:CMsgSource1LegacyListenEvents.eventarraybits)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSource1LegacyListenEvents::_internal_eventarraybits() const {
  return eventarraybits_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CMsgSource1LegacyListenEvents::eventarraybits() const {
  // @@protoc_insertion_point(field_list:CMsgSource1LegacyListenEvents.eventarraybits)
  return _internal_eventarraybits();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSource1LegacyListenEvents::_internal_mutable_eventarraybits() {
  return &eventarraybits_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CMsgSource1LegacyListenEvents::mutable_eventarraybits() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSource1LegacyListenEvents.eventarraybits)
  return _internal_mutable_eventarraybits();
}

// -------------------------------------------------------------------

// CMsgSource1LegacyGameEvent_key_t

// optional int32 type = 1;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_type() const {
  return _internal_has_type();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::type() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.type)
  return _internal_type();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  type_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.type)
}

// optional string val_string = 2;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_string() const {
  return _internal_has_val_string();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_string() {
  val_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSource1LegacyGameEvent_key_t::val_string() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_string)
  return _internal_val_string();
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_string(const std::string& value) {
  _internal_set_val_string(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_string)
}
inline std::string* CMsgSource1LegacyGameEvent_key_t::mutable_val_string() {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEvent.key_t.val_string)
  return _internal_mutable_val_string();
}
inline const std::string& CMsgSource1LegacyGameEvent_key_t::_internal_val_string() const {
  return val_string_.Get();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_string(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_string(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSource1LegacyGameEvent.key_t.val_string)
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSource1LegacyGameEvent.key_t.val_string)
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_string(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSource1LegacyGameEvent.key_t.val_string)
}
inline std::string* CMsgSource1LegacyGameEvent_key_t::_internal_mutable_val_string() {
  _has_bits_[0] |= 0x00000001u;
  return val_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSource1LegacyGameEvent_key_t::release_val_string() {
  // @@protoc_insertion_point(field_release:CMsgSource1LegacyGameEvent.key_t.val_string)
  if (!_internal_has_val_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return val_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSource1LegacyGameEvent_key_t::set_allocated_val_string(std::string* val_string) {
  if (val_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  val_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), val_string,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSource1LegacyGameEvent.key_t.val_string)
}

// optional float val_float = 3;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_float() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_float() const {
  return _internal_has_val_float();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_float() {
  val_float_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgSource1LegacyGameEvent_key_t::_internal_val_float() const {
  return val_float_;
}
inline float CMsgSource1LegacyGameEvent_key_t::val_float() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_float)
  return _internal_val_float();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_float(float value) {
  _has_bits_[0] |= 0x00000004u;
  val_float_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_float(float value) {
  _internal_set_val_float(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_float)
}

// optional int32 val_long = 4;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_long() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_long() const {
  return _internal_has_val_long();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_long() {
  val_long_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::_internal_val_long() const {
  return val_long_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::val_long() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_long)
  return _internal_val_long();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_long(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  val_long_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_long(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_val_long(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_long)
}

// optional int32 val_short = 5;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_short() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_short() const {
  return _internal_has_val_short();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_short() {
  val_short_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::_internal_val_short() const {
  return val_short_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::val_short() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_short)
  return _internal_val_short();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_short(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  val_short_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_short(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_val_short(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_short)
}

// optional int32 val_byte = 6;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_byte() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_byte() const {
  return _internal_has_val_byte();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_byte() {
  val_byte_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::_internal_val_byte() const {
  return val_byte_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent_key_t::val_byte() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_byte)
  return _internal_val_byte();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_byte(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  val_byte_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_byte(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_val_byte(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_byte)
}

// optional bool val_bool = 7;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_bool() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_bool() const {
  return _internal_has_val_bool();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_bool() {
  val_bool_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_val_bool() const {
  return val_bool_;
}
inline bool CMsgSource1LegacyGameEvent_key_t::val_bool() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_bool)
  return _internal_val_bool();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_bool(bool value) {
  _has_bits_[0] |= 0x00000040u;
  val_bool_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_bool(bool value) {
  _internal_set_val_bool(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_bool)
}

// optional uint64 val_uint64 = 8;
inline bool CMsgSource1LegacyGameEvent_key_t::_internal_has_val_uint64() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent_key_t::has_val_uint64() const {
  return _internal_has_val_uint64();
}
inline void CMsgSource1LegacyGameEvent_key_t::clear_val_uint64() {
  val_uint64_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSource1LegacyGameEvent_key_t::_internal_val_uint64() const {
  return val_uint64_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgSource1LegacyGameEvent_key_t::val_uint64() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.key_t.val_uint64)
  return _internal_val_uint64();
}
inline void CMsgSource1LegacyGameEvent_key_t::_internal_set_val_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000080u;
  val_uint64_ = value;
}
inline void CMsgSource1LegacyGameEvent_key_t::set_val_uint64(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_val_uint64(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.key_t.val_uint64)
}

// -------------------------------------------------------------------

// CMsgSource1LegacyGameEvent

// optional string event_name = 1;
inline bool CMsgSource1LegacyGameEvent::_internal_has_event_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent::has_event_name() const {
  return _internal_has_event_name();
}
inline void CMsgSource1LegacyGameEvent::clear_event_name() {
  event_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSource1LegacyGameEvent::event_name() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.event_name)
  return _internal_event_name();
}
inline void CMsgSource1LegacyGameEvent::set_event_name(const std::string& value) {
  _internal_set_event_name(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.event_name)
}
inline std::string* CMsgSource1LegacyGameEvent::mutable_event_name() {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEvent.event_name)
  return _internal_mutable_event_name();
}
inline const std::string& CMsgSource1LegacyGameEvent::_internal_event_name() const {
  return event_name_.Get();
}
inline void CMsgSource1LegacyGameEvent::_internal_set_event_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSource1LegacyGameEvent::set_event_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSource1LegacyGameEvent.event_name)
}
inline void CMsgSource1LegacyGameEvent::set_event_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  event_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSource1LegacyGameEvent.event_name)
}
inline void CMsgSource1LegacyGameEvent::set_event_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  event_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSource1LegacyGameEvent.event_name)
}
inline std::string* CMsgSource1LegacyGameEvent::_internal_mutable_event_name() {
  _has_bits_[0] |= 0x00000001u;
  return event_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSource1LegacyGameEvent::release_event_name() {
  // @@protoc_insertion_point(field_release:CMsgSource1LegacyGameEvent.event_name)
  if (!_internal_has_event_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return event_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSource1LegacyGameEvent::set_allocated_event_name(std::string* event_name) {
  if (event_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  event_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), event_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSource1LegacyGameEvent.event_name)
}

// optional int32 eventid = 2;
inline bool CMsgSource1LegacyGameEvent::_internal_has_eventid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSource1LegacyGameEvent::has_eventid() const {
  return _internal_has_eventid();
}
inline void CMsgSource1LegacyGameEvent::clear_eventid() {
  eventid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent::_internal_eventid() const {
  return eventid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSource1LegacyGameEvent::eventid() const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.eventid)
  return _internal_eventid();
}
inline void CMsgSource1LegacyGameEvent::_internal_set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  eventid_ = value;
}
inline void CMsgSource1LegacyGameEvent::set_eventid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_eventid(value);
  // @@protoc_insertion_point(field_set:CMsgSource1LegacyGameEvent.eventid)
}

// repeated .CMsgSource1LegacyGameEvent.key_t keys = 3;
inline int CMsgSource1LegacyGameEvent::_internal_keys_size() const {
  return keys_.size();
}
inline int CMsgSource1LegacyGameEvent::keys_size() const {
  return _internal_keys_size();
}
inline void CMsgSource1LegacyGameEvent::clear_keys() {
  keys_.Clear();
}
inline ::CMsgSource1LegacyGameEvent_key_t* CMsgSource1LegacyGameEvent::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgSource1LegacyGameEvent.keys)
  return keys_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEvent_key_t >*
CMsgSource1LegacyGameEvent::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:CMsgSource1LegacyGameEvent.keys)
  return &keys_;
}
inline const ::CMsgSource1LegacyGameEvent_key_t& CMsgSource1LegacyGameEvent::_internal_keys(int index) const {
  return keys_.Get(index);
}
inline const ::CMsgSource1LegacyGameEvent_key_t& CMsgSource1LegacyGameEvent::keys(int index) const {
  // @@protoc_insertion_point(field_get:CMsgSource1LegacyGameEvent.keys)
  return _internal_keys(index);
}
inline ::CMsgSource1LegacyGameEvent_key_t* CMsgSource1LegacyGameEvent::_internal_add_keys() {
  return keys_.Add();
}
inline ::CMsgSource1LegacyGameEvent_key_t* CMsgSource1LegacyGameEvent::add_keys() {
  // @@protoc_insertion_point(field_add:CMsgSource1LegacyGameEvent.keys)
  return _internal_add_keys();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgSource1LegacyGameEvent_key_t >&
CMsgSource1LegacyGameEvent::keys() const {
  // @@protoc_insertion_point(field_list:CMsgSource1LegacyGameEvent.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CMsgSosStartSoundEvent

// optional int32 soundevent_guid = 1;
inline bool CMsgSosStartSoundEvent::_internal_has_soundevent_guid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_soundevent_guid() const {
  return _internal_has_soundevent_guid();
}
inline void CMsgSosStartSoundEvent::clear_soundevent_guid() {
  soundevent_guid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::_internal_soundevent_guid() const {
  return soundevent_guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::soundevent_guid() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.soundevent_guid)
  return _internal_soundevent_guid();
}
inline void CMsgSosStartSoundEvent::_internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  soundevent_guid_ = value;
}
inline void CMsgSosStartSoundEvent::set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_soundevent_guid(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.soundevent_guid)
}

// optional fixed32 soundevent_hash = 2;
inline bool CMsgSosStartSoundEvent::_internal_has_soundevent_hash() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_soundevent_hash() const {
  return _internal_has_soundevent_hash();
}
inline void CMsgSosStartSoundEvent::clear_soundevent_hash() {
  soundevent_hash_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosStartSoundEvent::_internal_soundevent_hash() const {
  return soundevent_hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosStartSoundEvent::soundevent_hash() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.soundevent_hash)
  return _internal_soundevent_hash();
}
inline void CMsgSosStartSoundEvent::_internal_set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  soundevent_hash_ = value;
}
inline void CMsgSosStartSoundEvent::set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soundevent_hash(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.soundevent_hash)
}

// optional int32 source_entity_index = 3;
inline bool CMsgSosStartSoundEvent::_internal_has_source_entity_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_source_entity_index() const {
  return _internal_has_source_entity_index();
}
inline void CMsgSosStartSoundEvent::clear_source_entity_index() {
  source_entity_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::_internal_source_entity_index() const {
  return source_entity_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::source_entity_index() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.source_entity_index)
  return _internal_source_entity_index();
}
inline void CMsgSosStartSoundEvent::_internal_set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  source_entity_index_ = value;
}
inline void CMsgSosStartSoundEvent::set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_entity_index(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.source_entity_index)
}

// optional int32 seed = 4;
inline bool CMsgSosStartSoundEvent::_internal_has_seed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_seed() const {
  return _internal_has_seed();
}
inline void CMsgSosStartSoundEvent::clear_seed() {
  seed_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::_internal_seed() const {
  return seed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStartSoundEvent::seed() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.seed)
  return _internal_seed();
}
inline void CMsgSosStartSoundEvent::_internal_set_seed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  seed_ = value;
}
inline void CMsgSosStartSoundEvent::set_seed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_seed(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.seed)
}

// optional bytes packed_params = 5;
inline bool CMsgSosStartSoundEvent::_internal_has_packed_params() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_packed_params() const {
  return _internal_has_packed_params();
}
inline void CMsgSosStartSoundEvent::clear_packed_params() {
  packed_params_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSosStartSoundEvent::packed_params() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.packed_params)
  return _internal_packed_params();
}
inline void CMsgSosStartSoundEvent::set_packed_params(const std::string& value) {
  _internal_set_packed_params(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.packed_params)
}
inline std::string* CMsgSosStartSoundEvent::mutable_packed_params() {
  // @@protoc_insertion_point(field_mutable:CMsgSosStartSoundEvent.packed_params)
  return _internal_mutable_packed_params();
}
inline const std::string& CMsgSosStartSoundEvent::_internal_packed_params() const {
  return packed_params_.Get();
}
inline void CMsgSosStartSoundEvent::_internal_set_packed_params(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSosStartSoundEvent::set_packed_params(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSosStartSoundEvent.packed_params)
}
inline void CMsgSosStartSoundEvent::set_packed_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSosStartSoundEvent.packed_params)
}
inline void CMsgSosStartSoundEvent::set_packed_params(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSosStartSoundEvent.packed_params)
}
inline std::string* CMsgSosStartSoundEvent::_internal_mutable_packed_params() {
  _has_bits_[0] |= 0x00000001u;
  return packed_params_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSosStartSoundEvent::release_packed_params() {
  // @@protoc_insertion_point(field_release:CMsgSosStartSoundEvent.packed_params)
  if (!_internal_has_packed_params()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return packed_params_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSosStartSoundEvent::set_allocated_packed_params(std::string* packed_params) {
  if (packed_params != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  packed_params_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), packed_params,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSosStartSoundEvent.packed_params)
}

// optional float start_time = 6;
inline bool CMsgSosStartSoundEvent::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgSosStartSoundEvent::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgSosStartSoundEvent::clear_start_time() {
  start_time_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CMsgSosStartSoundEvent::_internal_start_time() const {
  return start_time_;
}
inline float CMsgSosStartSoundEvent::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgSosStartSoundEvent.start_time)
  return _internal_start_time();
}
inline void CMsgSosStartSoundEvent::_internal_set_start_time(float value) {
  _has_bits_[0] |= 0x00000020u;
  start_time_ = value;
}
inline void CMsgSosStartSoundEvent::set_start_time(float value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgSosStartSoundEvent.start_time)
}

// -------------------------------------------------------------------

// CMsgSosStopSoundEvent

// optional int32 soundevent_guid = 1;
inline bool CMsgSosStopSoundEvent::_internal_has_soundevent_guid() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSosStopSoundEvent::has_soundevent_guid() const {
  return _internal_has_soundevent_guid();
}
inline void CMsgSosStopSoundEvent::clear_soundevent_guid() {
  soundevent_guid_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStopSoundEvent::_internal_soundevent_guid() const {
  return soundevent_guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStopSoundEvent::soundevent_guid() const {
  // @@protoc_insertion_point(field_get:CMsgSosStopSoundEvent.soundevent_guid)
  return _internal_soundevent_guid();
}
inline void CMsgSosStopSoundEvent::_internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  soundevent_guid_ = value;
}
inline void CMsgSosStopSoundEvent::set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_soundevent_guid(value);
  // @@protoc_insertion_point(field_set:CMsgSosStopSoundEvent.soundevent_guid)
}

// -------------------------------------------------------------------

// CMsgSosStopSoundEventHash

// optional fixed32 soundevent_hash = 1;
inline bool CMsgSosStopSoundEventHash::_internal_has_soundevent_hash() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSosStopSoundEventHash::has_soundevent_hash() const {
  return _internal_has_soundevent_hash();
}
inline void CMsgSosStopSoundEventHash::clear_soundevent_hash() {
  soundevent_hash_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosStopSoundEventHash::_internal_soundevent_hash() const {
  return soundevent_hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosStopSoundEventHash::soundevent_hash() const {
  // @@protoc_insertion_point(field_get:CMsgSosStopSoundEventHash.soundevent_hash)
  return _internal_soundevent_hash();
}
inline void CMsgSosStopSoundEventHash::_internal_set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  soundevent_hash_ = value;
}
inline void CMsgSosStopSoundEventHash::set_soundevent_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_soundevent_hash(value);
  // @@protoc_insertion_point(field_set:CMsgSosStopSoundEventHash.soundevent_hash)
}

// optional int32 source_entity_index = 2;
inline bool CMsgSosStopSoundEventHash::_internal_has_source_entity_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSosStopSoundEventHash::has_source_entity_index() const {
  return _internal_has_source_entity_index();
}
inline void CMsgSosStopSoundEventHash::clear_source_entity_index() {
  source_entity_index_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStopSoundEventHash::_internal_source_entity_index() const {
  return source_entity_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosStopSoundEventHash::source_entity_index() const {
  // @@protoc_insertion_point(field_get:CMsgSosStopSoundEventHash.source_entity_index)
  return _internal_source_entity_index();
}
inline void CMsgSosStopSoundEventHash::_internal_set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_entity_index_ = value;
}
inline void CMsgSosStopSoundEventHash::set_source_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_entity_index(value);
  // @@protoc_insertion_point(field_set:CMsgSosStopSoundEventHash.source_entity_index)
}

// -------------------------------------------------------------------

// CMsgSosSetSoundEventParams

// optional int32 soundevent_guid = 1;
inline bool CMsgSosSetSoundEventParams::_internal_has_soundevent_guid() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSosSetSoundEventParams::has_soundevent_guid() const {
  return _internal_has_soundevent_guid();
}
inline void CMsgSosSetSoundEventParams::clear_soundevent_guid() {
  soundevent_guid_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosSetSoundEventParams::_internal_soundevent_guid() const {
  return soundevent_guid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgSosSetSoundEventParams::soundevent_guid() const {
  // @@protoc_insertion_point(field_get:CMsgSosSetSoundEventParams.soundevent_guid)
  return _internal_soundevent_guid();
}
inline void CMsgSosSetSoundEventParams::_internal_set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  soundevent_guid_ = value;
}
inline void CMsgSosSetSoundEventParams::set_soundevent_guid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_soundevent_guid(value);
  // @@protoc_insertion_point(field_set:CMsgSosSetSoundEventParams.soundevent_guid)
}

// optional bytes packed_params = 5;
inline bool CMsgSosSetSoundEventParams::_internal_has_packed_params() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSosSetSoundEventParams::has_packed_params() const {
  return _internal_has_packed_params();
}
inline void CMsgSosSetSoundEventParams::clear_packed_params() {
  packed_params_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSosSetSoundEventParams::packed_params() const {
  // @@protoc_insertion_point(field_get:CMsgSosSetSoundEventParams.packed_params)
  return _internal_packed_params();
}
inline void CMsgSosSetSoundEventParams::set_packed_params(const std::string& value) {
  _internal_set_packed_params(value);
  // @@protoc_insertion_point(field_set:CMsgSosSetSoundEventParams.packed_params)
}
inline std::string* CMsgSosSetSoundEventParams::mutable_packed_params() {
  // @@protoc_insertion_point(field_mutable:CMsgSosSetSoundEventParams.packed_params)
  return _internal_mutable_packed_params();
}
inline const std::string& CMsgSosSetSoundEventParams::_internal_packed_params() const {
  return packed_params_.Get();
}
inline void CMsgSosSetSoundEventParams::_internal_set_packed_params(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSosSetSoundEventParams::set_packed_params(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSosSetSoundEventParams.packed_params)
}
inline void CMsgSosSetSoundEventParams::set_packed_params(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSosSetSoundEventParams.packed_params)
}
inline void CMsgSosSetSoundEventParams::set_packed_params(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  packed_params_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSosSetSoundEventParams.packed_params)
}
inline std::string* CMsgSosSetSoundEventParams::_internal_mutable_packed_params() {
  _has_bits_[0] |= 0x00000001u;
  return packed_params_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSosSetSoundEventParams::release_packed_params() {
  // @@protoc_insertion_point(field_release:CMsgSosSetSoundEventParams.packed_params)
  if (!_internal_has_packed_params()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return packed_params_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSosSetSoundEventParams::set_allocated_packed_params(std::string* packed_params) {
  if (packed_params != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  packed_params_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), packed_params,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSosSetSoundEventParams.packed_params)
}

// -------------------------------------------------------------------

// CMsgSosSetLibraryStackFields

// optional fixed32 stack_hash = 1;
inline bool CMsgSosSetLibraryStackFields::_internal_has_stack_hash() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgSosSetLibraryStackFields::has_stack_hash() const {
  return _internal_has_stack_hash();
}
inline void CMsgSosSetLibraryStackFields::clear_stack_hash() {
  stack_hash_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosSetLibraryStackFields::_internal_stack_hash() const {
  return stack_hash_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgSosSetLibraryStackFields::stack_hash() const {
  // @@protoc_insertion_point(field_get:CMsgSosSetLibraryStackFields.stack_hash)
  return _internal_stack_hash();
}
inline void CMsgSosSetLibraryStackFields::_internal_set_stack_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stack_hash_ = value;
}
inline void CMsgSosSetLibraryStackFields::set_stack_hash(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stack_hash(value);
  // @@protoc_insertion_point(field_set:CMsgSosSetLibraryStackFields.stack_hash)
}

// optional bytes packed_fields = 5;
inline bool CMsgSosSetLibraryStackFields::_internal_has_packed_fields() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgSosSetLibraryStackFields::has_packed_fields() const {
  return _internal_has_packed_fields();
}
inline void CMsgSosSetLibraryStackFields::clear_packed_fields() {
  packed_fields_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgSosSetLibraryStackFields::packed_fields() const {
  // @@protoc_insertion_point(field_get:CMsgSosSetLibraryStackFields.packed_fields)
  return _internal_packed_fields();
}
inline void CMsgSosSetLibraryStackFields::set_packed_fields(const std::string& value) {
  _internal_set_packed_fields(value);
  // @@protoc_insertion_point(field_set:CMsgSosSetLibraryStackFields.packed_fields)
}
inline std::string* CMsgSosSetLibraryStackFields::mutable_packed_fields() {
  // @@protoc_insertion_point(field_mutable:CMsgSosSetLibraryStackFields.packed_fields)
  return _internal_mutable_packed_fields();
}
inline const std::string& CMsgSosSetLibraryStackFields::_internal_packed_fields() const {
  return packed_fields_.Get();
}
inline void CMsgSosSetLibraryStackFields::_internal_set_packed_fields(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_fields_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgSosSetLibraryStackFields::set_packed_fields(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  packed_fields_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgSosSetLibraryStackFields.packed_fields)
}
inline void CMsgSosSetLibraryStackFields::set_packed_fields(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  packed_fields_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgSosSetLibraryStackFields.packed_fields)
}
inline void CMsgSosSetLibraryStackFields::set_packed_fields(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  packed_fields_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgSosSetLibraryStackFields.packed_fields)
}
inline std::string* CMsgSosSetLibraryStackFields::_internal_mutable_packed_fields() {
  _has_bits_[0] |= 0x00000001u;
  return packed_fields_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgSosSetLibraryStackFields::release_packed_fields() {
  // @@protoc_insertion_point(field_release:CMsgSosSetLibraryStackFields.packed_fields)
  if (!_internal_has_packed_fields()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return packed_fields_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgSosSetLibraryStackFields::set_allocated_packed_fields(std::string* packed_fields) {
  if (packed_fields != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  packed_fields_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), packed_fields,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgSosSetLibraryStackFields.packed_fields)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::EBaseGameEvents> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EBaseGameEvents>() {
  return ::EBaseGameEvents_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gameevents_2eproto
