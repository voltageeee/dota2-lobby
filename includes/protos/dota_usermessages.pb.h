// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_usermessages.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fusermessages_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fusermessages_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
#include "dota_shared_enums.pb.h"
#include "dota_commonmessages.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fusermessages_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fusermessages_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[170]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fusermessages_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_dota_5fusermessages_2eproto_metadata_getter(int index);
class CDOTAEntityMsg_InvokerSpellCast;
struct CDOTAEntityMsg_InvokerSpellCastDefaultTypeInternal;
extern CDOTAEntityMsg_InvokerSpellCastDefaultTypeInternal _CDOTAEntityMsg_InvokerSpellCast_default_instance_;
class CDOTAResponseQuerySerialized;
struct CDOTAResponseQuerySerializedDefaultTypeInternal;
extern CDOTAResponseQuerySerializedDefaultTypeInternal _CDOTAResponseQuerySerialized_default_instance_;
class CDOTAResponseQuerySerialized_Fact;
struct CDOTAResponseQuerySerialized_FactDefaultTypeInternal;
extern CDOTAResponseQuerySerialized_FactDefaultTypeInternal _CDOTAResponseQuerySerialized_Fact_default_instance_;
class CDOTASpeechMatchOnClient;
struct CDOTASpeechMatchOnClientDefaultTypeInternal;
extern CDOTASpeechMatchOnClientDefaultTypeInternal _CDOTASpeechMatchOnClient_default_instance_;
class CDOTAUserMessage_RequestItemSuggestions;
struct CDOTAUserMessage_RequestItemSuggestionsDefaultTypeInternal;
extern CDOTAUserMessage_RequestItemSuggestionsDefaultTypeInternal _CDOTAUserMessage_RequestItemSuggestions_default_instance_;
class CDOTAUserMessage_TeamCaptainChanged;
struct CDOTAUserMessage_TeamCaptainChangedDefaultTypeInternal;
extern CDOTAUserMessage_TeamCaptainChangedDefaultTypeInternal _CDOTAUserMessage_TeamCaptainChanged_default_instance_;
class CDOTAUserMsg_AIDebugLine;
struct CDOTAUserMsg_AIDebugLineDefaultTypeInternal;
extern CDOTAUserMsg_AIDebugLineDefaultTypeInternal _CDOTAUserMsg_AIDebugLine_default_instance_;
class CDOTAUserMsg_AbilityDraftRequestAbility;
struct CDOTAUserMsg_AbilityDraftRequestAbilityDefaultTypeInternal;
extern CDOTAUserMsg_AbilityDraftRequestAbilityDefaultTypeInternal _CDOTAUserMsg_AbilityDraftRequestAbility_default_instance_;
class CDOTAUserMsg_AbilityPing;
struct CDOTAUserMsg_AbilityPingDefaultTypeInternal;
extern CDOTAUserMsg_AbilityPingDefaultTypeInternal _CDOTAUserMsg_AbilityPing_default_instance_;
class CDOTAUserMsg_AbilitySteal;
struct CDOTAUserMsg_AbilityStealDefaultTypeInternal;
extern CDOTAUserMsg_AbilityStealDefaultTypeInternal _CDOTAUserMsg_AbilitySteal_default_instance_;
class CDOTAUserMsg_AddQuestLogEntry;
struct CDOTAUserMsg_AddQuestLogEntryDefaultTypeInternal;
extern CDOTAUserMsg_AddQuestLogEntryDefaultTypeInternal _CDOTAUserMsg_AddQuestLogEntry_default_instance_;
class CDOTAUserMsg_AghsStatusAlert;
struct CDOTAUserMsg_AghsStatusAlertDefaultTypeInternal;
extern CDOTAUserMsg_AghsStatusAlertDefaultTypeInternal _CDOTAUserMsg_AghsStatusAlert_default_instance_;
class CDOTAUserMsg_AllStarEvent;
struct CDOTAUserMsg_AllStarEventDefaultTypeInternal;
extern CDOTAUserMsg_AllStarEventDefaultTypeInternal _CDOTAUserMsg_AllStarEvent_default_instance_;
class CDOTAUserMsg_AllStarEvent_PlayerScore;
struct CDOTAUserMsg_AllStarEvent_PlayerScoreDefaultTypeInternal;
extern CDOTAUserMsg_AllStarEvent_PlayerScoreDefaultTypeInternal _CDOTAUserMsg_AllStarEvent_PlayerScore_default_instance_;
class CDOTAUserMsg_BeastChat;
struct CDOTAUserMsg_BeastChatDefaultTypeInternal;
extern CDOTAUserMsg_BeastChatDefaultTypeInternal _CDOTAUserMsg_BeastChat_default_instance_;
class CDOTAUserMsg_BoosterState;
struct CDOTAUserMsg_BoosterStateDefaultTypeInternal;
extern CDOTAUserMsg_BoosterStateDefaultTypeInternal _CDOTAUserMsg_BoosterState_default_instance_;
class CDOTAUserMsg_BoosterStatePlayer;
struct CDOTAUserMsg_BoosterStatePlayerDefaultTypeInternal;
extern CDOTAUserMsg_BoosterStatePlayerDefaultTypeInternal _CDOTAUserMsg_BoosterStatePlayer_default_instance_;
class CDOTAUserMsg_BotChat;
struct CDOTAUserMsg_BotChatDefaultTypeInternal;
extern CDOTAUserMsg_BotChatDefaultTypeInternal _CDOTAUserMsg_BotChat_default_instance_;
class CDOTAUserMsg_BuyBackStateAlert;
struct CDOTAUserMsg_BuyBackStateAlertDefaultTypeInternal;
extern CDOTAUserMsg_BuyBackStateAlertDefaultTypeInternal _CDOTAUserMsg_BuyBackStateAlert_default_instance_;
class CDOTAUserMsg_ChatEvent;
struct CDOTAUserMsg_ChatEventDefaultTypeInternal;
extern CDOTAUserMsg_ChatEventDefaultTypeInternal _CDOTAUserMsg_ChatEvent_default_instance_;
class CDOTAUserMsg_ChatMessage;
struct CDOTAUserMsg_ChatMessageDefaultTypeInternal;
extern CDOTAUserMsg_ChatMessageDefaultTypeInternal _CDOTAUserMsg_ChatMessage_default_instance_;
class CDOTAUserMsg_ChatWheel;
struct CDOTAUserMsg_ChatWheelDefaultTypeInternal;
extern CDOTAUserMsg_ChatWheelDefaultTypeInternal _CDOTAUserMsg_ChatWheel_default_instance_;
class CDOTAUserMsg_ChatWheelCooldown;
struct CDOTAUserMsg_ChatWheelCooldownDefaultTypeInternal;
extern CDOTAUserMsg_ChatWheelCooldownDefaultTypeInternal _CDOTAUserMsg_ChatWheelCooldown_default_instance_;
class CDOTAUserMsg_ClientLoadGridNav;
struct CDOTAUserMsg_ClientLoadGridNavDefaultTypeInternal;
extern CDOTAUserMsg_ClientLoadGridNavDefaultTypeInternal _CDOTAUserMsg_ClientLoadGridNav_default_instance_;
class CDOTAUserMsg_CoachHUDPing;
struct CDOTAUserMsg_CoachHUDPingDefaultTypeInternal;
extern CDOTAUserMsg_CoachHUDPingDefaultTypeInternal _CDOTAUserMsg_CoachHUDPing_default_instance_;
class CDOTAUserMsg_CombatHeroPositions;
struct CDOTAUserMsg_CombatHeroPositionsDefaultTypeInternal;
extern CDOTAUserMsg_CombatHeroPositionsDefaultTypeInternal _CDOTAUserMsg_CombatHeroPositions_default_instance_;
class CDOTAUserMsg_CombatLogBulkData;
struct CDOTAUserMsg_CombatLogBulkDataDefaultTypeInternal;
extern CDOTAUserMsg_CombatLogBulkDataDefaultTypeInternal _CDOTAUserMsg_CombatLogBulkData_default_instance_;
class CDOTAUserMsg_CompendiumState;
struct CDOTAUserMsg_CompendiumStateDefaultTypeInternal;
extern CDOTAUserMsg_CompendiumStateDefaultTypeInternal _CDOTAUserMsg_CompendiumState_default_instance_;
class CDOTAUserMsg_CompendiumStatePlayer;
struct CDOTAUserMsg_CompendiumStatePlayerDefaultTypeInternal;
extern CDOTAUserMsg_CompendiumStatePlayerDefaultTypeInternal _CDOTAUserMsg_CompendiumStatePlayer_default_instance_;
class CDOTAUserMsg_ContextualTip;
struct CDOTAUserMsg_ContextualTipDefaultTypeInternal;
extern CDOTAUserMsg_ContextualTipDefaultTypeInternal _CDOTAUserMsg_ContextualTip_default_instance_;
class CDOTAUserMsg_CourierKilledAlert;
struct CDOTAUserMsg_CourierKilledAlertDefaultTypeInternal;
extern CDOTAUserMsg_CourierKilledAlertDefaultTypeInternal _CDOTAUserMsg_CourierKilledAlert_default_instance_;
class CDOTAUserMsg_CourierKilledAlert_LostItem;
struct CDOTAUserMsg_CourierKilledAlert_LostItemDefaultTypeInternal;
extern CDOTAUserMsg_CourierKilledAlert_LostItemDefaultTypeInternal _CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_;
class CDOTAUserMsg_CreateLinearProjectile;
struct CDOTAUserMsg_CreateLinearProjectileDefaultTypeInternal;
extern CDOTAUserMsg_CreateLinearProjectileDefaultTypeInternal _CDOTAUserMsg_CreateLinearProjectile_default_instance_;
class CDOTAUserMsg_CustomHeaderMessage;
struct CDOTAUserMsg_CustomHeaderMessageDefaultTypeInternal;
extern CDOTAUserMsg_CustomHeaderMessageDefaultTypeInternal _CDOTAUserMsg_CustomHeaderMessage_default_instance_;
class CDOTAUserMsg_CustomHudElement_Create;
struct CDOTAUserMsg_CustomHudElement_CreateDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_CreateDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Create_default_instance_;
class CDOTAUserMsg_CustomHudElement_Destroy;
struct CDOTAUserMsg_CustomHudElement_DestroyDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_DestroyDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Destroy_default_instance_;
class CDOTAUserMsg_CustomHudElement_Modify;
struct CDOTAUserMsg_CustomHudElement_ModifyDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_ModifyDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Modify_default_instance_;
class CDOTAUserMsg_CustomMsg;
struct CDOTAUserMsg_CustomMsgDefaultTypeInternal;
extern CDOTAUserMsg_CustomMsgDefaultTypeInternal _CDOTAUserMsg_CustomMsg_default_instance_;
class CDOTAUserMsg_DamageReport;
struct CDOTAUserMsg_DamageReportDefaultTypeInternal;
extern CDOTAUserMsg_DamageReportDefaultTypeInternal _CDOTAUserMsg_DamageReport_default_instance_;
class CDOTAUserMsg_DebugChallenge;
struct CDOTAUserMsg_DebugChallengeDefaultTypeInternal;
extern CDOTAUserMsg_DebugChallengeDefaultTypeInternal _CDOTAUserMsg_DebugChallenge_default_instance_;
class CDOTAUserMsg_DestroyLinearProjectile;
struct CDOTAUserMsg_DestroyLinearProjectileDefaultTypeInternal;
extern CDOTAUserMsg_DestroyLinearProjectileDefaultTypeInternal _CDOTAUserMsg_DestroyLinearProjectile_default_instance_;
class CDOTAUserMsg_DismissAllStatPopups;
struct CDOTAUserMsg_DismissAllStatPopupsDefaultTypeInternal;
extern CDOTAUserMsg_DismissAllStatPopupsDefaultTypeInternal _CDOTAUserMsg_DismissAllStatPopups_default_instance_;
class CDOTAUserMsg_DodgeTrackingProjectiles;
struct CDOTAUserMsg_DodgeTrackingProjectilesDefaultTypeInternal;
extern CDOTAUserMsg_DodgeTrackingProjectilesDefaultTypeInternal _CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_;
class CDOTAUserMsg_ESArcanaCombo;
struct CDOTAUserMsg_ESArcanaComboDefaultTypeInternal;
extern CDOTAUserMsg_ESArcanaComboDefaultTypeInternal _CDOTAUserMsg_ESArcanaCombo_default_instance_;
class CDOTAUserMsg_ESArcanaComboSummary;
struct CDOTAUserMsg_ESArcanaComboSummaryDefaultTypeInternal;
extern CDOTAUserMsg_ESArcanaComboSummaryDefaultTypeInternal _CDOTAUserMsg_ESArcanaComboSummary_default_instance_;
class CDOTAUserMsg_EmptyItemSlotAlert;
struct CDOTAUserMsg_EmptyItemSlotAlertDefaultTypeInternal;
extern CDOTAUserMsg_EmptyItemSlotAlertDefaultTypeInternal _CDOTAUserMsg_EmptyItemSlotAlert_default_instance_;
class CDOTAUserMsg_EmptyTeleportAlert;
struct CDOTAUserMsg_EmptyTeleportAlertDefaultTypeInternal;
extern CDOTAUserMsg_EmptyTeleportAlertDefaultTypeInternal _CDOTAUserMsg_EmptyTeleportAlert_default_instance_;
class CDOTAUserMsg_EnemyItemAlert;
struct CDOTAUserMsg_EnemyItemAlertDefaultTypeInternal;
extern CDOTAUserMsg_EnemyItemAlertDefaultTypeInternal _CDOTAUserMsg_EnemyItemAlert_default_instance_;
class CDOTAUserMsg_FlipCoinResult;
struct CDOTAUserMsg_FlipCoinResultDefaultTypeInternal;
extern CDOTAUserMsg_FlipCoinResultDefaultTypeInternal _CDOTAUserMsg_FlipCoinResult_default_instance_;
class CDOTAUserMsg_FoundNeutralItem;
struct CDOTAUserMsg_FoundNeutralItemDefaultTypeInternal;
extern CDOTAUserMsg_FoundNeutralItemDefaultTypeInternal _CDOTAUserMsg_FoundNeutralItem_default_instance_;
class CDOTAUserMsg_GamerulesStateChanged;
struct CDOTAUserMsg_GamerulesStateChangedDefaultTypeInternal;
extern CDOTAUserMsg_GamerulesStateChangedDefaultTypeInternal _CDOTAUserMsg_GamerulesStateChanged_default_instance_;
class CDOTAUserMsg_GlobalLightColor;
struct CDOTAUserMsg_GlobalLightColorDefaultTypeInternal;
extern CDOTAUserMsg_GlobalLightColorDefaultTypeInternal _CDOTAUserMsg_GlobalLightColor_default_instance_;
class CDOTAUserMsg_GlobalLightDirection;
struct CDOTAUserMsg_GlobalLightDirectionDefaultTypeInternal;
extern CDOTAUserMsg_GlobalLightDirectionDefaultTypeInternal _CDOTAUserMsg_GlobalLightDirection_default_instance_;
class CDOTAUserMsg_GlyphAlert;
struct CDOTAUserMsg_GlyphAlertDefaultTypeInternal;
extern CDOTAUserMsg_GlyphAlertDefaultTypeInternal _CDOTAUserMsg_GlyphAlert_default_instance_;
class CDOTAUserMsg_GuildChallenge_Progress;
struct CDOTAUserMsg_GuildChallenge_ProgressDefaultTypeInternal;
extern CDOTAUserMsg_GuildChallenge_ProgressDefaultTypeInternal _CDOTAUserMsg_GuildChallenge_Progress_default_instance_;
class CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress;
struct CDOTAUserMsg_GuildChallenge_Progress_PlayerProgressDefaultTypeInternal;
extern CDOTAUserMsg_GuildChallenge_Progress_PlayerProgressDefaultTypeInternal _CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress_default_instance_;
class CDOTAUserMsg_HPManaAlert;
struct CDOTAUserMsg_HPManaAlertDefaultTypeInternal;
extern CDOTAUserMsg_HPManaAlertDefaultTypeInternal _CDOTAUserMsg_HPManaAlert_default_instance_;
class CDOTAUserMsg_HalloweenDrops;
struct CDOTAUserMsg_HalloweenDropsDefaultTypeInternal;
extern CDOTAUserMsg_HalloweenDropsDefaultTypeInternal _CDOTAUserMsg_HalloweenDrops_default_instance_;
class CDOTAUserMsg_HeroRelicProgress;
struct CDOTAUserMsg_HeroRelicProgressDefaultTypeInternal;
extern CDOTAUserMsg_HeroRelicProgressDefaultTypeInternal _CDOTAUserMsg_HeroRelicProgress_default_instance_;
class CDOTAUserMsg_HighFiveCompleted;
struct CDOTAUserMsg_HighFiveCompletedDefaultTypeInternal;
extern CDOTAUserMsg_HighFiveCompletedDefaultTypeInternal _CDOTAUserMsg_HighFiveCompleted_default_instance_;
class CDOTAUserMsg_HighFiveLeftHanging;
struct CDOTAUserMsg_HighFiveLeftHangingDefaultTypeInternal;
extern CDOTAUserMsg_HighFiveLeftHangingDefaultTypeInternal _CDOTAUserMsg_HighFiveLeftHanging_default_instance_;
class CDOTAUserMsg_HotPotato_Created;
struct CDOTAUserMsg_HotPotato_CreatedDefaultTypeInternal;
extern CDOTAUserMsg_HotPotato_CreatedDefaultTypeInternal _CDOTAUserMsg_HotPotato_Created_default_instance_;
class CDOTAUserMsg_HotPotato_Exploded;
struct CDOTAUserMsg_HotPotato_ExplodedDefaultTypeInternal;
extern CDOTAUserMsg_HotPotato_ExplodedDefaultTypeInternal _CDOTAUserMsg_HotPotato_Exploded_default_instance_;
class CDOTAUserMsg_HudError;
struct CDOTAUserMsg_HudErrorDefaultTypeInternal;
extern CDOTAUserMsg_HudErrorDefaultTypeInternal _CDOTAUserMsg_HudError_default_instance_;
class CDOTAUserMsg_InvalidCommand;
struct CDOTAUserMsg_InvalidCommandDefaultTypeInternal;
extern CDOTAUserMsg_InvalidCommandDefaultTypeInternal _CDOTAUserMsg_InvalidCommand_default_instance_;
class CDOTAUserMsg_ItemAlert;
struct CDOTAUserMsg_ItemAlertDefaultTypeInternal;
extern CDOTAUserMsg_ItemAlertDefaultTypeInternal _CDOTAUserMsg_ItemAlert_default_instance_;
class CDOTAUserMsg_ItemFound;
struct CDOTAUserMsg_ItemFoundDefaultTypeInternal;
extern CDOTAUserMsg_ItemFoundDefaultTypeInternal _CDOTAUserMsg_ItemFound_default_instance_;
class CDOTAUserMsg_ItemPurchased;
struct CDOTAUserMsg_ItemPurchasedDefaultTypeInternal;
extern CDOTAUserMsg_ItemPurchasedDefaultTypeInternal _CDOTAUserMsg_ItemPurchased_default_instance_;
class CDOTAUserMsg_ItemSold;
struct CDOTAUserMsg_ItemSoldDefaultTypeInternal;
extern CDOTAUserMsg_ItemSoldDefaultTypeInternal _CDOTAUserMsg_ItemSold_default_instance_;
class CDOTAUserMsg_KillcamDamageTaken;
struct CDOTAUserMsg_KillcamDamageTakenDefaultTypeInternal;
extern CDOTAUserMsg_KillcamDamageTakenDefaultTypeInternal _CDOTAUserMsg_KillcamDamageTaken_default_instance_;
class CDOTAUserMsg_LocationPing;
struct CDOTAUserMsg_LocationPingDefaultTypeInternal;
extern CDOTAUserMsg_LocationPingDefaultTypeInternal _CDOTAUserMsg_LocationPing_default_instance_;
class CDOTAUserMsg_MapLine;
struct CDOTAUserMsg_MapLineDefaultTypeInternal;
extern CDOTAUserMsg_MapLineDefaultTypeInternal _CDOTAUserMsg_MapLine_default_instance_;
class CDOTAUserMsg_MarsArenaOfBloodAttack;
struct CDOTAUserMsg_MarsArenaOfBloodAttackDefaultTypeInternal;
extern CDOTAUserMsg_MarsArenaOfBloodAttackDefaultTypeInternal _CDOTAUserMsg_MarsArenaOfBloodAttack_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo;
struct CDOTAUserMsg_MiniKillCamInfoDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfoDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_Attacker;
struct CDOTAUserMsg_MiniKillCamInfo_AttackerDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfo_AttackerDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability;
struct CDOTAUserMsg_MiniKillCamInfo_Attacker_AbilityDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfo_Attacker_AbilityDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_;
class CDOTAUserMsg_MiniTaunt;
struct CDOTAUserMsg_MiniTauntDefaultTypeInternal;
extern CDOTAUserMsg_MiniTauntDefaultTypeInternal _CDOTAUserMsg_MiniTaunt_default_instance_;
class CDOTAUserMsg_MinimapDebugPoint;
struct CDOTAUserMsg_MinimapDebugPointDefaultTypeInternal;
extern CDOTAUserMsg_MinimapDebugPointDefaultTypeInternal _CDOTAUserMsg_MinimapDebugPoint_default_instance_;
class CDOTAUserMsg_MinimapEvent;
struct CDOTAUserMsg_MinimapEventDefaultTypeInternal;
extern CDOTAUserMsg_MinimapEventDefaultTypeInternal _CDOTAUserMsg_MinimapEvent_default_instance_;
class CDOTAUserMsg_ModifierAlert;
struct CDOTAUserMsg_ModifierAlertDefaultTypeInternal;
extern CDOTAUserMsg_ModifierAlertDefaultTypeInternal _CDOTAUserMsg_ModifierAlert_default_instance_;
class CDOTAUserMsg_MoveCameraToUnit;
struct CDOTAUserMsg_MoveCameraToUnitDefaultTypeInternal;
extern CDOTAUserMsg_MoveCameraToUnitDefaultTypeInternal _CDOTAUserMsg_MoveCameraToUnit_default_instance_;
class CDOTAUserMsg_MutedPlayers;
struct CDOTAUserMsg_MutedPlayersDefaultTypeInternal;
extern CDOTAUserMsg_MutedPlayersDefaultTypeInternal _CDOTAUserMsg_MutedPlayers_default_instance_;
class CDOTAUserMsg_NevermoreRequiem;
struct CDOTAUserMsg_NevermoreRequiemDefaultTypeInternal;
extern CDOTAUserMsg_NevermoreRequiemDefaultTypeInternal _CDOTAUserMsg_NevermoreRequiem_default_instance_;
class CDOTAUserMsg_OMArcanaCombo;
struct CDOTAUserMsg_OMArcanaComboDefaultTypeInternal;
extern CDOTAUserMsg_OMArcanaComboDefaultTypeInternal _CDOTAUserMsg_OMArcanaCombo_default_instance_;
class CDOTAUserMsg_OutpostCaptured;
struct CDOTAUserMsg_OutpostCapturedDefaultTypeInternal;
extern CDOTAUserMsg_OutpostCapturedDefaultTypeInternal _CDOTAUserMsg_OutpostCaptured_default_instance_;
class CDOTAUserMsg_OutpostGrantedXP;
struct CDOTAUserMsg_OutpostGrantedXPDefaultTypeInternal;
extern CDOTAUserMsg_OutpostGrantedXPDefaultTypeInternal _CDOTAUserMsg_OutpostGrantedXP_default_instance_;
class CDOTAUserMsg_OverheadEvent;
struct CDOTAUserMsg_OverheadEventDefaultTypeInternal;
extern CDOTAUserMsg_OverheadEventDefaultTypeInternal _CDOTAUserMsg_OverheadEvent_default_instance_;
class CDOTAUserMsg_PauseMinigameData;
struct CDOTAUserMsg_PauseMinigameDataDefaultTypeInternal;
extern CDOTAUserMsg_PauseMinigameDataDefaultTypeInternal _CDOTAUserMsg_PauseMinigameData_default_instance_;
class CDOTAUserMsg_PauseMinigameData_DataBit;
struct CDOTAUserMsg_PauseMinigameData_DataBitDefaultTypeInternal;
extern CDOTAUserMsg_PauseMinigameData_DataBitDefaultTypeInternal _CDOTAUserMsg_PauseMinigameData_DataBit_default_instance_;
class CDOTAUserMsg_Ping;
struct CDOTAUserMsg_PingDefaultTypeInternal;
extern CDOTAUserMsg_PingDefaultTypeInternal _CDOTAUserMsg_Ping_default_instance_;
class CDOTAUserMsg_PingConfirmation;
struct CDOTAUserMsg_PingConfirmationDefaultTypeInternal;
extern CDOTAUserMsg_PingConfirmationDefaultTypeInternal _CDOTAUserMsg_PingConfirmation_default_instance_;
class CDOTAUserMsg_PlayerMMR;
struct CDOTAUserMsg_PlayerMMRDefaultTypeInternal;
extern CDOTAUserMsg_PlayerMMRDefaultTypeInternal _CDOTAUserMsg_PlayerMMR_default_instance_;
class CDOTAUserMsg_PredictionResult;
struct CDOTAUserMsg_PredictionResultDefaultTypeInternal;
extern CDOTAUserMsg_PredictionResultDefaultTypeInternal _CDOTAUserMsg_PredictionResult_default_instance_;
class CDOTAUserMsg_PredictionResult_Prediction;
struct CDOTAUserMsg_PredictionResult_PredictionDefaultTypeInternal;
extern CDOTAUserMsg_PredictionResult_PredictionDefaultTypeInternal _CDOTAUserMsg_PredictionResult_Prediction_default_instance_;
class CDOTAUserMsg_ProjectionAbility;
struct CDOTAUserMsg_ProjectionAbilityDefaultTypeInternal;
extern CDOTAUserMsg_ProjectionAbilityDefaultTypeInternal _CDOTAUserMsg_ProjectionAbility_default_instance_;
class CDOTAUserMsg_ProjectionEvent;
struct CDOTAUserMsg_ProjectionEventDefaultTypeInternal;
extern CDOTAUserMsg_ProjectionEventDefaultTypeInternal _CDOTAUserMsg_ProjectionEvent_default_instance_;
class CDOTAUserMsg_QoP_ArcanaSummary;
struct CDOTAUserMsg_QoP_ArcanaSummaryDefaultTypeInternal;
extern CDOTAUserMsg_QoP_ArcanaSummaryDefaultTypeInternal _CDOTAUserMsg_QoP_ArcanaSummary_default_instance_;
class CDOTAUserMsg_QuestStatus;
struct CDOTAUserMsg_QuestStatusDefaultTypeInternal;
extern CDOTAUserMsg_QuestStatusDefaultTypeInternal _CDOTAUserMsg_QuestStatus_default_instance_;
class CDOTAUserMsg_QueuedOrderRemoved;
struct CDOTAUserMsg_QueuedOrderRemovedDefaultTypeInternal;
extern CDOTAUserMsg_QueuedOrderRemovedDefaultTypeInternal _CDOTAUserMsg_QueuedOrderRemoved_default_instance_;
class CDOTAUserMsg_QuickBuyAlert;
struct CDOTAUserMsg_QuickBuyAlertDefaultTypeInternal;
extern CDOTAUserMsg_QuickBuyAlertDefaultTypeInternal _CDOTAUserMsg_QuickBuyAlert_default_instance_;
class CDOTAUserMsg_RadarAlert;
struct CDOTAUserMsg_RadarAlertDefaultTypeInternal;
extern CDOTAUserMsg_RadarAlertDefaultTypeInternal _CDOTAUserMsg_RadarAlert_default_instance_;
class CDOTAUserMsg_ReceivedXmasGift;
struct CDOTAUserMsg_ReceivedXmasGiftDefaultTypeInternal;
extern CDOTAUserMsg_ReceivedXmasGiftDefaultTypeInternal _CDOTAUserMsg_ReceivedXmasGift_default_instance_;
class CDOTAUserMsg_ReplaceQueryUnit;
struct CDOTAUserMsg_ReplaceQueryUnitDefaultTypeInternal;
extern CDOTAUserMsg_ReplaceQueryUnitDefaultTypeInternal _CDOTAUserMsg_ReplaceQueryUnit_default_instance_;
class CDOTAUserMsg_RollDiceResult;
struct CDOTAUserMsg_RollDiceResultDefaultTypeInternal;
extern CDOTAUserMsg_RollDiceResultDefaultTypeInternal _CDOTAUserMsg_RollDiceResult_default_instance_;
class CDOTAUserMsg_SalutePlayer;
struct CDOTAUserMsg_SalutePlayerDefaultTypeInternal;
extern CDOTAUserMsg_SalutePlayerDefaultTypeInternal _CDOTAUserMsg_SalutePlayer_default_instance_;
class CDOTAUserMsg_SelectPenaltyGold;
struct CDOTAUserMsg_SelectPenaltyGoldDefaultTypeInternal;
extern CDOTAUserMsg_SelectPenaltyGoldDefaultTypeInternal _CDOTAUserMsg_SelectPenaltyGold_default_instance_;
class CDOTAUserMsg_SendFinalGold;
struct CDOTAUserMsg_SendFinalGoldDefaultTypeInternal;
extern CDOTAUserMsg_SendFinalGoldDefaultTypeInternal _CDOTAUserMsg_SendFinalGold_default_instance_;
class CDOTAUserMsg_SendGenericToolTip;
struct CDOTAUserMsg_SendGenericToolTipDefaultTypeInternal;
extern CDOTAUserMsg_SendGenericToolTipDefaultTypeInternal _CDOTAUserMsg_SendGenericToolTip_default_instance_;
class CDOTAUserMsg_SendRoshanPopup;
struct CDOTAUserMsg_SendRoshanPopupDefaultTypeInternal;
extern CDOTAUserMsg_SendRoshanPopupDefaultTypeInternal _CDOTAUserMsg_SendRoshanPopup_default_instance_;
class CDOTAUserMsg_SendRoshanSpectatorPhase;
struct CDOTAUserMsg_SendRoshanSpectatorPhaseDefaultTypeInternal;
extern CDOTAUserMsg_SendRoshanSpectatorPhaseDefaultTypeInternal _CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_;
class CDOTAUserMsg_SendStatPopup;
struct CDOTAUserMsg_SendStatPopupDefaultTypeInternal;
extern CDOTAUserMsg_SendStatPopupDefaultTypeInternal _CDOTAUserMsg_SendStatPopup_default_instance_;
class CDOTAUserMsg_SetNextAutobuyItem;
struct CDOTAUserMsg_SetNextAutobuyItemDefaultTypeInternal;
extern CDOTAUserMsg_SetNextAutobuyItemDefaultTypeInternal _CDOTAUserMsg_SetNextAutobuyItem_default_instance_;
class CDOTAUserMsg_SharedCooldown;
struct CDOTAUserMsg_SharedCooldownDefaultTypeInternal;
extern CDOTAUserMsg_SharedCooldownDefaultTypeInternal _CDOTAUserMsg_SharedCooldown_default_instance_;
class CDOTAUserMsg_ShovelUnearth;
struct CDOTAUserMsg_ShovelUnearthDefaultTypeInternal;
extern CDOTAUserMsg_ShovelUnearthDefaultTypeInternal _CDOTAUserMsg_ShovelUnearth_default_instance_;
class CDOTAUserMsg_ShowGenericPopup;
struct CDOTAUserMsg_ShowGenericPopupDefaultTypeInternal;
extern CDOTAUserMsg_ShowGenericPopupDefaultTypeInternal _CDOTAUserMsg_ShowGenericPopup_default_instance_;
class CDOTAUserMsg_ShowSurvey;
struct CDOTAUserMsg_ShowSurveyDefaultTypeInternal;
extern CDOTAUserMsg_ShowSurveyDefaultTypeInternal _CDOTAUserMsg_ShowSurvey_default_instance_;
class CDOTAUserMsg_SpectatorPlayerClick;
struct CDOTAUserMsg_SpectatorPlayerClickDefaultTypeInternal;
extern CDOTAUserMsg_SpectatorPlayerClickDefaultTypeInternal _CDOTAUserMsg_SpectatorPlayerClick_default_instance_;
class CDOTAUserMsg_SpectatorPlayerUnitOrders;
struct CDOTAUserMsg_SpectatorPlayerUnitOrdersDefaultTypeInternal;
extern CDOTAUserMsg_SpectatorPlayerUnitOrdersDefaultTypeInternal _CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_;
class CDOTAUserMsg_SpeechBubble;
struct CDOTAUserMsg_SpeechBubbleDefaultTypeInternal;
extern CDOTAUserMsg_SpeechBubbleDefaultTypeInternal _CDOTAUserMsg_SpeechBubble_default_instance_;
class CDOTAUserMsg_StatsHeroLookup;
struct CDOTAUserMsg_StatsHeroLookupDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroLookupDefaultTypeInternal _CDOTAUserMsg_StatsHeroLookup_default_instance_;
class CDOTAUserMsg_StatsHeroMinuteDetails;
struct CDOTAUserMsg_StatsHeroMinuteDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroMinuteDetailsDefaultTypeInternal _CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfo;
struct CDOTAUserMsg_StatsHeroPositionInfoDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroPositionInfoDefaultTypeInternal _CDOTAUserMsg_StatsHeroPositionInfo_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfo_PositionPair;
struct CDOTAUserMsg_StatsHeroPositionInfo_PositionPairDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroPositionInfo_PositionPairDefaultTypeInternal _CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_;
class CDOTAUserMsg_StatsKillDetails;
struct CDOTAUserMsg_StatsKillDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsKillDetailsDefaultTypeInternal _CDOTAUserMsg_StatsKillDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails;
struct CDOTAUserMsg_StatsMatchDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails;
struct CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails;
struct CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_;
class CDOTAUserMsg_StatsPlayerKillShare;
struct CDOTAUserMsg_StatsPlayerKillShareDefaultTypeInternal;
extern CDOTAUserMsg_StatsPlayerKillShareDefaultTypeInternal _CDOTAUserMsg_StatsPlayerKillShare_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetails;
struct CDOTAUserMsg_StatsTeamMinuteDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsTeamMinuteDetailsDefaultTypeInternal _CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance;
struct CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformanceDefaultTypeInternal;
extern CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformanceDefaultTypeInternal _CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_;
class CDOTAUserMsg_SuggestHeroPick;
struct CDOTAUserMsg_SuggestHeroPickDefaultTypeInternal;
extern CDOTAUserMsg_SuggestHeroPickDefaultTypeInternal _CDOTAUserMsg_SuggestHeroPick_default_instance_;
class CDOTAUserMsg_SuggestHeroRole;
struct CDOTAUserMsg_SuggestHeroRoleDefaultTypeInternal;
extern CDOTAUserMsg_SuggestHeroRoleDefaultTypeInternal _CDOTAUserMsg_SuggestHeroRole_default_instance_;
class CDOTAUserMsg_SwapVerify;
struct CDOTAUserMsg_SwapVerifyDefaultTypeInternal;
extern CDOTAUserMsg_SwapVerifyDefaultTypeInternal _CDOTAUserMsg_SwapVerify_default_instance_;
class CDOTAUserMsg_TE_DestroyProjectile;
struct CDOTAUserMsg_TE_DestroyProjectileDefaultTypeInternal;
extern CDOTAUserMsg_TE_DestroyProjectileDefaultTypeInternal _CDOTAUserMsg_TE_DestroyProjectile_default_instance_;
class CDOTAUserMsg_TE_DotaBloodImpact;
struct CDOTAUserMsg_TE_DotaBloodImpactDefaultTypeInternal;
extern CDOTAUserMsg_TE_DotaBloodImpactDefaultTypeInternal _CDOTAUserMsg_TE_DotaBloodImpact_default_instance_;
class CDOTAUserMsg_TE_Projectile;
struct CDOTAUserMsg_TE_ProjectileDefaultTypeInternal;
extern CDOTAUserMsg_TE_ProjectileDefaultTypeInternal _CDOTAUserMsg_TE_Projectile_default_instance_;
class CDOTAUserMsg_TE_ProjectileLoc;
struct CDOTAUserMsg_TE_ProjectileLocDefaultTypeInternal;
extern CDOTAUserMsg_TE_ProjectileLocDefaultTypeInternal _CDOTAUserMsg_TE_ProjectileLoc_default_instance_;
class CDOTAUserMsg_TE_UnitAnimation;
struct CDOTAUserMsg_TE_UnitAnimationDefaultTypeInternal;
extern CDOTAUserMsg_TE_UnitAnimationDefaultTypeInternal _CDOTAUserMsg_TE_UnitAnimation_default_instance_;
class CDOTAUserMsg_TE_UnitAnimationEnd;
struct CDOTAUserMsg_TE_UnitAnimationEndDefaultTypeInternal;
extern CDOTAUserMsg_TE_UnitAnimationEndDefaultTypeInternal _CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_;
class CDOTAUserMsg_TalentTreeAlert;
struct CDOTAUserMsg_TalentTreeAlertDefaultTypeInternal;
extern CDOTAUserMsg_TalentTreeAlertDefaultTypeInternal _CDOTAUserMsg_TalentTreeAlert_default_instance_;
class CDOTAUserMsg_TipAlert;
struct CDOTAUserMsg_TipAlertDefaultTypeInternal;
extern CDOTAUserMsg_TipAlertDefaultTypeInternal _CDOTAUserMsg_TipAlert_default_instance_;
class CDOTAUserMsg_TutorialFade;
struct CDOTAUserMsg_TutorialFadeDefaultTypeInternal;
extern CDOTAUserMsg_TutorialFadeDefaultTypeInternal _CDOTAUserMsg_TutorialFade_default_instance_;
class CDOTAUserMsg_TutorialFinish;
struct CDOTAUserMsg_TutorialFinishDefaultTypeInternal;
extern CDOTAUserMsg_TutorialFinishDefaultTypeInternal _CDOTAUserMsg_TutorialFinish_default_instance_;
class CDOTAUserMsg_TutorialMinimapPosition;
struct CDOTAUserMsg_TutorialMinimapPositionDefaultTypeInternal;
extern CDOTAUserMsg_TutorialMinimapPositionDefaultTypeInternal _CDOTAUserMsg_TutorialMinimapPosition_default_instance_;
class CDOTAUserMsg_TutorialPingMinimap;
struct CDOTAUserMsg_TutorialPingMinimapDefaultTypeInternal;
extern CDOTAUserMsg_TutorialPingMinimapDefaultTypeInternal _CDOTAUserMsg_TutorialPingMinimap_default_instance_;
class CDOTAUserMsg_TutorialRequestExp;
struct CDOTAUserMsg_TutorialRequestExpDefaultTypeInternal;
extern CDOTAUserMsg_TutorialRequestExpDefaultTypeInternal _CDOTAUserMsg_TutorialRequestExp_default_instance_;
class CDOTAUserMsg_TutorialTipInfo;
struct CDOTAUserMsg_TutorialTipInfoDefaultTypeInternal;
extern CDOTAUserMsg_TutorialTipInfoDefaultTypeInternal _CDOTAUserMsg_TutorialTipInfo_default_instance_;
class CDOTAUserMsg_UnitEvent;
struct CDOTAUserMsg_UnitEventDefaultTypeInternal;
extern CDOTAUserMsg_UnitEventDefaultTypeInternal _CDOTAUserMsg_UnitEvent_default_instance_;
class CDOTAUserMsg_UnitEvent_AddGesture;
struct CDOTAUserMsg_UnitEvent_AddGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_AddGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_AddGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_BloodImpact;
struct CDOTAUserMsg_UnitEvent_BloodImpactDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_BloodImpactDefaultTypeInternal _CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_;
class CDOTAUserMsg_UnitEvent_FadeGesture;
struct CDOTAUserMsg_UnitEvent_FadeGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_FadeGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_Interval;
struct CDOTAUserMsg_UnitEvent_IntervalDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_IntervalDefaultTypeInternal _CDOTAUserMsg_UnitEvent_Interval_default_instance_;
class CDOTAUserMsg_UnitEvent_RemoveGesture;
struct CDOTAUserMsg_UnitEvent_RemoveGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_RemoveGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_Speech;
struct CDOTAUserMsg_UnitEvent_SpeechDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_SpeechDefaultTypeInternal _CDOTAUserMsg_UnitEvent_Speech_default_instance_;
class CDOTAUserMsg_UnitEvent_SpeechMute;
struct CDOTAUserMsg_UnitEvent_SpeechMuteDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_SpeechMuteDefaultTypeInternal _CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_;
class CDOTAUserMsg_UpdateQuestProgress;
struct CDOTAUserMsg_UpdateQuestProgressDefaultTypeInternal;
extern CDOTAUserMsg_UpdateQuestProgressDefaultTypeInternal _CDOTAUserMsg_UpdateQuestProgress_default_instance_;
class CDOTAUserMsg_UpdateSharedContent;
struct CDOTAUserMsg_UpdateSharedContentDefaultTypeInternal;
extern CDOTAUserMsg_UpdateSharedContentDefaultTypeInternal _CDOTAUserMsg_UpdateSharedContent_default_instance_;
class CDOTAUserMsg_VersusScene_PlayerBehavior;
struct CDOTAUserMsg_VersusScene_PlayerBehaviorDefaultTypeInternal;
extern CDOTAUserMsg_VersusScene_PlayerBehaviorDefaultTypeInternal _CDOTAUserMsg_VersusScene_PlayerBehavior_default_instance_;
class CDOTAUserMsg_VoteEnd;
struct CDOTAUserMsg_VoteEndDefaultTypeInternal;
extern CDOTAUserMsg_VoteEndDefaultTypeInternal _CDOTAUserMsg_VoteEnd_default_instance_;
class CDOTAUserMsg_VoteStart;
struct CDOTAUserMsg_VoteStartDefaultTypeInternal;
extern CDOTAUserMsg_VoteStartDefaultTypeInternal _CDOTAUserMsg_VoteStart_default_instance_;
class CDOTAUserMsg_VoteUpdate;
struct CDOTAUserMsg_VoteUpdateDefaultTypeInternal;
extern CDOTAUserMsg_VoteUpdateDefaultTypeInternal _CDOTAUserMsg_VoteUpdate_default_instance_;
class CDOTAUserMsg_WK_Arcana_Progress;
struct CDOTAUserMsg_WK_Arcana_ProgressDefaultTypeInternal;
extern CDOTAUserMsg_WK_Arcana_ProgressDefaultTypeInternal _CDOTAUserMsg_WK_Arcana_Progress_default_instance_;
class CDOTAUserMsg_WRArcanaProgress;
struct CDOTAUserMsg_WRArcanaProgressDefaultTypeInternal;
extern CDOTAUserMsg_WRArcanaProgressDefaultTypeInternal _CDOTAUserMsg_WRArcanaProgress_default_instance_;
class CDOTAUserMsg_WRArcanaSummary;
struct CDOTAUserMsg_WRArcanaSummaryDefaultTypeInternal;
extern CDOTAUserMsg_WRArcanaSummaryDefaultTypeInternal _CDOTAUserMsg_WRArcanaSummary_default_instance_;
class CDOTAUserMsg_WillPurchaseAlert;
struct CDOTAUserMsg_WillPurchaseAlertDefaultTypeInternal;
extern CDOTAUserMsg_WillPurchaseAlertDefaultTypeInternal _CDOTAUserMsg_WillPurchaseAlert_default_instance_;
class CDOTAUserMsg_WorldLine;
struct CDOTAUserMsg_WorldLineDefaultTypeInternal;
extern CDOTAUserMsg_WorldLineDefaultTypeInternal _CDOTAUserMsg_WorldLine_default_instance_;
class CDOTAUserMsg_XPAlert;
struct CDOTAUserMsg_XPAlertDefaultTypeInternal;
extern CDOTAUserMsg_XPAlertDefaultTypeInternal _CDOTAUserMsg_XPAlert_default_instance_;
class CMsgCombatAnalyzerPlayerStat;
struct CMsgCombatAnalyzerPlayerStatDefaultTypeInternal;
extern CMsgCombatAnalyzerPlayerStatDefaultTypeInternal _CMsgCombatAnalyzerPlayerStat_default_instance_;
class CMsgCombatAnalyzerStats;
struct CMsgCombatAnalyzerStatsDefaultTypeInternal;
extern CMsgCombatAnalyzerStatsDefaultTypeInternal _CMsgCombatAnalyzerStats_default_instance_;
class CMsgHeroAbilityStat;
struct CMsgHeroAbilityStatDefaultTypeInternal;
extern CMsgHeroAbilityStatDefaultTypeInternal _CMsgHeroAbilityStat_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CDOTAEntityMsg_InvokerSpellCast* Arena::CreateMaybeMessage<::CDOTAEntityMsg_InvokerSpellCast>(Arena*);
template<> ::CDOTAResponseQuerySerialized* Arena::CreateMaybeMessage<::CDOTAResponseQuerySerialized>(Arena*);
template<> ::CDOTAResponseQuerySerialized_Fact* Arena::CreateMaybeMessage<::CDOTAResponseQuerySerialized_Fact>(Arena*);
template<> ::CDOTASpeechMatchOnClient* Arena::CreateMaybeMessage<::CDOTASpeechMatchOnClient>(Arena*);
template<> ::CDOTAUserMessage_RequestItemSuggestions* Arena::CreateMaybeMessage<::CDOTAUserMessage_RequestItemSuggestions>(Arena*);
template<> ::CDOTAUserMessage_TeamCaptainChanged* Arena::CreateMaybeMessage<::CDOTAUserMessage_TeamCaptainChanged>(Arena*);
template<> ::CDOTAUserMsg_AIDebugLine* Arena::CreateMaybeMessage<::CDOTAUserMsg_AIDebugLine>(Arena*);
template<> ::CDOTAUserMsg_AbilityDraftRequestAbility* Arena::CreateMaybeMessage<::CDOTAUserMsg_AbilityDraftRequestAbility>(Arena*);
template<> ::CDOTAUserMsg_AbilityPing* Arena::CreateMaybeMessage<::CDOTAUserMsg_AbilityPing>(Arena*);
template<> ::CDOTAUserMsg_AbilitySteal* Arena::CreateMaybeMessage<::CDOTAUserMsg_AbilitySteal>(Arena*);
template<> ::CDOTAUserMsg_AddQuestLogEntry* Arena::CreateMaybeMessage<::CDOTAUserMsg_AddQuestLogEntry>(Arena*);
template<> ::CDOTAUserMsg_AghsStatusAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_AghsStatusAlert>(Arena*);
template<> ::CDOTAUserMsg_AllStarEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_AllStarEvent>(Arena*);
template<> ::CDOTAUserMsg_AllStarEvent_PlayerScore* Arena::CreateMaybeMessage<::CDOTAUserMsg_AllStarEvent_PlayerScore>(Arena*);
template<> ::CDOTAUserMsg_BeastChat* Arena::CreateMaybeMessage<::CDOTAUserMsg_BeastChat>(Arena*);
template<> ::CDOTAUserMsg_BoosterState* Arena::CreateMaybeMessage<::CDOTAUserMsg_BoosterState>(Arena*);
template<> ::CDOTAUserMsg_BoosterStatePlayer* Arena::CreateMaybeMessage<::CDOTAUserMsg_BoosterStatePlayer>(Arena*);
template<> ::CDOTAUserMsg_BotChat* Arena::CreateMaybeMessage<::CDOTAUserMsg_BotChat>(Arena*);
template<> ::CDOTAUserMsg_BuyBackStateAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_BuyBackStateAlert>(Arena*);
template<> ::CDOTAUserMsg_ChatEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_ChatEvent>(Arena*);
template<> ::CDOTAUserMsg_ChatMessage* Arena::CreateMaybeMessage<::CDOTAUserMsg_ChatMessage>(Arena*);
template<> ::CDOTAUserMsg_ChatWheel* Arena::CreateMaybeMessage<::CDOTAUserMsg_ChatWheel>(Arena*);
template<> ::CDOTAUserMsg_ChatWheelCooldown* Arena::CreateMaybeMessage<::CDOTAUserMsg_ChatWheelCooldown>(Arena*);
template<> ::CDOTAUserMsg_ClientLoadGridNav* Arena::CreateMaybeMessage<::CDOTAUserMsg_ClientLoadGridNav>(Arena*);
template<> ::CDOTAUserMsg_CoachHUDPing* Arena::CreateMaybeMessage<::CDOTAUserMsg_CoachHUDPing>(Arena*);
template<> ::CDOTAUserMsg_CombatHeroPositions* Arena::CreateMaybeMessage<::CDOTAUserMsg_CombatHeroPositions>(Arena*);
template<> ::CDOTAUserMsg_CombatLogBulkData* Arena::CreateMaybeMessage<::CDOTAUserMsg_CombatLogBulkData>(Arena*);
template<> ::CDOTAUserMsg_CompendiumState* Arena::CreateMaybeMessage<::CDOTAUserMsg_CompendiumState>(Arena*);
template<> ::CDOTAUserMsg_CompendiumStatePlayer* Arena::CreateMaybeMessage<::CDOTAUserMsg_CompendiumStatePlayer>(Arena*);
template<> ::CDOTAUserMsg_ContextualTip* Arena::CreateMaybeMessage<::CDOTAUserMsg_ContextualTip>(Arena*);
template<> ::CDOTAUserMsg_CourierKilledAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_CourierKilledAlert>(Arena*);
template<> ::CDOTAUserMsg_CourierKilledAlert_LostItem* Arena::CreateMaybeMessage<::CDOTAUserMsg_CourierKilledAlert_LostItem>(Arena*);
template<> ::CDOTAUserMsg_CreateLinearProjectile* Arena::CreateMaybeMessage<::CDOTAUserMsg_CreateLinearProjectile>(Arena*);
template<> ::CDOTAUserMsg_CustomHeaderMessage* Arena::CreateMaybeMessage<::CDOTAUserMsg_CustomHeaderMessage>(Arena*);
template<> ::CDOTAUserMsg_CustomHudElement_Create* Arena::CreateMaybeMessage<::CDOTAUserMsg_CustomHudElement_Create>(Arena*);
template<> ::CDOTAUserMsg_CustomHudElement_Destroy* Arena::CreateMaybeMessage<::CDOTAUserMsg_CustomHudElement_Destroy>(Arena*);
template<> ::CDOTAUserMsg_CustomHudElement_Modify* Arena::CreateMaybeMessage<::CDOTAUserMsg_CustomHudElement_Modify>(Arena*);
template<> ::CDOTAUserMsg_CustomMsg* Arena::CreateMaybeMessage<::CDOTAUserMsg_CustomMsg>(Arena*);
template<> ::CDOTAUserMsg_DamageReport* Arena::CreateMaybeMessage<::CDOTAUserMsg_DamageReport>(Arena*);
template<> ::CDOTAUserMsg_DebugChallenge* Arena::CreateMaybeMessage<::CDOTAUserMsg_DebugChallenge>(Arena*);
template<> ::CDOTAUserMsg_DestroyLinearProjectile* Arena::CreateMaybeMessage<::CDOTAUserMsg_DestroyLinearProjectile>(Arena*);
template<> ::CDOTAUserMsg_DismissAllStatPopups* Arena::CreateMaybeMessage<::CDOTAUserMsg_DismissAllStatPopups>(Arena*);
template<> ::CDOTAUserMsg_DodgeTrackingProjectiles* Arena::CreateMaybeMessage<::CDOTAUserMsg_DodgeTrackingProjectiles>(Arena*);
template<> ::CDOTAUserMsg_ESArcanaCombo* Arena::CreateMaybeMessage<::CDOTAUserMsg_ESArcanaCombo>(Arena*);
template<> ::CDOTAUserMsg_ESArcanaComboSummary* Arena::CreateMaybeMessage<::CDOTAUserMsg_ESArcanaComboSummary>(Arena*);
template<> ::CDOTAUserMsg_EmptyItemSlotAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_EmptyItemSlotAlert>(Arena*);
template<> ::CDOTAUserMsg_EmptyTeleportAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_EmptyTeleportAlert>(Arena*);
template<> ::CDOTAUserMsg_EnemyItemAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_EnemyItemAlert>(Arena*);
template<> ::CDOTAUserMsg_FlipCoinResult* Arena::CreateMaybeMessage<::CDOTAUserMsg_FlipCoinResult>(Arena*);
template<> ::CDOTAUserMsg_FoundNeutralItem* Arena::CreateMaybeMessage<::CDOTAUserMsg_FoundNeutralItem>(Arena*);
template<> ::CDOTAUserMsg_GamerulesStateChanged* Arena::CreateMaybeMessage<::CDOTAUserMsg_GamerulesStateChanged>(Arena*);
template<> ::CDOTAUserMsg_GlobalLightColor* Arena::CreateMaybeMessage<::CDOTAUserMsg_GlobalLightColor>(Arena*);
template<> ::CDOTAUserMsg_GlobalLightDirection* Arena::CreateMaybeMessage<::CDOTAUserMsg_GlobalLightDirection>(Arena*);
template<> ::CDOTAUserMsg_GlyphAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_GlyphAlert>(Arena*);
template<> ::CDOTAUserMsg_GuildChallenge_Progress* Arena::CreateMaybeMessage<::CDOTAUserMsg_GuildChallenge_Progress>(Arena*);
template<> ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* Arena::CreateMaybeMessage<::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress>(Arena*);
template<> ::CDOTAUserMsg_HPManaAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_HPManaAlert>(Arena*);
template<> ::CDOTAUserMsg_HalloweenDrops* Arena::CreateMaybeMessage<::CDOTAUserMsg_HalloweenDrops>(Arena*);
template<> ::CDOTAUserMsg_HeroRelicProgress* Arena::CreateMaybeMessage<::CDOTAUserMsg_HeroRelicProgress>(Arena*);
template<> ::CDOTAUserMsg_HighFiveCompleted* Arena::CreateMaybeMessage<::CDOTAUserMsg_HighFiveCompleted>(Arena*);
template<> ::CDOTAUserMsg_HighFiveLeftHanging* Arena::CreateMaybeMessage<::CDOTAUserMsg_HighFiveLeftHanging>(Arena*);
template<> ::CDOTAUserMsg_HotPotato_Created* Arena::CreateMaybeMessage<::CDOTAUserMsg_HotPotato_Created>(Arena*);
template<> ::CDOTAUserMsg_HotPotato_Exploded* Arena::CreateMaybeMessage<::CDOTAUserMsg_HotPotato_Exploded>(Arena*);
template<> ::CDOTAUserMsg_HudError* Arena::CreateMaybeMessage<::CDOTAUserMsg_HudError>(Arena*);
template<> ::CDOTAUserMsg_InvalidCommand* Arena::CreateMaybeMessage<::CDOTAUserMsg_InvalidCommand>(Arena*);
template<> ::CDOTAUserMsg_ItemAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_ItemAlert>(Arena*);
template<> ::CDOTAUserMsg_ItemFound* Arena::CreateMaybeMessage<::CDOTAUserMsg_ItemFound>(Arena*);
template<> ::CDOTAUserMsg_ItemPurchased* Arena::CreateMaybeMessage<::CDOTAUserMsg_ItemPurchased>(Arena*);
template<> ::CDOTAUserMsg_ItemSold* Arena::CreateMaybeMessage<::CDOTAUserMsg_ItemSold>(Arena*);
template<> ::CDOTAUserMsg_KillcamDamageTaken* Arena::CreateMaybeMessage<::CDOTAUserMsg_KillcamDamageTaken>(Arena*);
template<> ::CDOTAUserMsg_LocationPing* Arena::CreateMaybeMessage<::CDOTAUserMsg_LocationPing>(Arena*);
template<> ::CDOTAUserMsg_MapLine* Arena::CreateMaybeMessage<::CDOTAUserMsg_MapLine>(Arena*);
template<> ::CDOTAUserMsg_MarsArenaOfBloodAttack* Arena::CreateMaybeMessage<::CDOTAUserMsg_MarsArenaOfBloodAttack>(Arena*);
template<> ::CDOTAUserMsg_MiniKillCamInfo* Arena::CreateMaybeMessage<::CDOTAUserMsg_MiniKillCamInfo>(Arena*);
template<> ::CDOTAUserMsg_MiniKillCamInfo_Attacker* Arena::CreateMaybeMessage<::CDOTAUserMsg_MiniKillCamInfo_Attacker>(Arena*);
template<> ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* Arena::CreateMaybeMessage<::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>(Arena*);
template<> ::CDOTAUserMsg_MiniTaunt* Arena::CreateMaybeMessage<::CDOTAUserMsg_MiniTaunt>(Arena*);
template<> ::CDOTAUserMsg_MinimapDebugPoint* Arena::CreateMaybeMessage<::CDOTAUserMsg_MinimapDebugPoint>(Arena*);
template<> ::CDOTAUserMsg_MinimapEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_MinimapEvent>(Arena*);
template<> ::CDOTAUserMsg_ModifierAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_ModifierAlert>(Arena*);
template<> ::CDOTAUserMsg_MoveCameraToUnit* Arena::CreateMaybeMessage<::CDOTAUserMsg_MoveCameraToUnit>(Arena*);
template<> ::CDOTAUserMsg_MutedPlayers* Arena::CreateMaybeMessage<::CDOTAUserMsg_MutedPlayers>(Arena*);
template<> ::CDOTAUserMsg_NevermoreRequiem* Arena::CreateMaybeMessage<::CDOTAUserMsg_NevermoreRequiem>(Arena*);
template<> ::CDOTAUserMsg_OMArcanaCombo* Arena::CreateMaybeMessage<::CDOTAUserMsg_OMArcanaCombo>(Arena*);
template<> ::CDOTAUserMsg_OutpostCaptured* Arena::CreateMaybeMessage<::CDOTAUserMsg_OutpostCaptured>(Arena*);
template<> ::CDOTAUserMsg_OutpostGrantedXP* Arena::CreateMaybeMessage<::CDOTAUserMsg_OutpostGrantedXP>(Arena*);
template<> ::CDOTAUserMsg_OverheadEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_OverheadEvent>(Arena*);
template<> ::CDOTAUserMsg_PauseMinigameData* Arena::CreateMaybeMessage<::CDOTAUserMsg_PauseMinigameData>(Arena*);
template<> ::CDOTAUserMsg_PauseMinigameData_DataBit* Arena::CreateMaybeMessage<::CDOTAUserMsg_PauseMinigameData_DataBit>(Arena*);
template<> ::CDOTAUserMsg_Ping* Arena::CreateMaybeMessage<::CDOTAUserMsg_Ping>(Arena*);
template<> ::CDOTAUserMsg_PingConfirmation* Arena::CreateMaybeMessage<::CDOTAUserMsg_PingConfirmation>(Arena*);
template<> ::CDOTAUserMsg_PlayerMMR* Arena::CreateMaybeMessage<::CDOTAUserMsg_PlayerMMR>(Arena*);
template<> ::CDOTAUserMsg_PredictionResult* Arena::CreateMaybeMessage<::CDOTAUserMsg_PredictionResult>(Arena*);
template<> ::CDOTAUserMsg_PredictionResult_Prediction* Arena::CreateMaybeMessage<::CDOTAUserMsg_PredictionResult_Prediction>(Arena*);
template<> ::CDOTAUserMsg_ProjectionAbility* Arena::CreateMaybeMessage<::CDOTAUserMsg_ProjectionAbility>(Arena*);
template<> ::CDOTAUserMsg_ProjectionEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_ProjectionEvent>(Arena*);
template<> ::CDOTAUserMsg_QoP_ArcanaSummary* Arena::CreateMaybeMessage<::CDOTAUserMsg_QoP_ArcanaSummary>(Arena*);
template<> ::CDOTAUserMsg_QuestStatus* Arena::CreateMaybeMessage<::CDOTAUserMsg_QuestStatus>(Arena*);
template<> ::CDOTAUserMsg_QueuedOrderRemoved* Arena::CreateMaybeMessage<::CDOTAUserMsg_QueuedOrderRemoved>(Arena*);
template<> ::CDOTAUserMsg_QuickBuyAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_QuickBuyAlert>(Arena*);
template<> ::CDOTAUserMsg_RadarAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_RadarAlert>(Arena*);
template<> ::CDOTAUserMsg_ReceivedXmasGift* Arena::CreateMaybeMessage<::CDOTAUserMsg_ReceivedXmasGift>(Arena*);
template<> ::CDOTAUserMsg_ReplaceQueryUnit* Arena::CreateMaybeMessage<::CDOTAUserMsg_ReplaceQueryUnit>(Arena*);
template<> ::CDOTAUserMsg_RollDiceResult* Arena::CreateMaybeMessage<::CDOTAUserMsg_RollDiceResult>(Arena*);
template<> ::CDOTAUserMsg_SalutePlayer* Arena::CreateMaybeMessage<::CDOTAUserMsg_SalutePlayer>(Arena*);
template<> ::CDOTAUserMsg_SelectPenaltyGold* Arena::CreateMaybeMessage<::CDOTAUserMsg_SelectPenaltyGold>(Arena*);
template<> ::CDOTAUserMsg_SendFinalGold* Arena::CreateMaybeMessage<::CDOTAUserMsg_SendFinalGold>(Arena*);
template<> ::CDOTAUserMsg_SendGenericToolTip* Arena::CreateMaybeMessage<::CDOTAUserMsg_SendGenericToolTip>(Arena*);
template<> ::CDOTAUserMsg_SendRoshanPopup* Arena::CreateMaybeMessage<::CDOTAUserMsg_SendRoshanPopup>(Arena*);
template<> ::CDOTAUserMsg_SendRoshanSpectatorPhase* Arena::CreateMaybeMessage<::CDOTAUserMsg_SendRoshanSpectatorPhase>(Arena*);
template<> ::CDOTAUserMsg_SendStatPopup* Arena::CreateMaybeMessage<::CDOTAUserMsg_SendStatPopup>(Arena*);
template<> ::CDOTAUserMsg_SetNextAutobuyItem* Arena::CreateMaybeMessage<::CDOTAUserMsg_SetNextAutobuyItem>(Arena*);
template<> ::CDOTAUserMsg_SharedCooldown* Arena::CreateMaybeMessage<::CDOTAUserMsg_SharedCooldown>(Arena*);
template<> ::CDOTAUserMsg_ShovelUnearth* Arena::CreateMaybeMessage<::CDOTAUserMsg_ShovelUnearth>(Arena*);
template<> ::CDOTAUserMsg_ShowGenericPopup* Arena::CreateMaybeMessage<::CDOTAUserMsg_ShowGenericPopup>(Arena*);
template<> ::CDOTAUserMsg_ShowSurvey* Arena::CreateMaybeMessage<::CDOTAUserMsg_ShowSurvey>(Arena*);
template<> ::CDOTAUserMsg_SpectatorPlayerClick* Arena::CreateMaybeMessage<::CDOTAUserMsg_SpectatorPlayerClick>(Arena*);
template<> ::CDOTAUserMsg_SpectatorPlayerUnitOrders* Arena::CreateMaybeMessage<::CDOTAUserMsg_SpectatorPlayerUnitOrders>(Arena*);
template<> ::CDOTAUserMsg_SpeechBubble* Arena::CreateMaybeMessage<::CDOTAUserMsg_SpeechBubble>(Arena*);
template<> ::CDOTAUserMsg_StatsHeroLookup* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsHeroLookup>(Arena*);
template<> ::CDOTAUserMsg_StatsHeroMinuteDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsHeroMinuteDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsHeroPositionInfo* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsHeroPositionInfo>(Arena*);
template<> ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair>(Arena*);
template<> ::CDOTAUserMsg_StatsKillDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsKillDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsMatchDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsMatchDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsPlayerKillShare* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsPlayerKillShare>(Arena*);
template<> ::CDOTAUserMsg_StatsTeamMinuteDetails* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsTeamMinuteDetails>(Arena*);
template<> ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* Arena::CreateMaybeMessage<::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance>(Arena*);
template<> ::CDOTAUserMsg_SuggestHeroPick* Arena::CreateMaybeMessage<::CDOTAUserMsg_SuggestHeroPick>(Arena*);
template<> ::CDOTAUserMsg_SuggestHeroRole* Arena::CreateMaybeMessage<::CDOTAUserMsg_SuggestHeroRole>(Arena*);
template<> ::CDOTAUserMsg_SwapVerify* Arena::CreateMaybeMessage<::CDOTAUserMsg_SwapVerify>(Arena*);
template<> ::CDOTAUserMsg_TE_DestroyProjectile* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_DestroyProjectile>(Arena*);
template<> ::CDOTAUserMsg_TE_DotaBloodImpact* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_DotaBloodImpact>(Arena*);
template<> ::CDOTAUserMsg_TE_Projectile* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_Projectile>(Arena*);
template<> ::CDOTAUserMsg_TE_ProjectileLoc* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_ProjectileLoc>(Arena*);
template<> ::CDOTAUserMsg_TE_UnitAnimation* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_UnitAnimation>(Arena*);
template<> ::CDOTAUserMsg_TE_UnitAnimationEnd* Arena::CreateMaybeMessage<::CDOTAUserMsg_TE_UnitAnimationEnd>(Arena*);
template<> ::CDOTAUserMsg_TalentTreeAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_TalentTreeAlert>(Arena*);
template<> ::CDOTAUserMsg_TipAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_TipAlert>(Arena*);
template<> ::CDOTAUserMsg_TutorialFade* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialFade>(Arena*);
template<> ::CDOTAUserMsg_TutorialFinish* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialFinish>(Arena*);
template<> ::CDOTAUserMsg_TutorialMinimapPosition* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialMinimapPosition>(Arena*);
template<> ::CDOTAUserMsg_TutorialPingMinimap* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialPingMinimap>(Arena*);
template<> ::CDOTAUserMsg_TutorialRequestExp* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialRequestExp>(Arena*);
template<> ::CDOTAUserMsg_TutorialTipInfo* Arena::CreateMaybeMessage<::CDOTAUserMsg_TutorialTipInfo>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_AddGesture* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_AddGesture>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_BloodImpact* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_BloodImpact>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_FadeGesture* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_FadeGesture>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_Interval* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_Interval>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_RemoveGesture* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_RemoveGesture>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_Speech* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_Speech>(Arena*);
template<> ::CDOTAUserMsg_UnitEvent_SpeechMute* Arena::CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_SpeechMute>(Arena*);
template<> ::CDOTAUserMsg_UpdateQuestProgress* Arena::CreateMaybeMessage<::CDOTAUserMsg_UpdateQuestProgress>(Arena*);
template<> ::CDOTAUserMsg_UpdateSharedContent* Arena::CreateMaybeMessage<::CDOTAUserMsg_UpdateSharedContent>(Arena*);
template<> ::CDOTAUserMsg_VersusScene_PlayerBehavior* Arena::CreateMaybeMessage<::CDOTAUserMsg_VersusScene_PlayerBehavior>(Arena*);
template<> ::CDOTAUserMsg_VoteEnd* Arena::CreateMaybeMessage<::CDOTAUserMsg_VoteEnd>(Arena*);
template<> ::CDOTAUserMsg_VoteStart* Arena::CreateMaybeMessage<::CDOTAUserMsg_VoteStart>(Arena*);
template<> ::CDOTAUserMsg_VoteUpdate* Arena::CreateMaybeMessage<::CDOTAUserMsg_VoteUpdate>(Arena*);
template<> ::CDOTAUserMsg_WK_Arcana_Progress* Arena::CreateMaybeMessage<::CDOTAUserMsg_WK_Arcana_Progress>(Arena*);
template<> ::CDOTAUserMsg_WRArcanaProgress* Arena::CreateMaybeMessage<::CDOTAUserMsg_WRArcanaProgress>(Arena*);
template<> ::CDOTAUserMsg_WRArcanaSummary* Arena::CreateMaybeMessage<::CDOTAUserMsg_WRArcanaSummary>(Arena*);
template<> ::CDOTAUserMsg_WillPurchaseAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_WillPurchaseAlert>(Arena*);
template<> ::CDOTAUserMsg_WorldLine* Arena::CreateMaybeMessage<::CDOTAUserMsg_WorldLine>(Arena*);
template<> ::CDOTAUserMsg_XPAlert* Arena::CreateMaybeMessage<::CDOTAUserMsg_XPAlert>(Arena*);
template<> ::CMsgCombatAnalyzerPlayerStat* Arena::CreateMaybeMessage<::CMsgCombatAnalyzerPlayerStat>(Arena*);
template<> ::CMsgCombatAnalyzerStats* Arena::CreateMaybeMessage<::CMsgCombatAnalyzerStats>(Arena*);
template<> ::CMsgHeroAbilityStat* Arena::CreateMaybeMessage<::CMsgHeroAbilityStat>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CDOTAUserMsg_PredictionResult_Prediction_EResult : int {
  CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted = 1,
  CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed = 2
};
bool CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(int value);
constexpr CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MIN = CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted;
constexpr CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX = CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed;
constexpr int CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_ARRAYSIZE = CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
template<typename T>
inline const std::string& CDOTAUserMsg_PredictionResult_Prediction_EResult_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CDOTAUserMsg_PredictionResult_Prediction_EResult>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CDOTAUserMsg_PredictionResult_Prediction_EResult_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor(), enum_t_value);
}
inline bool CDOTAUserMsg_PredictionResult_Prediction_EResult_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CDOTAUserMsg_PredictionResult_Prediction_EResult* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CDOTAUserMsg_PredictionResult_Prediction_EResult>(
    CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor(), name, value);
}
enum CDOTAResponseQuerySerialized_Fact_ValueType : int {
  CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC = 1,
  CDOTAResponseQuerySerialized_Fact_ValueType_STRING = 2,
  CDOTAResponseQuerySerialized_Fact_ValueType_STRINGTABLE_INDEX = 3,
  CDOTAResponseQuerySerialized_Fact_ValueType_INT_NUMERIC = 4
};
bool CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(int value);
constexpr CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MIN = CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC;
constexpr CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX = CDOTAResponseQuerySerialized_Fact_ValueType_INT_NUMERIC;
constexpr int CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_ARRAYSIZE = CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
template<typename T>
inline const std::string& CDOTAResponseQuerySerialized_Fact_ValueType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CDOTAResponseQuerySerialized_Fact_ValueType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CDOTAResponseQuerySerialized_Fact_ValueType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CDOTAResponseQuerySerialized_Fact_ValueType_descriptor(), enum_t_value);
}
inline bool CDOTAResponseQuerySerialized_Fact_ValueType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CDOTAResponseQuerySerialized_Fact_ValueType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CDOTAResponseQuerySerialized_Fact_ValueType>(
    CDOTAResponseQuerySerialized_Fact_ValueType_descriptor(), name, value);
}
enum CDOTAUserMsg_GuildChallenge_Progress_EChallengeType : int {
  CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Invalid = 0,
  CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Cooperative = 1,
  CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Contract = 2
};
bool CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_IsValid(int value);
constexpr CDOTAUserMsg_GuildChallenge_Progress_EChallengeType CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_MIN = CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Invalid;
constexpr CDOTAUserMsg_GuildChallenge_Progress_EChallengeType CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_MAX = CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Contract;
constexpr int CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_ARRAYSIZE = CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_descriptor();
template<typename T>
inline const std::string& CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CDOTAUserMsg_GuildChallenge_Progress_EChallengeType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_descriptor(), enum_t_value);
}
inline bool CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CDOTAUserMsg_GuildChallenge_Progress_EChallengeType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CDOTAUserMsg_GuildChallenge_Progress_EChallengeType>(
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_descriptor(), name, value);
}
enum EDotaUserMessages : int {
  DOTA_UM_AddUnitToSelection = 464,
  DOTA_UM_AIDebugLine = 465,
  DOTA_UM_ChatEvent = 466,
  DOTA_UM_CombatHeroPositions = 467,
  DOTA_UM_CombatLogData = 468,
  DOTA_UM_CombatLogBulkData = 470,
  DOTA_UM_CreateLinearProjectile = 471,
  DOTA_UM_DestroyLinearProjectile = 472,
  DOTA_UM_DodgeTrackingProjectiles = 473,
  DOTA_UM_GlobalLightColor = 474,
  DOTA_UM_GlobalLightDirection = 475,
  DOTA_UM_InvalidCommand = 476,
  DOTA_UM_LocationPing = 477,
  DOTA_UM_MapLine = 478,
  DOTA_UM_MiniKillCamInfo = 479,
  DOTA_UM_MinimapDebugPoint = 480,
  DOTA_UM_MinimapEvent = 481,
  DOTA_UM_NevermoreRequiem = 482,
  DOTA_UM_OverheadEvent = 483,
  DOTA_UM_SetNextAutobuyItem = 484,
  DOTA_UM_SharedCooldown = 485,
  DOTA_UM_SpectatorPlayerClick = 486,
  DOTA_UM_TutorialTipInfo = 487,
  DOTA_UM_UnitEvent = 488,
  DOTA_UM_ParticleManager = 489,
  DOTA_UM_BotChat = 490,
  DOTA_UM_HudError = 491,
  DOTA_UM_ItemPurchased = 492,
  DOTA_UM_Ping = 493,
  DOTA_UM_ItemFound = 494,
  DOTA_UM_CharacterSpeakConcept = 495,
  DOTA_UM_SwapVerify = 496,
  DOTA_UM_WorldLine = 497,
  DOTA_UM_TournamentDrop = 498,
  DOTA_UM_ItemAlert = 499,
  DOTA_UM_HalloweenDrops = 500,
  DOTA_UM_ChatWheel = 501,
  DOTA_UM_ReceivedXmasGift = 502,
  DOTA_UM_UpdateSharedContent = 503,
  DOTA_UM_TutorialRequestExp = 504,
  DOTA_UM_TutorialPingMinimap = 505,
  DOTA_UM_GamerulesStateChanged = 506,
  DOTA_UM_ShowSurvey = 507,
  DOTA_UM_TutorialFade = 508,
  DOTA_UM_AddQuestLogEntry = 509,
  DOTA_UM_SendStatPopup = 510,
  DOTA_UM_TutorialFinish = 511,
  DOTA_UM_SendRoshanPopup = 512,
  DOTA_UM_SendGenericToolTip = 513,
  DOTA_UM_SendFinalGold = 514,
  DOTA_UM_CustomMsg = 515,
  DOTA_UM_CoachHUDPing = 516,
  DOTA_UM_ClientLoadGridNav = 517,
  DOTA_UM_TE_Projectile = 518,
  DOTA_UM_TE_ProjectileLoc = 519,
  DOTA_UM_TE_DotaBloodImpact = 520,
  DOTA_UM_TE_UnitAnimation = 521,
  DOTA_UM_TE_UnitAnimationEnd = 522,
  DOTA_UM_AbilityPing = 523,
  DOTA_UM_ShowGenericPopup = 524,
  DOTA_UM_VoteStart = 525,
  DOTA_UM_VoteUpdate = 526,
  DOTA_UM_VoteEnd = 527,
  DOTA_UM_BoosterState = 528,
  DOTA_UM_WillPurchaseAlert = 529,
  DOTA_UM_TutorialMinimapPosition = 530,
  DOTA_UM_PlayerMMR = 531,
  DOTA_UM_AbilitySteal = 532,
  DOTA_UM_CourierKilledAlert = 533,
  DOTA_UM_EnemyItemAlert = 534,
  DOTA_UM_StatsMatchDetails = 535,
  DOTA_UM_MiniTaunt = 536,
  DOTA_UM_BuyBackStateAlert = 537,
  DOTA_UM_SpeechBubble = 538,
  DOTA_UM_CustomHeaderMessage = 539,
  DOTA_UM_QuickBuyAlert = 540,
  DOTA_UM_StatsHeroDetails = 541,
  DOTA_UM_PredictionResult = 542,
  DOTA_UM_ModifierAlert = 543,
  DOTA_UM_HPManaAlert = 544,
  DOTA_UM_GlyphAlert = 545,
  DOTA_UM_BeastChat = 546,
  DOTA_UM_SpectatorPlayerUnitOrders = 547,
  DOTA_UM_CustomHudElement_Create = 548,
  DOTA_UM_CustomHudElement_Modify = 549,
  DOTA_UM_CustomHudElement_Destroy = 550,
  DOTA_UM_CompendiumState = 551,
  DOTA_UM_ProjectionAbility = 552,
  DOTA_UM_ProjectionEvent = 553,
  DOTA_UM_CombatLogDataHLTV = 554,
  DOTA_UM_XPAlert = 555,
  DOTA_UM_UpdateQuestProgress = 556,
  DOTA_UM_MatchMetadata = 557,
  DOTA_UM_MatchDetails = 558,
  DOTA_UM_QuestStatus = 559,
  DOTA_UM_SuggestHeroPick = 560,
  DOTA_UM_SuggestHeroRole = 561,
  DOTA_UM_KillcamDamageTaken = 562,
  DOTA_UM_SelectPenaltyGold = 563,
  DOTA_UM_RollDiceResult = 564,
  DOTA_UM_FlipCoinResult = 565,
  DOTA_UM_RequestItemSuggestions = 566,
  DOTA_UM_TeamCaptainChanged = 567,
  DOTA_UM_SendRoshanSpectatorPhase = 568,
  DOTA_UM_ChatWheelCooldown = 569,
  DOTA_UM_DismissAllStatPopups = 570,
  DOTA_UM_TE_DestroyProjectile = 571,
  DOTA_UM_HeroRelicProgress = 572,
  DOTA_UM_AbilityDraftRequestAbility = 573,
  DOTA_UM_ItemSold = 574,
  DOTA_UM_DamageReport = 575,
  DOTA_UM_SalutePlayer = 576,
  DOTA_UM_TipAlert = 577,
  DOTA_UM_ReplaceQueryUnit = 578,
  DOTA_UM_EmptyTeleportAlert = 579,
  DOTA_UM_MarsArenaOfBloodAttack = 580,
  DOTA_UM_ESArcanaCombo = 581,
  DOTA_UM_ESArcanaComboSummary = 582,
  DOTA_UM_HighFiveLeftHanging = 583,
  DOTA_UM_HighFiveCompleted = 584,
  DOTA_UM_ShovelUnearth = 585,
  DOTA_EM_InvokerSpellCast = 586,
  DOTA_UM_RadarAlert = 587,
  DOTA_UM_AllStarEvent = 588,
  DOTA_UM_TalentTreeAlert = 589,
  DOTA_UM_QueuedOrderRemoved = 590,
  DOTA_UM_DebugChallenge = 591,
  DOTA_UM_OMArcanaCombo = 592,
  DOTA_UM_FoundNeutralItem = 593,
  DOTA_UM_OutpostCaptured = 594,
  DOTA_UM_OutpostGrantedXP = 595,
  DOTA_UM_MoveCameraToUnit = 596,
  DOTA_UM_PauseMinigameData = 597,
  DOTA_UM_VersusScene_PlayerBehavior = 598,
  DOTA_UM_QoP_ArcanaSummary = 600,
  DOTA_UM_HotPotato_Created = 601,
  DOTA_UM_HotPotato_Exploded = 602,
  DOTA_UM_WK_Arcana_Progress = 603,
  DOTA_UM_GuildChallenge_Progress = 604,
  DOTA_UM_WRArcanaProgress = 605,
  DOTA_UM_WRArcanaSummary = 606,
  DOTA_UM_EmptyItemSlotAlert = 607,
  DOTA_UM_AghsStatusAlert = 608,
  DOTA_UM_PingConfirmation = 609,
  DOTA_UM_MutedPlayers = 610,
  DOTA_UM_ContextualTip = 611,
  DOTA_UM_ChatMessage = 612
};
bool EDotaUserMessages_IsValid(int value);
constexpr EDotaUserMessages EDotaUserMessages_MIN = DOTA_UM_AddUnitToSelection;
constexpr EDotaUserMessages EDotaUserMessages_MAX = DOTA_UM_ChatMessage;
constexpr int EDotaUserMessages_ARRAYSIZE = EDotaUserMessages_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EDotaUserMessages_descriptor();
template<typename T>
inline const std::string& EDotaUserMessages_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EDotaUserMessages>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EDotaUserMessages_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EDotaUserMessages_descriptor(), enum_t_value);
}
inline bool EDotaUserMessages_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EDotaUserMessages* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EDotaUserMessages>(
    EDotaUserMessages_descriptor(), name, value);
}
enum DOTA_CHAT_MESSAGE : int {
  CHAT_MESSAGE_INVALID = -1,
  CHAT_MESSAGE_HERO_KILL = 0,
  CHAT_MESSAGE_HERO_DENY = 1,
  CHAT_MESSAGE_BARRACKS_KILL = 2,
  CHAT_MESSAGE_TOWER_KILL = 3,
  CHAT_MESSAGE_TOWER_DENY = 4,
  CHAT_MESSAGE_FIRSTBLOOD = 5,
  CHAT_MESSAGE_STREAK_KILL = 6,
  CHAT_MESSAGE_BUYBACK = 7,
  CHAT_MESSAGE_AEGIS = 8,
  CHAT_MESSAGE_ROSHAN_KILL = 9,
  CHAT_MESSAGE_COURIER_LOST = 10,
  CHAT_MESSAGE_COURIER_RESPAWNED = 11,
  CHAT_MESSAGE_GLYPH_USED = 12,
  CHAT_MESSAGE_ITEM_PURCHASE = 13,
  CHAT_MESSAGE_CONNECT = 14,
  CHAT_MESSAGE_DISCONNECT = 15,
  CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16,
  CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17,
  CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18,
  CHAT_MESSAGE_RECONNECT = 19,
  CHAT_MESSAGE_PLAYER_LEFT = 20,
  CHAT_MESSAGE_SAFE_TO_LEAVE = 21,
  CHAT_MESSAGE_RUNE_PICKUP = 22,
  CHAT_MESSAGE_RUNE_BOTTLE = 23,
  CHAT_MESSAGE_RUNE_DENY = 114,
  CHAT_MESSAGE_INTHEBAG = 24,
  CHAT_MESSAGE_SECRETSHOP = 25,
  CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26,
  CHAT_MESSAGE_ITEMS_COMBINED = 27,
  CHAT_MESSAGE_SUPER_CREEPS = 28,
  CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29,
  CHAT_MESSAGE_CANTPAUSE = 31,
  CHAT_MESSAGE_NOPAUSESLEFT = 32,
  CHAT_MESSAGE_CANTPAUSEYET = 33,
  CHAT_MESSAGE_PAUSED = 34,
  CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35,
  CHAT_MESSAGE_UNPAUSED = 36,
  CHAT_MESSAGE_AUTO_UNPAUSED = 37,
  CHAT_MESSAGE_YOUPAUSED = 38,
  CHAT_MESSAGE_CANTUNPAUSETEAM = 39,
  CHAT_MESSAGE_VOICE_TEXT_BANNED = 41,
  CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42,
  CHAT_MESSAGE_REPORT_REMINDER = 43,
  CHAT_MESSAGE_ECON_ITEM = 44,
  CHAT_MESSAGE_TAUNT = 45,
  CHAT_MESSAGE_RANDOM = 46,
  CHAT_MESSAGE_RD_TURN = 47,
  CHAT_MESSAGE_DROP_RATE_BONUS = 49,
  CHAT_MESSAGE_NO_BATTLE_POINTS = 50,
  CHAT_MESSAGE_DENIED_AEGIS = 51,
  CHAT_MESSAGE_INFORMATIONAL = 52,
  CHAT_MESSAGE_AEGIS_STOLEN = 53,
  CHAT_MESSAGE_ROSHAN_CANDY = 54,
  CHAT_MESSAGE_ITEM_GIFTED = 55,
  CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56,
  CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57,
  CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58,
  CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59,
  CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62,
  CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63,
  CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64,
  CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65,
  CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66,
  CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67,
  CHAT_MESSAGE_PLAYER_LEFT_AFK = 73,
  CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74,
  CHAT_MESSAGE_PLAYER_ABANDONED = 75,
  CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76,
  CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81,
  CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82,
  CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83,
  CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84,
  CHAT_MESSAGE_COMPENDIUM_LEVEL = 85,
  CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86,
  CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87,
  CHAT_MESSAGE_ASSASSIN_SUCCESS = 88,
  CHAT_MESSAGE_ASSASSIN_DENIED = 89,
  CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90,
  CHAT_MESSAGE_EFFIGY_KILL = 91,
  CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92,
  CHAT_MESSAGE_YEAR_BEAST_KILLED = 93,
  CHAT_MESSAGE_PAUSE_COUNTDOWN = 94,
  CHAT_MESSAGE_COINS_WAGERED = 95,
  CHAT_MESSAGE_HERO_NOMINATED_BAN = 96,
  CHAT_MESSAGE_HERO_BANNED = 97,
  CHAT_MESSAGE_HERO_BAN_COUNT = 98,
  CHAT_MESSAGE_RIVER_PAINTED = 99,
  CHAT_MESSAGE_SCAN_USED = 100,
  CHAT_MESSAGE_SHRINE_KILLED = 101,
  CHAT_MESSAGE_WAGER_TOKEN_SPENT = 102,
  CHAT_MESSAGE_RANK_WAGER = 103,
  CHAT_MESSAGE_NEW_PLAYER_REMINDER = 104,
  CHAT_MESSAGE_OBSERVER_WARD_KILLED = 105,
  CHAT_MESSAGE_SENTRY_WARD_KILLED = 106,
  CHAT_MESSAGE_ITEM_PLACED_IN_NEUTRAL_STASH = 107,
  CHAT_MESSAGE_HERO_CHOICE_INVALID = 108,
  CHAT_MESSAGE_BOUNTY = 109,
  CHAT_MESSAGE_ABILITY_DRAFT_START = 110,
  CHAT_MESSAGE_HERO_FOUND_CANDY = 111,
  CHAT_MESSAGE_ABILITY_DRAFT_RANDOMED = 112,
  CHAT_MESSAGE_PRIVATE_COACH_CONNECTED = 113
};
bool DOTA_CHAT_MESSAGE_IsValid(int value);
constexpr DOTA_CHAT_MESSAGE DOTA_CHAT_MESSAGE_MIN = CHAT_MESSAGE_INVALID;
constexpr DOTA_CHAT_MESSAGE DOTA_CHAT_MESSAGE_MAX = CHAT_MESSAGE_RUNE_DENY;
constexpr int DOTA_CHAT_MESSAGE_ARRAYSIZE = DOTA_CHAT_MESSAGE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_CHAT_MESSAGE_descriptor();
template<typename T>
inline const std::string& DOTA_CHAT_MESSAGE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_CHAT_MESSAGE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_CHAT_MESSAGE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_CHAT_MESSAGE_descriptor(), enum_t_value);
}
inline bool DOTA_CHAT_MESSAGE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_CHAT_MESSAGE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_CHAT_MESSAGE>(
    DOTA_CHAT_MESSAGE_descriptor(), name, value);
}
enum DOTA_NO_BATTLE_POINTS_REASONS : int {
  NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1,
  NO_BATTLE_POINTS_PRACTICE_BOTS = 2,
  NO_BATTLE_POINTS_CHEATS_ENABLED = 3,
  NO_BATTLE_POINTS_LOW_PRIORITY = 4
};
bool DOTA_NO_BATTLE_POINTS_REASONS_IsValid(int value);
constexpr DOTA_NO_BATTLE_POINTS_REASONS DOTA_NO_BATTLE_POINTS_REASONS_MIN = NO_BATTLE_POINTS_WRONG_LOBBY_TYPE;
constexpr DOTA_NO_BATTLE_POINTS_REASONS DOTA_NO_BATTLE_POINTS_REASONS_MAX = NO_BATTLE_POINTS_LOW_PRIORITY;
constexpr int DOTA_NO_BATTLE_POINTS_REASONS_ARRAYSIZE = DOTA_NO_BATTLE_POINTS_REASONS_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_NO_BATTLE_POINTS_REASONS_descriptor();
template<typename T>
inline const std::string& DOTA_NO_BATTLE_POINTS_REASONS_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_NO_BATTLE_POINTS_REASONS>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_NO_BATTLE_POINTS_REASONS_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_NO_BATTLE_POINTS_REASONS_descriptor(), enum_t_value);
}
inline bool DOTA_NO_BATTLE_POINTS_REASONS_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_NO_BATTLE_POINTS_REASONS* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_NO_BATTLE_POINTS_REASONS>(
    DOTA_NO_BATTLE_POINTS_REASONS_descriptor(), name, value);
}
enum DOTA_CHAT_INFORMATIONAL : int {
  INFO_COOP_BATTLE_POINTS_RULES = 1,
  INFO_FROSTIVUS_ABANDON_REMINDER = 2,
  INFO_RANKED_REMINDER = 3,
  INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4,
  INFO_CUSTOM_GAME_PENALTY_REMINDER = 5
};
bool DOTA_CHAT_INFORMATIONAL_IsValid(int value);
constexpr DOTA_CHAT_INFORMATIONAL DOTA_CHAT_INFORMATIONAL_MIN = INFO_COOP_BATTLE_POINTS_RULES;
constexpr DOTA_CHAT_INFORMATIONAL DOTA_CHAT_INFORMATIONAL_MAX = INFO_CUSTOM_GAME_PENALTY_REMINDER;
constexpr int DOTA_CHAT_INFORMATIONAL_ARRAYSIZE = DOTA_CHAT_INFORMATIONAL_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_CHAT_INFORMATIONAL_descriptor();
template<typename T>
inline const std::string& DOTA_CHAT_INFORMATIONAL_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_CHAT_INFORMATIONAL>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_CHAT_INFORMATIONAL_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_CHAT_INFORMATIONAL_descriptor(), enum_t_value);
}
inline bool DOTA_CHAT_INFORMATIONAL_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_CHAT_INFORMATIONAL* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_CHAT_INFORMATIONAL>(
    DOTA_CHAT_INFORMATIONAL_descriptor(), name, value);
}
enum DOTA_ABILITY_PING_TYPE : int {
  ABILITY_PING_READY = 1,
  ABILITY_PING_MANA = 2,
  ABILITY_PING_COOLDOWN = 3,
  ABILITY_PING_ENEMY = 4,
  ABILITY_PING_UNLEARNED = 5,
  ABILITY_PING_INBACKPACK = 6,
  ABILITY_PING_INSTASH = 7,
  ABILITY_PING_ONCOURIER = 8,
  ABILITY_PING_ALLY = 9,
  ABILITY_PING_LEARN_READY = 10,
  ABILITY_PING_WILL_LEARN = 11,
  ABILITY_PING_FUTURE_LEARN = 12,
  ABILITY_PING_NEUTRAL_OFFER = 13,
  ABILITY_PING_NEUTRAL_REQUEST = 14,
  ABILITY_PING_NEUTRAL_EQUIP = 15
};
bool DOTA_ABILITY_PING_TYPE_IsValid(int value);
constexpr DOTA_ABILITY_PING_TYPE DOTA_ABILITY_PING_TYPE_MIN = ABILITY_PING_READY;
constexpr DOTA_ABILITY_PING_TYPE DOTA_ABILITY_PING_TYPE_MAX = ABILITY_PING_NEUTRAL_EQUIP;
constexpr int DOTA_ABILITY_PING_TYPE_ARRAYSIZE = DOTA_ABILITY_PING_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_ABILITY_PING_TYPE_descriptor();
template<typename T>
inline const std::string& DOTA_ABILITY_PING_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_ABILITY_PING_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_ABILITY_PING_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_ABILITY_PING_TYPE_descriptor(), enum_t_value);
}
inline bool DOTA_ABILITY_PING_TYPE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_ABILITY_PING_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_ABILITY_PING_TYPE>(
    DOTA_ABILITY_PING_TYPE_descriptor(), name, value);
}
enum DOTA_REPLAY_STATE_EVENT : int {
  DOTA_REPLAY_STATE_EVENT_GAME_START = 1,
  DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 2,
  DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 3,
  DOTA_REPLAY_STATE_EVENT_SHOWCASE = 4,
  DOTA_REPLAY_STATE_EVENT_POST_GAME = 5,
  DOTA_REPLAY_STATE_EVENT_WAIT_FOR_MAP = 6
};
bool DOTA_REPLAY_STATE_EVENT_IsValid(int value);
constexpr DOTA_REPLAY_STATE_EVENT DOTA_REPLAY_STATE_EVENT_MIN = DOTA_REPLAY_STATE_EVENT_GAME_START;
constexpr DOTA_REPLAY_STATE_EVENT DOTA_REPLAY_STATE_EVENT_MAX = DOTA_REPLAY_STATE_EVENT_WAIT_FOR_MAP;
constexpr int DOTA_REPLAY_STATE_EVENT_ARRAYSIZE = DOTA_REPLAY_STATE_EVENT_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_REPLAY_STATE_EVENT_descriptor();
template<typename T>
inline const std::string& DOTA_REPLAY_STATE_EVENT_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_REPLAY_STATE_EVENT>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_REPLAY_STATE_EVENT_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_REPLAY_STATE_EVENT_descriptor(), enum_t_value);
}
inline bool DOTA_REPLAY_STATE_EVENT_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_REPLAY_STATE_EVENT* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_REPLAY_STATE_EVENT>(
    DOTA_REPLAY_STATE_EVENT_descriptor(), name, value);
}
enum EDotaEntityMessages : int {
  DOTA_UNIT_SPEECH = 0,
  DOTA_UNIT_SPEECH_MUTE = 1,
  DOTA_UNIT_ADD_GESTURE = 2,
  DOTA_UNIT_REMOVE_GESTURE = 3,
  DOTA_UNIT_REMOVE_ALL_GESTURES = 4,
  DOTA_UNIT_FADE_GESTURE = 6,
  DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7
};
bool EDotaEntityMessages_IsValid(int value);
constexpr EDotaEntityMessages EDotaEntityMessages_MIN = DOTA_UNIT_SPEECH;
constexpr EDotaEntityMessages EDotaEntityMessages_MAX = DOTA_UNIT_SPEECH_CLIENTSIDE_RULES;
constexpr int EDotaEntityMessages_ARRAYSIZE = EDotaEntityMessages_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EDotaEntityMessages_descriptor();
template<typename T>
inline const std::string& EDotaEntityMessages_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EDotaEntityMessages>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EDotaEntityMessages_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EDotaEntityMessages_descriptor(), enum_t_value);
}
inline bool EDotaEntityMessages_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EDotaEntityMessages* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EDotaEntityMessages>(
    EDotaEntityMessages_descriptor(), name, value);
}
enum DOTA_OVERHEAD_ALERT : int {
  OVERHEAD_ALERT_GOLD = 0,
  OVERHEAD_ALERT_DENY = 1,
  OVERHEAD_ALERT_CRITICAL = 2,
  OVERHEAD_ALERT_XP = 3,
  OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4,
  OVERHEAD_ALERT_MISS = 5,
  OVERHEAD_ALERT_DAMAGE = 6,
  OVERHEAD_ALERT_EVADE = 7,
  OVERHEAD_ALERT_BLOCK = 8,
  OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9,
  OVERHEAD_ALERT_HEAL = 10,
  OVERHEAD_ALERT_MANA_ADD = 11,
  OVERHEAD_ALERT_MANA_LOSS = 12,
  OVERHEAD_ALERT_LAST_HIT_EARLY = 13,
  OVERHEAD_ALERT_LAST_HIT_CLOSE = 14,
  OVERHEAD_ALERT_LAST_HIT_MISS = 15,
  OVERHEAD_ALERT_MAGICAL_BLOCK = 16,
  OVERHEAD_ALERT_INCOMING_DAMAGE = 17,
  OVERHEAD_ALERT_OUTGOING_DAMAGE = 18,
  OVERHEAD_ALERT_DISABLE_RESIST = 19,
  OVERHEAD_ALERT_DEATH = 20,
  OVERHEAD_ALERT_BLOCKED = 21,
  OVERHEAD_ALERT_ITEM_RECEIVED = 22,
  OVERHEAD_ALERT_SHARD = 23,
  OVERHEAD_ALERT_DEADLY_BLOW = 24
};
bool DOTA_OVERHEAD_ALERT_IsValid(int value);
constexpr DOTA_OVERHEAD_ALERT DOTA_OVERHEAD_ALERT_MIN = OVERHEAD_ALERT_GOLD;
constexpr DOTA_OVERHEAD_ALERT DOTA_OVERHEAD_ALERT_MAX = OVERHEAD_ALERT_DEADLY_BLOW;
constexpr int DOTA_OVERHEAD_ALERT_ARRAYSIZE = DOTA_OVERHEAD_ALERT_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_OVERHEAD_ALERT_descriptor();
template<typename T>
inline const std::string& DOTA_OVERHEAD_ALERT_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_OVERHEAD_ALERT>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_OVERHEAD_ALERT_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_OVERHEAD_ALERT_descriptor(), enum_t_value);
}
inline bool DOTA_OVERHEAD_ALERT_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_OVERHEAD_ALERT* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_OVERHEAD_ALERT>(
    DOTA_OVERHEAD_ALERT_descriptor(), name, value);
}
enum DOTA_ROSHAN_PHASE : int {
  k_SRSP_ROSHAN_ALIVE = 0,
  k_SRSP_ROSHAN_BASE_TIMER = 1,
  k_SRSP_ROSHAN_VISIBLE_TIMER = 2
};
bool DOTA_ROSHAN_PHASE_IsValid(int value);
constexpr DOTA_ROSHAN_PHASE DOTA_ROSHAN_PHASE_MIN = k_SRSP_ROSHAN_ALIVE;
constexpr DOTA_ROSHAN_PHASE DOTA_ROSHAN_PHASE_MAX = k_SRSP_ROSHAN_VISIBLE_TIMER;
constexpr int DOTA_ROSHAN_PHASE_ARRAYSIZE = DOTA_ROSHAN_PHASE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_ROSHAN_PHASE_descriptor();
template<typename T>
inline const std::string& DOTA_ROSHAN_PHASE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_ROSHAN_PHASE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_ROSHAN_PHASE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_ROSHAN_PHASE_descriptor(), enum_t_value);
}
inline bool DOTA_ROSHAN_PHASE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_ROSHAN_PHASE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_ROSHAN_PHASE>(
    DOTA_ROSHAN_PHASE_descriptor(), name, value);
}
enum DOTA_POSITION_CATEGORY : int {
  DOTA_POSITION_NONE = 0,
  DOTA_POSITION_BOTTOM_LANE = 1,
  DOTA_POSITION_MID_LANE = 2,
  DOTA_POSITION_TOP_LANE = 3,
  DOTA_POSITION_RADIANT_JUNGLE = 4,
  DOTA_POSITION_DIRE_JUNGLE = 5,
  DOTA_POSITION_RADIANT_ANCIENTS = 6,
  DOTA_POSITION_DIRE_ANCIENTS = 7,
  DOTA_POSITION_RADIANT_SECRET_SHOP = 8,
  DOTA_POSITION_DIRE_SECRET_SHOP = 9,
  DOTA_POSITION_RIVER = 10,
  DOTA_POSITION_ROSHAN_PIT = 11,
  DOTA_POSITION_RADIANT_BASE = 12,
  DOTA_POSITION_DIRE_BASE = 13,
  DOTA_POSITION_FOUNTAIN = 14,
  DOTA_POSITION_OTHER = 15
};
bool DOTA_POSITION_CATEGORY_IsValid(int value);
constexpr DOTA_POSITION_CATEGORY DOTA_POSITION_CATEGORY_MIN = DOTA_POSITION_NONE;
constexpr DOTA_POSITION_CATEGORY DOTA_POSITION_CATEGORY_MAX = DOTA_POSITION_OTHER;
constexpr int DOTA_POSITION_CATEGORY_ARRAYSIZE = DOTA_POSITION_CATEGORY_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_POSITION_CATEGORY_descriptor();
template<typename T>
inline const std::string& DOTA_POSITION_CATEGORY_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_POSITION_CATEGORY>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_POSITION_CATEGORY_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_POSITION_CATEGORY_descriptor(), enum_t_value);
}
inline bool DOTA_POSITION_CATEGORY_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_POSITION_CATEGORY* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_POSITION_CATEGORY>(
    DOTA_POSITION_CATEGORY_descriptor(), name, value);
}
enum DOTA_ABILITY_TARGET_TYPE : int {
  DOTA_ABILITY_TARGET_NONE = 0,
  DOTA_ABILITY_TARGET_SELF = 1,
  DOTA_ABILITY_TARGET_ALLY_HERO = 2,
  DOTA_ABILITY_TARGET_ALLY_CREEP = 3,
  DOTA_ABILITY_TARGET_ENEMY_HERO = 4,
  DOTA_ABILITY_TARGET_ENEMY_CREEP = 5
};
bool DOTA_ABILITY_TARGET_TYPE_IsValid(int value);
constexpr DOTA_ABILITY_TARGET_TYPE DOTA_ABILITY_TARGET_TYPE_MIN = DOTA_ABILITY_TARGET_NONE;
constexpr DOTA_ABILITY_TARGET_TYPE DOTA_ABILITY_TARGET_TYPE_MAX = DOTA_ABILITY_TARGET_ENEMY_CREEP;
constexpr int DOTA_ABILITY_TARGET_TYPE_ARRAYSIZE = DOTA_ABILITY_TARGET_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DOTA_ABILITY_TARGET_TYPE_descriptor();
template<typename T>
inline const std::string& DOTA_ABILITY_TARGET_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, DOTA_ABILITY_TARGET_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function DOTA_ABILITY_TARGET_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    DOTA_ABILITY_TARGET_TYPE_descriptor(), enum_t_value);
}
inline bool DOTA_ABILITY_TARGET_TYPE_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, DOTA_ABILITY_TARGET_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<DOTA_ABILITY_TARGET_TYPE>(
    DOTA_ABILITY_TARGET_TYPE_descriptor(), name, value);
}
enum EHeroStatType : int {
  k_EHeroStatType_None = 0,
  k_EHeroStatType_AxeTotalDamage = 2000,
  k_EHeroStatType_BattleHungerDamage = 2001,
  k_EHeroStatType_CounterHelixDamage = 2002,
  k_EHeroStatType_CullingBladeDamage = 2003,
  k_EHeroStatType_BerserkersCallCastCount = 2004,
  k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005,
  k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006,
  k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007,
  k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008,
  k_EHeroStatType_BattleHungerCastCount = 2009,
  k_EHeroStatType_BattleHungerPotentialDuration = 2010,
  k_EHeroStatType_BattleHungerAverageDuration = 2011,
  k_EHeroStatType_CounterHelixProcCount = 2012,
  k_EHeroStatType_CounterHelixHeroProcCount = 2013,
  k_EHeroStatType_CounterHelixHeroesHitAverage = 2014,
  k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015,
  k_EHeroStatType_CullingBladeCastCount = 2016,
  k_EHeroStatType_CullingBladeKillCount = 2017,
  k_EHeroStatType_CullingBladeAverageHealthCulled = 2018,
  k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019,
  k_EHeroStatType_CullingBladeHeroBuffAverage = 2020
};
bool EHeroStatType_IsValid(int value);
constexpr EHeroStatType EHeroStatType_MIN = k_EHeroStatType_None;
constexpr EHeroStatType EHeroStatType_MAX = k_EHeroStatType_CullingBladeHeroBuffAverage;
constexpr int EHeroStatType_ARRAYSIZE = EHeroStatType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EHeroStatType_descriptor();
template<typename T>
inline const std::string& EHeroStatType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EHeroStatType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EHeroStatType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EHeroStatType_descriptor(), enum_t_value);
}
inline bool EHeroStatType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EHeroStatType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EHeroStatType>(
    EHeroStatType_descriptor(), name, value);
}
enum EPlayerVoiceListenState : int {
  kPVLS_None = 0,
  kPVLS_DeniedChatBanned = 1,
  kPVLS_DeniedPartner = 2,
  kPVLS_DeniedHLTVTalkerNotSpectator = 3,
  kPVLS_DeniedHLTVNoTalkerPlayerID = 4,
  kPVLS_DeniedHLTVTalkerNotBroadcaster = 5,
  kPVLS_DeniedTeamSpectator = 6,
  kPVLS_DeniedStudent = 8,
  kPVLS_DeniedPrivateCoach = 9,
  kPVLS_Denied = 64,
  kPVLS_AllowHLTVTalkerIsBroadcaster = 65,
  kPVLS_AllowCoBroadcaster = 66,
  kPVLS_AllowAllChat = 67,
  kPVLS_AllowStudentToCoach = 68,
  kPVLS_AllowFellowStudent = 69,
  kPVLS_AllowTalkerIsCoach = 70,
  kPVLS_AllowCoachHearTeam = 71,
  kPVLS_AllowSameTeam = 72,
  kPVLS_AllowShowcase = 73,
  kPVLS_AllowPrivateCoach = 74
};
bool EPlayerVoiceListenState_IsValid(int value);
constexpr EPlayerVoiceListenState EPlayerVoiceListenState_MIN = kPVLS_None;
constexpr EPlayerVoiceListenState EPlayerVoiceListenState_MAX = kPVLS_AllowPrivateCoach;
constexpr int EPlayerVoiceListenState_ARRAYSIZE = EPlayerVoiceListenState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPlayerVoiceListenState_descriptor();
template<typename T>
inline const std::string& EPlayerVoiceListenState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EPlayerVoiceListenState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EPlayerVoiceListenState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EPlayerVoiceListenState_descriptor(), enum_t_value);
}
inline bool EPlayerVoiceListenState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EPlayerVoiceListenState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EPlayerVoiceListenState>(
    EPlayerVoiceListenState_descriptor(), name, value);
}
enum EProjectionEvent : int {
  ePE_FirstBlood = 0,
  ePE_Killstreak_godlike = 1
};
bool EProjectionEvent_IsValid(int value);
constexpr EProjectionEvent EProjectionEvent_MIN = ePE_FirstBlood;
constexpr EProjectionEvent EProjectionEvent_MAX = ePE_Killstreak_godlike;
constexpr int EProjectionEvent_ARRAYSIZE = EProjectionEvent_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EProjectionEvent_descriptor();
template<typename T>
inline const std::string& EProjectionEvent_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EProjectionEvent>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EProjectionEvent_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EProjectionEvent_descriptor(), enum_t_value);
}
inline bool EProjectionEvent_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EProjectionEvent* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EProjectionEvent>(
    EProjectionEvent_descriptor(), name, value);
}
// ===================================================================

class CDOTAUserMsg_AIDebugLine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AIDebugLine) */ {
 public:
  inline CDOTAUserMsg_AIDebugLine() : CDOTAUserMsg_AIDebugLine(nullptr) {}
  virtual ~CDOTAUserMsg_AIDebugLine();
  explicit constexpr CDOTAUserMsg_AIDebugLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AIDebugLine(const CDOTAUserMsg_AIDebugLine& from);
  CDOTAUserMsg_AIDebugLine(CDOTAUserMsg_AIDebugLine&& from) noexcept
    : CDOTAUserMsg_AIDebugLine() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AIDebugLine& operator=(const CDOTAUserMsg_AIDebugLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AIDebugLine& operator=(CDOTAUserMsg_AIDebugLine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AIDebugLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AIDebugLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AIDebugLine*>(
               &_CDOTAUserMsg_AIDebugLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CDOTAUserMsg_AIDebugLine& a, CDOTAUserMsg_AIDebugLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AIDebugLine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AIDebugLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AIDebugLine* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AIDebugLine>(nullptr);
  }

  CDOTAUserMsg_AIDebugLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AIDebugLine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AIDebugLine& from);
  void MergeFrom(const CDOTAUserMsg_AIDebugLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AIDebugLine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AIDebugLine";
  }
  protected:
  explicit CDOTAUserMsg_AIDebugLine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // optional string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AIDebugLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_Ping PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_Ping) */ {
 public:
  inline CDOTAUserMsg_Ping() : CDOTAUserMsg_Ping(nullptr) {}
  virtual ~CDOTAUserMsg_Ping();
  explicit constexpr CDOTAUserMsg_Ping(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_Ping(const CDOTAUserMsg_Ping& from);
  CDOTAUserMsg_Ping(CDOTAUserMsg_Ping&& from) noexcept
    : CDOTAUserMsg_Ping() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_Ping& operator=(const CDOTAUserMsg_Ping& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_Ping& operator=(CDOTAUserMsg_Ping&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_Ping& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_Ping* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_Ping*>(
               &_CDOTAUserMsg_Ping_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CDOTAUserMsg_Ping& a, CDOTAUserMsg_Ping& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_Ping* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_Ping* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_Ping* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_Ping>(nullptr);
  }

  CDOTAUserMsg_Ping* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_Ping>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_Ping& from);
  void MergeFrom(const CDOTAUserMsg_Ping& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_Ping* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_Ping";
  }
  protected:
  explicit CDOTAUserMsg_Ping(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPingFieldNumber = 2,
    kLossFieldNumber = 3,
  };
  // optional uint32 ping = 2;
  bool has_ping() const;
  private:
  bool _internal_has_ping() const;
  public:
  void clear_ping();
  ::PROTOBUF_NAMESPACE_ID::uint32 ping() const;
  void set_ping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ping() const;
  void _internal_set_ping(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 loss = 3;
  bool has_loss() const;
  private:
  bool _internal_has_loss() const;
  public:
  void clear_loss();
  ::PROTOBUF_NAMESPACE_ID::uint32 loss() const;
  void set_loss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_loss() const;
  void _internal_set_loss(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_Ping)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ping_;
  ::PROTOBUF_NAMESPACE_ID::uint32 loss_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SwapVerify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SwapVerify) */ {
 public:
  inline CDOTAUserMsg_SwapVerify() : CDOTAUserMsg_SwapVerify(nullptr) {}
  virtual ~CDOTAUserMsg_SwapVerify();
  explicit constexpr CDOTAUserMsg_SwapVerify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SwapVerify(const CDOTAUserMsg_SwapVerify& from);
  CDOTAUserMsg_SwapVerify(CDOTAUserMsg_SwapVerify&& from) noexcept
    : CDOTAUserMsg_SwapVerify() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SwapVerify& operator=(const CDOTAUserMsg_SwapVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SwapVerify& operator=(CDOTAUserMsg_SwapVerify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SwapVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SwapVerify* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SwapVerify*>(
               &_CDOTAUserMsg_SwapVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CDOTAUserMsg_SwapVerify& a, CDOTAUserMsg_SwapVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SwapVerify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SwapVerify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SwapVerify* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SwapVerify>(nullptr);
  }

  CDOTAUserMsg_SwapVerify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SwapVerify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SwapVerify& from);
  void MergeFrom(const CDOTAUserMsg_SwapVerify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SwapVerify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SwapVerify";
  }
  protected:
  explicit CDOTAUserMsg_SwapVerify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SwapVerify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ChatEvent) */ {
 public:
  inline CDOTAUserMsg_ChatEvent() : CDOTAUserMsg_ChatEvent(nullptr) {}
  virtual ~CDOTAUserMsg_ChatEvent();
  explicit constexpr CDOTAUserMsg_ChatEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ChatEvent(const CDOTAUserMsg_ChatEvent& from);
  CDOTAUserMsg_ChatEvent(CDOTAUserMsg_ChatEvent&& from) noexcept
    : CDOTAUserMsg_ChatEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ChatEvent& operator=(const CDOTAUserMsg_ChatEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ChatEvent& operator=(CDOTAUserMsg_ChatEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ChatEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ChatEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatEvent*>(
               &_CDOTAUserMsg_ChatEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CDOTAUserMsg_ChatEvent& a, CDOTAUserMsg_ChatEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ChatEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ChatEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatEvent>(nullptr);
  }

  CDOTAUserMsg_ChatEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ChatEvent& from);
  void MergeFrom(const CDOTAUserMsg_ChatEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ChatEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ChatEvent";
  }
  protected:
  explicit CDOTAUserMsg_ChatEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kValue2FieldNumber = 9,
    kValue3FieldNumber = 10,
    kPlayerid6FieldNumber = 8,
    kTypeFieldNumber = 1,
    kPlayerid1FieldNumber = 3,
    kPlayerid2FieldNumber = 4,
    kPlayerid3FieldNumber = 5,
    kPlayerid4FieldNumber = 6,
    kPlayerid5FieldNumber = 7,
  };
  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value2 = 9;
  bool has_value2() const;
  private:
  bool _internal_has_value2() const;
  public:
  void clear_value2();
  ::PROTOBUF_NAMESPACE_ID::uint32 value2() const;
  void set_value2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value2() const;
  void _internal_set_value2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value3 = 10;
  bool has_value3() const;
  private:
  bool _internal_has_value3() const;
  public:
  void clear_value3();
  ::PROTOBUF_NAMESPACE_ID::uint32 value3() const;
  void set_value3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value3() const;
  void _internal_set_value3(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sint32 playerid_6 = 8 [default = -1];
  bool has_playerid_6() const;
  private:
  bool _internal_has_playerid_6() const;
  public:
  void clear_playerid_6();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_6() const;
  void set_playerid_6(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_6() const;
  void _internal_set_playerid_6(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::DOTA_CHAT_MESSAGE type() const;
  void set_type(::DOTA_CHAT_MESSAGE value);
  private:
  ::DOTA_CHAT_MESSAGE _internal_type() const;
  void _internal_set_type(::DOTA_CHAT_MESSAGE value);
  public:

  // optional sint32 playerid_1 = 3 [default = -1];
  bool has_playerid_1() const;
  private:
  bool _internal_has_playerid_1() const;
  public:
  void clear_playerid_1();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_1() const;
  void set_playerid_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_1() const;
  void _internal_set_playerid_1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 playerid_2 = 4 [default = -1];
  bool has_playerid_2() const;
  private:
  bool _internal_has_playerid_2() const;
  public:
  void clear_playerid_2();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_2() const;
  void set_playerid_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_2() const;
  void _internal_set_playerid_2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 playerid_3 = 5 [default = -1];
  bool has_playerid_3() const;
  private:
  bool _internal_has_playerid_3() const;
  public:
  void clear_playerid_3();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_3() const;
  void set_playerid_3(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_3() const;
  void _internal_set_playerid_3(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 playerid_4 = 6 [default = -1];
  bool has_playerid_4() const;
  private:
  bool _internal_has_playerid_4() const;
  public:
  void clear_playerid_4();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_4() const;
  void set_playerid_4(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_4() const;
  void _internal_set_playerid_4(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 playerid_5 = 7 [default = -1];
  bool has_playerid_5() const;
  private:
  bool _internal_has_playerid_5() const;
  public:
  void clear_playerid_5();
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_5() const;
  void set_playerid_5(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_playerid_5() const;
  void _internal_set_playerid_5(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value3_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_6_;
  int type_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_1_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_2_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_3_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_4_;
  ::PROTOBUF_NAMESPACE_ID::int32 playerid_5_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BotChat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_BotChat) */ {
 public:
  inline CDOTAUserMsg_BotChat() : CDOTAUserMsg_BotChat(nullptr) {}
  virtual ~CDOTAUserMsg_BotChat();
  explicit constexpr CDOTAUserMsg_BotChat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_BotChat(const CDOTAUserMsg_BotChat& from);
  CDOTAUserMsg_BotChat(CDOTAUserMsg_BotChat&& from) noexcept
    : CDOTAUserMsg_BotChat() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_BotChat& operator=(const CDOTAUserMsg_BotChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_BotChat& operator=(CDOTAUserMsg_BotChat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_BotChat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_BotChat* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BotChat*>(
               &_CDOTAUserMsg_BotChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CDOTAUserMsg_BotChat& a, CDOTAUserMsg_BotChat& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_BotChat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_BotChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BotChat* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_BotChat>(nullptr);
  }

  CDOTAUserMsg_BotChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_BotChat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_BotChat& from);
  void MergeFrom(const CDOTAUserMsg_BotChat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_BotChat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_BotChat";
  }
  protected:
  explicit CDOTAUserMsg_BotChat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kTargetFieldNumber = 4,
    kPlayerIdFieldNumber = 1,
    kTeamOnlyFieldNumber = 5,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional string target = 4;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const std::string& target() const;
  void set_target(const std::string& value);
  void set_target(std::string&& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  std::string* mutable_target();
  std::string* release_target();
  void set_allocated_target(std::string* target);
  private:
  const std::string& _internal_target() const;
  void _internal_set_target(const std::string& value);
  std::string* _internal_mutable_target();
  public:

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool team_only = 5;
  bool has_team_only() const;
  private:
  bool _internal_has_team_only() const;
  public:
  void clear_team_only();
  bool team_only() const;
  void set_team_only(bool value);
  private:
  bool _internal_team_only() const;
  void _internal_set_team_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BotChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  bool team_only_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CombatHeroPositions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CombatHeroPositions) */ {
 public:
  inline CDOTAUserMsg_CombatHeroPositions() : CDOTAUserMsg_CombatHeroPositions(nullptr) {}
  virtual ~CDOTAUserMsg_CombatHeroPositions();
  explicit constexpr CDOTAUserMsg_CombatHeroPositions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CombatHeroPositions(const CDOTAUserMsg_CombatHeroPositions& from);
  CDOTAUserMsg_CombatHeroPositions(CDOTAUserMsg_CombatHeroPositions&& from) noexcept
    : CDOTAUserMsg_CombatHeroPositions() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CombatHeroPositions& operator=(const CDOTAUserMsg_CombatHeroPositions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CombatHeroPositions& operator=(CDOTAUserMsg_CombatHeroPositions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CombatHeroPositions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CombatHeroPositions* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CombatHeroPositions*>(
               &_CDOTAUserMsg_CombatHeroPositions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CDOTAUserMsg_CombatHeroPositions& a, CDOTAUserMsg_CombatHeroPositions& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CombatHeroPositions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CombatHeroPositions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CombatHeroPositions* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CombatHeroPositions>(nullptr);
  }

  CDOTAUserMsg_CombatHeroPositions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CombatHeroPositions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CombatHeroPositions& from);
  void MergeFrom(const CDOTAUserMsg_CombatHeroPositions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CombatHeroPositions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CombatHeroPositions";
  }
  protected:
  explicit CDOTAUserMsg_CombatHeroPositions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldPosFieldNumber = 3,
    kIndexFieldNumber = 1,
    kTimeFieldNumber = 2,
    kHealthFieldNumber = 4,
  };
  // optional .CMsgVector2D world_pos = 3;
  bool has_world_pos() const;
  private:
  bool _internal_has_world_pos() const;
  public:
  void clear_world_pos();
  const ::CMsgVector2D& world_pos() const;
  ::CMsgVector2D* release_world_pos();
  ::CMsgVector2D* mutable_world_pos();
  void set_allocated_world_pos(::CMsgVector2D* world_pos);
  private:
  const ::CMsgVector2D& _internal_world_pos() const;
  ::CMsgVector2D* _internal_mutable_world_pos();
  public:
  void unsafe_arena_set_allocated_world_pos(
      ::CMsgVector2D* world_pos);
  ::CMsgVector2D* unsafe_arena_release_world_pos();

  // optional uint32 index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 time = 2;
  bool has_time() const;
  private:
  bool _internal_has_time() const;
  public:
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::int32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 health = 4;
  bool has_health() const;
  private:
  bool _internal_has_health() const;
  public:
  void clear_health();
  ::PROTOBUF_NAMESPACE_ID::int32 health() const;
  void set_health(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_health() const;
  void _internal_set_health(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatHeroPositions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector2D* world_pos_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 time_;
  ::PROTOBUF_NAMESPACE_ID::int32 health_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CombatLogBulkData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CombatLogBulkData) */ {
 public:
  inline CDOTAUserMsg_CombatLogBulkData() : CDOTAUserMsg_CombatLogBulkData(nullptr) {}
  virtual ~CDOTAUserMsg_CombatLogBulkData();
  explicit constexpr CDOTAUserMsg_CombatLogBulkData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CombatLogBulkData(const CDOTAUserMsg_CombatLogBulkData& from);
  CDOTAUserMsg_CombatLogBulkData(CDOTAUserMsg_CombatLogBulkData&& from) noexcept
    : CDOTAUserMsg_CombatLogBulkData() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CombatLogBulkData& operator=(const CDOTAUserMsg_CombatLogBulkData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CombatLogBulkData& operator=(CDOTAUserMsg_CombatLogBulkData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CombatLogBulkData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CombatLogBulkData* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CombatLogBulkData*>(
               &_CDOTAUserMsg_CombatLogBulkData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CDOTAUserMsg_CombatLogBulkData& a, CDOTAUserMsg_CombatLogBulkData& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CombatLogBulkData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CombatLogBulkData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CombatLogBulkData* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CombatLogBulkData>(nullptr);
  }

  CDOTAUserMsg_CombatLogBulkData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CombatLogBulkData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CombatLogBulkData& from);
  void MergeFrom(const CDOTAUserMsg_CombatLogBulkData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CombatLogBulkData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CombatLogBulkData";
  }
  protected:
  explicit CDOTAUserMsg_CombatLogBulkData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCombatEntriesFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kDurationFieldNumber = 3,
    kPlayerIdFieldNumber = 4,
  };
  // repeated .CMsgDOTACombatLogEntry combat_entries = 1;
  int combat_entries_size() const;
  private:
  int _internal_combat_entries_size() const;
  public:
  void clear_combat_entries();
  ::CMsgDOTACombatLogEntry* mutable_combat_entries(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDOTACombatLogEntry >*
      mutable_combat_entries();
  private:
  const ::CMsgDOTACombatLogEntry& _internal_combat_entries(int index) const;
  ::CMsgDOTACombatLogEntry* _internal_add_combat_entries();
  public:
  const ::CMsgDOTACombatLogEntry& combat_entries(int index) const;
  ::CMsgDOTACombatLogEntry* add_combat_entries();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDOTACombatLogEntry >&
      combat_entries() const;

  // optional float timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  float timestamp() const;
  void set_timestamp(float value);
  private:
  float _internal_timestamp() const;
  void _internal_set_timestamp(float value);
  public:

  // optional float duration = 3;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // optional uint32 player_id = 4;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CombatLogBulkData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDOTACombatLogEntry > combat_entries_;
  float timestamp_;
  float duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability) */ {
 public:
  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability() : CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(nullptr) {}
  virtual ~CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability();
  explicit constexpr CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);
  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability&& from) noexcept
    : CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& operator=(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& operator=(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability*>(
               &_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& a, CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>(nullptr);
  }

  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability";
  }
  protected:
  explicit CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAbilityIdFieldNumber = 1,
    kDamageFieldNumber = 2,
  };
  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 damage = 2;
  bool has_damage() const;
  private:
  bool _internal_has_damage() const;
  public:
  void clear_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 damage() const;
  void set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage() const;
  void _internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo_Attacker PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MiniKillCamInfo.Attacker) */ {
 public:
  inline CDOTAUserMsg_MiniKillCamInfo_Attacker() : CDOTAUserMsg_MiniKillCamInfo_Attacker(nullptr) {}
  virtual ~CDOTAUserMsg_MiniKillCamInfo_Attacker();
  explicit constexpr CDOTAUserMsg_MiniKillCamInfo_Attacker(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MiniKillCamInfo_Attacker(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);
  CDOTAUserMsg_MiniKillCamInfo_Attacker(CDOTAUserMsg_MiniKillCamInfo_Attacker&& from) noexcept
    : CDOTAUserMsg_MiniKillCamInfo_Attacker() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker& operator=(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MiniKillCamInfo_Attacker& operator=(CDOTAUserMsg_MiniKillCamInfo_Attacker&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MiniKillCamInfo_Attacker& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MiniKillCamInfo_Attacker* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo_Attacker*>(
               &_CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CDOTAUserMsg_MiniKillCamInfo_Attacker& a, CDOTAUserMsg_MiniKillCamInfo_Attacker& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo_Attacker>(nullptr);
  }

  CDOTAUserMsg_MiniKillCamInfo_Attacker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo_Attacker>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MiniKillCamInfo.Attacker";
  }
  protected:
  explicit CDOTAUserMsg_MiniKillCamInfo_Attacker(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability Ability;

  // accessors -------------------------------------------------------

  enum : int {
    kAbilitiesFieldNumber = 3,
    kAttackerNameFieldNumber = 4,
    kAttackerFieldNumber = 1,
    kTotalDamageFieldNumber = 2,
  };
  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
  int abilities_size() const;
  private:
  int _internal_abilities_size() const;
  public:
  void clear_abilities();
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* mutable_abilities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >*
      mutable_abilities();
  private:
  const ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& _internal_abilities(int index) const;
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* _internal_add_abilities();
  public:
  const ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& abilities(int index) const;
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* add_abilities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >&
      abilities() const;

  // optional string attacker_name = 4;
  bool has_attacker_name() const;
  private:
  bool _internal_has_attacker_name() const;
  public:
  void clear_attacker_name();
  const std::string& attacker_name() const;
  void set_attacker_name(const std::string& value);
  void set_attacker_name(std::string&& value);
  void set_attacker_name(const char* value);
  void set_attacker_name(const char* value, size_t size);
  std::string* mutable_attacker_name();
  std::string* release_attacker_name();
  void set_allocated_attacker_name(std::string* attacker_name);
  private:
  const std::string& _internal_attacker_name() const;
  void _internal_set_attacker_name(const std::string& value);
  std::string* _internal_mutable_attacker_name();
  public:

  // optional uint32 attacker = 1;
  bool has_attacker() const;
  private:
  bool _internal_has_attacker() const;
  public:
  void clear_attacker();
  ::PROTOBUF_NAMESPACE_ID::uint32 attacker() const;
  void set_attacker(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attacker() const;
  void _internal_set_attacker(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 total_damage = 2;
  bool has_total_damage() const;
  private:
  bool _internal_has_total_damage() const;
  public:
  void clear_total_damage();
  ::PROTOBUF_NAMESPACE_ID::int32 total_damage() const;
  void set_total_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_total_damage() const;
  void _internal_set_total_damage(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo.Attacker)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability > abilities_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr attacker_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 attacker_;
  ::PROTOBUF_NAMESPACE_ID::int32 total_damage_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MiniKillCamInfo) */ {
 public:
  inline CDOTAUserMsg_MiniKillCamInfo() : CDOTAUserMsg_MiniKillCamInfo(nullptr) {}
  virtual ~CDOTAUserMsg_MiniKillCamInfo();
  explicit constexpr CDOTAUserMsg_MiniKillCamInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MiniKillCamInfo(const CDOTAUserMsg_MiniKillCamInfo& from);
  CDOTAUserMsg_MiniKillCamInfo(CDOTAUserMsg_MiniKillCamInfo&& from) noexcept
    : CDOTAUserMsg_MiniKillCamInfo() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MiniKillCamInfo& operator=(const CDOTAUserMsg_MiniKillCamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MiniKillCamInfo& operator=(CDOTAUserMsg_MiniKillCamInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MiniKillCamInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MiniKillCamInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo*>(
               &_CDOTAUserMsg_MiniKillCamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CDOTAUserMsg_MiniKillCamInfo& a, CDOTAUserMsg_MiniKillCamInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MiniKillCamInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MiniKillCamInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo>(nullptr);
  }

  CDOTAUserMsg_MiniKillCamInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniKillCamInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MiniKillCamInfo";
  }
  protected:
  explicit CDOTAUserMsg_MiniKillCamInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_MiniKillCamInfo_Attacker Attacker;

  // accessors -------------------------------------------------------

  enum : int {
    kAttackersFieldNumber = 1,
  };
  // repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
  int attackers_size() const;
  private:
  int _internal_attackers_size() const;
  public:
  void clear_attackers();
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker* mutable_attackers(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >*
      mutable_attackers();
  private:
  const ::CDOTAUserMsg_MiniKillCamInfo_Attacker& _internal_attackers(int index) const;
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker* _internal_add_attackers();
  public:
  const ::CDOTAUserMsg_MiniKillCamInfo_Attacker& attackers(int index) const;
  ::CDOTAUserMsg_MiniKillCamInfo_Attacker* add_attackers();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >&
      attackers() const;

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniKillCamInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker > attackers_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlobalLightColor PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GlobalLightColor) */ {
 public:
  inline CDOTAUserMsg_GlobalLightColor() : CDOTAUserMsg_GlobalLightColor(nullptr) {}
  virtual ~CDOTAUserMsg_GlobalLightColor();
  explicit constexpr CDOTAUserMsg_GlobalLightColor(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GlobalLightColor(const CDOTAUserMsg_GlobalLightColor& from);
  CDOTAUserMsg_GlobalLightColor(CDOTAUserMsg_GlobalLightColor&& from) noexcept
    : CDOTAUserMsg_GlobalLightColor() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GlobalLightColor& operator=(const CDOTAUserMsg_GlobalLightColor& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GlobalLightColor& operator=(CDOTAUserMsg_GlobalLightColor&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GlobalLightColor& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GlobalLightColor* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlobalLightColor*>(
               &_CDOTAUserMsg_GlobalLightColor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CDOTAUserMsg_GlobalLightColor& a, CDOTAUserMsg_GlobalLightColor& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GlobalLightColor* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GlobalLightColor* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlobalLightColor* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlobalLightColor>(nullptr);
  }

  CDOTAUserMsg_GlobalLightColor* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlobalLightColor>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GlobalLightColor& from);
  void MergeFrom(const CDOTAUserMsg_GlobalLightColor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GlobalLightColor* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GlobalLightColor";
  }
  protected:
  explicit CDOTAUserMsg_GlobalLightColor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColorFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // optional uint32 color = 1;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  ::PROTOBUF_NAMESPACE_ID::uint32 color() const;
  void set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color() const;
  void _internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightColor)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_;
  float duration_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlobalLightDirection PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GlobalLightDirection) */ {
 public:
  inline CDOTAUserMsg_GlobalLightDirection() : CDOTAUserMsg_GlobalLightDirection(nullptr) {}
  virtual ~CDOTAUserMsg_GlobalLightDirection();
  explicit constexpr CDOTAUserMsg_GlobalLightDirection(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GlobalLightDirection(const CDOTAUserMsg_GlobalLightDirection& from);
  CDOTAUserMsg_GlobalLightDirection(CDOTAUserMsg_GlobalLightDirection&& from) noexcept
    : CDOTAUserMsg_GlobalLightDirection() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GlobalLightDirection& operator=(const CDOTAUserMsg_GlobalLightDirection& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GlobalLightDirection& operator=(CDOTAUserMsg_GlobalLightDirection&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GlobalLightDirection& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GlobalLightDirection* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlobalLightDirection*>(
               &_CDOTAUserMsg_GlobalLightDirection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CDOTAUserMsg_GlobalLightDirection& a, CDOTAUserMsg_GlobalLightDirection& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GlobalLightDirection* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GlobalLightDirection* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlobalLightDirection* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlobalLightDirection>(nullptr);
  }

  CDOTAUserMsg_GlobalLightDirection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlobalLightDirection>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GlobalLightDirection& from);
  void MergeFrom(const CDOTAUserMsg_GlobalLightDirection& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GlobalLightDirection* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GlobalLightDirection";
  }
  protected:
  explicit CDOTAUserMsg_GlobalLightDirection(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDirectionFieldNumber = 1,
    kDurationFieldNumber = 2,
  };
  // optional .CMsgVector direction = 1;
  bool has_direction() const;
  private:
  bool _internal_has_direction() const;
  public:
  void clear_direction();
  const ::CMsgVector& direction() const;
  ::CMsgVector* release_direction();
  ::CMsgVector* mutable_direction();
  void set_allocated_direction(::CMsgVector* direction);
  private:
  const ::CMsgVector& _internal_direction() const;
  ::CMsgVector* _internal_mutable_direction();
  public:
  void unsafe_arena_set_allocated_direction(
      ::CMsgVector* direction);
  ::CMsgVector* unsafe_arena_release_direction();

  // optional float duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlobalLightDirection)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* direction_;
  float duration_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_LocationPing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_LocationPing) */ {
 public:
  inline CDOTAUserMsg_LocationPing() : CDOTAUserMsg_LocationPing(nullptr) {}
  virtual ~CDOTAUserMsg_LocationPing();
  explicit constexpr CDOTAUserMsg_LocationPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_LocationPing(const CDOTAUserMsg_LocationPing& from);
  CDOTAUserMsg_LocationPing(CDOTAUserMsg_LocationPing&& from) noexcept
    : CDOTAUserMsg_LocationPing() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_LocationPing& operator=(const CDOTAUserMsg_LocationPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_LocationPing& operator=(CDOTAUserMsg_LocationPing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_LocationPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_LocationPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_LocationPing*>(
               &_CDOTAUserMsg_LocationPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CDOTAUserMsg_LocationPing& a, CDOTAUserMsg_LocationPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_LocationPing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_LocationPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_LocationPing* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_LocationPing>(nullptr);
  }

  CDOTAUserMsg_LocationPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_LocationPing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_LocationPing& from);
  void MergeFrom(const CDOTAUserMsg_LocationPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_LocationPing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_LocationPing";
  }
  protected:
  explicit CDOTAUserMsg_LocationPing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationPingFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_LocationPing location_ping = 2;
  bool has_location_ping() const;
  private:
  bool _internal_has_location_ping() const;
  public:
  void clear_location_ping();
  const ::CDOTAMsg_LocationPing& location_ping() const;
  ::CDOTAMsg_LocationPing* release_location_ping();
  ::CDOTAMsg_LocationPing* mutable_location_ping();
  void set_allocated_location_ping(::CDOTAMsg_LocationPing* location_ping);
  private:
  const ::CDOTAMsg_LocationPing& _internal_location_ping() const;
  ::CDOTAMsg_LocationPing* _internal_mutable_location_ping();
  public:
  void unsafe_arena_set_allocated_location_ping(
      ::CDOTAMsg_LocationPing* location_ping);
  ::CDOTAMsg_LocationPing* unsafe_arena_release_location_ping();

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_LocationPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_LocationPing* location_ping_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PingConfirmation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PingConfirmation) */ {
 public:
  inline CDOTAUserMsg_PingConfirmation() : CDOTAUserMsg_PingConfirmation(nullptr) {}
  virtual ~CDOTAUserMsg_PingConfirmation();
  explicit constexpr CDOTAUserMsg_PingConfirmation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PingConfirmation(const CDOTAUserMsg_PingConfirmation& from);
  CDOTAUserMsg_PingConfirmation(CDOTAUserMsg_PingConfirmation&& from) noexcept
    : CDOTAUserMsg_PingConfirmation() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PingConfirmation& operator=(const CDOTAUserMsg_PingConfirmation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PingConfirmation& operator=(CDOTAUserMsg_PingConfirmation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PingConfirmation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PingConfirmation* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PingConfirmation*>(
               &_CDOTAUserMsg_PingConfirmation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CDOTAUserMsg_PingConfirmation& a, CDOTAUserMsg_PingConfirmation& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PingConfirmation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PingConfirmation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PingConfirmation* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PingConfirmation>(nullptr);
  }

  CDOTAUserMsg_PingConfirmation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PingConfirmation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PingConfirmation& from);
  void MergeFrom(const CDOTAUserMsg_PingConfirmation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PingConfirmation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PingConfirmation";
  }
  protected:
  explicit CDOTAUserMsg_PingConfirmation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 4,
    kPlayerIdOfOriginalPingerFieldNumber = 1,
    kEntityIndexFieldNumber = 2,
    kIconTypeFieldNumber = 3,
  };
  // optional .CMsgVector location = 4;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgVector& location() const;
  ::CMsgVector* release_location();
  ::CMsgVector* mutable_location();
  void set_allocated_location(::CMsgVector* location);
  private:
  const ::CMsgVector& _internal_location() const;
  ::CMsgVector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgVector* location);
  ::CMsgVector* unsafe_arena_release_location();

  // optional uint32 player_id_of_original_pinger = 1;
  bool has_player_id_of_original_pinger() const;
  private:
  bool _internal_has_player_id_of_original_pinger() const;
  public:
  void clear_player_id_of_original_pinger();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_of_original_pinger() const;
  void set_player_id_of_original_pinger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id_of_original_pinger() const;
  void _internal_set_player_id_of_original_pinger(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 entity_index = 2;
  bool has_entity_index() const;
  private:
  bool _internal_has_entity_index() const;
  public:
  void clear_entity_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_index() const;
  void set_entity_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entity_index() const;
  void _internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 icon_type = 3;
  bool has_icon_type() const;
  private:
  bool _internal_has_icon_type() const;
  public:
  void clear_icon_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 icon_type() const;
  void set_icon_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_icon_type() const;
  void _internal_set_icon_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PingConfirmation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_of_original_pinger_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_index_;
  ::PROTOBUF_NAMESPACE_ID::uint32 icon_type_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ItemAlert) */ {
 public:
  inline CDOTAUserMsg_ItemAlert() : CDOTAUserMsg_ItemAlert(nullptr) {}
  virtual ~CDOTAUserMsg_ItemAlert();
  explicit constexpr CDOTAUserMsg_ItemAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ItemAlert(const CDOTAUserMsg_ItemAlert& from);
  CDOTAUserMsg_ItemAlert(CDOTAUserMsg_ItemAlert&& from) noexcept
    : CDOTAUserMsg_ItemAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ItemAlert& operator=(const CDOTAUserMsg_ItemAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ItemAlert& operator=(CDOTAUserMsg_ItemAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ItemAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ItemAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemAlert*>(
               &_CDOTAUserMsg_ItemAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CDOTAUserMsg_ItemAlert& a, CDOTAUserMsg_ItemAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ItemAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ItemAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemAlert>(nullptr);
  }

  CDOTAUserMsg_ItemAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ItemAlert& from);
  void MergeFrom(const CDOTAUserMsg_ItemAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ItemAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ItemAlert";
  }
  protected:
  explicit CDOTAUserMsg_ItemAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemAlertFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_ItemAlert item_alert = 2;
  bool has_item_alert() const;
  private:
  bool _internal_has_item_alert() const;
  public:
  void clear_item_alert();
  const ::CDOTAMsg_ItemAlert& item_alert() const;
  ::CDOTAMsg_ItemAlert* release_item_alert();
  ::CDOTAMsg_ItemAlert* mutable_item_alert();
  void set_allocated_item_alert(::CDOTAMsg_ItemAlert* item_alert);
  private:
  const ::CDOTAMsg_ItemAlert& _internal_item_alert() const;
  ::CDOTAMsg_ItemAlert* _internal_mutable_item_alert();
  public:
  void unsafe_arena_set_allocated_item_alert(
      ::CDOTAMsg_ItemAlert* item_alert);
  ::CDOTAMsg_ItemAlert* unsafe_arena_release_item_alert();

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_ItemAlert* item_alert_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_EnemyItemAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_EnemyItemAlert) */ {
 public:
  inline CDOTAUserMsg_EnemyItemAlert() : CDOTAUserMsg_EnemyItemAlert(nullptr) {}
  virtual ~CDOTAUserMsg_EnemyItemAlert();
  explicit constexpr CDOTAUserMsg_EnemyItemAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_EnemyItemAlert(const CDOTAUserMsg_EnemyItemAlert& from);
  CDOTAUserMsg_EnemyItemAlert(CDOTAUserMsg_EnemyItemAlert&& from) noexcept
    : CDOTAUserMsg_EnemyItemAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_EnemyItemAlert& operator=(const CDOTAUserMsg_EnemyItemAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_EnemyItemAlert& operator=(CDOTAUserMsg_EnemyItemAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_EnemyItemAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_EnemyItemAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_EnemyItemAlert*>(
               &_CDOTAUserMsg_EnemyItemAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CDOTAUserMsg_EnemyItemAlert& a, CDOTAUserMsg_EnemyItemAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_EnemyItemAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_EnemyItemAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_EnemyItemAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_EnemyItemAlert>(nullptr);
  }

  CDOTAUserMsg_EnemyItemAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_EnemyItemAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_EnemyItemAlert& from);
  void MergeFrom(const CDOTAUserMsg_EnemyItemAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_EnemyItemAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_EnemyItemAlert";
  }
  protected:
  explicit CDOTAUserMsg_EnemyItemAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kItemAbilityIdFieldNumber = 3,
    kEntityIdFieldNumber = 5,
    kRuneTypeFieldNumber = 4,
    kItemLevelFieldNumber = 6,
    kPrimaryChargesFieldNumber = 7,
    kSecondaryChargesFieldNumber = 8,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 item_ability_id = 3;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 entity_id = 5;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_id() const;
  void set_entity_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_id() const;
  void _internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 rune_type = 4 [default = -1];
  bool has_rune_type() const;
  private:
  bool _internal_has_rune_type() const;
  public:
  void clear_rune_type();
  ::PROTOBUF_NAMESPACE_ID::int32 rune_type() const;
  void set_rune_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rune_type() const;
  void _internal_set_rune_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 item_level = 6 [default = -1];
  bool has_item_level() const;
  private:
  bool _internal_has_item_level() const;
  public:
  void clear_item_level();
  ::PROTOBUF_NAMESPACE_ID::int32 item_level() const;
  void set_item_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_level() const;
  void _internal_set_item_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 primary_charges = 7 [default = -1];
  bool has_primary_charges() const;
  private:
  bool _internal_has_primary_charges() const;
  public:
  void clear_primary_charges();
  ::PROTOBUF_NAMESPACE_ID::int32 primary_charges() const;
  void set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_primary_charges() const;
  void _internal_set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 secondary_charges = 8 [default = -1];
  bool has_secondary_charges() const;
  private:
  bool _internal_has_secondary_charges() const;
  public:
  void clear_secondary_charges();
  ::PROTOBUF_NAMESPACE_ID::int32 secondary_charges() const;
  void set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_secondary_charges() const;
  void _internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_EnemyItemAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 rune_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_level_;
  ::PROTOBUF_NAMESPACE_ID::int32 primary_charges_;
  ::PROTOBUF_NAMESPACE_ID::int32 secondary_charges_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ModifierAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ModifierAlert) */ {
 public:
  inline CDOTAUserMsg_ModifierAlert() : CDOTAUserMsg_ModifierAlert(nullptr) {}
  virtual ~CDOTAUserMsg_ModifierAlert();
  explicit constexpr CDOTAUserMsg_ModifierAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ModifierAlert(const CDOTAUserMsg_ModifierAlert& from);
  CDOTAUserMsg_ModifierAlert(CDOTAUserMsg_ModifierAlert&& from) noexcept
    : CDOTAUserMsg_ModifierAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ModifierAlert& operator=(const CDOTAUserMsg_ModifierAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ModifierAlert& operator=(CDOTAUserMsg_ModifierAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ModifierAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ModifierAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ModifierAlert*>(
               &_CDOTAUserMsg_ModifierAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CDOTAUserMsg_ModifierAlert& a, CDOTAUserMsg_ModifierAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ModifierAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ModifierAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ModifierAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ModifierAlert>(nullptr);
  }

  CDOTAUserMsg_ModifierAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ModifierAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ModifierAlert& from);
  void MergeFrom(const CDOTAUserMsg_ModifierAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ModifierAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ModifierAlert";
  }
  protected:
  explicit CDOTAUserMsg_ModifierAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kClassNameFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
    kStackCountFieldNumber = 3,
    kIsDebuffFieldNumber = 4,
    kTargetEntindexFieldNumber = 5,
    kSecondsRemainingFieldNumber = 6,
  };
  // optional string class_name = 2;
  bool has_class_name() const;
  private:
  bool _internal_has_class_name() const;
  public:
  void clear_class_name();
  const std::string& class_name() const;
  void set_class_name(const std::string& value);
  void set_class_name(std::string&& value);
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  std::string* mutable_class_name();
  std::string* release_class_name();
  void set_allocated_class_name(std::string* class_name);
  private:
  const std::string& _internal_class_name() const;
  void _internal_set_class_name(const std::string& value);
  std::string* _internal_mutable_class_name();
  public:

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stack_count = 3;
  bool has_stack_count() const;
  private:
  bool _internal_has_stack_count() const;
  public:
  void clear_stack_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_count() const;
  void set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stack_count() const;
  void _internal_set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool is_debuff = 4;
  bool has_is_debuff() const;
  private:
  bool _internal_has_is_debuff() const;
  public:
  void clear_is_debuff();
  bool is_debuff() const;
  void set_is_debuff(bool value);
  private:
  bool _internal_is_debuff() const;
  void _internal_set_is_debuff(bool value);
  public:

  // optional uint32 target_entindex = 5;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float seconds_remaining = 6;
  bool has_seconds_remaining() const;
  private:
  bool _internal_has_seconds_remaining() const;
  public:
  void clear_seconds_remaining();
  float seconds_remaining() const;
  void set_seconds_remaining(float value);
  private:
  float _internal_seconds_remaining() const;
  void _internal_set_seconds_remaining(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ModifierAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr class_name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stack_count_;
  bool is_debuff_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  float seconds_remaining_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HPManaAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HPManaAlert) */ {
 public:
  inline CDOTAUserMsg_HPManaAlert() : CDOTAUserMsg_HPManaAlert(nullptr) {}
  virtual ~CDOTAUserMsg_HPManaAlert();
  explicit constexpr CDOTAUserMsg_HPManaAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HPManaAlert(const CDOTAUserMsg_HPManaAlert& from);
  CDOTAUserMsg_HPManaAlert(CDOTAUserMsg_HPManaAlert&& from) noexcept
    : CDOTAUserMsg_HPManaAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HPManaAlert& operator=(const CDOTAUserMsg_HPManaAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HPManaAlert& operator=(CDOTAUserMsg_HPManaAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HPManaAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HPManaAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HPManaAlert*>(
               &_CDOTAUserMsg_HPManaAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CDOTAUserMsg_HPManaAlert& a, CDOTAUserMsg_HPManaAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HPManaAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HPManaAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HPManaAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HPManaAlert>(nullptr);
  }

  CDOTAUserMsg_HPManaAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HPManaAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HPManaAlert& from);
  void MergeFrom(const CDOTAUserMsg_HPManaAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HPManaAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HPManaAlert";
  }
  protected:
  explicit CDOTAUserMsg_HPManaAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTargetEntindexFieldNumber = 2,
    kShowRawValuesFieldNumber = 3,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_entindex = 2;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool show_raw_values = 3;
  bool has_show_raw_values() const;
  private:
  bool _internal_has_show_raw_values() const;
  public:
  void clear_show_raw_values();
  bool show_raw_values() const;
  void set_show_raw_values(bool value);
  private:
  bool _internal_show_raw_values() const;
  void _internal_set_show_raw_values(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HPManaAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  bool show_raw_values_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlyphAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GlyphAlert) */ {
 public:
  inline CDOTAUserMsg_GlyphAlert() : CDOTAUserMsg_GlyphAlert(nullptr) {}
  virtual ~CDOTAUserMsg_GlyphAlert();
  explicit constexpr CDOTAUserMsg_GlyphAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GlyphAlert(const CDOTAUserMsg_GlyphAlert& from);
  CDOTAUserMsg_GlyphAlert(CDOTAUserMsg_GlyphAlert&& from) noexcept
    : CDOTAUserMsg_GlyphAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GlyphAlert& operator=(const CDOTAUserMsg_GlyphAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GlyphAlert& operator=(CDOTAUserMsg_GlyphAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GlyphAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GlyphAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlyphAlert*>(
               &_CDOTAUserMsg_GlyphAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CDOTAUserMsg_GlyphAlert& a, CDOTAUserMsg_GlyphAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GlyphAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GlyphAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlyphAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlyphAlert>(nullptr);
  }

  CDOTAUserMsg_GlyphAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GlyphAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GlyphAlert& from);
  void MergeFrom(const CDOTAUserMsg_GlyphAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GlyphAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GlyphAlert";
  }
  protected:
  explicit CDOTAUserMsg_GlyphAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kNegativeFieldNumber = 2,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool negative = 2;
  bool has_negative() const;
  private:
  bool _internal_has_negative() const;
  public:
  void clear_negative();
  bool negative() const;
  void set_negative(bool value);
  private:
  bool _internal_negative() const;
  void _internal_set_negative(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GlyphAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  bool negative_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_RadarAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_RadarAlert) */ {
 public:
  inline CDOTAUserMsg_RadarAlert() : CDOTAUserMsg_RadarAlert(nullptr) {}
  virtual ~CDOTAUserMsg_RadarAlert();
  explicit constexpr CDOTAUserMsg_RadarAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_RadarAlert(const CDOTAUserMsg_RadarAlert& from);
  CDOTAUserMsg_RadarAlert(CDOTAUserMsg_RadarAlert&& from) noexcept
    : CDOTAUserMsg_RadarAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_RadarAlert& operator=(const CDOTAUserMsg_RadarAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_RadarAlert& operator=(CDOTAUserMsg_RadarAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_RadarAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_RadarAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_RadarAlert*>(
               &_CDOTAUserMsg_RadarAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CDOTAUserMsg_RadarAlert& a, CDOTAUserMsg_RadarAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_RadarAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_RadarAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_RadarAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_RadarAlert>(nullptr);
  }

  CDOTAUserMsg_RadarAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_RadarAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_RadarAlert& from);
  void MergeFrom(const CDOTAUserMsg_RadarAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_RadarAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_RadarAlert";
  }
  protected:
  explicit CDOTAUserMsg_RadarAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kNegativeFieldNumber = 2,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool negative = 2;
  bool has_negative() const;
  private:
  bool _internal_has_negative() const;
  public:
  void clear_negative();
  bool negative() const;
  void set_negative(bool value);
  private:
  bool _internal_negative() const;
  void _internal_set_negative(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_RadarAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  bool negative_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WillPurchaseAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_WillPurchaseAlert) */ {
 public:
  inline CDOTAUserMsg_WillPurchaseAlert() : CDOTAUserMsg_WillPurchaseAlert(nullptr) {}
  virtual ~CDOTAUserMsg_WillPurchaseAlert();
  explicit constexpr CDOTAUserMsg_WillPurchaseAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_WillPurchaseAlert(const CDOTAUserMsg_WillPurchaseAlert& from);
  CDOTAUserMsg_WillPurchaseAlert(CDOTAUserMsg_WillPurchaseAlert&& from) noexcept
    : CDOTAUserMsg_WillPurchaseAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_WillPurchaseAlert& operator=(const CDOTAUserMsg_WillPurchaseAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_WillPurchaseAlert& operator=(CDOTAUserMsg_WillPurchaseAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_WillPurchaseAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_WillPurchaseAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WillPurchaseAlert*>(
               &_CDOTAUserMsg_WillPurchaseAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CDOTAUserMsg_WillPurchaseAlert& a, CDOTAUserMsg_WillPurchaseAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_WillPurchaseAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_WillPurchaseAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WillPurchaseAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_WillPurchaseAlert>(nullptr);
  }

  CDOTAUserMsg_WillPurchaseAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_WillPurchaseAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_WillPurchaseAlert& from);
  void MergeFrom(const CDOTAUserMsg_WillPurchaseAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_WillPurchaseAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_WillPurchaseAlert";
  }
  protected:
  explicit CDOTAUserMsg_WillPurchaseAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemAbilityIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kGoldRemainingFieldNumber = 3,
    kSuggestionPlayerIdFieldNumber = 4,
  };
  // optional int32 item_ability_id = 1;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 player_id = 2;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 gold_remaining = 3;
  bool has_gold_remaining() const;
  private:
  bool _internal_has_gold_remaining() const;
  public:
  void clear_gold_remaining();
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_remaining() const;
  void set_gold_remaining(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gold_remaining() const;
  void _internal_set_gold_remaining(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 suggestion_player_id = 4;
  bool has_suggestion_player_id() const;
  private:
  bool _internal_has_suggestion_player_id() const;
  public:
  void clear_suggestion_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 suggestion_player_id() const;
  void set_suggestion_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_suggestion_player_id() const;
  void _internal_set_suggestion_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WillPurchaseAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_remaining_;
  ::PROTOBUF_NAMESPACE_ID::int32 suggestion_player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_EmptyTeleportAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_EmptyTeleportAlert) */ {
 public:
  inline CDOTAUserMsg_EmptyTeleportAlert() : CDOTAUserMsg_EmptyTeleportAlert(nullptr) {}
  virtual ~CDOTAUserMsg_EmptyTeleportAlert();
  explicit constexpr CDOTAUserMsg_EmptyTeleportAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_EmptyTeleportAlert(const CDOTAUserMsg_EmptyTeleportAlert& from);
  CDOTAUserMsg_EmptyTeleportAlert(CDOTAUserMsg_EmptyTeleportAlert&& from) noexcept
    : CDOTAUserMsg_EmptyTeleportAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_EmptyTeleportAlert& operator=(const CDOTAUserMsg_EmptyTeleportAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_EmptyTeleportAlert& operator=(CDOTAUserMsg_EmptyTeleportAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_EmptyTeleportAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_EmptyTeleportAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_EmptyTeleportAlert*>(
               &_CDOTAUserMsg_EmptyTeleportAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CDOTAUserMsg_EmptyTeleportAlert& a, CDOTAUserMsg_EmptyTeleportAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_EmptyTeleportAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_EmptyTeleportAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_EmptyTeleportAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_EmptyTeleportAlert>(nullptr);
  }

  CDOTAUserMsg_EmptyTeleportAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_EmptyTeleportAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_EmptyTeleportAlert& from);
  void MergeFrom(const CDOTAUserMsg_EmptyTeleportAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_EmptyTeleportAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_EmptyTeleportAlert";
  }
  protected:
  explicit CDOTAUserMsg_EmptyTeleportAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kCooldownSecondsFieldNumber = 3,
  };
  // optional int32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 cooldown_seconds = 3;
  bool has_cooldown_seconds() const;
  private:
  bool _internal_has_cooldown_seconds() const;
  public:
  void clear_cooldown_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 cooldown_seconds() const;
  void set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cooldown_seconds() const;
  void _internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_EmptyTeleportAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cooldown_seconds_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MarsArenaOfBloodAttack PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MarsArenaOfBloodAttack) */ {
 public:
  inline CDOTAUserMsg_MarsArenaOfBloodAttack() : CDOTAUserMsg_MarsArenaOfBloodAttack(nullptr) {}
  virtual ~CDOTAUserMsg_MarsArenaOfBloodAttack();
  explicit constexpr CDOTAUserMsg_MarsArenaOfBloodAttack(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MarsArenaOfBloodAttack(const CDOTAUserMsg_MarsArenaOfBloodAttack& from);
  CDOTAUserMsg_MarsArenaOfBloodAttack(CDOTAUserMsg_MarsArenaOfBloodAttack&& from) noexcept
    : CDOTAUserMsg_MarsArenaOfBloodAttack() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MarsArenaOfBloodAttack& operator=(const CDOTAUserMsg_MarsArenaOfBloodAttack& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MarsArenaOfBloodAttack& operator=(CDOTAUserMsg_MarsArenaOfBloodAttack&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MarsArenaOfBloodAttack& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MarsArenaOfBloodAttack* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MarsArenaOfBloodAttack*>(
               &_CDOTAUserMsg_MarsArenaOfBloodAttack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CDOTAUserMsg_MarsArenaOfBloodAttack& a, CDOTAUserMsg_MarsArenaOfBloodAttack& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MarsArenaOfBloodAttack* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MarsArenaOfBloodAttack* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MarsArenaOfBloodAttack* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MarsArenaOfBloodAttack>(nullptr);
  }

  CDOTAUserMsg_MarsArenaOfBloodAttack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MarsArenaOfBloodAttack>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MarsArenaOfBloodAttack& from);
  void MergeFrom(const CDOTAUserMsg_MarsArenaOfBloodAttack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MarsArenaOfBloodAttack* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MarsArenaOfBloodAttack";
  }
  protected:
  explicit CDOTAUserMsg_MarsArenaOfBloodAttack(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourceEhandleFieldNumber = 1,
    kTargetEhandleFieldNumber = 2,
    kWarriorIndexFieldNumber = 3,
  };
  // optional int32 source_ehandle = 1;
  bool has_source_ehandle() const;
  private:
  bool _internal_has_source_ehandle() const;
  public:
  void clear_source_ehandle();
  ::PROTOBUF_NAMESPACE_ID::int32 source_ehandle() const;
  void set_source_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_ehandle() const;
  void _internal_set_source_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_ehandle = 2;
  bool has_target_ehandle() const;
  private:
  bool _internal_has_target_ehandle() const;
  public:
  void clear_target_ehandle();
  ::PROTOBUF_NAMESPACE_ID::int32 target_ehandle() const;
  void set_target_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_ehandle() const;
  void _internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 warrior_index = 3;
  bool has_warrior_index() const;
  private:
  bool _internal_has_warrior_index() const;
  public:
  void clear_warrior_index();
  ::PROTOBUF_NAMESPACE_ID::int32 warrior_index() const;
  void set_warrior_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_warrior_index() const;
  void _internal_set_warrior_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MarsArenaOfBloodAttack)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_ehandle_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_ehandle_;
  ::PROTOBUF_NAMESPACE_ID::int32 warrior_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAEntityMsg_InvokerSpellCast PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAEntityMsg_InvokerSpellCast) */ {
 public:
  inline CDOTAEntityMsg_InvokerSpellCast() : CDOTAEntityMsg_InvokerSpellCast(nullptr) {}
  virtual ~CDOTAEntityMsg_InvokerSpellCast();
  explicit constexpr CDOTAEntityMsg_InvokerSpellCast(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAEntityMsg_InvokerSpellCast(const CDOTAEntityMsg_InvokerSpellCast& from);
  CDOTAEntityMsg_InvokerSpellCast(CDOTAEntityMsg_InvokerSpellCast&& from) noexcept
    : CDOTAEntityMsg_InvokerSpellCast() {
    *this = ::std::move(from);
  }

  inline CDOTAEntityMsg_InvokerSpellCast& operator=(const CDOTAEntityMsg_InvokerSpellCast& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAEntityMsg_InvokerSpellCast& operator=(CDOTAEntityMsg_InvokerSpellCast&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAEntityMsg_InvokerSpellCast& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAEntityMsg_InvokerSpellCast* internal_default_instance() {
    return reinterpret_cast<const CDOTAEntityMsg_InvokerSpellCast*>(
               &_CDOTAEntityMsg_InvokerSpellCast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CDOTAEntityMsg_InvokerSpellCast& a, CDOTAEntityMsg_InvokerSpellCast& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAEntityMsg_InvokerSpellCast* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAEntityMsg_InvokerSpellCast* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAEntityMsg_InvokerSpellCast* New() const final {
    return CreateMaybeMessage<CDOTAEntityMsg_InvokerSpellCast>(nullptr);
  }

  CDOTAEntityMsg_InvokerSpellCast* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAEntityMsg_InvokerSpellCast>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAEntityMsg_InvokerSpellCast& from);
  void MergeFrom(const CDOTAEntityMsg_InvokerSpellCast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAEntityMsg_InvokerSpellCast* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAEntityMsg_InvokerSpellCast";
  }
  protected:
  explicit CDOTAEntityMsg_InvokerSpellCast(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityMsgFieldNumber = 1,
    kCastActivityFieldNumber = 2,
  };
  // optional .CEntityMsg entity_msg = 1;
  bool has_entity_msg() const;
  private:
  bool _internal_has_entity_msg() const;
  public:
  void clear_entity_msg();
  const ::CEntityMsg& entity_msg() const;
  ::CEntityMsg* release_entity_msg();
  ::CEntityMsg* mutable_entity_msg();
  void set_allocated_entity_msg(::CEntityMsg* entity_msg);
  private:
  const ::CEntityMsg& _internal_entity_msg() const;
  ::CEntityMsg* _internal_mutable_entity_msg();
  public:
  void unsafe_arena_set_allocated_entity_msg(
      ::CEntityMsg* entity_msg);
  ::CEntityMsg* unsafe_arena_release_entity_msg();

  // optional int32 cast_activity = 2;
  bool has_cast_activity() const;
  private:
  bool _internal_has_cast_activity() const;
  public:
  void clear_cast_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 cast_activity() const;
  void set_cast_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cast_activity() const;
  void _internal_set_cast_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAEntityMsg_InvokerSpellCast)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CEntityMsg* entity_msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 cast_activity_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BuyBackStateAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_BuyBackStateAlert) */ {
 public:
  inline CDOTAUserMsg_BuyBackStateAlert() : CDOTAUserMsg_BuyBackStateAlert(nullptr) {}
  virtual ~CDOTAUserMsg_BuyBackStateAlert();
  explicit constexpr CDOTAUserMsg_BuyBackStateAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_BuyBackStateAlert(const CDOTAUserMsg_BuyBackStateAlert& from);
  CDOTAUserMsg_BuyBackStateAlert(CDOTAUserMsg_BuyBackStateAlert&& from) noexcept
    : CDOTAUserMsg_BuyBackStateAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_BuyBackStateAlert& operator=(const CDOTAUserMsg_BuyBackStateAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_BuyBackStateAlert& operator=(CDOTAUserMsg_BuyBackStateAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_BuyBackStateAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_BuyBackStateAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BuyBackStateAlert*>(
               &_CDOTAUserMsg_BuyBackStateAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CDOTAUserMsg_BuyBackStateAlert& a, CDOTAUserMsg_BuyBackStateAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_BuyBackStateAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_BuyBackStateAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BuyBackStateAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_BuyBackStateAlert>(nullptr);
  }

  CDOTAUserMsg_BuyBackStateAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_BuyBackStateAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_BuyBackStateAlert& from);
  void MergeFrom(const CDOTAUserMsg_BuyBackStateAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_BuyBackStateAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_BuyBackStateAlert";
  }
  protected:
  explicit CDOTAUserMsg_BuyBackStateAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BuyBackStateAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QuickBuyAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_QuickBuyAlert) */ {
 public:
  inline CDOTAUserMsg_QuickBuyAlert() : CDOTAUserMsg_QuickBuyAlert(nullptr) {}
  virtual ~CDOTAUserMsg_QuickBuyAlert();
  explicit constexpr CDOTAUserMsg_QuickBuyAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_QuickBuyAlert(const CDOTAUserMsg_QuickBuyAlert& from);
  CDOTAUserMsg_QuickBuyAlert(CDOTAUserMsg_QuickBuyAlert&& from) noexcept
    : CDOTAUserMsg_QuickBuyAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_QuickBuyAlert& operator=(const CDOTAUserMsg_QuickBuyAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_QuickBuyAlert& operator=(CDOTAUserMsg_QuickBuyAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_QuickBuyAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_QuickBuyAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QuickBuyAlert*>(
               &_CDOTAUserMsg_QuickBuyAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CDOTAUserMsg_QuickBuyAlert& a, CDOTAUserMsg_QuickBuyAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_QuickBuyAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_QuickBuyAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QuickBuyAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_QuickBuyAlert>(nullptr);
  }

  CDOTAUserMsg_QuickBuyAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_QuickBuyAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_QuickBuyAlert& from);
  void MergeFrom(const CDOTAUserMsg_QuickBuyAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_QuickBuyAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_QuickBuyAlert";
  }
  protected:
  explicit CDOTAUserMsg_QuickBuyAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kItemAbilityIdFieldNumber = 2,
    kGoldCostFieldNumber = 3,
    kItemCooldownSecondsFieldNumber = 4,
    kShowBuybackFieldNumber = 5,
  };
  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 item_ability_id = 2;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 gold_cost = 3;
  bool has_gold_cost() const;
  private:
  bool _internal_has_gold_cost() const;
  public:
  void clear_gold_cost();
  ::PROTOBUF_NAMESPACE_ID::int32 gold_cost() const;
  void set_gold_cost(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gold_cost() const;
  void _internal_set_gold_cost(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 item_cooldown_seconds = 4;
  bool has_item_cooldown_seconds() const;
  private:
  bool _internal_has_item_cooldown_seconds() const;
  public:
  void clear_item_cooldown_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 item_cooldown_seconds() const;
  void set_item_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_cooldown_seconds() const;
  void _internal_set_item_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool show_buyback = 5;
  bool has_show_buyback() const;
  private:
  bool _internal_has_show_buyback() const;
  public:
  void clear_show_buyback();
  bool show_buyback() const;
  void set_show_buyback(bool value);
  private:
  bool _internal_show_buyback() const;
  void _internal_set_show_buyback(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QuickBuyAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 gold_cost_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_cooldown_seconds_;
  bool show_buyback_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CourierKilledAlert_LostItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CourierKilledAlert.LostItem) */ {
 public:
  inline CDOTAUserMsg_CourierKilledAlert_LostItem() : CDOTAUserMsg_CourierKilledAlert_LostItem(nullptr) {}
  virtual ~CDOTAUserMsg_CourierKilledAlert_LostItem();
  explicit constexpr CDOTAUserMsg_CourierKilledAlert_LostItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CourierKilledAlert_LostItem(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);
  CDOTAUserMsg_CourierKilledAlert_LostItem(CDOTAUserMsg_CourierKilledAlert_LostItem&& from) noexcept
    : CDOTAUserMsg_CourierKilledAlert_LostItem() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CourierKilledAlert_LostItem& operator=(const CDOTAUserMsg_CourierKilledAlert_LostItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CourierKilledAlert_LostItem& operator=(CDOTAUserMsg_CourierKilledAlert_LostItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CourierKilledAlert_LostItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CourierKilledAlert_LostItem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CourierKilledAlert_LostItem*>(
               &_CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CDOTAUserMsg_CourierKilledAlert_LostItem& a, CDOTAUserMsg_CourierKilledAlert_LostItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CourierKilledAlert_LostItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CourierKilledAlert_LostItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CourierKilledAlert_LostItem* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CourierKilledAlert_LostItem>(nullptr);
  }

  CDOTAUserMsg_CourierKilledAlert_LostItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CourierKilledAlert_LostItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);
  void MergeFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CourierKilledAlert_LostItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CourierKilledAlert.LostItem";
  }
  protected:
  explicit CDOTAUserMsg_CourierKilledAlert_LostItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemAbilityIdFieldNumber = 1,
    kQuantityFieldNumber = 2,
  };
  // optional int32 item_ability_id = 1;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CourierKilledAlert.LostItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CourierKilledAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CourierKilledAlert) */ {
 public:
  inline CDOTAUserMsg_CourierKilledAlert() : CDOTAUserMsg_CourierKilledAlert(nullptr) {}
  virtual ~CDOTAUserMsg_CourierKilledAlert();
  explicit constexpr CDOTAUserMsg_CourierKilledAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CourierKilledAlert(const CDOTAUserMsg_CourierKilledAlert& from);
  CDOTAUserMsg_CourierKilledAlert(CDOTAUserMsg_CourierKilledAlert&& from) noexcept
    : CDOTAUserMsg_CourierKilledAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CourierKilledAlert& operator=(const CDOTAUserMsg_CourierKilledAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CourierKilledAlert& operator=(CDOTAUserMsg_CourierKilledAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CourierKilledAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CourierKilledAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CourierKilledAlert*>(
               &_CDOTAUserMsg_CourierKilledAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CDOTAUserMsg_CourierKilledAlert& a, CDOTAUserMsg_CourierKilledAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CourierKilledAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CourierKilledAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CourierKilledAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CourierKilledAlert>(nullptr);
  }

  CDOTAUserMsg_CourierKilledAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CourierKilledAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CourierKilledAlert& from);
  void MergeFrom(const CDOTAUserMsg_CourierKilledAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CourierKilledAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CourierKilledAlert";
  }
  protected:
  explicit CDOTAUserMsg_CourierKilledAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_CourierKilledAlert_LostItem LostItem;

  // accessors -------------------------------------------------------

  enum : int {
    kLostItemsFieldNumber = 5,
    kTeamFieldNumber = 1,
    kGoldValueFieldNumber = 2,
    kEntityHandleFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kKillerPlayerIdFieldNumber = 6,
    kOwningPlayerIdFieldNumber = 7,
  };
  // repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
  int lost_items_size() const;
  private:
  int _internal_lost_items_size() const;
  public:
  void clear_lost_items();
  ::CDOTAUserMsg_CourierKilledAlert_LostItem* mutable_lost_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CourierKilledAlert_LostItem >*
      mutable_lost_items();
  private:
  const ::CDOTAUserMsg_CourierKilledAlert_LostItem& _internal_lost_items(int index) const;
  ::CDOTAUserMsg_CourierKilledAlert_LostItem* _internal_add_lost_items();
  public:
  const ::CDOTAUserMsg_CourierKilledAlert_LostItem& lost_items(int index) const;
  ::CDOTAUserMsg_CourierKilledAlert_LostItem* add_lost_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CourierKilledAlert_LostItem >&
      lost_items() const;

  // optional uint32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::uint32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 gold_value = 2;
  bool has_gold_value() const;
  private:
  bool _internal_has_gold_value() const;
  public:
  void clear_gold_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_value() const;
  void set_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gold_value() const;
  void _internal_set_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  private:
  bool _internal_has_entity_handle() const;
  public:
  void clear_entity_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle() const;
  void set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_handle() const;
  void _internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 timestamp = 4;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int32 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 killer_player_id = 6;
  bool has_killer_player_id() const;
  private:
  bool _internal_has_killer_player_id() const;
  public:
  void clear_killer_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id() const;
  void set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_killer_player_id() const;
  void _internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 owning_player_id = 7;
  bool has_owning_player_id() const;
  private:
  bool _internal_has_owning_player_id() const;
  public:
  void clear_owning_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 owning_player_id() const;
  void set_owning_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_owning_player_id() const;
  void _internal_set_owning_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CourierKilledAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CourierKilledAlert_LostItem > lost_items_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_value_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 killer_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 owning_player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MinimapEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MinimapEvent) */ {
 public:
  inline CDOTAUserMsg_MinimapEvent() : CDOTAUserMsg_MinimapEvent(nullptr) {}
  virtual ~CDOTAUserMsg_MinimapEvent();
  explicit constexpr CDOTAUserMsg_MinimapEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MinimapEvent(const CDOTAUserMsg_MinimapEvent& from);
  CDOTAUserMsg_MinimapEvent(CDOTAUserMsg_MinimapEvent&& from) noexcept
    : CDOTAUserMsg_MinimapEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MinimapEvent& operator=(const CDOTAUserMsg_MinimapEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MinimapEvent& operator=(CDOTAUserMsg_MinimapEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MinimapEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MinimapEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MinimapEvent*>(
               &_CDOTAUserMsg_MinimapEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CDOTAUserMsg_MinimapEvent& a, CDOTAUserMsg_MinimapEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MinimapEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MinimapEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MinimapEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MinimapEvent>(nullptr);
  }

  CDOTAUserMsg_MinimapEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MinimapEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MinimapEvent& from);
  void MergeFrom(const CDOTAUserMsg_MinimapEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MinimapEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MinimapEvent";
  }
  protected:
  explicit CDOTAUserMsg_MinimapEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventTypeFieldNumber = 1,
    kEntityHandleFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
    kDurationFieldNumber = 5,
    kTargetEntityHandleFieldNumber = 6,
  };
  // optional int32 event_type = 1;
  bool has_event_type() const;
  private:
  bool _internal_has_event_type() const;
  public:
  void clear_event_type();
  ::PROTOBUF_NAMESPACE_ID::int32 event_type() const;
  void set_event_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_event_type() const;
  void _internal_set_event_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 entity_handle = 2;
  bool has_entity_handle() const;
  private:
  bool _internal_has_entity_handle() const;
  public:
  void clear_entity_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle() const;
  void set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_handle() const;
  void _internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 x = 3;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 y = 4;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 duration = 5;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::int32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_entity_handle = 6;
  bool has_target_entity_handle() const;
  private:
  bool _internal_has_target_entity_handle() const;
  public:
  void clear_target_entity_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 target_entity_handle() const;
  void set_target_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_entity_handle() const;
  void _internal_set_target_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 event_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_entity_handle_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MapLine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MapLine) */ {
 public:
  inline CDOTAUserMsg_MapLine() : CDOTAUserMsg_MapLine(nullptr) {}
  virtual ~CDOTAUserMsg_MapLine();
  explicit constexpr CDOTAUserMsg_MapLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MapLine(const CDOTAUserMsg_MapLine& from);
  CDOTAUserMsg_MapLine(CDOTAUserMsg_MapLine&& from) noexcept
    : CDOTAUserMsg_MapLine() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MapLine& operator=(const CDOTAUserMsg_MapLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MapLine& operator=(CDOTAUserMsg_MapLine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MapLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MapLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MapLine*>(
               &_CDOTAUserMsg_MapLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CDOTAUserMsg_MapLine& a, CDOTAUserMsg_MapLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MapLine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MapLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MapLine* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MapLine>(nullptr);
  }

  CDOTAUserMsg_MapLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MapLine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MapLine& from);
  void MergeFrom(const CDOTAUserMsg_MapLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MapLine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MapLine";
  }
  protected:
  explicit CDOTAUserMsg_MapLine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMaplineFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_MapLine mapline = 2;
  bool has_mapline() const;
  private:
  bool _internal_has_mapline() const;
  public:
  void clear_mapline();
  const ::CDOTAMsg_MapLine& mapline() const;
  ::CDOTAMsg_MapLine* release_mapline();
  ::CDOTAMsg_MapLine* mutable_mapline();
  void set_allocated_mapline(::CDOTAMsg_MapLine* mapline);
  private:
  const ::CDOTAMsg_MapLine& _internal_mapline() const;
  ::CDOTAMsg_MapLine* _internal_mutable_mapline();
  public:
  void unsafe_arena_set_allocated_mapline(
      ::CDOTAMsg_MapLine* mapline);
  ::CDOTAMsg_MapLine* unsafe_arena_release_mapline();

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MapLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_MapLine* mapline_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MinimapDebugPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MinimapDebugPoint) */ {
 public:
  inline CDOTAUserMsg_MinimapDebugPoint() : CDOTAUserMsg_MinimapDebugPoint(nullptr) {}
  virtual ~CDOTAUserMsg_MinimapDebugPoint();
  explicit constexpr CDOTAUserMsg_MinimapDebugPoint(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MinimapDebugPoint(const CDOTAUserMsg_MinimapDebugPoint& from);
  CDOTAUserMsg_MinimapDebugPoint(CDOTAUserMsg_MinimapDebugPoint&& from) noexcept
    : CDOTAUserMsg_MinimapDebugPoint() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MinimapDebugPoint& operator=(const CDOTAUserMsg_MinimapDebugPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MinimapDebugPoint& operator=(CDOTAUserMsg_MinimapDebugPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MinimapDebugPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MinimapDebugPoint* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MinimapDebugPoint*>(
               &_CDOTAUserMsg_MinimapDebugPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CDOTAUserMsg_MinimapDebugPoint& a, CDOTAUserMsg_MinimapDebugPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MinimapDebugPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MinimapDebugPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MinimapDebugPoint* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MinimapDebugPoint>(nullptr);
  }

  CDOTAUserMsg_MinimapDebugPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MinimapDebugPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MinimapDebugPoint& from);
  void MergeFrom(const CDOTAUserMsg_MinimapDebugPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MinimapDebugPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MinimapDebugPoint";
  }
  protected:
  explicit CDOTAUserMsg_MinimapDebugPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 1,
    kColorFieldNumber = 2,
    kSizeFieldNumber = 3,
    kDurationFieldNumber = 4,
    kIndexFieldNumber = 5,
  };
  // optional .CMsgVector location = 1;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::CMsgVector& location() const;
  ::CMsgVector* release_location();
  ::CMsgVector* mutable_location();
  void set_allocated_location(::CMsgVector* location);
  private:
  const ::CMsgVector& _internal_location() const;
  ::CMsgVector* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::CMsgVector* location);
  ::CMsgVector* unsafe_arena_release_location();

  // optional uint32 color = 2;
  bool has_color() const;
  private:
  bool _internal_has_color() const;
  public:
  void clear_color();
  ::PROTOBUF_NAMESPACE_ID::uint32 color() const;
  void set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_color() const;
  void _internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 size = 3;
  bool has_size() const;
  private:
  bool _internal_has_size() const;
  public:
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float duration = 4;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // optional int32 index = 5;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MinimapDebugPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* location_;
  ::PROTOBUF_NAMESPACE_ID::uint32 color_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  float duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CreateLinearProjectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CreateLinearProjectile) */ {
 public:
  inline CDOTAUserMsg_CreateLinearProjectile() : CDOTAUserMsg_CreateLinearProjectile(nullptr) {}
  virtual ~CDOTAUserMsg_CreateLinearProjectile();
  explicit constexpr CDOTAUserMsg_CreateLinearProjectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CreateLinearProjectile(const CDOTAUserMsg_CreateLinearProjectile& from);
  CDOTAUserMsg_CreateLinearProjectile(CDOTAUserMsg_CreateLinearProjectile&& from) noexcept
    : CDOTAUserMsg_CreateLinearProjectile() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CreateLinearProjectile& operator=(const CDOTAUserMsg_CreateLinearProjectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CreateLinearProjectile& operator=(CDOTAUserMsg_CreateLinearProjectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CreateLinearProjectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CreateLinearProjectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CreateLinearProjectile*>(
               &_CDOTAUserMsg_CreateLinearProjectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CDOTAUserMsg_CreateLinearProjectile& a, CDOTAUserMsg_CreateLinearProjectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CreateLinearProjectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CreateLinearProjectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CreateLinearProjectile* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CreateLinearProjectile>(nullptr);
  }

  CDOTAUserMsg_CreateLinearProjectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CreateLinearProjectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CreateLinearProjectile& from);
  void MergeFrom(const CDOTAUserMsg_CreateLinearProjectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CreateLinearProjectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CreateLinearProjectile";
  }
  protected:
  explicit CDOTAUserMsg_CreateLinearProjectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 1,
    kVelocityFieldNumber = 2,
    kAccelerationFieldNumber = 7,
    kParticleIndexFieldNumber = 5,
    kEntindexFieldNumber = 4,
    kHandleFieldNumber = 6,
    kMaxSpeedFieldNumber = 8,
    kFowRadiusFieldNumber = 9,
    kStickyFowRevealFieldNumber = 10,
    kDistanceFieldNumber = 11,
    kColorgemcolorFieldNumber = 12,
  };
  // optional .CMsgVector origin = 1;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgVector& origin() const;
  ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);
  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgVector* origin);
  ::CMsgVector* unsafe_arena_release_origin();

  // optional .CMsgVector2D velocity = 2;
  bool has_velocity() const;
  private:
  bool _internal_has_velocity() const;
  public:
  void clear_velocity();
  const ::CMsgVector2D& velocity() const;
  ::CMsgVector2D* release_velocity();
  ::CMsgVector2D* mutable_velocity();
  void set_allocated_velocity(::CMsgVector2D* velocity);
  private:
  const ::CMsgVector2D& _internal_velocity() const;
  ::CMsgVector2D* _internal_mutable_velocity();
  public:
  void unsafe_arena_set_allocated_velocity(
      ::CMsgVector2D* velocity);
  ::CMsgVector2D* unsafe_arena_release_velocity();

  // optional .CMsgVector2D acceleration = 7;
  bool has_acceleration() const;
  private:
  bool _internal_has_acceleration() const;
  public:
  void clear_acceleration();
  const ::CMsgVector2D& acceleration() const;
  ::CMsgVector2D* release_acceleration();
  ::CMsgVector2D* mutable_acceleration();
  void set_allocated_acceleration(::CMsgVector2D* acceleration);
  private:
  const ::CMsgVector2D& _internal_acceleration() const;
  ::CMsgVector2D* _internal_mutable_acceleration();
  public:
  void unsafe_arena_set_allocated_acceleration(
      ::CMsgVector2D* acceleration);
  ::CMsgVector2D* unsafe_arena_release_acceleration();

  // optional uint64 particle_index = 5;
  bool has_particle_index() const;
  private:
  bool _internal_has_particle_index() const;
  public:
  void clear_particle_index();
  ::PROTOBUF_NAMESPACE_ID::uint64 particle_index() const;
  void set_particle_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_particle_index() const;
  void _internal_set_particle_index(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 entindex = 4;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 handle = 6;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float max_speed = 8;
  bool has_max_speed() const;
  private:
  bool _internal_has_max_speed() const;
  public:
  void clear_max_speed();
  float max_speed() const;
  void set_max_speed(float value);
  private:
  float _internal_max_speed() const;
  void _internal_set_max_speed(float value);
  public:

  // optional float fow_radius = 9;
  bool has_fow_radius() const;
  private:
  bool _internal_has_fow_radius() const;
  public:
  void clear_fow_radius();
  float fow_radius() const;
  void set_fow_radius(float value);
  private:
  float _internal_fow_radius() const;
  void _internal_set_fow_radius(float value);
  public:

  // optional bool sticky_fow_reveal = 10;
  bool has_sticky_fow_reveal() const;
  private:
  bool _internal_has_sticky_fow_reveal() const;
  public:
  void clear_sticky_fow_reveal();
  bool sticky_fow_reveal() const;
  void set_sticky_fow_reveal(bool value);
  private:
  bool _internal_sticky_fow_reveal() const;
  void _internal_set_sticky_fow_reveal(bool value);
  public:

  // optional float distance = 11;
  bool has_distance() const;
  private:
  bool _internal_has_distance() const;
  public:
  void clear_distance();
  float distance() const;
  void set_distance(float value);
  private:
  float _internal_distance() const;
  void _internal_set_distance(float value);
  public:

  // optional fixed32 colorgemcolor = 12;
  bool has_colorgemcolor() const;
  private:
  bool _internal_has_colorgemcolor() const;
  public:
  void clear_colorgemcolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor() const;
  void set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_colorgemcolor() const;
  void _internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CreateLinearProjectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* origin_;
  ::CMsgVector2D* velocity_;
  ::CMsgVector2D* acceleration_;
  ::PROTOBUF_NAMESPACE_ID::uint64 particle_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 handle_;
  float max_speed_;
  float fow_radius_;
  bool sticky_fow_reveal_;
  float distance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DestroyLinearProjectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_DestroyLinearProjectile) */ {
 public:
  inline CDOTAUserMsg_DestroyLinearProjectile() : CDOTAUserMsg_DestroyLinearProjectile(nullptr) {}
  virtual ~CDOTAUserMsg_DestroyLinearProjectile();
  explicit constexpr CDOTAUserMsg_DestroyLinearProjectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_DestroyLinearProjectile(const CDOTAUserMsg_DestroyLinearProjectile& from);
  CDOTAUserMsg_DestroyLinearProjectile(CDOTAUserMsg_DestroyLinearProjectile&& from) noexcept
    : CDOTAUserMsg_DestroyLinearProjectile() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_DestroyLinearProjectile& operator=(const CDOTAUserMsg_DestroyLinearProjectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_DestroyLinearProjectile& operator=(CDOTAUserMsg_DestroyLinearProjectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_DestroyLinearProjectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_DestroyLinearProjectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DestroyLinearProjectile*>(
               &_CDOTAUserMsg_DestroyLinearProjectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CDOTAUserMsg_DestroyLinearProjectile& a, CDOTAUserMsg_DestroyLinearProjectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_DestroyLinearProjectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_DestroyLinearProjectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DestroyLinearProjectile* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_DestroyLinearProjectile>(nullptr);
  }

  CDOTAUserMsg_DestroyLinearProjectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_DestroyLinearProjectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_DestroyLinearProjectile& from);
  void MergeFrom(const CDOTAUserMsg_DestroyLinearProjectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_DestroyLinearProjectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_DestroyLinearProjectile";
  }
  protected:
  explicit CDOTAUserMsg_DestroyLinearProjectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
  };
  // optional int32 handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DestroyLinearProjectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 handle_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DodgeTrackingProjectiles PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_DodgeTrackingProjectiles) */ {
 public:
  inline CDOTAUserMsg_DodgeTrackingProjectiles() : CDOTAUserMsg_DodgeTrackingProjectiles(nullptr) {}
  virtual ~CDOTAUserMsg_DodgeTrackingProjectiles();
  explicit constexpr CDOTAUserMsg_DodgeTrackingProjectiles(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_DodgeTrackingProjectiles(const CDOTAUserMsg_DodgeTrackingProjectiles& from);
  CDOTAUserMsg_DodgeTrackingProjectiles(CDOTAUserMsg_DodgeTrackingProjectiles&& from) noexcept
    : CDOTAUserMsg_DodgeTrackingProjectiles() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_DodgeTrackingProjectiles& operator=(const CDOTAUserMsg_DodgeTrackingProjectiles& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_DodgeTrackingProjectiles& operator=(CDOTAUserMsg_DodgeTrackingProjectiles&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_DodgeTrackingProjectiles& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_DodgeTrackingProjectiles* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DodgeTrackingProjectiles*>(
               &_CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CDOTAUserMsg_DodgeTrackingProjectiles& a, CDOTAUserMsg_DodgeTrackingProjectiles& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_DodgeTrackingProjectiles* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_DodgeTrackingProjectiles* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DodgeTrackingProjectiles* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_DodgeTrackingProjectiles>(nullptr);
  }

  CDOTAUserMsg_DodgeTrackingProjectiles* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_DodgeTrackingProjectiles>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from);
  void MergeFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_DodgeTrackingProjectiles* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_DodgeTrackingProjectiles";
  }
  protected:
  explicit CDOTAUserMsg_DodgeTrackingProjectiles(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntindexFieldNumber = 1,
    kAttacksOnlyFieldNumber = 2,
  };
  // required int32 entindex = 1;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool attacks_only = 2;
  bool has_attacks_only() const;
  private:
  bool _internal_has_attacks_only() const;
  public:
  void clear_attacks_only();
  bool attacks_only() const;
  void set_attacks_only(bool value);
  private:
  bool _internal_attacks_only() const;
  void _internal_set_attacks_only(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DodgeTrackingProjectiles)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  bool attacks_only_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpectatorPlayerClick PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SpectatorPlayerClick) */ {
 public:
  inline CDOTAUserMsg_SpectatorPlayerClick() : CDOTAUserMsg_SpectatorPlayerClick(nullptr) {}
  virtual ~CDOTAUserMsg_SpectatorPlayerClick();
  explicit constexpr CDOTAUserMsg_SpectatorPlayerClick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SpectatorPlayerClick(const CDOTAUserMsg_SpectatorPlayerClick& from);
  CDOTAUserMsg_SpectatorPlayerClick(CDOTAUserMsg_SpectatorPlayerClick&& from) noexcept
    : CDOTAUserMsg_SpectatorPlayerClick() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SpectatorPlayerClick& operator=(const CDOTAUserMsg_SpectatorPlayerClick& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SpectatorPlayerClick& operator=(CDOTAUserMsg_SpectatorPlayerClick&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SpectatorPlayerClick& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SpectatorPlayerClick* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpectatorPlayerClick*>(
               &_CDOTAUserMsg_SpectatorPlayerClick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CDOTAUserMsg_SpectatorPlayerClick& a, CDOTAUserMsg_SpectatorPlayerClick& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SpectatorPlayerClick* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SpectatorPlayerClick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpectatorPlayerClick* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpectatorPlayerClick>(nullptr);
  }

  CDOTAUserMsg_SpectatorPlayerClick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpectatorPlayerClick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SpectatorPlayerClick& from);
  void MergeFrom(const CDOTAUserMsg_SpectatorPlayerClick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SpectatorPlayerClick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SpectatorPlayerClick";
  }
  protected:
  explicit CDOTAUserMsg_SpectatorPlayerClick(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntindexFieldNumber = 1,
    kOrderTypeFieldNumber = 2,
    kTargetIndexFieldNumber = 3,
  };
  // required int32 entindex = 1;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 order_type = 2;
  bool has_order_type() const;
  private:
  bool _internal_has_order_type() const;
  public:
  void clear_order_type();
  ::PROTOBUF_NAMESPACE_ID::int32 order_type() const;
  void set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_order_type() const;
  void _internal_set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_index = 3;
  bool has_target_index() const;
  private:
  bool _internal_has_target_index() const;
  public:
  void clear_target_index();
  ::PROTOBUF_NAMESPACE_ID::int32 target_index() const;
  void set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_index() const;
  void _internal_set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpectatorPlayerClick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 order_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpectatorPlayerUnitOrders PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SpectatorPlayerUnitOrders) */ {
 public:
  inline CDOTAUserMsg_SpectatorPlayerUnitOrders() : CDOTAUserMsg_SpectatorPlayerUnitOrders(nullptr) {}
  virtual ~CDOTAUserMsg_SpectatorPlayerUnitOrders();
  explicit constexpr CDOTAUserMsg_SpectatorPlayerUnitOrders(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SpectatorPlayerUnitOrders(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);
  CDOTAUserMsg_SpectatorPlayerUnitOrders(CDOTAUserMsg_SpectatorPlayerUnitOrders&& from) noexcept
    : CDOTAUserMsg_SpectatorPlayerUnitOrders() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SpectatorPlayerUnitOrders& operator=(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SpectatorPlayerUnitOrders& operator=(CDOTAUserMsg_SpectatorPlayerUnitOrders&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SpectatorPlayerUnitOrders& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SpectatorPlayerUnitOrders* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpectatorPlayerUnitOrders*>(
               &_CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(CDOTAUserMsg_SpectatorPlayerUnitOrders& a, CDOTAUserMsg_SpectatorPlayerUnitOrders& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpectatorPlayerUnitOrders* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpectatorPlayerUnitOrders>(nullptr);
  }

  CDOTAUserMsg_SpectatorPlayerUnitOrders* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpectatorPlayerUnitOrders>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);
  void MergeFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SpectatorPlayerUnitOrders";
  }
  protected:
  explicit CDOTAUserMsg_SpectatorPlayerUnitOrders(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitsFieldNumber = 3,
    kPositionFieldNumber = 6,
    kEntindexFieldNumber = 1,
    kOrderTypeFieldNumber = 2,
    kTargetIndexFieldNumber = 4,
    kAbilityIdFieldNumber = 5,
    kQueueFieldNumber = 7,
    kSequenceNumberFieldNumber = 8,
    kFlagsFieldNumber = 9,
  };
  // repeated int32 units = 3;
  int units_size() const;
  private:
  int _internal_units_size() const;
  public:
  void clear_units();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_units(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_units() const;
  void _internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_units();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 units(int index) const;
  void set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_units(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_units();

  // optional .CMsgVector position = 6;
  bool has_position() const;
  private:
  bool _internal_has_position() const;
  public:
  void clear_position();
  const ::CMsgVector& position() const;
  ::CMsgVector* release_position();
  ::CMsgVector* mutable_position();
  void set_allocated_position(::CMsgVector* position);
  private:
  const ::CMsgVector& _internal_position() const;
  ::CMsgVector* _internal_mutable_position();
  public:
  void unsafe_arena_set_allocated_position(
      ::CMsgVector* position);
  ::CMsgVector* unsafe_arena_release_position();

  // optional int32 entindex = 1;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 order_type = 2;
  bool has_order_type() const;
  private:
  bool _internal_has_order_type() const;
  public:
  void clear_order_type();
  ::PROTOBUF_NAMESPACE_ID::int32 order_type() const;
  void set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_order_type() const;
  void _internal_set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_index = 4;
  bool has_target_index() const;
  private:
  bool _internal_has_target_index() const;
  public:
  void clear_target_index();
  ::PROTOBUF_NAMESPACE_ID::int32 target_index() const;
  void set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_index() const;
  void _internal_set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 ability_id = 5;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool queue = 7;
  bool has_queue() const;
  private:
  bool _internal_has_queue() const;
  public:
  void clear_queue();
  bool queue() const;
  void set_queue(bool value);
  private:
  bool _internal_queue() const;
  void _internal_set_queue(bool value);
  public:

  // optional int32 sequence_number = 8;
  bool has_sequence_number() const;
  private:
  bool _internal_has_sequence_number() const;
  public:
  void clear_sequence_number();
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_number() const;
  void set_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sequence_number() const;
  void _internal_set_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 flags = 9;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpectatorPlayerUnitOrders)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > units_;
  ::CMsgVector* position_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 order_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 ability_id_;
  bool queue_;
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_number_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_NevermoreRequiem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_NevermoreRequiem) */ {
 public:
  inline CDOTAUserMsg_NevermoreRequiem() : CDOTAUserMsg_NevermoreRequiem(nullptr) {}
  virtual ~CDOTAUserMsg_NevermoreRequiem();
  explicit constexpr CDOTAUserMsg_NevermoreRequiem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_NevermoreRequiem(const CDOTAUserMsg_NevermoreRequiem& from);
  CDOTAUserMsg_NevermoreRequiem(CDOTAUserMsg_NevermoreRequiem&& from) noexcept
    : CDOTAUserMsg_NevermoreRequiem() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_NevermoreRequiem& operator=(const CDOTAUserMsg_NevermoreRequiem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_NevermoreRequiem& operator=(CDOTAUserMsg_NevermoreRequiem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_NevermoreRequiem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_NevermoreRequiem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_NevermoreRequiem*>(
               &_CDOTAUserMsg_NevermoreRequiem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(CDOTAUserMsg_NevermoreRequiem& a, CDOTAUserMsg_NevermoreRequiem& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_NevermoreRequiem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_NevermoreRequiem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_NevermoreRequiem* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_NevermoreRequiem>(nullptr);
  }

  CDOTAUserMsg_NevermoreRequiem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_NevermoreRequiem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_NevermoreRequiem& from);
  void MergeFrom(const CDOTAUserMsg_NevermoreRequiem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_NevermoreRequiem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_NevermoreRequiem";
  }
  protected:
  explicit CDOTAUserMsg_NevermoreRequiem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 3,
    kEntityHandleFieldNumber = 1,
    kLinesFieldNumber = 2,
    kReverseFieldNumber = 4,
  };
  // optional .CMsgVector origin = 3;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgVector& origin() const;
  ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);
  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgVector* origin);
  ::CMsgVector* unsafe_arena_release_origin();

  // optional int32 entity_handle = 1;
  bool has_entity_handle() const;
  private:
  bool _internal_has_entity_handle() const;
  public:
  void clear_entity_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle() const;
  void set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_handle() const;
  void _internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 lines = 2;
  bool has_lines() const;
  private:
  bool _internal_has_lines() const;
  public:
  void clear_lines();
  ::PROTOBUF_NAMESPACE_ID::int32 lines() const;
  void set_lines(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lines() const;
  void _internal_set_lines(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool reverse = 4;
  bool has_reverse() const;
  private:
  bool _internal_has_reverse() const;
  public:
  void clear_reverse();
  bool reverse() const;
  void set_reverse(bool value);
  private:
  bool _internal_reverse() const;
  void _internal_set_reverse(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_NevermoreRequiem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* origin_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 lines_;
  bool reverse_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_InvalidCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_InvalidCommand) */ {
 public:
  inline CDOTAUserMsg_InvalidCommand() : CDOTAUserMsg_InvalidCommand(nullptr) {}
  virtual ~CDOTAUserMsg_InvalidCommand();
  explicit constexpr CDOTAUserMsg_InvalidCommand(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_InvalidCommand(const CDOTAUserMsg_InvalidCommand& from);
  CDOTAUserMsg_InvalidCommand(CDOTAUserMsg_InvalidCommand&& from) noexcept
    : CDOTAUserMsg_InvalidCommand() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_InvalidCommand& operator=(const CDOTAUserMsg_InvalidCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_InvalidCommand& operator=(CDOTAUserMsg_InvalidCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_InvalidCommand& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_InvalidCommand* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_InvalidCommand*>(
               &_CDOTAUserMsg_InvalidCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(CDOTAUserMsg_InvalidCommand& a, CDOTAUserMsg_InvalidCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_InvalidCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_InvalidCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_InvalidCommand* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_InvalidCommand>(nullptr);
  }

  CDOTAUserMsg_InvalidCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_InvalidCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_InvalidCommand& from);
  void MergeFrom(const CDOTAUserMsg_InvalidCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_InvalidCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_InvalidCommand";
  }
  protected:
  explicit CDOTAUserMsg_InvalidCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // optional string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_InvalidCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HudError PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HudError) */ {
 public:
  inline CDOTAUserMsg_HudError() : CDOTAUserMsg_HudError(nullptr) {}
  virtual ~CDOTAUserMsg_HudError();
  explicit constexpr CDOTAUserMsg_HudError(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HudError(const CDOTAUserMsg_HudError& from);
  CDOTAUserMsg_HudError(CDOTAUserMsg_HudError&& from) noexcept
    : CDOTAUserMsg_HudError() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HudError& operator=(const CDOTAUserMsg_HudError& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HudError& operator=(CDOTAUserMsg_HudError&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HudError& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HudError* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HudError*>(
               &_CDOTAUserMsg_HudError_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(CDOTAUserMsg_HudError& a, CDOTAUserMsg_HudError& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HudError* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HudError* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HudError* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HudError>(nullptr);
  }

  CDOTAUserMsg_HudError* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HudError>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HudError& from);
  void MergeFrom(const CDOTAUserMsg_HudError& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HudError* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HudError";
  }
  protected:
  explicit CDOTAUserMsg_HudError(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderIdFieldNumber = 1,
  };
  // optional int32 order_id = 1;
  bool has_order_id() const;
  private:
  bool _internal_has_order_id() const;
  public:
  void clear_order_id();
  ::PROTOBUF_NAMESPACE_ID::int32 order_id() const;
  void set_order_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_order_id() const;
  void _internal_set_order_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HudError)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 order_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SharedCooldown PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SharedCooldown) */ {
 public:
  inline CDOTAUserMsg_SharedCooldown() : CDOTAUserMsg_SharedCooldown(nullptr) {}
  virtual ~CDOTAUserMsg_SharedCooldown();
  explicit constexpr CDOTAUserMsg_SharedCooldown(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SharedCooldown(const CDOTAUserMsg_SharedCooldown& from);
  CDOTAUserMsg_SharedCooldown(CDOTAUserMsg_SharedCooldown&& from) noexcept
    : CDOTAUserMsg_SharedCooldown() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SharedCooldown& operator=(const CDOTAUserMsg_SharedCooldown& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SharedCooldown& operator=(CDOTAUserMsg_SharedCooldown&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SharedCooldown& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SharedCooldown* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SharedCooldown*>(
               &_CDOTAUserMsg_SharedCooldown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(CDOTAUserMsg_SharedCooldown& a, CDOTAUserMsg_SharedCooldown& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SharedCooldown* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SharedCooldown* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SharedCooldown* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SharedCooldown>(nullptr);
  }

  CDOTAUserMsg_SharedCooldown* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SharedCooldown>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SharedCooldown& from);
  void MergeFrom(const CDOTAUserMsg_SharedCooldown& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SharedCooldown* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SharedCooldown";
  }
  protected:
  explicit CDOTAUserMsg_SharedCooldown(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kEntindexFieldNumber = 1,
    kCooldownFieldNumber = 3,
    kNameIndexFieldNumber = 4,
  };
  // optional string name = 2;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int32 entindex = 1;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float cooldown = 3;
  bool has_cooldown() const;
  private:
  bool _internal_has_cooldown() const;
  public:
  void clear_cooldown();
  float cooldown() const;
  void set_cooldown(float value);
  private:
  float _internal_cooldown() const;
  void _internal_set_cooldown(float value);
  public:

  // optional int32 name_index = 4;
  bool has_name_index() const;
  private:
  bool _internal_has_name_index() const;
  public:
  void clear_name_index();
  ::PROTOBUF_NAMESPACE_ID::int32 name_index() const;
  void set_name_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_name_index() const;
  void _internal_set_name_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SharedCooldown)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  float cooldown_;
  ::PROTOBUF_NAMESPACE_ID::int32 name_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SetNextAutobuyItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SetNextAutobuyItem) */ {
 public:
  inline CDOTAUserMsg_SetNextAutobuyItem() : CDOTAUserMsg_SetNextAutobuyItem(nullptr) {}
  virtual ~CDOTAUserMsg_SetNextAutobuyItem();
  explicit constexpr CDOTAUserMsg_SetNextAutobuyItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SetNextAutobuyItem(const CDOTAUserMsg_SetNextAutobuyItem& from);
  CDOTAUserMsg_SetNextAutobuyItem(CDOTAUserMsg_SetNextAutobuyItem&& from) noexcept
    : CDOTAUserMsg_SetNextAutobuyItem() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SetNextAutobuyItem& operator=(const CDOTAUserMsg_SetNextAutobuyItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SetNextAutobuyItem& operator=(CDOTAUserMsg_SetNextAutobuyItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SetNextAutobuyItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SetNextAutobuyItem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SetNextAutobuyItem*>(
               &_CDOTAUserMsg_SetNextAutobuyItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(CDOTAUserMsg_SetNextAutobuyItem& a, CDOTAUserMsg_SetNextAutobuyItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SetNextAutobuyItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SetNextAutobuyItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SetNextAutobuyItem* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SetNextAutobuyItem>(nullptr);
  }

  CDOTAUserMsg_SetNextAutobuyItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SetNextAutobuyItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SetNextAutobuyItem& from);
  void MergeFrom(const CDOTAUserMsg_SetNextAutobuyItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SetNextAutobuyItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SetNextAutobuyItem";
  }
  protected:
  explicit CDOTAUserMsg_SetNextAutobuyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SetNextAutobuyItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HalloweenDrops PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HalloweenDrops) */ {
 public:
  inline CDOTAUserMsg_HalloweenDrops() : CDOTAUserMsg_HalloweenDrops(nullptr) {}
  virtual ~CDOTAUserMsg_HalloweenDrops();
  explicit constexpr CDOTAUserMsg_HalloweenDrops(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HalloweenDrops(const CDOTAUserMsg_HalloweenDrops& from);
  CDOTAUserMsg_HalloweenDrops(CDOTAUserMsg_HalloweenDrops&& from) noexcept
    : CDOTAUserMsg_HalloweenDrops() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HalloweenDrops& operator=(const CDOTAUserMsg_HalloweenDrops& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HalloweenDrops& operator=(CDOTAUserMsg_HalloweenDrops&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HalloweenDrops& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HalloweenDrops* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HalloweenDrops*>(
               &_CDOTAUserMsg_HalloweenDrops_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(CDOTAUserMsg_HalloweenDrops& a, CDOTAUserMsg_HalloweenDrops& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HalloweenDrops* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HalloweenDrops* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HalloweenDrops* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HalloweenDrops>(nullptr);
  }

  CDOTAUserMsg_HalloweenDrops* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HalloweenDrops>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HalloweenDrops& from);
  void MergeFrom(const CDOTAUserMsg_HalloweenDrops& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HalloweenDrops* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HalloweenDrops";
  }
  protected:
  explicit CDOTAUserMsg_HalloweenDrops(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemDefsFieldNumber = 1,
    kPlayerIdsFieldNumber = 2,
    kPrizeListFieldNumber = 3,
  };
  // repeated uint32 item_defs = 1;
  int item_defs_size() const;
  private:
  int _internal_item_defs_size() const;
  public:
  void clear_item_defs();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_defs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_item_defs() const;
  void _internal_add_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_item_defs();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 item_defs(int index) const;
  void set_item_defs(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      item_defs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_item_defs();

  // repeated uint32 player_ids = 2;
  int player_ids_size() const;
  private:
  int _internal_player_ids_size() const;
  public:
  void clear_player_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_player_ids() const;
  void _internal_add_player_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_player_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 player_ids(int index) const;
  void set_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_player_ids(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      player_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_player_ids();

  // optional uint32 prize_list = 3;
  bool has_prize_list() const;
  private:
  bool _internal_has_prize_list() const;
  public:
  void clear_prize_list();
  ::PROTOBUF_NAMESPACE_ID::uint32 prize_list() const;
  void set_prize_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prize_list() const;
  void _internal_set_prize_list(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HalloweenDrops)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > item_defs_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > player_ids_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prize_list_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PredictionResult_Prediction PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PredictionResult.Prediction) */ {
 public:
  inline CDOTAUserMsg_PredictionResult_Prediction() : CDOTAUserMsg_PredictionResult_Prediction(nullptr) {}
  virtual ~CDOTAUserMsg_PredictionResult_Prediction();
  explicit constexpr CDOTAUserMsg_PredictionResult_Prediction(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PredictionResult_Prediction(const CDOTAUserMsg_PredictionResult_Prediction& from);
  CDOTAUserMsg_PredictionResult_Prediction(CDOTAUserMsg_PredictionResult_Prediction&& from) noexcept
    : CDOTAUserMsg_PredictionResult_Prediction() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PredictionResult_Prediction& operator=(const CDOTAUserMsg_PredictionResult_Prediction& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PredictionResult_Prediction& operator=(CDOTAUserMsg_PredictionResult_Prediction&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PredictionResult_Prediction& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PredictionResult_Prediction* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PredictionResult_Prediction*>(
               &_CDOTAUserMsg_PredictionResult_Prediction_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(CDOTAUserMsg_PredictionResult_Prediction& a, CDOTAUserMsg_PredictionResult_Prediction& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PredictionResult_Prediction* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PredictionResult_Prediction* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PredictionResult_Prediction* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PredictionResult_Prediction>(nullptr);
  }

  CDOTAUserMsg_PredictionResult_Prediction* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PredictionResult_Prediction>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PredictionResult_Prediction& from);
  void MergeFrom(const CDOTAUserMsg_PredictionResult_Prediction& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PredictionResult_Prediction* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PredictionResult.Prediction";
  }
  protected:
  explicit CDOTAUserMsg_PredictionResult_Prediction(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_PredictionResult_Prediction_EResult EResult;
  static constexpr EResult k_eResult_ItemGranted =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted;
  static constexpr EResult k_eResult_Destroyed =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed;
  static inline bool EResult_IsValid(int value) {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(value);
  }
  static constexpr EResult EResult_MIN =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MIN;
  static constexpr EResult EResult_MAX =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX;
  static constexpr int EResult_ARRAYSIZE =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResult_descriptor() {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
  }
  template<typename T>
  static inline const std::string& EResult_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResult>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResult_Name.");
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_Name(enum_t_value);
  }
  static inline bool EResult_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResult* value) {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kGrantedItemDefsFieldNumber = 6,
    kItemDefFieldNumber = 1,
    kNumCorrectFieldNumber = 2,
    kNumFailsFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // repeated uint32 granted_item_defs = 6;
  int granted_item_defs_size() const;
  private:
  int _internal_granted_item_defs_size() const;
  public:
  void clear_granted_item_defs();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_granted_item_defs(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_granted_item_defs() const;
  void _internal_add_granted_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_granted_item_defs();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 granted_item_defs(int index) const;
  void set_granted_item_defs(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_granted_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      granted_item_defs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_granted_item_defs();

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  private:
  bool _internal_has_item_def() const;
  public:
  void clear_item_def();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def() const;
  void set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_def() const;
  void _internal_set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num_correct = 2;
  bool has_num_correct() const;
  private:
  bool _internal_has_num_correct() const;
  public:
  void clear_num_correct();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_correct() const;
  void set_num_correct(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_correct() const;
  void _internal_set_num_correct(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 num_fails = 3;
  bool has_num_fails() const;
  private:
  bool _internal_has_num_fails() const;
  public:
  void clear_num_fails();
  ::PROTOBUF_NAMESPACE_ID::uint32 num_fails() const;
  void set_num_fails(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num_fails() const;
  void _internal_set_num_fails(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CDOTAUserMsg_PredictionResult_Prediction_EResult result() const;
  void set_result(::CDOTAUserMsg_PredictionResult_Prediction_EResult value);
  private:
  ::CDOTAUserMsg_PredictionResult_Prediction_EResult _internal_result() const;
  void _internal_set_result(::CDOTAUserMsg_PredictionResult_Prediction_EResult value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PredictionResult.Prediction)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > granted_item_defs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_def_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_correct_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_fails_;
  int result_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PredictionResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PredictionResult) */ {
 public:
  inline CDOTAUserMsg_PredictionResult() : CDOTAUserMsg_PredictionResult(nullptr) {}
  virtual ~CDOTAUserMsg_PredictionResult();
  explicit constexpr CDOTAUserMsg_PredictionResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PredictionResult(const CDOTAUserMsg_PredictionResult& from);
  CDOTAUserMsg_PredictionResult(CDOTAUserMsg_PredictionResult&& from) noexcept
    : CDOTAUserMsg_PredictionResult() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PredictionResult& operator=(const CDOTAUserMsg_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PredictionResult& operator=(CDOTAUserMsg_PredictionResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PredictionResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PredictionResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PredictionResult*>(
               &_CDOTAUserMsg_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(CDOTAUserMsg_PredictionResult& a, CDOTAUserMsg_PredictionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PredictionResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PredictionResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PredictionResult* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PredictionResult>(nullptr);
  }

  CDOTAUserMsg_PredictionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PredictionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PredictionResult& from);
  void MergeFrom(const CDOTAUserMsg_PredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PredictionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PredictionResult";
  }
  protected:
  explicit CDOTAUserMsg_PredictionResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_PredictionResult_Prediction Prediction;

  // accessors -------------------------------------------------------

  enum : int {
    kPredictionsFieldNumber = 4,
    kMatchIdFieldNumber = 2,
    kAccountIdFieldNumber = 1,
    kCorrectFieldNumber = 3,
  };
  // repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
  int predictions_size() const;
  private:
  int _internal_predictions_size() const;
  public:
  void clear_predictions();
  ::CDOTAUserMsg_PredictionResult_Prediction* mutable_predictions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PredictionResult_Prediction >*
      mutable_predictions();
  private:
  const ::CDOTAUserMsg_PredictionResult_Prediction& _internal_predictions(int index) const;
  ::CDOTAUserMsg_PredictionResult_Prediction* _internal_add_predictions();
  public:
  const ::CDOTAUserMsg_PredictionResult_Prediction& predictions(int index) const;
  ::CDOTAUserMsg_PredictionResult_Prediction* add_predictions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PredictionResult_Prediction >&
      predictions() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool correct = 3;
  bool has_correct() const;
  private:
  bool _internal_has_correct() const;
  public:
  void clear_correct();
  bool correct() const;
  void set_correct(bool value);
  private:
  bool _internal_correct() const;
  void _internal_set_correct(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PredictionResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PredictionResult_Prediction > predictions_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  bool correct_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAResponseQuerySerialized_Fact PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAResponseQuerySerialized.Fact) */ {
 public:
  inline CDOTAResponseQuerySerialized_Fact() : CDOTAResponseQuerySerialized_Fact(nullptr) {}
  virtual ~CDOTAResponseQuerySerialized_Fact();
  explicit constexpr CDOTAResponseQuerySerialized_Fact(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAResponseQuerySerialized_Fact(const CDOTAResponseQuerySerialized_Fact& from);
  CDOTAResponseQuerySerialized_Fact(CDOTAResponseQuerySerialized_Fact&& from) noexcept
    : CDOTAResponseQuerySerialized_Fact() {
    *this = ::std::move(from);
  }

  inline CDOTAResponseQuerySerialized_Fact& operator=(const CDOTAResponseQuerySerialized_Fact& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAResponseQuerySerialized_Fact& operator=(CDOTAResponseQuerySerialized_Fact&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAResponseQuerySerialized_Fact& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAResponseQuerySerialized_Fact* internal_default_instance() {
    return reinterpret_cast<const CDOTAResponseQuerySerialized_Fact*>(
               &_CDOTAResponseQuerySerialized_Fact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(CDOTAResponseQuerySerialized_Fact& a, CDOTAResponseQuerySerialized_Fact& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAResponseQuerySerialized_Fact* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAResponseQuerySerialized_Fact* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAResponseQuerySerialized_Fact* New() const final {
    return CreateMaybeMessage<CDOTAResponseQuerySerialized_Fact>(nullptr);
  }

  CDOTAResponseQuerySerialized_Fact* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAResponseQuerySerialized_Fact>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAResponseQuerySerialized_Fact& from);
  void MergeFrom(const CDOTAResponseQuerySerialized_Fact& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAResponseQuerySerialized_Fact* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAResponseQuerySerialized.Fact";
  }
  protected:
  explicit CDOTAResponseQuerySerialized_Fact(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAResponseQuerySerialized_Fact_ValueType ValueType;
  static constexpr ValueType NUMERIC =
    CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC;
  static constexpr ValueType STRING =
    CDOTAResponseQuerySerialized_Fact_ValueType_STRING;
  static constexpr ValueType STRINGTABLE_INDEX =
    CDOTAResponseQuerySerialized_Fact_ValueType_STRINGTABLE_INDEX;
  static constexpr ValueType INT_NUMERIC =
    CDOTAResponseQuerySerialized_Fact_ValueType_INT_NUMERIC;
  static inline bool ValueType_IsValid(int value) {
    return CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(value);
  }
  static constexpr ValueType ValueType_MIN =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MIN;
  static constexpr ValueType ValueType_MAX =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX;
  static constexpr int ValueType_ARRAYSIZE =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ValueType_descriptor() {
    return CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
  }
  template<typename T>
  static inline const std::string& ValueType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ValueType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ValueType_Name.");
    return CDOTAResponseQuerySerialized_Fact_ValueType_Name(enum_t_value);
  }
  static inline bool ValueType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      ValueType* value) {
    return CDOTAResponseQuerySerialized_Fact_ValueType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kValStringFieldNumber = 4,
    kKeyFieldNumber = 1,
    kValNumericFieldNumber = 3,
    kValStringtableIndexFieldNumber = 5,
    kValIntNumericFieldNumber = 6,
    kValtypeFieldNumber = 2,
  };
  // optional string val_string = 4;
  bool has_val_string() const;
  private:
  bool _internal_has_val_string() const;
  public:
  void clear_val_string();
  const std::string& val_string() const;
  void set_val_string(const std::string& value);
  void set_val_string(std::string&& value);
  void set_val_string(const char* value);
  void set_val_string(const char* value, size_t size);
  std::string* mutable_val_string();
  std::string* release_val_string();
  void set_allocated_val_string(std::string* val_string);
  private:
  const std::string& _internal_val_string() const;
  void _internal_set_val_string(const std::string& value);
  std::string* _internal_mutable_val_string();
  public:

  // required int32 key = 1;
  bool has_key() const;
  private:
  bool _internal_has_key() const;
  public:
  void clear_key();
  ::PROTOBUF_NAMESPACE_ID::int32 key() const;
  void set_key(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_key() const;
  void _internal_set_key(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float val_numeric = 3;
  bool has_val_numeric() const;
  private:
  bool _internal_has_val_numeric() const;
  public:
  void clear_val_numeric();
  float val_numeric() const;
  void set_val_numeric(float value);
  private:
  float _internal_val_numeric() const;
  void _internal_set_val_numeric(float value);
  public:

  // optional int32 val_stringtable_index = 5;
  bool has_val_stringtable_index() const;
  private:
  bool _internal_has_val_stringtable_index() const;
  public:
  void clear_val_stringtable_index();
  ::PROTOBUF_NAMESPACE_ID::int32 val_stringtable_index() const;
  void set_val_stringtable_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_val_stringtable_index() const;
  void _internal_set_val_stringtable_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sint32 val_int_numeric = 6;
  bool has_val_int_numeric() const;
  private:
  bool _internal_has_val_int_numeric() const;
  public:
  void clear_val_int_numeric();
  ::PROTOBUF_NAMESPACE_ID::int32 val_int_numeric() const;
  void set_val_int_numeric(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_val_int_numeric() const;
  void _internal_set_val_int_numeric(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
  bool has_valtype() const;
  private:
  bool _internal_has_valtype() const;
  public:
  void clear_valtype();
  ::CDOTAResponseQuerySerialized_Fact_ValueType valtype() const;
  void set_valtype(::CDOTAResponseQuerySerialized_Fact_ValueType value);
  private:
  ::CDOTAResponseQuerySerialized_Fact_ValueType _internal_valtype() const;
  void _internal_set_valtype(::CDOTAResponseQuerySerialized_Fact_ValueType value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized.Fact)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr val_string_;
  ::PROTOBUF_NAMESPACE_ID::int32 key_;
  float val_numeric_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_stringtable_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_int_numeric_;
  int valtype_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAResponseQuerySerialized PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAResponseQuerySerialized) */ {
 public:
  inline CDOTAResponseQuerySerialized() : CDOTAResponseQuerySerialized(nullptr) {}
  virtual ~CDOTAResponseQuerySerialized();
  explicit constexpr CDOTAResponseQuerySerialized(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAResponseQuerySerialized(const CDOTAResponseQuerySerialized& from);
  CDOTAResponseQuerySerialized(CDOTAResponseQuerySerialized&& from) noexcept
    : CDOTAResponseQuerySerialized() {
    *this = ::std::move(from);
  }

  inline CDOTAResponseQuerySerialized& operator=(const CDOTAResponseQuerySerialized& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAResponseQuerySerialized& operator=(CDOTAResponseQuerySerialized&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAResponseQuerySerialized& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAResponseQuerySerialized* internal_default_instance() {
    return reinterpret_cast<const CDOTAResponseQuerySerialized*>(
               &_CDOTAResponseQuerySerialized_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(CDOTAResponseQuerySerialized& a, CDOTAResponseQuerySerialized& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAResponseQuerySerialized* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAResponseQuerySerialized* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAResponseQuerySerialized* New() const final {
    return CreateMaybeMessage<CDOTAResponseQuerySerialized>(nullptr);
  }

  CDOTAResponseQuerySerialized* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAResponseQuerySerialized>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAResponseQuerySerialized& from);
  void MergeFrom(const CDOTAResponseQuerySerialized& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAResponseQuerySerialized* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAResponseQuerySerialized";
  }
  protected:
  explicit CDOTAResponseQuerySerialized(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAResponseQuerySerialized_Fact Fact;

  // accessors -------------------------------------------------------

  enum : int {
    kFactsFieldNumber = 1,
  };
  // repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
  int facts_size() const;
  private:
  int _internal_facts_size() const;
  public:
  void clear_facts();
  ::CDOTAResponseQuerySerialized_Fact* mutable_facts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAResponseQuerySerialized_Fact >*
      mutable_facts();
  private:
  const ::CDOTAResponseQuerySerialized_Fact& _internal_facts(int index) const;
  ::CDOTAResponseQuerySerialized_Fact* _internal_add_facts();
  public:
  const ::CDOTAResponseQuerySerialized_Fact& facts(int index) const;
  ::CDOTAResponseQuerySerialized_Fact* add_facts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAResponseQuerySerialized_Fact >&
      facts() const;

  // @@protoc_insertion_point(class_scope:CDOTAResponseQuerySerialized)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAResponseQuerySerialized_Fact > facts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTASpeechMatchOnClient PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTASpeechMatchOnClient) */ {
 public:
  inline CDOTASpeechMatchOnClient() : CDOTASpeechMatchOnClient(nullptr) {}
  virtual ~CDOTASpeechMatchOnClient();
  explicit constexpr CDOTASpeechMatchOnClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTASpeechMatchOnClient(const CDOTASpeechMatchOnClient& from);
  CDOTASpeechMatchOnClient(CDOTASpeechMatchOnClient&& from) noexcept
    : CDOTASpeechMatchOnClient() {
    *this = ::std::move(from);
  }

  inline CDOTASpeechMatchOnClient& operator=(const CDOTASpeechMatchOnClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTASpeechMatchOnClient& operator=(CDOTASpeechMatchOnClient&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTASpeechMatchOnClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTASpeechMatchOnClient* internal_default_instance() {
    return reinterpret_cast<const CDOTASpeechMatchOnClient*>(
               &_CDOTASpeechMatchOnClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(CDOTASpeechMatchOnClient& a, CDOTASpeechMatchOnClient& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTASpeechMatchOnClient* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTASpeechMatchOnClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTASpeechMatchOnClient* New() const final {
    return CreateMaybeMessage<CDOTASpeechMatchOnClient>(nullptr);
  }

  CDOTASpeechMatchOnClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTASpeechMatchOnClient>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTASpeechMatchOnClient& from);
  void MergeFrom(const CDOTASpeechMatchOnClient& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTASpeechMatchOnClient* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTASpeechMatchOnClient";
  }
  protected:
  explicit CDOTASpeechMatchOnClient(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponsequeryFieldNumber = 3,
    kSpeechConceptFieldNumber = 1,
    kRecipientTypeFieldNumber = 2,
    kRandomseedFieldNumber = 4,
  };
  // optional .CDOTAResponseQuerySerialized responsequery = 3;
  bool has_responsequery() const;
  private:
  bool _internal_has_responsequery() const;
  public:
  void clear_responsequery();
  const ::CDOTAResponseQuerySerialized& responsequery() const;
  ::CDOTAResponseQuerySerialized* release_responsequery();
  ::CDOTAResponseQuerySerialized* mutable_responsequery();
  void set_allocated_responsequery(::CDOTAResponseQuerySerialized* responsequery);
  private:
  const ::CDOTAResponseQuerySerialized& _internal_responsequery() const;
  ::CDOTAResponseQuerySerialized* _internal_mutable_responsequery();
  public:
  void unsafe_arena_set_allocated_responsequery(
      ::CDOTAResponseQuerySerialized* responsequery);
  ::CDOTAResponseQuerySerialized* unsafe_arena_release_responsequery();

  // optional int32 speech_concept = 1;
  bool has_speech_concept() const;
  private:
  bool _internal_has_speech_concept() const;
  public:
  void clear_speech_concept();
  ::PROTOBUF_NAMESPACE_ID::int32 speech_concept() const;
  void set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speech_concept() const;
  void _internal_set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 recipient_type = 2;
  bool has_recipient_type() const;
  private:
  bool _internal_has_recipient_type() const;
  public:
  void clear_recipient_type();
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_type() const;
  void set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recipient_type() const;
  void _internal_set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional sfixed32 randomseed = 4 [default = 0];
  bool has_randomseed() const;
  private:
  bool _internal_has_randomseed() const;
  public:
  void clear_randomseed();
  ::PROTOBUF_NAMESPACE_ID::int32 randomseed() const;
  void set_randomseed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_randomseed() const;
  void _internal_set_randomseed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTASpeechMatchOnClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAResponseQuerySerialized* responsequery_;
  ::PROTOBUF_NAMESPACE_ID::int32 speech_concept_;
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 randomseed_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_Interval PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.Interval) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_Interval() : CDOTAUserMsg_UnitEvent_Interval(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_Interval();
  explicit constexpr CDOTAUserMsg_UnitEvent_Interval(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_Interval(const CDOTAUserMsg_UnitEvent_Interval& from);
  CDOTAUserMsg_UnitEvent_Interval(CDOTAUserMsg_UnitEvent_Interval&& from) noexcept
    : CDOTAUserMsg_UnitEvent_Interval() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_Interval& operator=(const CDOTAUserMsg_UnitEvent_Interval& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_Interval& operator=(CDOTAUserMsg_UnitEvent_Interval&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_Interval& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_Interval* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_Interval*>(
               &_CDOTAUserMsg_UnitEvent_Interval_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(CDOTAUserMsg_UnitEvent_Interval& a, CDOTAUserMsg_UnitEvent_Interval& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_Interval* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_Interval* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_Interval* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_Interval>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_Interval* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_Interval>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_Interval& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_Interval& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_Interval* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.Interval";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_Interval(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartFieldNumber = 1,
    kRangeFieldNumber = 2,
  };
  // optional float start = 1;
  bool has_start() const;
  private:
  bool _internal_has_start() const;
  public:
  void clear_start();
  float start() const;
  void set_start(float value);
  private:
  float _internal_start() const;
  void _internal_set_start(float value);
  public:

  // optional float range = 2;
  bool has_range() const;
  private:
  bool _internal_has_range() const;
  public:
  void clear_range();
  float range() const;
  void set_range(float value);
  private:
  float _internal_range() const;
  void _internal_set_range(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.Interval)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float start_;
  float range_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_Speech PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.Speech) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_Speech() : CDOTAUserMsg_UnitEvent_Speech(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_Speech();
  explicit constexpr CDOTAUserMsg_UnitEvent_Speech(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_Speech(const CDOTAUserMsg_UnitEvent_Speech& from);
  CDOTAUserMsg_UnitEvent_Speech(CDOTAUserMsg_UnitEvent_Speech&& from) noexcept
    : CDOTAUserMsg_UnitEvent_Speech() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_Speech& operator=(const CDOTAUserMsg_UnitEvent_Speech& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_Speech& operator=(CDOTAUserMsg_UnitEvent_Speech&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_Speech& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_Speech* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_Speech*>(
               &_CDOTAUserMsg_UnitEvent_Speech_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(CDOTAUserMsg_UnitEvent_Speech& a, CDOTAUserMsg_UnitEvent_Speech& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_Speech* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_Speech* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_Speech* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_Speech>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_Speech* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_Speech>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_Speech& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_Speech& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_Speech* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.Speech";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_Speech(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseFieldNumber = 2,
    kPredelayFieldNumber = 6,
    kSpeechConceptFieldNumber = 1,
    kRecipientTypeFieldNumber = 3,
    kLevelFieldNumber = 4,
    kMuteableFieldNumber = 5,
    kFlagsFieldNumber = 7,
  };
  // optional string response = 2;
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  const std::string& response() const;
  void set_response(const std::string& value);
  void set_response(std::string&& value);
  void set_response(const char* value);
  void set_response(const char* value, size_t size);
  std::string* mutable_response();
  std::string* release_response();
  void set_allocated_response(std::string* response);
  private:
  const std::string& _internal_response() const;
  void _internal_set_response(const std::string& value);
  std::string* _internal_mutable_response();
  public:

  // optional .CDOTAUserMsg_UnitEvent.Interval predelay = 6;
  bool has_predelay() const;
  private:
  bool _internal_has_predelay() const;
  public:
  void clear_predelay();
  const ::CDOTAUserMsg_UnitEvent_Interval& predelay() const;
  ::CDOTAUserMsg_UnitEvent_Interval* release_predelay();
  ::CDOTAUserMsg_UnitEvent_Interval* mutable_predelay();
  void set_allocated_predelay(::CDOTAUserMsg_UnitEvent_Interval* predelay);
  private:
  const ::CDOTAUserMsg_UnitEvent_Interval& _internal_predelay() const;
  ::CDOTAUserMsg_UnitEvent_Interval* _internal_mutable_predelay();
  public:
  void unsafe_arena_set_allocated_predelay(
      ::CDOTAUserMsg_UnitEvent_Interval* predelay);
  ::CDOTAUserMsg_UnitEvent_Interval* unsafe_arena_release_predelay();

  // optional int32 speech_concept = 1;
  bool has_speech_concept() const;
  private:
  bool _internal_has_speech_concept() const;
  public:
  void clear_speech_concept();
  ::PROTOBUF_NAMESPACE_ID::int32 speech_concept() const;
  void set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_speech_concept() const;
  void _internal_set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 recipient_type = 3;
  bool has_recipient_type() const;
  private:
  bool _internal_has_recipient_type() const;
  public:
  void clear_recipient_type();
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_type() const;
  void set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recipient_type() const;
  void _internal_set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 level = 4;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool muteable = 5 [default = false];
  bool has_muteable() const;
  private:
  bool _internal_has_muteable() const;
  public:
  void clear_muteable();
  bool muteable() const;
  void set_muteable(bool value);
  private:
  bool _internal_muteable() const;
  void _internal_set_muteable(bool value);
  public:

  // optional uint32 flags = 7;
  bool has_flags() const;
  private:
  bool _internal_has_flags() const;
  public:
  void clear_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 flags() const;
  void set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flags() const;
  void _internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.Speech)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_;
  ::CDOTAUserMsg_UnitEvent_Interval* predelay_;
  ::PROTOBUF_NAMESPACE_ID::int32 speech_concept_;
  ::PROTOBUF_NAMESPACE_ID::int32 recipient_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  bool muteable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 flags_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_SpeechMute PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.SpeechMute) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_SpeechMute() : CDOTAUserMsg_UnitEvent_SpeechMute(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_SpeechMute();
  explicit constexpr CDOTAUserMsg_UnitEvent_SpeechMute(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_SpeechMute(const CDOTAUserMsg_UnitEvent_SpeechMute& from);
  CDOTAUserMsg_UnitEvent_SpeechMute(CDOTAUserMsg_UnitEvent_SpeechMute&& from) noexcept
    : CDOTAUserMsg_UnitEvent_SpeechMute() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_SpeechMute& operator=(const CDOTAUserMsg_UnitEvent_SpeechMute& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_SpeechMute& operator=(CDOTAUserMsg_UnitEvent_SpeechMute&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_SpeechMute& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_SpeechMute* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_SpeechMute*>(
               &_CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(CDOTAUserMsg_UnitEvent_SpeechMute& a, CDOTAUserMsg_UnitEvent_SpeechMute& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_SpeechMute* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_SpeechMute* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_SpeechMute* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_SpeechMute>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_SpeechMute* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_SpeechMute>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_SpeechMute* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.SpeechMute";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_SpeechMute(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDelayFieldNumber = 1,
  };
  // optional float delay = 1 [default = 0.5];
  bool has_delay() const;
  private:
  bool _internal_has_delay() const;
  public:
  void clear_delay();
  float delay() const;
  void set_delay(float value);
  private:
  float _internal_delay() const;
  void _internal_set_delay(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.SpeechMute)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float delay_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_AddGesture PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.AddGesture) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_AddGesture() : CDOTAUserMsg_UnitEvent_AddGesture(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_AddGesture();
  explicit constexpr CDOTAUserMsg_UnitEvent_AddGesture(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_AddGesture(const CDOTAUserMsg_UnitEvent_AddGesture& from);
  CDOTAUserMsg_UnitEvent_AddGesture(CDOTAUserMsg_UnitEvent_AddGesture&& from) noexcept
    : CDOTAUserMsg_UnitEvent_AddGesture() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_AddGesture& operator=(const CDOTAUserMsg_UnitEvent_AddGesture& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_AddGesture& operator=(CDOTAUserMsg_UnitEvent_AddGesture&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_AddGesture& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_AddGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_AddGesture*>(
               &_CDOTAUserMsg_UnitEvent_AddGesture_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(CDOTAUserMsg_UnitEvent_AddGesture& a, CDOTAUserMsg_UnitEvent_AddGesture& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_AddGesture* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_AddGesture* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_AddGesture* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_AddGesture>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_AddGesture* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_AddGesture>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_AddGesture* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.AddGesture";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_AddGesture(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivityFieldNumber = 1,
    kSlotFieldNumber = 2,
    kFadeInFieldNumber = 3,
    kSequenceVariantFieldNumber = 6,
    kFadeOutFieldNumber = 4,
    kPlaybackRateFieldNumber = 5,
  };
  // optional int32 activity = 1;
  bool has_activity() const;
  private:
  bool _internal_has_activity() const;
  public:
  void clear_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 activity() const;
  void set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_activity() const;
  void _internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot = 2;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float fade_in = 3 [default = 0];
  bool has_fade_in() const;
  private:
  bool _internal_has_fade_in() const;
  public:
  void clear_fade_in();
  float fade_in() const;
  void set_fade_in(float value);
  private:
  float _internal_fade_in() const;
  void _internal_set_fade_in(float value);
  public:

  // optional int32 sequence_variant = 6;
  bool has_sequence_variant() const;
  private:
  bool _internal_has_sequence_variant() const;
  public:
  void clear_sequence_variant();
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_variant() const;
  void set_sequence_variant(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sequence_variant() const;
  void _internal_set_sequence_variant(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float fade_out = 4 [default = 0.1];
  bool has_fade_out() const;
  private:
  bool _internal_has_fade_out() const;
  public:
  void clear_fade_out();
  float fade_out() const;
  void set_fade_out(float value);
  private:
  float _internal_fade_out() const;
  void _internal_set_fade_out(float value);
  public:

  // optional float playback_rate = 5 [default = 1];
  bool has_playback_rate() const;
  private:
  bool _internal_has_playback_rate() const;
  public:
  void clear_playback_rate();
  float playback_rate() const;
  void set_playback_rate(float value);
  private:
  float _internal_playback_rate() const;
  void _internal_set_playback_rate(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.AddGesture)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 activity_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  float fade_in_;
  ::PROTOBUF_NAMESPACE_ID::int32 sequence_variant_;
  float fade_out_;
  float playback_rate_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_RemoveGesture PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.RemoveGesture) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_RemoveGesture() : CDOTAUserMsg_UnitEvent_RemoveGesture(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_RemoveGesture();
  explicit constexpr CDOTAUserMsg_UnitEvent_RemoveGesture(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_RemoveGesture(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);
  CDOTAUserMsg_UnitEvent_RemoveGesture(CDOTAUserMsg_UnitEvent_RemoveGesture&& from) noexcept
    : CDOTAUserMsg_UnitEvent_RemoveGesture() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_RemoveGesture& operator=(const CDOTAUserMsg_UnitEvent_RemoveGesture& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_RemoveGesture& operator=(CDOTAUserMsg_UnitEvent_RemoveGesture&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_RemoveGesture& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_RemoveGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_RemoveGesture*>(
               &_CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(CDOTAUserMsg_UnitEvent_RemoveGesture& a, CDOTAUserMsg_UnitEvent_RemoveGesture& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_RemoveGesture* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_RemoveGesture* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_RemoveGesture* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_RemoveGesture>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_RemoveGesture* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_RemoveGesture>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_RemoveGesture* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.RemoveGesture";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_RemoveGesture(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivityFieldNumber = 1,
  };
  // optional int32 activity = 1;
  bool has_activity() const;
  private:
  bool _internal_has_activity() const;
  public:
  void clear_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 activity() const;
  void set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_activity() const;
  void _internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.RemoveGesture)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 activity_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_BloodImpact PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.BloodImpact) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_BloodImpact() : CDOTAUserMsg_UnitEvent_BloodImpact(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_BloodImpact();
  explicit constexpr CDOTAUserMsg_UnitEvent_BloodImpact(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_BloodImpact(const CDOTAUserMsg_UnitEvent_BloodImpact& from);
  CDOTAUserMsg_UnitEvent_BloodImpact(CDOTAUserMsg_UnitEvent_BloodImpact&& from) noexcept
    : CDOTAUserMsg_UnitEvent_BloodImpact() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_BloodImpact& operator=(const CDOTAUserMsg_UnitEvent_BloodImpact& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_BloodImpact& operator=(CDOTAUserMsg_UnitEvent_BloodImpact&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_BloodImpact& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_BloodImpact* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_BloodImpact*>(
               &_CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(CDOTAUserMsg_UnitEvent_BloodImpact& a, CDOTAUserMsg_UnitEvent_BloodImpact& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_BloodImpact* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_BloodImpact* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_BloodImpact* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_BloodImpact>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_BloodImpact* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_BloodImpact>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_BloodImpact* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.BloodImpact";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_BloodImpact(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kScaleFieldNumber = 1,
    kXNormalFieldNumber = 2,
    kYNormalFieldNumber = 3,
  };
  // optional int32 scale = 1;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  ::PROTOBUF_NAMESPACE_ID::int32 scale() const;
  void set_scale(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_scale() const;
  void _internal_set_scale(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 x_normal = 2;
  bool has_x_normal() const;
  private:
  bool _internal_has_x_normal() const;
  public:
  void clear_x_normal();
  ::PROTOBUF_NAMESPACE_ID::int32 x_normal() const;
  void set_x_normal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x_normal() const;
  void _internal_set_x_normal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 y_normal = 3;
  bool has_y_normal() const;
  private:
  bool _internal_has_y_normal() const;
  public:
  void clear_y_normal();
  ::PROTOBUF_NAMESPACE_ID::int32 y_normal() const;
  void set_y_normal(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y_normal() const;
  void _internal_set_y_normal(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.BloodImpact)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 scale_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_normal_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_normal_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_FadeGesture PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent.FadeGesture) */ {
 public:
  inline CDOTAUserMsg_UnitEvent_FadeGesture() : CDOTAUserMsg_UnitEvent_FadeGesture(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent_FadeGesture();
  explicit constexpr CDOTAUserMsg_UnitEvent_FadeGesture(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent_FadeGesture(const CDOTAUserMsg_UnitEvent_FadeGesture& from);
  CDOTAUserMsg_UnitEvent_FadeGesture(CDOTAUserMsg_UnitEvent_FadeGesture&& from) noexcept
    : CDOTAUserMsg_UnitEvent_FadeGesture() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent_FadeGesture& operator=(const CDOTAUserMsg_UnitEvent_FadeGesture& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent_FadeGesture& operator=(CDOTAUserMsg_UnitEvent_FadeGesture&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent_FadeGesture& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent_FadeGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_FadeGesture*>(
               &_CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(CDOTAUserMsg_UnitEvent_FadeGesture& a, CDOTAUserMsg_UnitEvent_FadeGesture& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent_FadeGesture* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent_FadeGesture* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_FadeGesture* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_FadeGesture>(nullptr);
  }

  CDOTAUserMsg_UnitEvent_FadeGesture* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent_FadeGesture>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent_FadeGesture* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent.FadeGesture";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent_FadeGesture(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActivityFieldNumber = 1,
  };
  // optional int32 activity = 1;
  bool has_activity() const;
  private:
  bool _internal_has_activity() const;
  public:
  void clear_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 activity() const;
  void set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_activity() const;
  void _internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent.FadeGesture)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 activity_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UnitEvent) */ {
 public:
  inline CDOTAUserMsg_UnitEvent() : CDOTAUserMsg_UnitEvent(nullptr) {}
  virtual ~CDOTAUserMsg_UnitEvent();
  explicit constexpr CDOTAUserMsg_UnitEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UnitEvent(const CDOTAUserMsg_UnitEvent& from);
  CDOTAUserMsg_UnitEvent(CDOTAUserMsg_UnitEvent&& from) noexcept
    : CDOTAUserMsg_UnitEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UnitEvent& operator=(const CDOTAUserMsg_UnitEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UnitEvent& operator=(CDOTAUserMsg_UnitEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UnitEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UnitEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent*>(
               &_CDOTAUserMsg_UnitEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(CDOTAUserMsg_UnitEvent& a, CDOTAUserMsg_UnitEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UnitEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UnitEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent>(nullptr);
  }

  CDOTAUserMsg_UnitEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UnitEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UnitEvent& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UnitEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UnitEvent";
  }
  protected:
  explicit CDOTAUserMsg_UnitEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_UnitEvent_Interval Interval;
  typedef CDOTAUserMsg_UnitEvent_Speech Speech;
  typedef CDOTAUserMsg_UnitEvent_SpeechMute SpeechMute;
  typedef CDOTAUserMsg_UnitEvent_AddGesture AddGesture;
  typedef CDOTAUserMsg_UnitEvent_RemoveGesture RemoveGesture;
  typedef CDOTAUserMsg_UnitEvent_BloodImpact BloodImpact;
  typedef CDOTAUserMsg_UnitEvent_FadeGesture FadeGesture;

  // accessors -------------------------------------------------------

  enum : int {
    kSpeechFieldNumber = 3,
    kSpeechMuteFieldNumber = 4,
    kAddGestureFieldNumber = 5,
    kRemoveGestureFieldNumber = 6,
    kBloodImpactFieldNumber = 7,
    kFadeGestureFieldNumber = 8,
    kSpeechMatchOnClientFieldNumber = 9,
    kMsgTypeFieldNumber = 1,
    kEntityIndexFieldNumber = 2,
  };
  // optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
  bool has_speech() const;
  private:
  bool _internal_has_speech() const;
  public:
  void clear_speech();
  const ::CDOTAUserMsg_UnitEvent_Speech& speech() const;
  ::CDOTAUserMsg_UnitEvent_Speech* release_speech();
  ::CDOTAUserMsg_UnitEvent_Speech* mutable_speech();
  void set_allocated_speech(::CDOTAUserMsg_UnitEvent_Speech* speech);
  private:
  const ::CDOTAUserMsg_UnitEvent_Speech& _internal_speech() const;
  ::CDOTAUserMsg_UnitEvent_Speech* _internal_mutable_speech();
  public:
  void unsafe_arena_set_allocated_speech(
      ::CDOTAUserMsg_UnitEvent_Speech* speech);
  ::CDOTAUserMsg_UnitEvent_Speech* unsafe_arena_release_speech();

  // optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
  bool has_speech_mute() const;
  private:
  bool _internal_has_speech_mute() const;
  public:
  void clear_speech_mute();
  const ::CDOTAUserMsg_UnitEvent_SpeechMute& speech_mute() const;
  ::CDOTAUserMsg_UnitEvent_SpeechMute* release_speech_mute();
  ::CDOTAUserMsg_UnitEvent_SpeechMute* mutable_speech_mute();
  void set_allocated_speech_mute(::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute);
  private:
  const ::CDOTAUserMsg_UnitEvent_SpeechMute& _internal_speech_mute() const;
  ::CDOTAUserMsg_UnitEvent_SpeechMute* _internal_mutable_speech_mute();
  public:
  void unsafe_arena_set_allocated_speech_mute(
      ::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute);
  ::CDOTAUserMsg_UnitEvent_SpeechMute* unsafe_arena_release_speech_mute();

  // optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
  bool has_add_gesture() const;
  private:
  bool _internal_has_add_gesture() const;
  public:
  void clear_add_gesture();
  const ::CDOTAUserMsg_UnitEvent_AddGesture& add_gesture() const;
  ::CDOTAUserMsg_UnitEvent_AddGesture* release_add_gesture();
  ::CDOTAUserMsg_UnitEvent_AddGesture* mutable_add_gesture();
  void set_allocated_add_gesture(::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture);
  private:
  const ::CDOTAUserMsg_UnitEvent_AddGesture& _internal_add_gesture() const;
  ::CDOTAUserMsg_UnitEvent_AddGesture* _internal_mutable_add_gesture();
  public:
  void unsafe_arena_set_allocated_add_gesture(
      ::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture);
  ::CDOTAUserMsg_UnitEvent_AddGesture* unsafe_arena_release_add_gesture();

  // optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
  bool has_remove_gesture() const;
  private:
  bool _internal_has_remove_gesture() const;
  public:
  void clear_remove_gesture();
  const ::CDOTAUserMsg_UnitEvent_RemoveGesture& remove_gesture() const;
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* release_remove_gesture();
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* mutable_remove_gesture();
  void set_allocated_remove_gesture(::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture);
  private:
  const ::CDOTAUserMsg_UnitEvent_RemoveGesture& _internal_remove_gesture() const;
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* _internal_mutable_remove_gesture();
  public:
  void unsafe_arena_set_allocated_remove_gesture(
      ::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture);
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* unsafe_arena_release_remove_gesture();

  // optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
  bool has_blood_impact() const;
  private:
  bool _internal_has_blood_impact() const;
  public:
  void clear_blood_impact();
  const ::CDOTAUserMsg_UnitEvent_BloodImpact& blood_impact() const;
  ::CDOTAUserMsg_UnitEvent_BloodImpact* release_blood_impact();
  ::CDOTAUserMsg_UnitEvent_BloodImpact* mutable_blood_impact();
  void set_allocated_blood_impact(::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact);
  private:
  const ::CDOTAUserMsg_UnitEvent_BloodImpact& _internal_blood_impact() const;
  ::CDOTAUserMsg_UnitEvent_BloodImpact* _internal_mutable_blood_impact();
  public:
  void unsafe_arena_set_allocated_blood_impact(
      ::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact);
  ::CDOTAUserMsg_UnitEvent_BloodImpact* unsafe_arena_release_blood_impact();

  // optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
  bool has_fade_gesture() const;
  private:
  bool _internal_has_fade_gesture() const;
  public:
  void clear_fade_gesture();
  const ::CDOTAUserMsg_UnitEvent_FadeGesture& fade_gesture() const;
  ::CDOTAUserMsg_UnitEvent_FadeGesture* release_fade_gesture();
  ::CDOTAUserMsg_UnitEvent_FadeGesture* mutable_fade_gesture();
  void set_allocated_fade_gesture(::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture);
  private:
  const ::CDOTAUserMsg_UnitEvent_FadeGesture& _internal_fade_gesture() const;
  ::CDOTAUserMsg_UnitEvent_FadeGesture* _internal_mutable_fade_gesture();
  public:
  void unsafe_arena_set_allocated_fade_gesture(
      ::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture);
  ::CDOTAUserMsg_UnitEvent_FadeGesture* unsafe_arena_release_fade_gesture();

  // optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
  bool has_speech_match_on_client() const;
  private:
  bool _internal_has_speech_match_on_client() const;
  public:
  void clear_speech_match_on_client();
  const ::CDOTASpeechMatchOnClient& speech_match_on_client() const;
  ::CDOTASpeechMatchOnClient* release_speech_match_on_client();
  ::CDOTASpeechMatchOnClient* mutable_speech_match_on_client();
  void set_allocated_speech_match_on_client(::CDOTASpeechMatchOnClient* speech_match_on_client);
  private:
  const ::CDOTASpeechMatchOnClient& _internal_speech_match_on_client() const;
  ::CDOTASpeechMatchOnClient* _internal_mutable_speech_match_on_client();
  public:
  void unsafe_arena_set_allocated_speech_match_on_client(
      ::CDOTASpeechMatchOnClient* speech_match_on_client);
  ::CDOTASpeechMatchOnClient* unsafe_arena_release_speech_match_on_client();

  // required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
  bool has_msg_type() const;
  private:
  bool _internal_has_msg_type() const;
  public:
  void clear_msg_type();
  ::EDotaEntityMessages msg_type() const;
  void set_msg_type(::EDotaEntityMessages value);
  private:
  ::EDotaEntityMessages _internal_msg_type() const;
  void _internal_set_msg_type(::EDotaEntityMessages value);
  public:

  // required int32 entity_index = 2;
  bool has_entity_index() const;
  private:
  bool _internal_has_entity_index() const;
  public:
  void clear_entity_index();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_index() const;
  void set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_index() const;
  void _internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UnitEvent)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAUserMsg_UnitEvent_Speech* speech_;
  ::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute_;
  ::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture_;
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture_;
  ::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact_;
  ::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture_;
  ::CDOTASpeechMatchOnClient* speech_match_on_client_;
  int msg_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemPurchased PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ItemPurchased) */ {
 public:
  inline CDOTAUserMsg_ItemPurchased() : CDOTAUserMsg_ItemPurchased(nullptr) {}
  virtual ~CDOTAUserMsg_ItemPurchased();
  explicit constexpr CDOTAUserMsg_ItemPurchased(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ItemPurchased(const CDOTAUserMsg_ItemPurchased& from);
  CDOTAUserMsg_ItemPurchased(CDOTAUserMsg_ItemPurchased&& from) noexcept
    : CDOTAUserMsg_ItemPurchased() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ItemPurchased& operator=(const CDOTAUserMsg_ItemPurchased& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ItemPurchased& operator=(CDOTAUserMsg_ItemPurchased&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ItemPurchased& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ItemPurchased* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemPurchased*>(
               &_CDOTAUserMsg_ItemPurchased_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(CDOTAUserMsg_ItemPurchased& a, CDOTAUserMsg_ItemPurchased& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ItemPurchased* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ItemPurchased* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemPurchased* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemPurchased>(nullptr);
  }

  CDOTAUserMsg_ItemPurchased* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemPurchased>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ItemPurchased& from);
  void MergeFrom(const CDOTAUserMsg_ItemPurchased& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ItemPurchased* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ItemPurchased";
  }
  protected:
  explicit CDOTAUserMsg_ItemPurchased(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemAbilityIdFieldNumber = 1,
  };
  // optional int32 item_ability_id = 1;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemPurchased)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemSold PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ItemSold) */ {
 public:
  inline CDOTAUserMsg_ItemSold() : CDOTAUserMsg_ItemSold(nullptr) {}
  virtual ~CDOTAUserMsg_ItemSold();
  explicit constexpr CDOTAUserMsg_ItemSold(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ItemSold(const CDOTAUserMsg_ItemSold& from);
  CDOTAUserMsg_ItemSold(CDOTAUserMsg_ItemSold&& from) noexcept
    : CDOTAUserMsg_ItemSold() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ItemSold& operator=(const CDOTAUserMsg_ItemSold& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ItemSold& operator=(CDOTAUserMsg_ItemSold&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ItemSold& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ItemSold* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemSold*>(
               &_CDOTAUserMsg_ItemSold_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(CDOTAUserMsg_ItemSold& a, CDOTAUserMsg_ItemSold& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ItemSold* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ItemSold* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemSold* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemSold>(nullptr);
  }

  CDOTAUserMsg_ItemSold* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemSold>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ItemSold& from);
  void MergeFrom(const CDOTAUserMsg_ItemSold& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ItemSold* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ItemSold";
  }
  protected:
  explicit CDOTAUserMsg_ItemSold(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemAbilityIdFieldNumber = 1,
  };
  // optional int32 item_ability_id = 1;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemSold)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 item_ability_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemFound PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ItemFound) */ {
 public:
  inline CDOTAUserMsg_ItemFound() : CDOTAUserMsg_ItemFound(nullptr) {}
  virtual ~CDOTAUserMsg_ItemFound();
  explicit constexpr CDOTAUserMsg_ItemFound(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ItemFound(const CDOTAUserMsg_ItemFound& from);
  CDOTAUserMsg_ItemFound(CDOTAUserMsg_ItemFound&& from) noexcept
    : CDOTAUserMsg_ItemFound() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ItemFound& operator=(const CDOTAUserMsg_ItemFound& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ItemFound& operator=(CDOTAUserMsg_ItemFound&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ItemFound& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ItemFound* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemFound*>(
               &_CDOTAUserMsg_ItemFound_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(CDOTAUserMsg_ItemFound& a, CDOTAUserMsg_ItemFound& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ItemFound* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ItemFound* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemFound* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemFound>(nullptr);
  }

  CDOTAUserMsg_ItemFound* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ItemFound>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ItemFound& from);
  void MergeFrom(const CDOTAUserMsg_ItemFound& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ItemFound* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ItemFound";
  }
  protected:
  explicit CDOTAUserMsg_ItemFound(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerFieldNumber = 1,
    kQualityFieldNumber = 2,
    kRarityFieldNumber = 3,
    kMethodFieldNumber = 4,
    kItemdefFieldNumber = 5,
  };
  // optional int32 player = 1;
  bool has_player() const;
  private:
  bool _internal_has_player() const;
  public:
  void clear_player();
  ::PROTOBUF_NAMESPACE_ID::int32 player() const;
  void set_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player() const;
  void _internal_set_player(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 quality = 2;
  bool has_quality() const;
  private:
  bool _internal_has_quality() const;
  public:
  void clear_quality();
  ::PROTOBUF_NAMESPACE_ID::int32 quality() const;
  void set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_quality() const;
  void _internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 rarity = 3;
  bool has_rarity() const;
  private:
  bool _internal_has_rarity() const;
  public:
  void clear_rarity();
  ::PROTOBUF_NAMESPACE_ID::int32 rarity() const;
  void set_rarity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rarity() const;
  void _internal_set_rarity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 method = 4;
  bool has_method() const;
  private:
  bool _internal_has_method() const;
  public:
  void clear_method();
  ::PROTOBUF_NAMESPACE_ID::int32 method() const;
  void set_method(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_method() const;
  void _internal_set_method(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 itemdef = 5;
  bool has_itemdef() const;
  private:
  bool _internal_has_itemdef() const;
  public:
  void clear_itemdef();
  ::PROTOBUF_NAMESPACE_ID::int32 itemdef() const;
  void set_itemdef(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_itemdef() const;
  void _internal_set_itemdef(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ItemFound)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_;
  ::PROTOBUF_NAMESPACE_ID::int32 quality_;
  ::PROTOBUF_NAMESPACE_ID::int32 rarity_;
  ::PROTOBUF_NAMESPACE_ID::int32 method_;
  ::PROTOBUF_NAMESPACE_ID::int32 itemdef_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_OverheadEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_OverheadEvent) */ {
 public:
  inline CDOTAUserMsg_OverheadEvent() : CDOTAUserMsg_OverheadEvent(nullptr) {}
  virtual ~CDOTAUserMsg_OverheadEvent();
  explicit constexpr CDOTAUserMsg_OverheadEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_OverheadEvent(const CDOTAUserMsg_OverheadEvent& from);
  CDOTAUserMsg_OverheadEvent(CDOTAUserMsg_OverheadEvent&& from) noexcept
    : CDOTAUserMsg_OverheadEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_OverheadEvent& operator=(const CDOTAUserMsg_OverheadEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_OverheadEvent& operator=(CDOTAUserMsg_OverheadEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_OverheadEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_OverheadEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_OverheadEvent*>(
               &_CDOTAUserMsg_OverheadEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(CDOTAUserMsg_OverheadEvent& a, CDOTAUserMsg_OverheadEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_OverheadEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_OverheadEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_OverheadEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_OverheadEvent>(nullptr);
  }

  CDOTAUserMsg_OverheadEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_OverheadEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_OverheadEvent& from);
  void MergeFrom(const CDOTAUserMsg_OverheadEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_OverheadEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_OverheadEvent";
  }
  protected:
  explicit CDOTAUserMsg_OverheadEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageTypeFieldNumber = 1,
    kValueFieldNumber = 2,
    kTargetPlayerEntindexFieldNumber = 3,
    kTargetEntindexFieldNumber = 4,
    kSourcePlayerEntindexFieldNumber = 5,
  };
  // required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
  bool has_message_type() const;
  private:
  bool _internal_has_message_type() const;
  public:
  void clear_message_type();
  ::DOTA_OVERHEAD_ALERT message_type() const;
  void set_message_type(::DOTA_OVERHEAD_ALERT value);
  private:
  ::DOTA_OVERHEAD_ALERT _internal_message_type() const;
  void _internal_set_message_type(::DOTA_OVERHEAD_ALERT value);
  public:

  // optional int32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_player_entindex = 3;
  bool has_target_player_entindex() const;
  private:
  bool _internal_has_target_player_entindex() const;
  public:
  void clear_target_player_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_entindex() const;
  void set_target_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_player_entindex() const;
  void _internal_set_target_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_entindex = 4;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 source_player_entindex = 5;
  bool has_source_player_entindex() const;
  private:
  bool _internal_has_source_player_entindex() const;
  public:
  void clear_source_player_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_entindex() const;
  void set_source_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_entindex() const;
  void _internal_set_source_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OverheadEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int message_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_entindex_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialTipInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialTipInfo) */ {
 public:
  inline CDOTAUserMsg_TutorialTipInfo() : CDOTAUserMsg_TutorialTipInfo(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialTipInfo();
  explicit constexpr CDOTAUserMsg_TutorialTipInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialTipInfo(const CDOTAUserMsg_TutorialTipInfo& from);
  CDOTAUserMsg_TutorialTipInfo(CDOTAUserMsg_TutorialTipInfo&& from) noexcept
    : CDOTAUserMsg_TutorialTipInfo() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialTipInfo& operator=(const CDOTAUserMsg_TutorialTipInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialTipInfo& operator=(CDOTAUserMsg_TutorialTipInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialTipInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialTipInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialTipInfo*>(
               &_CDOTAUserMsg_TutorialTipInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(CDOTAUserMsg_TutorialTipInfo& a, CDOTAUserMsg_TutorialTipInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialTipInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialTipInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialTipInfo* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialTipInfo>(nullptr);
  }

  CDOTAUserMsg_TutorialTipInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialTipInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialTipInfo& from);
  void MergeFrom(const CDOTAUserMsg_TutorialTipInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialTipInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialTipInfo";
  }
  protected:
  explicit CDOTAUserMsg_TutorialTipInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kProgressFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int32 progress = 2;
  bool has_progress() const;
  private:
  bool _internal_has_progress() const;
  public:
  void clear_progress();
  ::PROTOBUF_NAMESPACE_ID::int32 progress() const;
  void set_progress(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_progress() const;
  void _internal_set_progress(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialTipInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 progress_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialFinish PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialFinish) */ {
 public:
  inline CDOTAUserMsg_TutorialFinish() : CDOTAUserMsg_TutorialFinish(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialFinish();
  explicit constexpr CDOTAUserMsg_TutorialFinish(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialFinish(const CDOTAUserMsg_TutorialFinish& from);
  CDOTAUserMsg_TutorialFinish(CDOTAUserMsg_TutorialFinish&& from) noexcept
    : CDOTAUserMsg_TutorialFinish() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialFinish& operator=(const CDOTAUserMsg_TutorialFinish& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialFinish& operator=(CDOTAUserMsg_TutorialFinish&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialFinish& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialFinish* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialFinish*>(
               &_CDOTAUserMsg_TutorialFinish_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(CDOTAUserMsg_TutorialFinish& a, CDOTAUserMsg_TutorialFinish& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialFinish* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialFinish* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialFinish* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialFinish>(nullptr);
  }

  CDOTAUserMsg_TutorialFinish* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialFinish>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialFinish& from);
  void MergeFrom(const CDOTAUserMsg_TutorialFinish& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialFinish* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialFinish";
  }
  protected:
  explicit CDOTAUserMsg_TutorialFinish(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeadingFieldNumber = 1,
    kEmblemFieldNumber = 2,
    kBodyFieldNumber = 3,
    kSuccessFieldNumber = 4,
  };
  // optional string heading = 1;
  bool has_heading() const;
  private:
  bool _internal_has_heading() const;
  public:
  void clear_heading();
  const std::string& heading() const;
  void set_heading(const std::string& value);
  void set_heading(std::string&& value);
  void set_heading(const char* value);
  void set_heading(const char* value, size_t size);
  std::string* mutable_heading();
  std::string* release_heading();
  void set_allocated_heading(std::string* heading);
  private:
  const std::string& _internal_heading() const;
  void _internal_set_heading(const std::string& value);
  std::string* _internal_mutable_heading();
  public:

  // optional string emblem = 2;
  bool has_emblem() const;
  private:
  bool _internal_has_emblem() const;
  public:
  void clear_emblem();
  const std::string& emblem() const;
  void set_emblem(const std::string& value);
  void set_emblem(std::string&& value);
  void set_emblem(const char* value);
  void set_emblem(const char* value, size_t size);
  std::string* mutable_emblem();
  std::string* release_emblem();
  void set_allocated_emblem(std::string* emblem);
  private:
  const std::string& _internal_emblem() const;
  void _internal_set_emblem(const std::string& value);
  std::string* _internal_mutable_emblem();
  public:

  // optional string body = 3;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const std::string& body() const;
  void set_body(const std::string& value);
  void set_body(std::string&& value);
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  std::string* mutable_body();
  std::string* release_body();
  void set_allocated_body(std::string* body);
  private:
  const std::string& _internal_body() const;
  void _internal_set_body(const std::string& value);
  std::string* _internal_mutable_body();
  public:

  // optional bool success = 4;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFinish)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr heading_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr emblem_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr body_;
  bool success_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialMinimapPosition PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialMinimapPosition) */ {
 public:
  inline CDOTAUserMsg_TutorialMinimapPosition() : CDOTAUserMsg_TutorialMinimapPosition(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialMinimapPosition();
  explicit constexpr CDOTAUserMsg_TutorialMinimapPosition(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialMinimapPosition(const CDOTAUserMsg_TutorialMinimapPosition& from);
  CDOTAUserMsg_TutorialMinimapPosition(CDOTAUserMsg_TutorialMinimapPosition&& from) noexcept
    : CDOTAUserMsg_TutorialMinimapPosition() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialMinimapPosition& operator=(const CDOTAUserMsg_TutorialMinimapPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialMinimapPosition& operator=(CDOTAUserMsg_TutorialMinimapPosition&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialMinimapPosition& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialMinimapPosition* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialMinimapPosition*>(
               &_CDOTAUserMsg_TutorialMinimapPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(CDOTAUserMsg_TutorialMinimapPosition& a, CDOTAUserMsg_TutorialMinimapPosition& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialMinimapPosition* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialMinimapPosition* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialMinimapPosition* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialMinimapPosition>(nullptr);
  }

  CDOTAUserMsg_TutorialMinimapPosition* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialMinimapPosition>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialMinimapPosition& from);
  void MergeFrom(const CDOTAUserMsg_TutorialMinimapPosition& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialMinimapPosition* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialMinimapPosition";
  }
  protected:
  explicit CDOTAUserMsg_TutorialMinimapPosition(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialMinimapPosition)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendGenericToolTip PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SendGenericToolTip) */ {
 public:
  inline CDOTAUserMsg_SendGenericToolTip() : CDOTAUserMsg_SendGenericToolTip(nullptr) {}
  virtual ~CDOTAUserMsg_SendGenericToolTip();
  explicit constexpr CDOTAUserMsg_SendGenericToolTip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SendGenericToolTip(const CDOTAUserMsg_SendGenericToolTip& from);
  CDOTAUserMsg_SendGenericToolTip(CDOTAUserMsg_SendGenericToolTip&& from) noexcept
    : CDOTAUserMsg_SendGenericToolTip() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SendGenericToolTip& operator=(const CDOTAUserMsg_SendGenericToolTip& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SendGenericToolTip& operator=(CDOTAUserMsg_SendGenericToolTip&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SendGenericToolTip& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SendGenericToolTip* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendGenericToolTip*>(
               &_CDOTAUserMsg_SendGenericToolTip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(CDOTAUserMsg_SendGenericToolTip& a, CDOTAUserMsg_SendGenericToolTip& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SendGenericToolTip* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SendGenericToolTip* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendGenericToolTip* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendGenericToolTip>(nullptr);
  }

  CDOTAUserMsg_SendGenericToolTip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendGenericToolTip>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SendGenericToolTip& from);
  void MergeFrom(const CDOTAUserMsg_SendGenericToolTip& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SendGenericToolTip* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SendGenericToolTip";
  }
  protected:
  explicit CDOTAUserMsg_SendGenericToolTip(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 1,
    kTextFieldNumber = 2,
    kEntindexFieldNumber = 3,
    kCloseFieldNumber = 4,
  };
  // optional string title = 1;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional string text = 2;
  bool has_text() const;
  private:
  bool _internal_has_text() const;
  public:
  void clear_text();
  const std::string& text() const;
  void set_text(const std::string& value);
  void set_text(std::string&& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  std::string* mutable_text();
  std::string* release_text();
  void set_allocated_text(std::string* text);
  private:
  const std::string& _internal_text() const;
  void _internal_set_text(const std::string& value);
  std::string* _internal_mutable_text();
  public:

  // optional int32 entindex = 3;
  bool has_entindex() const;
  private:
  bool _internal_has_entindex() const;
  public:
  void clear_entindex();
  ::PROTOBUF_NAMESPACE_ID::int32 entindex() const;
  void set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entindex() const;
  void _internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool close = 4;
  bool has_close() const;
  private:
  bool _internal_has_close() const;
  public:
  void clear_close();
  bool close() const;
  void set_close(bool value);
  private:
  bool _internal_close() const;
  void _internal_set_close(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendGenericToolTip)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
  ::PROTOBUF_NAMESPACE_ID::int32 entindex_;
  bool close_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WorldLine PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_WorldLine) */ {
 public:
  inline CDOTAUserMsg_WorldLine() : CDOTAUserMsg_WorldLine(nullptr) {}
  virtual ~CDOTAUserMsg_WorldLine();
  explicit constexpr CDOTAUserMsg_WorldLine(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_WorldLine(const CDOTAUserMsg_WorldLine& from);
  CDOTAUserMsg_WorldLine(CDOTAUserMsg_WorldLine&& from) noexcept
    : CDOTAUserMsg_WorldLine() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_WorldLine& operator=(const CDOTAUserMsg_WorldLine& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_WorldLine& operator=(CDOTAUserMsg_WorldLine&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_WorldLine& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_WorldLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WorldLine*>(
               &_CDOTAUserMsg_WorldLine_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(CDOTAUserMsg_WorldLine& a, CDOTAUserMsg_WorldLine& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_WorldLine* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_WorldLine* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WorldLine* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_WorldLine>(nullptr);
  }

  CDOTAUserMsg_WorldLine* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_WorldLine>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_WorldLine& from);
  void MergeFrom(const CDOTAUserMsg_WorldLine& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_WorldLine* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_WorldLine";
  }
  protected:
  explicit CDOTAUserMsg_WorldLine(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWorldlineFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_WorldLine worldline = 2;
  bool has_worldline() const;
  private:
  bool _internal_has_worldline() const;
  public:
  void clear_worldline();
  const ::CDOTAMsg_WorldLine& worldline() const;
  ::CDOTAMsg_WorldLine* release_worldline();
  ::CDOTAMsg_WorldLine* mutable_worldline();
  void set_allocated_worldline(::CDOTAMsg_WorldLine* worldline);
  private:
  const ::CDOTAMsg_WorldLine& _internal_worldline() const;
  ::CDOTAMsg_WorldLine* _internal_mutable_worldline();
  public:
  void unsafe_arena_set_allocated_worldline(
      ::CDOTAMsg_WorldLine* worldline);
  ::CDOTAMsg_WorldLine* unsafe_arena_release_worldline();

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WorldLine)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_WorldLine* worldline_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatWheel PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ChatWheel) */ {
 public:
  inline CDOTAUserMsg_ChatWheel() : CDOTAUserMsg_ChatWheel(nullptr) {}
  virtual ~CDOTAUserMsg_ChatWheel();
  explicit constexpr CDOTAUserMsg_ChatWheel(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ChatWheel(const CDOTAUserMsg_ChatWheel& from);
  CDOTAUserMsg_ChatWheel(CDOTAUserMsg_ChatWheel&& from) noexcept
    : CDOTAUserMsg_ChatWheel() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ChatWheel& operator=(const CDOTAUserMsg_ChatWheel& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ChatWheel& operator=(CDOTAUserMsg_ChatWheel&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ChatWheel& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ChatWheel* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatWheel*>(
               &_CDOTAUserMsg_ChatWheel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(CDOTAUserMsg_ChatWheel& a, CDOTAUserMsg_ChatWheel& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ChatWheel* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ChatWheel* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatWheel* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatWheel>(nullptr);
  }

  CDOTAUserMsg_ChatWheel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatWheel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ChatWheel& from);
  void MergeFrom(const CDOTAUserMsg_ChatWheel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ChatWheel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ChatWheel";
  }
  protected:
  explicit CDOTAUserMsg_ChatWheel(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChatMessageIdFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kAccountIdFieldNumber = 3,
    kParamHeroIdFieldNumber = 4,
    kEmoticonIdFieldNumber = 5,
  };
  // optional uint32 chat_message_id = 1;
  bool has_chat_message_id() const;
  private:
  bool _internal_has_chat_message_id() const;
  public:
  void clear_chat_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 chat_message_id() const;
  void set_chat_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_chat_message_id() const;
  void _internal_set_chat_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 player_id = 2;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 account_id = 3;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 param_hero_id = 4;
  bool has_param_hero_id() const;
  private:
  bool _internal_has_param_hero_id() const;
  public:
  void clear_param_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 param_hero_id() const;
  void set_param_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_param_hero_id() const;
  void _internal_set_param_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 emoticon_id = 5;
  bool has_emoticon_id() const;
  private:
  bool _internal_has_emoticon_id() const;
  public:
  void clear_emoticon_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 emoticon_id() const;
  void set_emoticon_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_emoticon_id() const;
  void _internal_set_emoticon_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatWheel)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 chat_message_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 param_hero_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 emoticon_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ReceivedXmasGift PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ReceivedXmasGift) */ {
 public:
  inline CDOTAUserMsg_ReceivedXmasGift() : CDOTAUserMsg_ReceivedXmasGift(nullptr) {}
  virtual ~CDOTAUserMsg_ReceivedXmasGift();
  explicit constexpr CDOTAUserMsg_ReceivedXmasGift(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ReceivedXmasGift(const CDOTAUserMsg_ReceivedXmasGift& from);
  CDOTAUserMsg_ReceivedXmasGift(CDOTAUserMsg_ReceivedXmasGift&& from) noexcept
    : CDOTAUserMsg_ReceivedXmasGift() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ReceivedXmasGift& operator=(const CDOTAUserMsg_ReceivedXmasGift& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ReceivedXmasGift& operator=(CDOTAUserMsg_ReceivedXmasGift&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ReceivedXmasGift& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ReceivedXmasGift* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ReceivedXmasGift*>(
               &_CDOTAUserMsg_ReceivedXmasGift_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(CDOTAUserMsg_ReceivedXmasGift& a, CDOTAUserMsg_ReceivedXmasGift& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ReceivedXmasGift* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ReceivedXmasGift* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ReceivedXmasGift* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ReceivedXmasGift>(nullptr);
  }

  CDOTAUserMsg_ReceivedXmasGift* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ReceivedXmasGift>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ReceivedXmasGift& from);
  void MergeFrom(const CDOTAUserMsg_ReceivedXmasGift& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ReceivedXmasGift* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ReceivedXmasGift";
  }
  protected:
  explicit CDOTAUserMsg_ReceivedXmasGift(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemNameFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
    kInventorySlotFieldNumber = 3,
  };
  // optional string item_name = 2;
  bool has_item_name() const;
  private:
  bool _internal_has_item_name() const;
  public:
  void clear_item_name();
  const std::string& item_name() const;
  void set_item_name(const std::string& value);
  void set_item_name(std::string&& value);
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  std::string* mutable_item_name();
  std::string* release_item_name();
  void set_allocated_item_name(std::string* item_name);
  private:
  const std::string& _internal_item_name() const;
  void _internal_set_item_name(const std::string& value);
  std::string* _internal_mutable_item_name();
  public:

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 inventory_slot = 3;
  bool has_inventory_slot() const;
  private:
  bool _internal_has_inventory_slot() const;
  public:
  void clear_inventory_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 inventory_slot() const;
  void set_inventory_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_inventory_slot() const;
  void _internal_set_inventory_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ReceivedXmasGift)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr item_name_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 inventory_slot_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ShowSurvey PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ShowSurvey) */ {
 public:
  inline CDOTAUserMsg_ShowSurvey() : CDOTAUserMsg_ShowSurvey(nullptr) {}
  virtual ~CDOTAUserMsg_ShowSurvey();
  explicit constexpr CDOTAUserMsg_ShowSurvey(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ShowSurvey(const CDOTAUserMsg_ShowSurvey& from);
  CDOTAUserMsg_ShowSurvey(CDOTAUserMsg_ShowSurvey&& from) noexcept
    : CDOTAUserMsg_ShowSurvey() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ShowSurvey& operator=(const CDOTAUserMsg_ShowSurvey& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ShowSurvey& operator=(CDOTAUserMsg_ShowSurvey&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ShowSurvey& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ShowSurvey* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ShowSurvey*>(
               &_CDOTAUserMsg_ShowSurvey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(CDOTAUserMsg_ShowSurvey& a, CDOTAUserMsg_ShowSurvey& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ShowSurvey* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ShowSurvey* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ShowSurvey* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShowSurvey>(nullptr);
  }

  CDOTAUserMsg_ShowSurvey* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShowSurvey>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ShowSurvey& from);
  void MergeFrom(const CDOTAUserMsg_ShowSurvey& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ShowSurvey* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ShowSurvey";
  }
  protected:
  explicit CDOTAUserMsg_ShowSurvey(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseStyleFieldNumber = 3,
    kTeammateNameFieldNumber = 5,
    kMatchIdFieldNumber = 2,
    kSurveyIdFieldNumber = 1,
    kTeammateHeroIdFieldNumber = 4,
    kTeammateAccountIdFieldNumber = 6,
  };
  // optional string response_style = 3;
  bool has_response_style() const;
  private:
  bool _internal_has_response_style() const;
  public:
  void clear_response_style();
  const std::string& response_style() const;
  void set_response_style(const std::string& value);
  void set_response_style(std::string&& value);
  void set_response_style(const char* value);
  void set_response_style(const char* value, size_t size);
  std::string* mutable_response_style();
  std::string* release_response_style();
  void set_allocated_response_style(std::string* response_style);
  private:
  const std::string& _internal_response_style() const;
  void _internal_set_response_style(const std::string& value);
  std::string* _internal_mutable_response_style();
  public:

  // optional string teammate_name = 5;
  bool has_teammate_name() const;
  private:
  bool _internal_has_teammate_name() const;
  public:
  void clear_teammate_name();
  const std::string& teammate_name() const;
  void set_teammate_name(const std::string& value);
  void set_teammate_name(std::string&& value);
  void set_teammate_name(const char* value);
  void set_teammate_name(const char* value, size_t size);
  std::string* mutable_teammate_name();
  std::string* release_teammate_name();
  void set_allocated_teammate_name(std::string* teammate_name);
  private:
  const std::string& _internal_teammate_name() const;
  void _internal_set_teammate_name(const std::string& value);
  std::string* _internal_mutable_teammate_name();
  public:

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional int32 survey_id = 1;
  bool has_survey_id() const;
  private:
  bool _internal_has_survey_id() const;
  public:
  void clear_survey_id();
  ::PROTOBUF_NAMESPACE_ID::int32 survey_id() const;
  void set_survey_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_survey_id() const;
  void _internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 teammate_hero_id = 4;
  bool has_teammate_hero_id() const;
  private:
  bool _internal_has_teammate_hero_id() const;
  public:
  void clear_teammate_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 teammate_hero_id() const;
  void set_teammate_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_teammate_hero_id() const;
  void _internal_set_teammate_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 teammate_account_id = 6;
  bool has_teammate_account_id() const;
  private:
  bool _internal_has_teammate_account_id() const;
  public:
  void clear_teammate_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 teammate_account_id() const;
  void set_teammate_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_teammate_account_id() const;
  void _internal_set_teammate_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShowSurvey)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_style_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr teammate_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 survey_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 teammate_hero_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 teammate_account_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UpdateSharedContent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UpdateSharedContent) */ {
 public:
  inline CDOTAUserMsg_UpdateSharedContent() : CDOTAUserMsg_UpdateSharedContent(nullptr) {}
  virtual ~CDOTAUserMsg_UpdateSharedContent();
  explicit constexpr CDOTAUserMsg_UpdateSharedContent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UpdateSharedContent(const CDOTAUserMsg_UpdateSharedContent& from);
  CDOTAUserMsg_UpdateSharedContent(CDOTAUserMsg_UpdateSharedContent&& from) noexcept
    : CDOTAUserMsg_UpdateSharedContent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UpdateSharedContent& operator=(const CDOTAUserMsg_UpdateSharedContent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UpdateSharedContent& operator=(CDOTAUserMsg_UpdateSharedContent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UpdateSharedContent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UpdateSharedContent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UpdateSharedContent*>(
               &_CDOTAUserMsg_UpdateSharedContent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(CDOTAUserMsg_UpdateSharedContent& a, CDOTAUserMsg_UpdateSharedContent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UpdateSharedContent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UpdateSharedContent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UpdateSharedContent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UpdateSharedContent>(nullptr);
  }

  CDOTAUserMsg_UpdateSharedContent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UpdateSharedContent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UpdateSharedContent& from);
  void MergeFrom(const CDOTAUserMsg_UpdateSharedContent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UpdateSharedContent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UpdateSharedContent";
  }
  protected:
  explicit CDOTAUserMsg_UpdateSharedContent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSlotTypeFieldNumber = 1,
  };
  // optional int32 slot_type = 1;
  bool has_slot_type() const;
  private:
  bool _internal_has_slot_type() const;
  public:
  void clear_slot_type();
  ::PROTOBUF_NAMESPACE_ID::int32 slot_type() const;
  void set_slot_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot_type() const;
  void _internal_set_slot_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UpdateSharedContent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_type_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialRequestExp PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialRequestExp) */ {
 public:
  inline CDOTAUserMsg_TutorialRequestExp() : CDOTAUserMsg_TutorialRequestExp(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialRequestExp();
  explicit constexpr CDOTAUserMsg_TutorialRequestExp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialRequestExp(const CDOTAUserMsg_TutorialRequestExp& from);
  CDOTAUserMsg_TutorialRequestExp(CDOTAUserMsg_TutorialRequestExp&& from) noexcept
    : CDOTAUserMsg_TutorialRequestExp() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialRequestExp& operator=(const CDOTAUserMsg_TutorialRequestExp& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialRequestExp& operator=(CDOTAUserMsg_TutorialRequestExp&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialRequestExp& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialRequestExp* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialRequestExp*>(
               &_CDOTAUserMsg_TutorialRequestExp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(CDOTAUserMsg_TutorialRequestExp& a, CDOTAUserMsg_TutorialRequestExp& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialRequestExp* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialRequestExp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialRequestExp* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialRequestExp>(nullptr);
  }

  CDOTAUserMsg_TutorialRequestExp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialRequestExp>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialRequestExp& from);
  void MergeFrom(const CDOTAUserMsg_TutorialRequestExp& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialRequestExp* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialRequestExp";
  }
  protected:
  explicit CDOTAUserMsg_TutorialRequestExp(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialRequestExp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialFade PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialFade) */ {
 public:
  inline CDOTAUserMsg_TutorialFade() : CDOTAUserMsg_TutorialFade(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialFade();
  explicit constexpr CDOTAUserMsg_TutorialFade(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialFade(const CDOTAUserMsg_TutorialFade& from);
  CDOTAUserMsg_TutorialFade(CDOTAUserMsg_TutorialFade&& from) noexcept
    : CDOTAUserMsg_TutorialFade() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialFade& operator=(const CDOTAUserMsg_TutorialFade& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialFade& operator=(CDOTAUserMsg_TutorialFade&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialFade& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialFade* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialFade*>(
               &_CDOTAUserMsg_TutorialFade_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(CDOTAUserMsg_TutorialFade& a, CDOTAUserMsg_TutorialFade& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialFade* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialFade* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialFade* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialFade>(nullptr);
  }

  CDOTAUserMsg_TutorialFade* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialFade>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialFade& from);
  void MergeFrom(const CDOTAUserMsg_TutorialFade& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialFade* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialFade";
  }
  protected:
  explicit CDOTAUserMsg_TutorialFade(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTgtAlphaFieldNumber = 1,
  };
  // optional int32 tgt_alpha = 1;
  bool has_tgt_alpha() const;
  private:
  bool _internal_has_tgt_alpha() const;
  public:
  void clear_tgt_alpha();
  ::PROTOBUF_NAMESPACE_ID::int32 tgt_alpha() const;
  void set_tgt_alpha(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tgt_alpha() const;
  void _internal_set_tgt_alpha(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialFade)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 tgt_alpha_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialPingMinimap PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TutorialPingMinimap) */ {
 public:
  inline CDOTAUserMsg_TutorialPingMinimap() : CDOTAUserMsg_TutorialPingMinimap(nullptr) {}
  virtual ~CDOTAUserMsg_TutorialPingMinimap();
  explicit constexpr CDOTAUserMsg_TutorialPingMinimap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TutorialPingMinimap(const CDOTAUserMsg_TutorialPingMinimap& from);
  CDOTAUserMsg_TutorialPingMinimap(CDOTAUserMsg_TutorialPingMinimap&& from) noexcept
    : CDOTAUserMsg_TutorialPingMinimap() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TutorialPingMinimap& operator=(const CDOTAUserMsg_TutorialPingMinimap& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TutorialPingMinimap& operator=(CDOTAUserMsg_TutorialPingMinimap&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TutorialPingMinimap& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TutorialPingMinimap* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialPingMinimap*>(
               &_CDOTAUserMsg_TutorialPingMinimap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(CDOTAUserMsg_TutorialPingMinimap& a, CDOTAUserMsg_TutorialPingMinimap& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TutorialPingMinimap* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TutorialPingMinimap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialPingMinimap* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialPingMinimap>(nullptr);
  }

  CDOTAUserMsg_TutorialPingMinimap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TutorialPingMinimap>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TutorialPingMinimap& from);
  void MergeFrom(const CDOTAUserMsg_TutorialPingMinimap& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TutorialPingMinimap* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TutorialPingMinimap";
  }
  protected:
  explicit CDOTAUserMsg_TutorialPingMinimap(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
    kPosZFieldNumber = 4,
    kEntityIndexFieldNumber = 5,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float pos_x = 2;
  bool has_pos_x() const;
  private:
  bool _internal_has_pos_x() const;
  public:
  void clear_pos_x();
  float pos_x() const;
  void set_pos_x(float value);
  private:
  float _internal_pos_x() const;
  void _internal_set_pos_x(float value);
  public:

  // optional float pos_y = 3;
  bool has_pos_y() const;
  private:
  bool _internal_has_pos_y() const;
  public:
  void clear_pos_y();
  float pos_y() const;
  void set_pos_y(float value);
  private:
  float _internal_pos_y() const;
  void _internal_set_pos_y(float value);
  public:

  // optional float pos_z = 4;
  bool has_pos_z() const;
  private:
  bool _internal_has_pos_z() const;
  public:
  void clear_pos_z();
  float pos_z() const;
  void set_pos_z(float value);
  private:
  float _internal_pos_z() const;
  void _internal_set_pos_z(float value);
  public:

  // optional int32 entity_index = 5;
  bool has_entity_index() const;
  private:
  bool _internal_has_entity_index() const;
  public:
  void clear_entity_index();
  ::PROTOBUF_NAMESPACE_ID::int32 entity_index() const;
  void set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity_index() const;
  void _internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TutorialPingMinimap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GamerulesStateChanged PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GamerulesStateChanged) */ {
 public:
  inline CDOTAUserMsg_GamerulesStateChanged() : CDOTAUserMsg_GamerulesStateChanged(nullptr) {}
  virtual ~CDOTAUserMsg_GamerulesStateChanged();
  explicit constexpr CDOTAUserMsg_GamerulesStateChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GamerulesStateChanged(const CDOTAUserMsg_GamerulesStateChanged& from);
  CDOTAUserMsg_GamerulesStateChanged(CDOTAUserMsg_GamerulesStateChanged&& from) noexcept
    : CDOTAUserMsg_GamerulesStateChanged() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GamerulesStateChanged& operator=(const CDOTAUserMsg_GamerulesStateChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GamerulesStateChanged& operator=(CDOTAUserMsg_GamerulesStateChanged&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GamerulesStateChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GamerulesStateChanged* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GamerulesStateChanged*>(
               &_CDOTAUserMsg_GamerulesStateChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(CDOTAUserMsg_GamerulesStateChanged& a, CDOTAUserMsg_GamerulesStateChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GamerulesStateChanged* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GamerulesStateChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GamerulesStateChanged* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GamerulesStateChanged>(nullptr);
  }

  CDOTAUserMsg_GamerulesStateChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GamerulesStateChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GamerulesStateChanged& from);
  void MergeFrom(const CDOTAUserMsg_GamerulesStateChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GamerulesStateChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GamerulesStateChanged";
  }
  protected:
  explicit CDOTAUserMsg_GamerulesStateChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStateFieldNumber = 1,
  };
  // optional uint32 state = 1;
  bool has_state() const;
  private:
  bool _internal_has_state() const;
  public:
  void clear_state();
  ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
  void set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
  void _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GamerulesStateChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 state_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AddQuestLogEntry PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AddQuestLogEntry) */ {
 public:
  inline CDOTAUserMsg_AddQuestLogEntry() : CDOTAUserMsg_AddQuestLogEntry(nullptr) {}
  virtual ~CDOTAUserMsg_AddQuestLogEntry();
  explicit constexpr CDOTAUserMsg_AddQuestLogEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AddQuestLogEntry(const CDOTAUserMsg_AddQuestLogEntry& from);
  CDOTAUserMsg_AddQuestLogEntry(CDOTAUserMsg_AddQuestLogEntry&& from) noexcept
    : CDOTAUserMsg_AddQuestLogEntry() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AddQuestLogEntry& operator=(const CDOTAUserMsg_AddQuestLogEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AddQuestLogEntry& operator=(CDOTAUserMsg_AddQuestLogEntry&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AddQuestLogEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AddQuestLogEntry* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AddQuestLogEntry*>(
               &_CDOTAUserMsg_AddQuestLogEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(CDOTAUserMsg_AddQuestLogEntry& a, CDOTAUserMsg_AddQuestLogEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AddQuestLogEntry* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AddQuestLogEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AddQuestLogEntry* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AddQuestLogEntry>(nullptr);
  }

  CDOTAUserMsg_AddQuestLogEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AddQuestLogEntry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AddQuestLogEntry& from);
  void MergeFrom(const CDOTAUserMsg_AddQuestLogEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AddQuestLogEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AddQuestLogEntry";
  }
  protected:
  explicit CDOTAUserMsg_AddQuestLogEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNpcNameFieldNumber = 1,
    kNpcDialogFieldNumber = 2,
  };
  // optional string npc_name = 1;
  bool has_npc_name() const;
  private:
  bool _internal_has_npc_name() const;
  public:
  void clear_npc_name();
  const std::string& npc_name() const;
  void set_npc_name(const std::string& value);
  void set_npc_name(std::string&& value);
  void set_npc_name(const char* value);
  void set_npc_name(const char* value, size_t size);
  std::string* mutable_npc_name();
  std::string* release_npc_name();
  void set_allocated_npc_name(std::string* npc_name);
  private:
  const std::string& _internal_npc_name() const;
  void _internal_set_npc_name(const std::string& value);
  std::string* _internal_mutable_npc_name();
  public:

  // optional string npc_dialog = 2;
  bool has_npc_dialog() const;
  private:
  bool _internal_has_npc_dialog() const;
  public:
  void clear_npc_dialog();
  const std::string& npc_dialog() const;
  void set_npc_dialog(const std::string& value);
  void set_npc_dialog(std::string&& value);
  void set_npc_dialog(const char* value);
  void set_npc_dialog(const char* value, size_t size);
  std::string* mutable_npc_dialog();
  std::string* release_npc_dialog();
  void set_allocated_npc_dialog(std::string* npc_dialog);
  private:
  const std::string& _internal_npc_dialog() const;
  void _internal_set_npc_dialog(const std::string& value);
  std::string* _internal_mutable_npc_dialog();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AddQuestLogEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr npc_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr npc_dialog_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendStatPopup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SendStatPopup) */ {
 public:
  inline CDOTAUserMsg_SendStatPopup() : CDOTAUserMsg_SendStatPopup(nullptr) {}
  virtual ~CDOTAUserMsg_SendStatPopup();
  explicit constexpr CDOTAUserMsg_SendStatPopup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SendStatPopup(const CDOTAUserMsg_SendStatPopup& from);
  CDOTAUserMsg_SendStatPopup(CDOTAUserMsg_SendStatPopup&& from) noexcept
    : CDOTAUserMsg_SendStatPopup() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SendStatPopup& operator=(const CDOTAUserMsg_SendStatPopup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SendStatPopup& operator=(CDOTAUserMsg_SendStatPopup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SendStatPopup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SendStatPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendStatPopup*>(
               &_CDOTAUserMsg_SendStatPopup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(CDOTAUserMsg_SendStatPopup& a, CDOTAUserMsg_SendStatPopup& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SendStatPopup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SendStatPopup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendStatPopup* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendStatPopup>(nullptr);
  }

  CDOTAUserMsg_SendStatPopup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendStatPopup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SendStatPopup& from);
  void MergeFrom(const CDOTAUserMsg_SendStatPopup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SendStatPopup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SendStatPopup";
  }
  protected:
  explicit CDOTAUserMsg_SendStatPopup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatpopupFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_SendStatPopup statpopup = 2;
  bool has_statpopup() const;
  private:
  bool _internal_has_statpopup() const;
  public:
  void clear_statpopup();
  const ::CDOTAMsg_SendStatPopup& statpopup() const;
  ::CDOTAMsg_SendStatPopup* release_statpopup();
  ::CDOTAMsg_SendStatPopup* mutable_statpopup();
  void set_allocated_statpopup(::CDOTAMsg_SendStatPopup* statpopup);
  private:
  const ::CDOTAMsg_SendStatPopup& _internal_statpopup() const;
  ::CDOTAMsg_SendStatPopup* _internal_mutable_statpopup();
  public:
  void unsafe_arena_set_allocated_statpopup(
      ::CDOTAMsg_SendStatPopup* statpopup);
  ::CDOTAMsg_SendStatPopup* unsafe_arena_release_statpopup();

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendStatPopup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_SendStatPopup* statpopup_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DismissAllStatPopups PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_DismissAllStatPopups) */ {
 public:
  inline CDOTAUserMsg_DismissAllStatPopups() : CDOTAUserMsg_DismissAllStatPopups(nullptr) {}
  virtual ~CDOTAUserMsg_DismissAllStatPopups();
  explicit constexpr CDOTAUserMsg_DismissAllStatPopups(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_DismissAllStatPopups(const CDOTAUserMsg_DismissAllStatPopups& from);
  CDOTAUserMsg_DismissAllStatPopups(CDOTAUserMsg_DismissAllStatPopups&& from) noexcept
    : CDOTAUserMsg_DismissAllStatPopups() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_DismissAllStatPopups& operator=(const CDOTAUserMsg_DismissAllStatPopups& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_DismissAllStatPopups& operator=(CDOTAUserMsg_DismissAllStatPopups&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_DismissAllStatPopups& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_DismissAllStatPopups* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DismissAllStatPopups*>(
               &_CDOTAUserMsg_DismissAllStatPopups_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(CDOTAUserMsg_DismissAllStatPopups& a, CDOTAUserMsg_DismissAllStatPopups& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_DismissAllStatPopups* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_DismissAllStatPopups* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DismissAllStatPopups* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_DismissAllStatPopups>(nullptr);
  }

  CDOTAUserMsg_DismissAllStatPopups* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_DismissAllStatPopups>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_DismissAllStatPopups& from);
  void MergeFrom(const CDOTAUserMsg_DismissAllStatPopups& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_DismissAllStatPopups* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_DismissAllStatPopups";
  }
  protected:
  explicit CDOTAUserMsg_DismissAllStatPopups(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDismissallmsgFieldNumber = 1,
  };
  // optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
  bool has_dismissallmsg() const;
  private:
  bool _internal_has_dismissallmsg() const;
  public:
  void clear_dismissallmsg();
  const ::CDOTAMsg_DismissAllStatPopups& dismissallmsg() const;
  ::CDOTAMsg_DismissAllStatPopups* release_dismissallmsg();
  ::CDOTAMsg_DismissAllStatPopups* mutable_dismissallmsg();
  void set_allocated_dismissallmsg(::CDOTAMsg_DismissAllStatPopups* dismissallmsg);
  private:
  const ::CDOTAMsg_DismissAllStatPopups& _internal_dismissallmsg() const;
  ::CDOTAMsg_DismissAllStatPopups* _internal_mutable_dismissallmsg();
  public:
  void unsafe_arena_set_allocated_dismissallmsg(
      ::CDOTAMsg_DismissAllStatPopups* dismissallmsg);
  ::CDOTAMsg_DismissAllStatPopups* unsafe_arena_release_dismissallmsg();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DismissAllStatPopups)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_DismissAllStatPopups* dismissallmsg_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendRoshanSpectatorPhase PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SendRoshanSpectatorPhase) */ {
 public:
  inline CDOTAUserMsg_SendRoshanSpectatorPhase() : CDOTAUserMsg_SendRoshanSpectatorPhase(nullptr) {}
  virtual ~CDOTAUserMsg_SendRoshanSpectatorPhase();
  explicit constexpr CDOTAUserMsg_SendRoshanSpectatorPhase(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SendRoshanSpectatorPhase(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);
  CDOTAUserMsg_SendRoshanSpectatorPhase(CDOTAUserMsg_SendRoshanSpectatorPhase&& from) noexcept
    : CDOTAUserMsg_SendRoshanSpectatorPhase() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SendRoshanSpectatorPhase& operator=(const CDOTAUserMsg_SendRoshanSpectatorPhase& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SendRoshanSpectatorPhase& operator=(CDOTAUserMsg_SendRoshanSpectatorPhase&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SendRoshanSpectatorPhase& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SendRoshanSpectatorPhase* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendRoshanSpectatorPhase*>(
               &_CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(CDOTAUserMsg_SendRoshanSpectatorPhase& a, CDOTAUserMsg_SendRoshanSpectatorPhase& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SendRoshanSpectatorPhase* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SendRoshanSpectatorPhase* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendRoshanSpectatorPhase* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendRoshanSpectatorPhase>(nullptr);
  }

  CDOTAUserMsg_SendRoshanSpectatorPhase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendRoshanSpectatorPhase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);
  void MergeFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SendRoshanSpectatorPhase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SendRoshanSpectatorPhase";
  }
  protected:
  explicit CDOTAUserMsg_SendRoshanSpectatorPhase(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPhaseFieldNumber = 1,
    kPhaseStartTimeFieldNumber = 2,
    kPhaseLengthFieldNumber = 3,
  };
  // optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
  bool has_phase() const;
  private:
  bool _internal_has_phase() const;
  public:
  void clear_phase();
  ::DOTA_ROSHAN_PHASE phase() const;
  void set_phase(::DOTA_ROSHAN_PHASE value);
  private:
  ::DOTA_ROSHAN_PHASE _internal_phase() const;
  void _internal_set_phase(::DOTA_ROSHAN_PHASE value);
  public:

  // optional int32 phase_start_time = 2;
  bool has_phase_start_time() const;
  private:
  bool _internal_has_phase_start_time() const;
  public:
  void clear_phase_start_time();
  ::PROTOBUF_NAMESPACE_ID::int32 phase_start_time() const;
  void set_phase_start_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_phase_start_time() const;
  void _internal_set_phase_start_time(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 phase_length = 3;
  bool has_phase_length() const;
  private:
  bool _internal_has_phase_length() const;
  public:
  void clear_phase_length();
  ::PROTOBUF_NAMESPACE_ID::int32 phase_length() const;
  void set_phase_length(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_phase_length() const;
  void _internal_set_phase_length(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendRoshanSpectatorPhase)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int phase_;
  ::PROTOBUF_NAMESPACE_ID::int32 phase_start_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 phase_length_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendRoshanPopup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SendRoshanPopup) */ {
 public:
  inline CDOTAUserMsg_SendRoshanPopup() : CDOTAUserMsg_SendRoshanPopup(nullptr) {}
  virtual ~CDOTAUserMsg_SendRoshanPopup();
  explicit constexpr CDOTAUserMsg_SendRoshanPopup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SendRoshanPopup(const CDOTAUserMsg_SendRoshanPopup& from);
  CDOTAUserMsg_SendRoshanPopup(CDOTAUserMsg_SendRoshanPopup&& from) noexcept
    : CDOTAUserMsg_SendRoshanPopup() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SendRoshanPopup& operator=(const CDOTAUserMsg_SendRoshanPopup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SendRoshanPopup& operator=(CDOTAUserMsg_SendRoshanPopup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SendRoshanPopup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SendRoshanPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendRoshanPopup*>(
               &_CDOTAUserMsg_SendRoshanPopup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(CDOTAUserMsg_SendRoshanPopup& a, CDOTAUserMsg_SendRoshanPopup& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SendRoshanPopup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SendRoshanPopup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendRoshanPopup* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendRoshanPopup>(nullptr);
  }

  CDOTAUserMsg_SendRoshanPopup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendRoshanPopup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SendRoshanPopup& from);
  void MergeFrom(const CDOTAUserMsg_SendRoshanPopup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SendRoshanPopup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SendRoshanPopup";
  }
  protected:
  explicit CDOTAUserMsg_SendRoshanPopup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReclaimedFieldNumber = 1,
    kGametimeFieldNumber = 2,
  };
  // optional bool reclaimed = 1;
  bool has_reclaimed() const;
  private:
  bool _internal_has_reclaimed() const;
  public:
  void clear_reclaimed();
  bool reclaimed() const;
  void set_reclaimed(bool value);
  private:
  bool _internal_reclaimed() const;
  void _internal_set_reclaimed(bool value);
  public:

  // optional int32 gametime = 2;
  bool has_gametime() const;
  private:
  bool _internal_has_gametime() const;
  public:
  void clear_gametime();
  ::PROTOBUF_NAMESPACE_ID::int32 gametime() const;
  void set_gametime(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_gametime() const;
  void _internal_set_gametime(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendRoshanPopup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool reclaimed_;
  ::PROTOBUF_NAMESPACE_ID::int32 gametime_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendFinalGold PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SendFinalGold) */ {
 public:
  inline CDOTAUserMsg_SendFinalGold() : CDOTAUserMsg_SendFinalGold(nullptr) {}
  virtual ~CDOTAUserMsg_SendFinalGold();
  explicit constexpr CDOTAUserMsg_SendFinalGold(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SendFinalGold(const CDOTAUserMsg_SendFinalGold& from);
  CDOTAUserMsg_SendFinalGold(CDOTAUserMsg_SendFinalGold&& from) noexcept
    : CDOTAUserMsg_SendFinalGold() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SendFinalGold& operator=(const CDOTAUserMsg_SendFinalGold& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SendFinalGold& operator=(CDOTAUserMsg_SendFinalGold&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SendFinalGold& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SendFinalGold* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendFinalGold*>(
               &_CDOTAUserMsg_SendFinalGold_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(CDOTAUserMsg_SendFinalGold& a, CDOTAUserMsg_SendFinalGold& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SendFinalGold* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SendFinalGold* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendFinalGold* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendFinalGold>(nullptr);
  }

  CDOTAUserMsg_SendFinalGold* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SendFinalGold>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SendFinalGold& from);
  void MergeFrom(const CDOTAUserMsg_SendFinalGold& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SendFinalGold* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SendFinalGold";
  }
  protected:
  explicit CDOTAUserMsg_SendFinalGold(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReliableGoldFieldNumber = 1,
    kUnreliableGoldFieldNumber = 2,
  };
  // repeated uint32 reliable_gold = 1;
  int reliable_gold_size() const;
  private:
  int _internal_reliable_gold_size() const;
  public:
  void clear_reliable_gold();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reliable_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_reliable_gold() const;
  void _internal_add_reliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_reliable_gold();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 reliable_gold(int index) const;
  void set_reliable_gold(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_reliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      reliable_gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_reliable_gold();

  // repeated uint32 unreliable_gold = 2;
  int unreliable_gold_size() const;
  private:
  int _internal_unreliable_gold_size() const;
  public:
  void clear_unreliable_gold();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unreliable_gold(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_unreliable_gold() const;
  void _internal_add_unreliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_unreliable_gold();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 unreliable_gold(int index) const;
  void set_unreliable_gold(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_unreliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      unreliable_gold() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_unreliable_gold();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SendFinalGold)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > reliable_gold_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > unreliable_gold_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomMsg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CustomMsg) */ {
 public:
  inline CDOTAUserMsg_CustomMsg() : CDOTAUserMsg_CustomMsg(nullptr) {}
  virtual ~CDOTAUserMsg_CustomMsg();
  explicit constexpr CDOTAUserMsg_CustomMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CustomMsg(const CDOTAUserMsg_CustomMsg& from);
  CDOTAUserMsg_CustomMsg(CDOTAUserMsg_CustomMsg&& from) noexcept
    : CDOTAUserMsg_CustomMsg() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CustomMsg& operator=(const CDOTAUserMsg_CustomMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CustomMsg& operator=(CDOTAUserMsg_CustomMsg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CustomMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CustomMsg* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomMsg*>(
               &_CDOTAUserMsg_CustomMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(CDOTAUserMsg_CustomMsg& a, CDOTAUserMsg_CustomMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CustomMsg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CustomMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomMsg* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomMsg>(nullptr);
  }

  CDOTAUserMsg_CustomMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomMsg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CustomMsg& from);
  void MergeFrom(const CDOTAUserMsg_CustomMsg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CustomMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CustomMsg";
  }
  protected:
  explicit CDOTAUserMsg_CustomMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
    kPlayerIdFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // optional string message = 1;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional int32 player_id = 2;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CoachHUDPing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CoachHUDPing) */ {
 public:
  inline CDOTAUserMsg_CoachHUDPing() : CDOTAUserMsg_CoachHUDPing(nullptr) {}
  virtual ~CDOTAUserMsg_CoachHUDPing();
  explicit constexpr CDOTAUserMsg_CoachHUDPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CoachHUDPing(const CDOTAUserMsg_CoachHUDPing& from);
  CDOTAUserMsg_CoachHUDPing(CDOTAUserMsg_CoachHUDPing&& from) noexcept
    : CDOTAUserMsg_CoachHUDPing() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CoachHUDPing& operator=(const CDOTAUserMsg_CoachHUDPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CoachHUDPing& operator=(CDOTAUserMsg_CoachHUDPing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CoachHUDPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CoachHUDPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CoachHUDPing*>(
               &_CDOTAUserMsg_CoachHUDPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(CDOTAUserMsg_CoachHUDPing& a, CDOTAUserMsg_CoachHUDPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CoachHUDPing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CoachHUDPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CoachHUDPing* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CoachHUDPing>(nullptr);
  }

  CDOTAUserMsg_CoachHUDPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CoachHUDPing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CoachHUDPing& from);
  void MergeFrom(const CDOTAUserMsg_CoachHUDPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CoachHUDPing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CoachHUDPing";
  }
  protected:
  explicit CDOTAUserMsg_CoachHUDPing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHudPingFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
  bool has_hud_ping() const;
  private:
  bool _internal_has_hud_ping() const;
  public:
  void clear_hud_ping();
  const ::CDOTAMsg_CoachHUDPing& hud_ping() const;
  ::CDOTAMsg_CoachHUDPing* release_hud_ping();
  ::CDOTAMsg_CoachHUDPing* mutable_hud_ping();
  void set_allocated_hud_ping(::CDOTAMsg_CoachHUDPing* hud_ping);
  private:
  const ::CDOTAMsg_CoachHUDPing& _internal_hud_ping() const;
  ::CDOTAMsg_CoachHUDPing* _internal_mutable_hud_ping();
  public:
  void unsafe_arena_set_allocated_hud_ping(
      ::CDOTAMsg_CoachHUDPing* hud_ping);
  ::CDOTAMsg_CoachHUDPing* unsafe_arena_release_hud_ping();

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CoachHUDPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAMsg_CoachHUDPing* hud_ping_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ClientLoadGridNav PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ClientLoadGridNav) */ {
 public:
  inline CDOTAUserMsg_ClientLoadGridNav() : CDOTAUserMsg_ClientLoadGridNav(nullptr) {}
  virtual ~CDOTAUserMsg_ClientLoadGridNav();
  explicit constexpr CDOTAUserMsg_ClientLoadGridNav(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ClientLoadGridNav(const CDOTAUserMsg_ClientLoadGridNav& from);
  CDOTAUserMsg_ClientLoadGridNav(CDOTAUserMsg_ClientLoadGridNav&& from) noexcept
    : CDOTAUserMsg_ClientLoadGridNav() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ClientLoadGridNav& operator=(const CDOTAUserMsg_ClientLoadGridNav& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ClientLoadGridNav& operator=(CDOTAUserMsg_ClientLoadGridNav&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ClientLoadGridNav& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ClientLoadGridNav* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ClientLoadGridNav*>(
               &_CDOTAUserMsg_ClientLoadGridNav_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(CDOTAUserMsg_ClientLoadGridNav& a, CDOTAUserMsg_ClientLoadGridNav& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ClientLoadGridNav* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ClientLoadGridNav* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ClientLoadGridNav* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ClientLoadGridNav>(nullptr);
  }

  CDOTAUserMsg_ClientLoadGridNav* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ClientLoadGridNav>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ClientLoadGridNav& from);
  void MergeFrom(const CDOTAUserMsg_ClientLoadGridNav& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ClientLoadGridNav* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ClientLoadGridNav";
  }
  protected:
  explicit CDOTAUserMsg_ClientLoadGridNav(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ClientLoadGridNav)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_Projectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_Projectile) */ {
 public:
  inline CDOTAUserMsg_TE_Projectile() : CDOTAUserMsg_TE_Projectile(nullptr) {}
  virtual ~CDOTAUserMsg_TE_Projectile();
  explicit constexpr CDOTAUserMsg_TE_Projectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_Projectile(const CDOTAUserMsg_TE_Projectile& from);
  CDOTAUserMsg_TE_Projectile(CDOTAUserMsg_TE_Projectile&& from) noexcept
    : CDOTAUserMsg_TE_Projectile() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_Projectile& operator=(const CDOTAUserMsg_TE_Projectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_Projectile& operator=(CDOTAUserMsg_TE_Projectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_Projectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_Projectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_Projectile*>(
               &_CDOTAUserMsg_TE_Projectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  friend void swap(CDOTAUserMsg_TE_Projectile& a, CDOTAUserMsg_TE_Projectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_Projectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_Projectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_Projectile* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_Projectile>(nullptr);
  }

  CDOTAUserMsg_TE_Projectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_Projectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_Projectile& from);
  void MergeFrom(const CDOTAUserMsg_TE_Projectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_Projectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_Projectile";
  }
  protected:
  explicit CDOTAUserMsg_TE_Projectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVTargetLocFieldNumber = 14,
    kHSourceFieldNumber = 1,
    kHTargetFieldNumber = 2,
    kMoveSpeedFieldNumber = 3,
    kSourceAttachmentFieldNumber = 4,
    kParticleSystemHandleFieldNumber = 5,
    kDodgeableFieldNumber = 6,
    kIsAttackFieldNumber = 7,
    kExpireTimeFieldNumber = 9,
    kMaximpacttimeFieldNumber = 10,
    kColorgemcolorFieldNumber = 11,
    kLaunchTickFieldNumber = 12,
    kHandleFieldNumber = 13,
  };
  // optional .CMsgVector vTargetLoc = 14;
  bool has_vtargetloc() const;
  private:
  bool _internal_has_vtargetloc() const;
  public:
  void clear_vtargetloc();
  const ::CMsgVector& vtargetloc() const;
  ::CMsgVector* release_vtargetloc();
  ::CMsgVector* mutable_vtargetloc();
  void set_allocated_vtargetloc(::CMsgVector* vtargetloc);
  private:
  const ::CMsgVector& _internal_vtargetloc() const;
  ::CMsgVector* _internal_mutable_vtargetloc();
  public:
  void unsafe_arena_set_allocated_vtargetloc(
      ::CMsgVector* vtargetloc);
  ::CMsgVector* unsafe_arena_release_vtargetloc();

  // optional int32 hSource = 1;
  bool has_hsource() const;
  private:
  bool _internal_has_hsource() const;
  public:
  void clear_hsource();
  ::PROTOBUF_NAMESPACE_ID::int32 hsource() const;
  void set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hsource() const;
  void _internal_set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 hTarget = 2;
  bool has_htarget() const;
  private:
  bool _internal_has_htarget() const;
  public:
  void clear_htarget();
  ::PROTOBUF_NAMESPACE_ID::int32 htarget() const;
  void set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_htarget() const;
  void _internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 moveSpeed = 3;
  bool has_movespeed() const;
  private:
  bool _internal_has_movespeed() const;
  public:
  void clear_movespeed();
  ::PROTOBUF_NAMESPACE_ID::int32 movespeed() const;
  void set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_movespeed() const;
  void _internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 sourceAttachment = 4;
  bool has_sourceattachment() const;
  private:
  bool _internal_has_sourceattachment() const;
  public:
  void clear_sourceattachment();
  ::PROTOBUF_NAMESPACE_ID::int32 sourceattachment() const;
  void set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sourceattachment() const;
  void _internal_set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 particleSystemHandle = 5;
  bool has_particlesystemhandle() const;
  private:
  bool _internal_has_particlesystemhandle() const;
  public:
  void clear_particlesystemhandle();
  ::PROTOBUF_NAMESPACE_ID::int64 particlesystemhandle() const;
  void set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_particlesystemhandle() const;
  void _internal_set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool dodgeable = 6;
  bool has_dodgeable() const;
  private:
  bool _internal_has_dodgeable() const;
  public:
  void clear_dodgeable();
  bool dodgeable() const;
  void set_dodgeable(bool value);
  private:
  bool _internal_dodgeable() const;
  void _internal_set_dodgeable(bool value);
  public:

  // optional bool isAttack = 7;
  bool has_isattack() const;
  private:
  bool _internal_has_isattack() const;
  public:
  void clear_isattack();
  bool isattack() const;
  void set_isattack(bool value);
  private:
  bool _internal_isattack() const;
  void _internal_set_isattack(bool value);
  public:

  // optional float expireTime = 9;
  bool has_expiretime() const;
  private:
  bool _internal_has_expiretime() const;
  public:
  void clear_expiretime();
  float expiretime() const;
  void set_expiretime(float value);
  private:
  float _internal_expiretime() const;
  void _internal_set_expiretime(float value);
  public:

  // optional float maximpacttime = 10;
  bool has_maximpacttime() const;
  private:
  bool _internal_has_maximpacttime() const;
  public:
  void clear_maximpacttime();
  float maximpacttime() const;
  void set_maximpacttime(float value);
  private:
  float _internal_maximpacttime() const;
  void _internal_set_maximpacttime(float value);
  public:

  // optional fixed32 colorgemcolor = 11;
  bool has_colorgemcolor() const;
  private:
  bool _internal_has_colorgemcolor() const;
  public:
  void clear_colorgemcolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor() const;
  void set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_colorgemcolor() const;
  void _internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 launch_tick = 12;
  bool has_launch_tick() const;
  private:
  bool _internal_has_launch_tick() const;
  public:
  void clear_launch_tick();
  ::PROTOBUF_NAMESPACE_ID::int32 launch_tick() const;
  void set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_launch_tick() const;
  void _internal_set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 handle = 13;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_Projectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* vtargetloc_;
  ::PROTOBUF_NAMESPACE_ID::int32 hsource_;
  ::PROTOBUF_NAMESPACE_ID::int32 htarget_;
  ::PROTOBUF_NAMESPACE_ID::int32 movespeed_;
  ::PROTOBUF_NAMESPACE_ID::int32 sourceattachment_;
  ::PROTOBUF_NAMESPACE_ID::int64 particlesystemhandle_;
  bool dodgeable_;
  bool isattack_;
  float expiretime_;
  float maximpacttime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor_;
  ::PROTOBUF_NAMESPACE_ID::int32 launch_tick_;
  ::PROTOBUF_NAMESPACE_ID::int32 handle_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_ProjectileLoc PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_ProjectileLoc) */ {
 public:
  inline CDOTAUserMsg_TE_ProjectileLoc() : CDOTAUserMsg_TE_ProjectileLoc(nullptr) {}
  virtual ~CDOTAUserMsg_TE_ProjectileLoc();
  explicit constexpr CDOTAUserMsg_TE_ProjectileLoc(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_ProjectileLoc(const CDOTAUserMsg_TE_ProjectileLoc& from);
  CDOTAUserMsg_TE_ProjectileLoc(CDOTAUserMsg_TE_ProjectileLoc&& from) noexcept
    : CDOTAUserMsg_TE_ProjectileLoc() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_ProjectileLoc& operator=(const CDOTAUserMsg_TE_ProjectileLoc& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_ProjectileLoc& operator=(CDOTAUserMsg_TE_ProjectileLoc&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_ProjectileLoc& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_ProjectileLoc* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_ProjectileLoc*>(
               &_CDOTAUserMsg_TE_ProjectileLoc_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  friend void swap(CDOTAUserMsg_TE_ProjectileLoc& a, CDOTAUserMsg_TE_ProjectileLoc& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_ProjectileLoc* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_ProjectileLoc* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_ProjectileLoc* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_ProjectileLoc>(nullptr);
  }

  CDOTAUserMsg_TE_ProjectileLoc* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_ProjectileLoc>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_ProjectileLoc& from);
  void MergeFrom(const CDOTAUserMsg_TE_ProjectileLoc& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_ProjectileLoc* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_ProjectileLoc";
  }
  protected:
  explicit CDOTAUserMsg_TE_ProjectileLoc(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVSourceLocFieldNumber = 1,
    kVTargetLocFieldNumber = 10,
    kHTargetFieldNumber = 2,
    kMoveSpeedFieldNumber = 3,
    kParticleSystemHandleFieldNumber = 4,
    kDodgeableFieldNumber = 5,
    kIsAttackFieldNumber = 6,
    kExpireTimeFieldNumber = 9,
    kColorgemcolorFieldNumber = 11,
    kLaunchTickFieldNumber = 12,
    kHandleFieldNumber = 13,
    kHSourceFieldNumber = 14,
    kSourceAttachmentFieldNumber = 15,
  };
  // optional .CMsgVector vSourceLoc = 1;
  bool has_vsourceloc() const;
  private:
  bool _internal_has_vsourceloc() const;
  public:
  void clear_vsourceloc();
  const ::CMsgVector& vsourceloc() const;
  ::CMsgVector* release_vsourceloc();
  ::CMsgVector* mutable_vsourceloc();
  void set_allocated_vsourceloc(::CMsgVector* vsourceloc);
  private:
  const ::CMsgVector& _internal_vsourceloc() const;
  ::CMsgVector* _internal_mutable_vsourceloc();
  public:
  void unsafe_arena_set_allocated_vsourceloc(
      ::CMsgVector* vsourceloc);
  ::CMsgVector* unsafe_arena_release_vsourceloc();

  // optional .CMsgVector vTargetLoc = 10;
  bool has_vtargetloc() const;
  private:
  bool _internal_has_vtargetloc() const;
  public:
  void clear_vtargetloc();
  const ::CMsgVector& vtargetloc() const;
  ::CMsgVector* release_vtargetloc();
  ::CMsgVector* mutable_vtargetloc();
  void set_allocated_vtargetloc(::CMsgVector* vtargetloc);
  private:
  const ::CMsgVector& _internal_vtargetloc() const;
  ::CMsgVector* _internal_mutable_vtargetloc();
  public:
  void unsafe_arena_set_allocated_vtargetloc(
      ::CMsgVector* vtargetloc);
  ::CMsgVector* unsafe_arena_release_vtargetloc();

  // optional int32 hTarget = 2;
  bool has_htarget() const;
  private:
  bool _internal_has_htarget() const;
  public:
  void clear_htarget();
  ::PROTOBUF_NAMESPACE_ID::int32 htarget() const;
  void set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_htarget() const;
  void _internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 moveSpeed = 3;
  bool has_movespeed() const;
  private:
  bool _internal_has_movespeed() const;
  public:
  void clear_movespeed();
  ::PROTOBUF_NAMESPACE_ID::int32 movespeed() const;
  void set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_movespeed() const;
  void _internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 particleSystemHandle = 4;
  bool has_particlesystemhandle() const;
  private:
  bool _internal_has_particlesystemhandle() const;
  public:
  void clear_particlesystemhandle();
  ::PROTOBUF_NAMESPACE_ID::int64 particlesystemhandle() const;
  void set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_particlesystemhandle() const;
  void _internal_set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional bool dodgeable = 5;
  bool has_dodgeable() const;
  private:
  bool _internal_has_dodgeable() const;
  public:
  void clear_dodgeable();
  bool dodgeable() const;
  void set_dodgeable(bool value);
  private:
  bool _internal_dodgeable() const;
  void _internal_set_dodgeable(bool value);
  public:

  // optional bool isAttack = 6;
  bool has_isattack() const;
  private:
  bool _internal_has_isattack() const;
  public:
  void clear_isattack();
  bool isattack() const;
  void set_isattack(bool value);
  private:
  bool _internal_isattack() const;
  void _internal_set_isattack(bool value);
  public:

  // optional float expireTime = 9;
  bool has_expiretime() const;
  private:
  bool _internal_has_expiretime() const;
  public:
  void clear_expiretime();
  float expiretime() const;
  void set_expiretime(float value);
  private:
  float _internal_expiretime() const;
  void _internal_set_expiretime(float value);
  public:

  // optional fixed32 colorgemcolor = 11;
  bool has_colorgemcolor() const;
  private:
  bool _internal_has_colorgemcolor() const;
  public:
  void clear_colorgemcolor();
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor() const;
  void set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_colorgemcolor() const;
  void _internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 launch_tick = 12;
  bool has_launch_tick() const;
  private:
  bool _internal_has_launch_tick() const;
  public:
  void clear_launch_tick();
  ::PROTOBUF_NAMESPACE_ID::int32 launch_tick() const;
  void set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_launch_tick() const;
  void _internal_set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 handle = 13;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 hSource = 14;
  bool has_hsource() const;
  private:
  bool _internal_has_hsource() const;
  public:
  void clear_hsource();
  ::PROTOBUF_NAMESPACE_ID::int32 hsource() const;
  void set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hsource() const;
  void _internal_set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 sourceAttachment = 15;
  bool has_sourceattachment() const;
  private:
  bool _internal_has_sourceattachment() const;
  public:
  void clear_sourceattachment();
  ::PROTOBUF_NAMESPACE_ID::int32 sourceattachment() const;
  void set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sourceattachment() const;
  void _internal_set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_ProjectileLoc)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* vsourceloc_;
  ::CMsgVector* vtargetloc_;
  ::PROTOBUF_NAMESPACE_ID::int32 htarget_;
  ::PROTOBUF_NAMESPACE_ID::int32 movespeed_;
  ::PROTOBUF_NAMESPACE_ID::int64 particlesystemhandle_;
  bool dodgeable_;
  bool isattack_;
  float expiretime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 colorgemcolor_;
  ::PROTOBUF_NAMESPACE_ID::int32 launch_tick_;
  ::PROTOBUF_NAMESPACE_ID::int32 handle_;
  ::PROTOBUF_NAMESPACE_ID::int32 hsource_;
  ::PROTOBUF_NAMESPACE_ID::int32 sourceattachment_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_DestroyProjectile PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_DestroyProjectile) */ {
 public:
  inline CDOTAUserMsg_TE_DestroyProjectile() : CDOTAUserMsg_TE_DestroyProjectile(nullptr) {}
  virtual ~CDOTAUserMsg_TE_DestroyProjectile();
  explicit constexpr CDOTAUserMsg_TE_DestroyProjectile(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_DestroyProjectile(const CDOTAUserMsg_TE_DestroyProjectile& from);
  CDOTAUserMsg_TE_DestroyProjectile(CDOTAUserMsg_TE_DestroyProjectile&& from) noexcept
    : CDOTAUserMsg_TE_DestroyProjectile() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_DestroyProjectile& operator=(const CDOTAUserMsg_TE_DestroyProjectile& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_DestroyProjectile& operator=(CDOTAUserMsg_TE_DestroyProjectile&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_DestroyProjectile& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_DestroyProjectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_DestroyProjectile*>(
               &_CDOTAUserMsg_TE_DestroyProjectile_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    83;

  friend void swap(CDOTAUserMsg_TE_DestroyProjectile& a, CDOTAUserMsg_TE_DestroyProjectile& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_DestroyProjectile* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_DestroyProjectile* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_DestroyProjectile* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_DestroyProjectile>(nullptr);
  }

  CDOTAUserMsg_TE_DestroyProjectile* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_DestroyProjectile>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_DestroyProjectile& from);
  void MergeFrom(const CDOTAUserMsg_TE_DestroyProjectile& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_DestroyProjectile* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_DestroyProjectile";
  }
  protected:
  explicit CDOTAUserMsg_TE_DestroyProjectile(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHandleFieldNumber = 1,
  };
  // optional int32 handle = 1;
  bool has_handle() const;
  private:
  bool _internal_has_handle() const;
  public:
  void clear_handle();
  ::PROTOBUF_NAMESPACE_ID::int32 handle() const;
  void set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_handle() const;
  void _internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_DestroyProjectile)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 handle_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_DotaBloodImpact PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_DotaBloodImpact) */ {
 public:
  inline CDOTAUserMsg_TE_DotaBloodImpact() : CDOTAUserMsg_TE_DotaBloodImpact(nullptr) {}
  virtual ~CDOTAUserMsg_TE_DotaBloodImpact();
  explicit constexpr CDOTAUserMsg_TE_DotaBloodImpact(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_DotaBloodImpact(const CDOTAUserMsg_TE_DotaBloodImpact& from);
  CDOTAUserMsg_TE_DotaBloodImpact(CDOTAUserMsg_TE_DotaBloodImpact&& from) noexcept
    : CDOTAUserMsg_TE_DotaBloodImpact() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_DotaBloodImpact& operator=(const CDOTAUserMsg_TE_DotaBloodImpact& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_DotaBloodImpact& operator=(CDOTAUserMsg_TE_DotaBloodImpact&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_DotaBloodImpact& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_DotaBloodImpact* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_DotaBloodImpact*>(
               &_CDOTAUserMsg_TE_DotaBloodImpact_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  friend void swap(CDOTAUserMsg_TE_DotaBloodImpact& a, CDOTAUserMsg_TE_DotaBloodImpact& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_DotaBloodImpact* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_DotaBloodImpact* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_DotaBloodImpact* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_DotaBloodImpact>(nullptr);
  }

  CDOTAUserMsg_TE_DotaBloodImpact* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_DotaBloodImpact>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from);
  void MergeFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_DotaBloodImpact* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_DotaBloodImpact";
  }
  protected:
  explicit CDOTAUserMsg_TE_DotaBloodImpact(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityFieldNumber = 1,
    kScaleFieldNumber = 2,
    kXnormalFieldNumber = 3,
    kYnormalFieldNumber = 4,
  };
  // optional int32 entity = 1;
  bool has_entity() const;
  private:
  bool _internal_has_entity() const;
  public:
  void clear_entity();
  ::PROTOBUF_NAMESPACE_ID::int32 entity() const;
  void set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity() const;
  void _internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float scale = 2;
  bool has_scale() const;
  private:
  bool _internal_has_scale() const;
  public:
  void clear_scale();
  float scale() const;
  void set_scale(float value);
  private:
  float _internal_scale() const;
  void _internal_set_scale(float value);
  public:

  // optional float xnormal = 3;
  bool has_xnormal() const;
  private:
  bool _internal_has_xnormal() const;
  public:
  void clear_xnormal();
  float xnormal() const;
  void set_xnormal(float value);
  private:
  float _internal_xnormal() const;
  void _internal_set_xnormal(float value);
  public:

  // optional float ynormal = 4;
  bool has_ynormal() const;
  private:
  bool _internal_has_ynormal() const;
  public:
  void clear_ynormal();
  float ynormal() const;
  void set_ynormal(float value);
  private:
  float _internal_ynormal() const;
  void _internal_set_ynormal(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_DotaBloodImpact)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_;
  float scale_;
  float xnormal_;
  float ynormal_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AbilityPing PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AbilityPing) */ {
 public:
  inline CDOTAUserMsg_AbilityPing() : CDOTAUserMsg_AbilityPing(nullptr) {}
  virtual ~CDOTAUserMsg_AbilityPing();
  explicit constexpr CDOTAUserMsg_AbilityPing(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AbilityPing(const CDOTAUserMsg_AbilityPing& from);
  CDOTAUserMsg_AbilityPing(CDOTAUserMsg_AbilityPing&& from) noexcept
    : CDOTAUserMsg_AbilityPing() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AbilityPing& operator=(const CDOTAUserMsg_AbilityPing& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AbilityPing& operator=(CDOTAUserMsg_AbilityPing&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AbilityPing& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AbilityPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AbilityPing*>(
               &_CDOTAUserMsg_AbilityPing_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    85;

  friend void swap(CDOTAUserMsg_AbilityPing& a, CDOTAUserMsg_AbilityPing& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AbilityPing* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AbilityPing* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AbilityPing* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilityPing>(nullptr);
  }

  CDOTAUserMsg_AbilityPing* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilityPing>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AbilityPing& from);
  void MergeFrom(const CDOTAUserMsg_AbilityPing& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AbilityPing* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AbilityPing";
  }
  protected:
  explicit CDOTAUserMsg_AbilityPing(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kAbilityIdFieldNumber = 2,
    kCooldownSecondsFieldNumber = 4,
    kLevelFieldNumber = 5,
    kManaNeededFieldNumber = 7,
    kEntityIdFieldNumber = 8,
    kPrimaryChargesFieldNumber = 9,
    kPassiveFieldNumber = 6,
    kCtrlHeldFieldNumber = 12,
    kSecondaryChargesFieldNumber = 10,
    kCasterIdFieldNumber = 11,
    kReclaimTimeFieldNumber = 13,
    kTypeFieldNumber = 3,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 cooldown_seconds = 4;
  bool has_cooldown_seconds() const;
  private:
  bool _internal_has_cooldown_seconds() const;
  public:
  void clear_cooldown_seconds();
  ::PROTOBUF_NAMESPACE_ID::uint32 cooldown_seconds() const;
  void set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_cooldown_seconds() const;
  void _internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 5;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 mana_needed = 7;
  bool has_mana_needed() const;
  private:
  bool _internal_has_mana_needed() const;
  public:
  void clear_mana_needed();
  ::PROTOBUF_NAMESPACE_ID::uint32 mana_needed() const;
  void set_mana_needed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mana_needed() const;
  void _internal_set_mana_needed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 entity_id = 8;
  bool has_entity_id() const;
  private:
  bool _internal_has_entity_id() const;
  public:
  void clear_entity_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id() const;
  void set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_entity_id() const;
  void _internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 primary_charges = 9;
  bool has_primary_charges() const;
  private:
  bool _internal_has_primary_charges() const;
  public:
  void clear_primary_charges();
  ::PROTOBUF_NAMESPACE_ID::int32 primary_charges() const;
  void set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_primary_charges() const;
  void _internal_set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool passive = 6;
  bool has_passive() const;
  private:
  bool _internal_has_passive() const;
  public:
  void clear_passive();
  bool passive() const;
  void set_passive(bool value);
  private:
  bool _internal_passive() const;
  void _internal_set_passive(bool value);
  public:

  // optional bool ctrl_held = 12;
  bool has_ctrl_held() const;
  private:
  bool _internal_has_ctrl_held() const;
  public:
  void clear_ctrl_held();
  bool ctrl_held() const;
  void set_ctrl_held(bool value);
  private:
  bool _internal_ctrl_held() const;
  void _internal_set_ctrl_held(bool value);
  public:

  // optional int32 secondary_charges = 10;
  bool has_secondary_charges() const;
  private:
  bool _internal_has_secondary_charges() const;
  public:
  void clear_secondary_charges();
  ::PROTOBUF_NAMESPACE_ID::int32 secondary_charges() const;
  void set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_secondary_charges() const;
  void _internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 caster_id = 11;
  bool has_caster_id() const;
  private:
  bool _internal_has_caster_id() const;
  public:
  void clear_caster_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_id() const;
  void set_caster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_caster_id() const;
  void _internal_set_caster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float reclaim_time = 13;
  bool has_reclaim_time() const;
  private:
  bool _internal_has_reclaim_time() const;
  public:
  void clear_reclaim_time();
  float reclaim_time() const;
  void set_reclaim_time(float value);
  private:
  float _internal_reclaim_time() const;
  void _internal_set_reclaim_time(float value);
  public:

  // optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::DOTA_ABILITY_PING_TYPE type() const;
  void set_type(::DOTA_ABILITY_PING_TYPE value);
  private:
  ::DOTA_ABILITY_PING_TYPE _internal_type() const;
  void _internal_set_type(::DOTA_ABILITY_PING_TYPE value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AbilityPing)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cooldown_seconds_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mana_needed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 entity_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 primary_charges_;
  bool passive_;
  bool ctrl_held_;
  ::PROTOBUF_NAMESPACE_ID::int32 secondary_charges_;
  ::PROTOBUF_NAMESPACE_ID::uint32 caster_id_;
  float reclaim_time_;
  int type_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_UnitAnimation PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_UnitAnimation) */ {
 public:
  inline CDOTAUserMsg_TE_UnitAnimation() : CDOTAUserMsg_TE_UnitAnimation(nullptr) {}
  virtual ~CDOTAUserMsg_TE_UnitAnimation();
  explicit constexpr CDOTAUserMsg_TE_UnitAnimation(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_UnitAnimation(const CDOTAUserMsg_TE_UnitAnimation& from);
  CDOTAUserMsg_TE_UnitAnimation(CDOTAUserMsg_TE_UnitAnimation&& from) noexcept
    : CDOTAUserMsg_TE_UnitAnimation() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_UnitAnimation& operator=(const CDOTAUserMsg_TE_UnitAnimation& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_UnitAnimation& operator=(CDOTAUserMsg_TE_UnitAnimation&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_UnitAnimation& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_UnitAnimation* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_UnitAnimation*>(
               &_CDOTAUserMsg_TE_UnitAnimation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  friend void swap(CDOTAUserMsg_TE_UnitAnimation& a, CDOTAUserMsg_TE_UnitAnimation& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_UnitAnimation* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_UnitAnimation* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_UnitAnimation* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_UnitAnimation>(nullptr);
  }

  CDOTAUserMsg_TE_UnitAnimation* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_UnitAnimation>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_UnitAnimation& from);
  void MergeFrom(const CDOTAUserMsg_TE_UnitAnimation& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_UnitAnimation* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_UnitAnimation";
  }
  protected:
  explicit CDOTAUserMsg_TE_UnitAnimation(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityFieldNumber = 1,
    kSequenceVariantFieldNumber = 2,
    kPlaybackrateFieldNumber = 3,
    kCastpointFieldNumber = 4,
    kTypeFieldNumber = 5,
    kActivityFieldNumber = 6,
    kLagCompensationTimeFieldNumber = 7,
  };
  // optional int32 entity = 1;
  bool has_entity() const;
  private:
  bool _internal_has_entity() const;
  public:
  void clear_entity();
  ::PROTOBUF_NAMESPACE_ID::int32 entity() const;
  void set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity() const;
  void _internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 sequenceVariant = 2;
  bool has_sequencevariant() const;
  private:
  bool _internal_has_sequencevariant() const;
  public:
  void clear_sequencevariant();
  ::PROTOBUF_NAMESPACE_ID::int32 sequencevariant() const;
  void set_sequencevariant(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sequencevariant() const;
  void _internal_set_sequencevariant(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float playbackrate = 3;
  bool has_playbackrate() const;
  private:
  bool _internal_has_playbackrate() const;
  public:
  void clear_playbackrate();
  float playbackrate() const;
  void set_playbackrate(float value);
  private:
  float _internal_playbackrate() const;
  void _internal_set_playbackrate(float value);
  public:

  // optional float castpoint = 4;
  bool has_castpoint() const;
  private:
  bool _internal_has_castpoint() const;
  public:
  void clear_castpoint();
  float castpoint() const;
  void set_castpoint(float value);
  private:
  float _internal_castpoint() const;
  void _internal_set_castpoint(float value);
  public:

  // optional int32 type = 5;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 activity = 6;
  bool has_activity() const;
  private:
  bool _internal_has_activity() const;
  public:
  void clear_activity();
  ::PROTOBUF_NAMESPACE_ID::int32 activity() const;
  void set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_activity() const;
  void _internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float lag_compensation_time = 7;
  bool has_lag_compensation_time() const;
  private:
  bool _internal_has_lag_compensation_time() const;
  public:
  void clear_lag_compensation_time();
  float lag_compensation_time() const;
  void set_lag_compensation_time(float value);
  private:
  float _internal_lag_compensation_time() const;
  void _internal_set_lag_compensation_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_UnitAnimation)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_;
  ::PROTOBUF_NAMESPACE_ID::int32 sequencevariant_;
  float playbackrate_;
  float castpoint_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 activity_;
  float lag_compensation_time_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_UnitAnimationEnd PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TE_UnitAnimationEnd) */ {
 public:
  inline CDOTAUserMsg_TE_UnitAnimationEnd() : CDOTAUserMsg_TE_UnitAnimationEnd(nullptr) {}
  virtual ~CDOTAUserMsg_TE_UnitAnimationEnd();
  explicit constexpr CDOTAUserMsg_TE_UnitAnimationEnd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TE_UnitAnimationEnd(const CDOTAUserMsg_TE_UnitAnimationEnd& from);
  CDOTAUserMsg_TE_UnitAnimationEnd(CDOTAUserMsg_TE_UnitAnimationEnd&& from) noexcept
    : CDOTAUserMsg_TE_UnitAnimationEnd() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TE_UnitAnimationEnd& operator=(const CDOTAUserMsg_TE_UnitAnimationEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TE_UnitAnimationEnd& operator=(CDOTAUserMsg_TE_UnitAnimationEnd&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TE_UnitAnimationEnd& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TE_UnitAnimationEnd* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_UnitAnimationEnd*>(
               &_CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    87;

  friend void swap(CDOTAUserMsg_TE_UnitAnimationEnd& a, CDOTAUserMsg_TE_UnitAnimationEnd& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TE_UnitAnimationEnd* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TE_UnitAnimationEnd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_UnitAnimationEnd* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_UnitAnimationEnd>(nullptr);
  }

  CDOTAUserMsg_TE_UnitAnimationEnd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TE_UnitAnimationEnd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from);
  void MergeFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TE_UnitAnimationEnd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TE_UnitAnimationEnd";
  }
  protected:
  explicit CDOTAUserMsg_TE_UnitAnimationEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityFieldNumber = 1,
    kSnapFieldNumber = 2,
  };
  // optional int32 entity = 1;
  bool has_entity() const;
  private:
  bool _internal_has_entity() const;
  public:
  void clear_entity();
  ::PROTOBUF_NAMESPACE_ID::int32 entity() const;
  void set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_entity() const;
  void _internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool snap = 2;
  bool has_snap() const;
  private:
  bool _internal_has_snap() const;
  public:
  void clear_snap();
  bool snap() const;
  void set_snap(bool value);
  private:
  bool _internal_snap() const;
  void _internal_set_snap(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TE_UnitAnimationEnd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 entity_;
  bool snap_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ShowGenericPopup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ShowGenericPopup) */ {
 public:
  inline CDOTAUserMsg_ShowGenericPopup() : CDOTAUserMsg_ShowGenericPopup(nullptr) {}
  virtual ~CDOTAUserMsg_ShowGenericPopup();
  explicit constexpr CDOTAUserMsg_ShowGenericPopup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ShowGenericPopup(const CDOTAUserMsg_ShowGenericPopup& from);
  CDOTAUserMsg_ShowGenericPopup(CDOTAUserMsg_ShowGenericPopup&& from) noexcept
    : CDOTAUserMsg_ShowGenericPopup() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ShowGenericPopup& operator=(const CDOTAUserMsg_ShowGenericPopup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ShowGenericPopup& operator=(CDOTAUserMsg_ShowGenericPopup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ShowGenericPopup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ShowGenericPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ShowGenericPopup*>(
               &_CDOTAUserMsg_ShowGenericPopup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  friend void swap(CDOTAUserMsg_ShowGenericPopup& a, CDOTAUserMsg_ShowGenericPopup& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ShowGenericPopup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ShowGenericPopup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ShowGenericPopup* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShowGenericPopup>(nullptr);
  }

  CDOTAUserMsg_ShowGenericPopup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShowGenericPopup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ShowGenericPopup& from);
  void MergeFrom(const CDOTAUserMsg_ShowGenericPopup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ShowGenericPopup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ShowGenericPopup";
  }
  protected:
  explicit CDOTAUserMsg_ShowGenericPopup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kBodyFieldNumber = 2,
    kParam1FieldNumber = 3,
    kParam2FieldNumber = 4,
    kTintScreenFieldNumber = 5,
    kShowNoOtherDialogsFieldNumber = 6,
  };
  // required string header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const std::string& header() const;
  void set_header(const std::string& value);
  void set_header(std::string&& value);
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  std::string* mutable_header();
  std::string* release_header();
  void set_allocated_header(std::string* header);
  private:
  const std::string& _internal_header() const;
  void _internal_set_header(const std::string& value);
  std::string* _internal_mutable_header();
  public:

  // required string body = 2;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const std::string& body() const;
  void set_body(const std::string& value);
  void set_body(std::string&& value);
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  std::string* mutable_body();
  std::string* release_body();
  void set_allocated_body(std::string* body);
  private:
  const std::string& _internal_body() const;
  void _internal_set_body(const std::string& value);
  std::string* _internal_mutable_body();
  public:

  // optional string param1 = 3;
  bool has_param1() const;
  private:
  bool _internal_has_param1() const;
  public:
  void clear_param1();
  const std::string& param1() const;
  void set_param1(const std::string& value);
  void set_param1(std::string&& value);
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  std::string* mutable_param1();
  std::string* release_param1();
  void set_allocated_param1(std::string* param1);
  private:
  const std::string& _internal_param1() const;
  void _internal_set_param1(const std::string& value);
  std::string* _internal_mutable_param1();
  public:

  // optional string param2 = 4;
  bool has_param2() const;
  private:
  bool _internal_has_param2() const;
  public:
  void clear_param2();
  const std::string& param2() const;
  void set_param2(const std::string& value);
  void set_param2(std::string&& value);
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  std::string* mutable_param2();
  std::string* release_param2();
  void set_allocated_param2(std::string* param2);
  private:
  const std::string& _internal_param2() const;
  void _internal_set_param2(const std::string& value);
  std::string* _internal_mutable_param2();
  public:

  // optional bool tint_screen = 5;
  bool has_tint_screen() const;
  private:
  bool _internal_has_tint_screen() const;
  public:
  void clear_tint_screen();
  bool tint_screen() const;
  void set_tint_screen(bool value);
  private:
  bool _internal_tint_screen() const;
  void _internal_set_tint_screen(bool value);
  public:

  // optional bool show_no_other_dialogs = 6;
  bool has_show_no_other_dialogs() const;
  private:
  bool _internal_has_show_no_other_dialogs() const;
  public:
  void clear_show_no_other_dialogs();
  bool show_no_other_dialogs() const;
  void set_show_no_other_dialogs(bool value);
  private:
  bool _internal_show_no_other_dialogs() const;
  void _internal_set_show_no_other_dialogs(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShowGenericPopup)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr header_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr body_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr param1_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr param2_;
  bool tint_screen_;
  bool show_no_other_dialogs_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteStart PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_VoteStart) */ {
 public:
  inline CDOTAUserMsg_VoteStart() : CDOTAUserMsg_VoteStart(nullptr) {}
  virtual ~CDOTAUserMsg_VoteStart();
  explicit constexpr CDOTAUserMsg_VoteStart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_VoteStart(const CDOTAUserMsg_VoteStart& from);
  CDOTAUserMsg_VoteStart(CDOTAUserMsg_VoteStart&& from) noexcept
    : CDOTAUserMsg_VoteStart() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_VoteStart& operator=(const CDOTAUserMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_VoteStart& operator=(CDOTAUserMsg_VoteStart&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_VoteStart& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_VoteStart* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteStart*>(
               &_CDOTAUserMsg_VoteStart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    89;

  friend void swap(CDOTAUserMsg_VoteStart& a, CDOTAUserMsg_VoteStart& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_VoteStart* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_VoteStart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteStart* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteStart>(nullptr);
  }

  CDOTAUserMsg_VoteStart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteStart>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_VoteStart& from);
  void MergeFrom(const CDOTAUserMsg_VoteStart& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_VoteStart* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_VoteStart";
  }
  protected:
  explicit CDOTAUserMsg_VoteStart(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChoicesFieldNumber = 4,
    kTitleFieldNumber = 1,
    kDurationFieldNumber = 2,
    kChoiceCountFieldNumber = 3,
  };
  // repeated string choices = 4;
  int choices_size() const;
  private:
  int _internal_choices_size() const;
  public:
  void clear_choices();
  const std::string& choices(int index) const;
  std::string* mutable_choices(int index);
  void set_choices(int index, const std::string& value);
  void set_choices(int index, std::string&& value);
  void set_choices(int index, const char* value);
  void set_choices(int index, const char* value, size_t size);
  std::string* add_choices();
  void add_choices(const std::string& value);
  void add_choices(std::string&& value);
  void add_choices(const char* value);
  void add_choices(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& choices() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_choices();
  private:
  const std::string& _internal_choices(int index) const;
  std::string* _internal_add_choices();
  public:

  // optional string title = 1;
  bool has_title() const;
  private:
  bool _internal_has_title() const;
  public:
  void clear_title();
  const std::string& title() const;
  void set_title(const std::string& value);
  void set_title(std::string&& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  std::string* mutable_title();
  std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // optional float duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // optional int32 choice_count = 3;
  bool has_choice_count() const;
  private:
  bool _internal_has_choice_count() const;
  public:
  void clear_choice_count();
  ::PROTOBUF_NAMESPACE_ID::int32 choice_count() const;
  void set_choice_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_choice_count() const;
  void _internal_set_choice_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteStart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> choices_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
  float duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 choice_count_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteUpdate PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_VoteUpdate) */ {
 public:
  inline CDOTAUserMsg_VoteUpdate() : CDOTAUserMsg_VoteUpdate(nullptr) {}
  virtual ~CDOTAUserMsg_VoteUpdate();
  explicit constexpr CDOTAUserMsg_VoteUpdate(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_VoteUpdate(const CDOTAUserMsg_VoteUpdate& from);
  CDOTAUserMsg_VoteUpdate(CDOTAUserMsg_VoteUpdate&& from) noexcept
    : CDOTAUserMsg_VoteUpdate() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_VoteUpdate& operator=(const CDOTAUserMsg_VoteUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_VoteUpdate& operator=(CDOTAUserMsg_VoteUpdate&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_VoteUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_VoteUpdate* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteUpdate*>(
               &_CDOTAUserMsg_VoteUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  friend void swap(CDOTAUserMsg_VoteUpdate& a, CDOTAUserMsg_VoteUpdate& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_VoteUpdate* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_VoteUpdate* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteUpdate* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteUpdate>(nullptr);
  }

  CDOTAUserMsg_VoteUpdate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteUpdate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_VoteUpdate& from);
  void MergeFrom(const CDOTAUserMsg_VoteUpdate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_VoteUpdate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_VoteUpdate";
  }
  protected:
  explicit CDOTAUserMsg_VoteUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChoiceCountsFieldNumber = 1,
  };
  // repeated int32 choice_counts = 1;
  int choice_counts_size() const;
  private:
  int _internal_choice_counts_size() const;
  public:
  void clear_choice_counts();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_choice_counts(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_choice_counts() const;
  void _internal_add_choice_counts(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_choice_counts();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 choice_counts(int index) const;
  void set_choice_counts(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_choice_counts(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      choice_counts() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_choice_counts();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteUpdate)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > choice_counts_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteEnd PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_VoteEnd) */ {
 public:
  inline CDOTAUserMsg_VoteEnd() : CDOTAUserMsg_VoteEnd(nullptr) {}
  virtual ~CDOTAUserMsg_VoteEnd();
  explicit constexpr CDOTAUserMsg_VoteEnd(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_VoteEnd(const CDOTAUserMsg_VoteEnd& from);
  CDOTAUserMsg_VoteEnd(CDOTAUserMsg_VoteEnd&& from) noexcept
    : CDOTAUserMsg_VoteEnd() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_VoteEnd& operator=(const CDOTAUserMsg_VoteEnd& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_VoteEnd& operator=(CDOTAUserMsg_VoteEnd&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_VoteEnd& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_VoteEnd* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteEnd*>(
               &_CDOTAUserMsg_VoteEnd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  friend void swap(CDOTAUserMsg_VoteEnd& a, CDOTAUserMsg_VoteEnd& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_VoteEnd* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_VoteEnd* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteEnd* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteEnd>(nullptr);
  }

  CDOTAUserMsg_VoteEnd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_VoteEnd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_VoteEnd& from);
  void MergeFrom(const CDOTAUserMsg_VoteEnd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_VoteEnd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_VoteEnd";
  }
  protected:
  explicit CDOTAUserMsg_VoteEnd(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSelectedChoiceFieldNumber = 1,
  };
  // optional int32 selected_choice = 1;
  bool has_selected_choice() const;
  private:
  bool _internal_has_selected_choice() const;
  public:
  void clear_selected_choice();
  ::PROTOBUF_NAMESPACE_ID::int32 selected_choice() const;
  void set_selected_choice(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_selected_choice() const;
  void _internal_set_selected_choice(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VoteEnd)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 selected_choice_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BoosterStatePlayer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_BoosterStatePlayer) */ {
 public:
  inline CDOTAUserMsg_BoosterStatePlayer() : CDOTAUserMsg_BoosterStatePlayer(nullptr) {}
  virtual ~CDOTAUserMsg_BoosterStatePlayer();
  explicit constexpr CDOTAUserMsg_BoosterStatePlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_BoosterStatePlayer(const CDOTAUserMsg_BoosterStatePlayer& from);
  CDOTAUserMsg_BoosterStatePlayer(CDOTAUserMsg_BoosterStatePlayer&& from) noexcept
    : CDOTAUserMsg_BoosterStatePlayer() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_BoosterStatePlayer& operator=(const CDOTAUserMsg_BoosterStatePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_BoosterStatePlayer& operator=(CDOTAUserMsg_BoosterStatePlayer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_BoosterStatePlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_BoosterStatePlayer* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BoosterStatePlayer*>(
               &_CDOTAUserMsg_BoosterStatePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  friend void swap(CDOTAUserMsg_BoosterStatePlayer& a, CDOTAUserMsg_BoosterStatePlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_BoosterStatePlayer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_BoosterStatePlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BoosterStatePlayer* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_BoosterStatePlayer>(nullptr);
  }

  CDOTAUserMsg_BoosterStatePlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_BoosterStatePlayer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_BoosterStatePlayer& from);
  void MergeFrom(const CDOTAUserMsg_BoosterStatePlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_BoosterStatePlayer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_BoosterStatePlayer";
  }
  protected:
  explicit CDOTAUserMsg_BoosterStatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kBonusFieldNumber = 2,
    kEventBonusFieldNumber = 3,
    kBonusItemIdFieldNumber = 4,
    kEventBonusItemIdFieldNumber = 5,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float bonus = 2;
  bool has_bonus() const;
  private:
  bool _internal_has_bonus() const;
  public:
  void clear_bonus();
  float bonus() const;
  void set_bonus(float value);
  private:
  float _internal_bonus() const;
  void _internal_set_bonus(float value);
  public:

  // optional float event_bonus = 3;
  bool has_event_bonus() const;
  private:
  bool _internal_has_event_bonus() const;
  public:
  void clear_event_bonus();
  float event_bonus() const;
  void set_event_bonus(float value);
  private:
  float _internal_event_bonus() const;
  void _internal_set_event_bonus(float value);
  public:

  // optional uint32 bonus_item_id = 4;
  bool has_bonus_item_id() const;
  private:
  bool _internal_has_bonus_item_id() const;
  public:
  void clear_bonus_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_item_id() const;
  void set_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bonus_item_id() const;
  void _internal_set_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 event_bonus_item_id = 5;
  bool has_event_bonus_item_id() const;
  private:
  bool _internal_has_event_bonus_item_id() const;
  public:
  void clear_event_bonus_item_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_bonus_item_id() const;
  void set_event_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_bonus_item_id() const;
  void _internal_set_event_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BoosterStatePlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  float bonus_;
  float event_bonus_;
  ::PROTOBUF_NAMESPACE_ID::uint32 bonus_item_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_bonus_item_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BoosterState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_BoosterState) */ {
 public:
  inline CDOTAUserMsg_BoosterState() : CDOTAUserMsg_BoosterState(nullptr) {}
  virtual ~CDOTAUserMsg_BoosterState();
  explicit constexpr CDOTAUserMsg_BoosterState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_BoosterState(const CDOTAUserMsg_BoosterState& from);
  CDOTAUserMsg_BoosterState(CDOTAUserMsg_BoosterState&& from) noexcept
    : CDOTAUserMsg_BoosterState() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_BoosterState& operator=(const CDOTAUserMsg_BoosterState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_BoosterState& operator=(CDOTAUserMsg_BoosterState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_BoosterState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_BoosterState* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BoosterState*>(
               &_CDOTAUserMsg_BoosterState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  friend void swap(CDOTAUserMsg_BoosterState& a, CDOTAUserMsg_BoosterState& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_BoosterState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_BoosterState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BoosterState* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_BoosterState>(nullptr);
  }

  CDOTAUserMsg_BoosterState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_BoosterState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_BoosterState& from);
  void MergeFrom(const CDOTAUserMsg_BoosterState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_BoosterState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_BoosterState";
  }
  protected:
  explicit CDOTAUserMsg_BoosterState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoostedPlayersFieldNumber = 1,
  };
  // repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
  int boosted_players_size() const;
  private:
  int _internal_boosted_players_size() const;
  public:
  void clear_boosted_players();
  ::CDOTAUserMsg_BoosterStatePlayer* mutable_boosted_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_BoosterStatePlayer >*
      mutable_boosted_players();
  private:
  const ::CDOTAUserMsg_BoosterStatePlayer& _internal_boosted_players(int index) const;
  ::CDOTAUserMsg_BoosterStatePlayer* _internal_add_boosted_players();
  public:
  const ::CDOTAUserMsg_BoosterStatePlayer& boosted_players(int index) const;
  ::CDOTAUserMsg_BoosterStatePlayer* add_boosted_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_BoosterStatePlayer >&
      boosted_players() const;

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BoosterState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_BoosterStatePlayer > boosted_players_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PlayerMMR PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PlayerMMR) */ {
 public:
  inline CDOTAUserMsg_PlayerMMR() : CDOTAUserMsg_PlayerMMR(nullptr) {}
  virtual ~CDOTAUserMsg_PlayerMMR();
  explicit constexpr CDOTAUserMsg_PlayerMMR(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PlayerMMR(const CDOTAUserMsg_PlayerMMR& from);
  CDOTAUserMsg_PlayerMMR(CDOTAUserMsg_PlayerMMR&& from) noexcept
    : CDOTAUserMsg_PlayerMMR() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PlayerMMR& operator=(const CDOTAUserMsg_PlayerMMR& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PlayerMMR& operator=(CDOTAUserMsg_PlayerMMR&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PlayerMMR& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PlayerMMR* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PlayerMMR*>(
               &_CDOTAUserMsg_PlayerMMR_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  friend void swap(CDOTAUserMsg_PlayerMMR& a, CDOTAUserMsg_PlayerMMR& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PlayerMMR* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PlayerMMR* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PlayerMMR* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PlayerMMR>(nullptr);
  }

  CDOTAUserMsg_PlayerMMR* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PlayerMMR>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PlayerMMR& from);
  void MergeFrom(const CDOTAUserMsg_PlayerMMR& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PlayerMMR* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PlayerMMR";
  }
  protected:
  explicit CDOTAUserMsg_PlayerMMR(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMmrFieldNumber = 1,
  };
  // repeated sint32 mmr = 1 [packed = true];
  int mmr_size() const;
  private:
  int _internal_mmr_size() const;
  public:
  void clear_mmr();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_mmr(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_mmr() const;
  void _internal_add_mmr(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_mmr();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 mmr(int index) const;
  void set_mmr(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_mmr(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      mmr() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_mmr();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PlayerMMR)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > mmr_;
  mutable std::atomic<int> _mmr_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AbilitySteal PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AbilitySteal) */ {
 public:
  inline CDOTAUserMsg_AbilitySteal() : CDOTAUserMsg_AbilitySteal(nullptr) {}
  virtual ~CDOTAUserMsg_AbilitySteal();
  explicit constexpr CDOTAUserMsg_AbilitySteal(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AbilitySteal(const CDOTAUserMsg_AbilitySteal& from);
  CDOTAUserMsg_AbilitySteal(CDOTAUserMsg_AbilitySteal&& from) noexcept
    : CDOTAUserMsg_AbilitySteal() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AbilitySteal& operator=(const CDOTAUserMsg_AbilitySteal& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AbilitySteal& operator=(CDOTAUserMsg_AbilitySteal&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AbilitySteal& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AbilitySteal* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AbilitySteal*>(
               &_CDOTAUserMsg_AbilitySteal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  friend void swap(CDOTAUserMsg_AbilitySteal& a, CDOTAUserMsg_AbilitySteal& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AbilitySteal* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AbilitySteal* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AbilitySteal* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilitySteal>(nullptr);
  }

  CDOTAUserMsg_AbilitySteal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilitySteal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AbilitySteal& from);
  void MergeFrom(const CDOTAUserMsg_AbilitySteal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AbilitySteal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AbilitySteal";
  }
  protected:
  explicit CDOTAUserMsg_AbilitySteal(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kAbilityIdFieldNumber = 2,
    kAbilityLevelFieldNumber = 3,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ability_level = 3;
  bool has_ability_level() const;
  private:
  bool _internal_has_ability_level() const;
  public:
  void clear_ability_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_level() const;
  void set_ability_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_level() const;
  void _internal_set_ability_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AbilitySteal)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_level_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroLookup PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsHeroLookup) */ {
 public:
  inline CDOTAUserMsg_StatsHeroLookup() : CDOTAUserMsg_StatsHeroLookup(nullptr) {}
  virtual ~CDOTAUserMsg_StatsHeroLookup();
  explicit constexpr CDOTAUserMsg_StatsHeroLookup(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsHeroLookup(const CDOTAUserMsg_StatsHeroLookup& from);
  CDOTAUserMsg_StatsHeroLookup(CDOTAUserMsg_StatsHeroLookup&& from) noexcept
    : CDOTAUserMsg_StatsHeroLookup() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsHeroLookup& operator=(const CDOTAUserMsg_StatsHeroLookup& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsHeroLookup& operator=(CDOTAUserMsg_StatsHeroLookup&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsHeroLookup& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsHeroLookup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroLookup*>(
               &_CDOTAUserMsg_StatsHeroLookup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  friend void swap(CDOTAUserMsg_StatsHeroLookup& a, CDOTAUserMsg_StatsHeroLookup& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsHeroLookup* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsHeroLookup* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroLookup* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroLookup>(nullptr);
  }

  CDOTAUserMsg_StatsHeroLookup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroLookup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsHeroLookup& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroLookup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsHeroLookup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsHeroLookup";
  }
  protected:
  explicit CDOTAUserMsg_StatsHeroLookup(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroNameFieldNumber = 3,
    kPersonaFieldNumber = 4,
    kPlayerIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
  };
  // optional string hero_name = 3;
  bool has_hero_name() const;
  private:
  bool _internal_has_hero_name() const;
  public:
  void clear_hero_name();
  const std::string& hero_name() const;
  void set_hero_name(const std::string& value);
  void set_hero_name(std::string&& value);
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  std::string* mutable_hero_name();
  std::string* release_hero_name();
  void set_allocated_hero_name(std::string* hero_name);
  private:
  const std::string& _internal_hero_name() const;
  void _internal_set_hero_name(const std::string& value);
  std::string* _internal_mutable_hero_name();
  public:

  // optional string persona = 4;
  bool has_persona() const;
  private:
  bool _internal_has_persona() const;
  public:
  void clear_persona();
  const std::string& persona() const;
  void set_persona(const std::string& value);
  void set_persona(std::string&& value);
  void set_persona(const char* value);
  void set_persona(const char* value, size_t size);
  std::string* mutable_persona();
  std::string* release_persona();
  void set_allocated_persona(std::string* persona);
  private:
  const std::string& _internal_persona() const;
  void _internal_set_persona(const std::string& value);
  std::string* _internal_mutable_persona();
  public:

  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  ::PROTOBUF_NAMESPACE_ID::int32 hero_id() const;
  void set_hero_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hero_id() const;
  void _internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroLookup)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hero_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr persona_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 hero_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroPositionInfo_PositionPair PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair) */ {
 public:
  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair() : CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(nullptr) {}
  virtual ~CDOTAUserMsg_StatsHeroPositionInfo_PositionPair();
  explicit constexpr CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);
  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair&& from) noexcept
    : CDOTAUserMsg_StatsHeroPositionInfo_PositionPair() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& operator=(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& operator=(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair*>(
               &_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    97;

  friend void swap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& a, CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroPositionInfo_PositionPair>(nullptr);
  }

  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroPositionInfo_PositionPair>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsHeroPositionInfo.PositionPair";
  }
  protected:
  explicit CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionCategoryFieldNumber = 1,
    kPositionCountFieldNumber = 2,
  };
  // optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
  bool has_position_category() const;
  private:
  bool _internal_has_position_category() const;
  public:
  void clear_position_category();
  ::DOTA_POSITION_CATEGORY position_category() const;
  void set_position_category(::DOTA_POSITION_CATEGORY value);
  private:
  ::DOTA_POSITION_CATEGORY _internal_position_category() const;
  void _internal_set_position_category(::DOTA_POSITION_CATEGORY value);
  public:

  // optional uint32 position_count = 2;
  bool has_position_count() const;
  private:
  bool _internal_has_position_count() const;
  public:
  void clear_position_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 position_count() const;
  void set_position_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position_count() const;
  void _internal_set_position_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int position_category_;
  ::PROTOBUF_NAMESPACE_ID::uint32 position_count_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroPositionInfo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsHeroPositionInfo) */ {
 public:
  inline CDOTAUserMsg_StatsHeroPositionInfo() : CDOTAUserMsg_StatsHeroPositionInfo(nullptr) {}
  virtual ~CDOTAUserMsg_StatsHeroPositionInfo();
  explicit constexpr CDOTAUserMsg_StatsHeroPositionInfo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsHeroPositionInfo(const CDOTAUserMsg_StatsHeroPositionInfo& from);
  CDOTAUserMsg_StatsHeroPositionInfo(CDOTAUserMsg_StatsHeroPositionInfo&& from) noexcept
    : CDOTAUserMsg_StatsHeroPositionInfo() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsHeroPositionInfo& operator=(const CDOTAUserMsg_StatsHeroPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsHeroPositionInfo& operator=(CDOTAUserMsg_StatsHeroPositionInfo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsHeroPositionInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsHeroPositionInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroPositionInfo*>(
               &_CDOTAUserMsg_StatsHeroPositionInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    98;

  friend void swap(CDOTAUserMsg_StatsHeroPositionInfo& a, CDOTAUserMsg_StatsHeroPositionInfo& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsHeroPositionInfo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsHeroPositionInfo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroPositionInfo* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroPositionInfo>(nullptr);
  }

  CDOTAUserMsg_StatsHeroPositionInfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroPositionInfo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsHeroPositionInfo";
  }
  protected:
  explicit CDOTAUserMsg_StatsHeroPositionInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsHeroPositionInfo_PositionPair PositionPair;

  // accessors -------------------------------------------------------

  enum : int {
    kPositionDetailsFieldNumber = 2,
    kAveragePositionFieldNumber = 1,
  };
  // repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
  int position_details_size() const;
  private:
  int _internal_position_details_size() const;
  public:
  void clear_position_details();
  ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* mutable_position_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >*
      mutable_position_details();
  private:
  const ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& _internal_position_details(int index) const;
  ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* _internal_add_position_details();
  public:
  const ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& position_details(int index) const;
  ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* add_position_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >&
      position_details() const;

  // optional float average_position = 1;
  bool has_average_position() const;
  private:
  bool _internal_has_average_position() const;
  public:
  void clear_average_position();
  float average_position() const;
  void set_average_position(float value);
  private:
  float _internal_average_position() const;
  void _internal_set_average_position(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroPositionInfo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair > position_details_;
  float average_position_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroMinuteDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsHeroMinuteDetails) */ {
 public:
  inline CDOTAUserMsg_StatsHeroMinuteDetails() : CDOTAUserMsg_StatsHeroMinuteDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsHeroMinuteDetails();
  explicit constexpr CDOTAUserMsg_StatsHeroMinuteDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsHeroMinuteDetails(const CDOTAUserMsg_StatsHeroMinuteDetails& from);
  CDOTAUserMsg_StatsHeroMinuteDetails(CDOTAUserMsg_StatsHeroMinuteDetails&& from) noexcept
    : CDOTAUserMsg_StatsHeroMinuteDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsHeroMinuteDetails& operator=(const CDOTAUserMsg_StatsHeroMinuteDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsHeroMinuteDetails& operator=(CDOTAUserMsg_StatsHeroMinuteDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsHeroMinuteDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsHeroMinuteDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroMinuteDetails*>(
               &_CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    99;

  friend void swap(CDOTAUserMsg_StatsHeroMinuteDetails& a, CDOTAUserMsg_StatsHeroMinuteDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsHeroMinuteDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsHeroMinuteDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroMinuteDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroMinuteDetails>(nullptr);
  }

  CDOTAUserMsg_StatsHeroMinuteDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsHeroMinuteDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsHeroMinuteDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsHeroMinuteDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsHeroMinuteDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kManaSpentFieldNumber = 13,
    kDamageAbsorbedFieldNumber = 14,
    kDamageDoneFieldNumber = 15,
    kPositionInfoFieldNumber = 5,
    kLastHitsFieldNumber = 1,
    kHeroKillsFieldNumber = 2,
    kHeroDamageFieldNumber = 3,
    kTowerDamageFieldNumber = 4,
    kTotalXpFieldNumber = 6,
    kNetWorthFieldNumber = 7,
    kHarvestedCreepGoldFieldNumber = 8,
    kClaimedFarmFieldNumber = 9,
    kWardsPlacedFieldNumber = 10,
    kRunesCollectedFieldNumber = 11,
    kTpsUsedFieldNumber = 12,
  };
  // repeated uint32 mana_spent = 13;
  int mana_spent_size() const;
  private:
  int _internal_mana_spent_size() const;
  public:
  void clear_mana_spent();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mana_spent(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_mana_spent() const;
  void _internal_add_mana_spent(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_mana_spent();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 mana_spent(int index) const;
  void set_mana_spent(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_mana_spent(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      mana_spent() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_mana_spent();

  // repeated uint32 damage_absorbed = 14;
  int damage_absorbed_size() const;
  private:
  int _internal_damage_absorbed_size() const;
  public:
  void clear_damage_absorbed();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_absorbed(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_damage_absorbed() const;
  void _internal_add_damage_absorbed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_damage_absorbed();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_absorbed(int index) const;
  void set_damage_absorbed(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_damage_absorbed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      damage_absorbed() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_damage_absorbed();

  // repeated uint32 damage_done = 15;
  int damage_done_size() const;
  private:
  int _internal_damage_done_size() const;
  public:
  void clear_damage_done();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_done(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_damage_done() const;
  void _internal_add_damage_done(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_damage_done();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_done(int index) const;
  void set_damage_done(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_damage_done(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      damage_done() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_damage_done();

  // optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
  bool has_position_info() const;
  private:
  bool _internal_has_position_info() const;
  public:
  void clear_position_info();
  const ::CDOTAUserMsg_StatsHeroPositionInfo& position_info() const;
  ::CDOTAUserMsg_StatsHeroPositionInfo* release_position_info();
  ::CDOTAUserMsg_StatsHeroPositionInfo* mutable_position_info();
  void set_allocated_position_info(::CDOTAUserMsg_StatsHeroPositionInfo* position_info);
  private:
  const ::CDOTAUserMsg_StatsHeroPositionInfo& _internal_position_info() const;
  ::CDOTAUserMsg_StatsHeroPositionInfo* _internal_mutable_position_info();
  public:
  void unsafe_arena_set_allocated_position_info(
      ::CDOTAUserMsg_StatsHeroPositionInfo* position_info);
  ::CDOTAUserMsg_StatsHeroPositionInfo* unsafe_arena_release_position_info();

  // optional uint32 last_hits = 1;
  bool has_last_hits() const;
  private:
  bool _internal_has_last_hits() const;
  public:
  void clear_last_hits();
  ::PROTOBUF_NAMESPACE_ID::uint32 last_hits() const;
  void set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_hits() const;
  void _internal_set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_kills = 2;
  bool has_hero_kills() const;
  private:
  bool _internal_has_hero_kills() const;
  public:
  void clear_hero_kills();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_kills() const;
  void set_hero_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_kills() const;
  void _internal_set_hero_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_damage = 3;
  bool has_hero_damage() const;
  private:
  bool _internal_has_hero_damage() const;
  public:
  void clear_hero_damage();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_damage() const;
  void set_hero_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_damage() const;
  void _internal_set_hero_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tower_damage = 4;
  bool has_tower_damage() const;
  private:
  bool _internal_has_tower_damage() const;
  public:
  void clear_tower_damage();
  ::PROTOBUF_NAMESPACE_ID::uint32 tower_damage() const;
  void set_tower_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tower_damage() const;
  void _internal_set_tower_damage(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 total_xp = 6;
  bool has_total_xp() const;
  private:
  bool _internal_has_total_xp() const;
  public:
  void clear_total_xp();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_xp() const;
  void set_total_xp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_xp() const;
  void _internal_set_total_xp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 net_worth = 7;
  bool has_net_worth() const;
  private:
  bool _internal_has_net_worth() const;
  public:
  void clear_net_worth();
  ::PROTOBUF_NAMESPACE_ID::uint32 net_worth() const;
  void set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_net_worth() const;
  void _internal_set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 harvested_creep_gold = 8;
  bool has_harvested_creep_gold() const;
  private:
  bool _internal_has_harvested_creep_gold() const;
  public:
  void clear_harvested_creep_gold();
  ::PROTOBUF_NAMESPACE_ID::uint32 harvested_creep_gold() const;
  void set_harvested_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_harvested_creep_gold() const;
  void _internal_set_harvested_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 claimed_farm = 9;
  bool has_claimed_farm() const;
  private:
  bool _internal_has_claimed_farm() const;
  public:
  void clear_claimed_farm();
  ::PROTOBUF_NAMESPACE_ID::uint32 claimed_farm() const;
  void set_claimed_farm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_claimed_farm() const;
  void _internal_set_claimed_farm(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 wards_placed = 10;
  bool has_wards_placed() const;
  private:
  bool _internal_has_wards_placed() const;
  public:
  void clear_wards_placed();
  ::PROTOBUF_NAMESPACE_ID::uint32 wards_placed() const;
  void set_wards_placed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_wards_placed() const;
  void _internal_set_wards_placed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 runes_collected = 11;
  bool has_runes_collected() const;
  private:
  bool _internal_has_runes_collected() const;
  public:
  void clear_runes_collected();
  ::PROTOBUF_NAMESPACE_ID::uint32 runes_collected() const;
  void set_runes_collected(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_runes_collected() const;
  void _internal_set_runes_collected(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tps_used = 12;
  bool has_tps_used() const;
  private:
  bool _internal_has_tps_used() const;
  public:
  void clear_tps_used();
  ::PROTOBUF_NAMESPACE_ID::uint32 tps_used() const;
  void set_tps_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tps_used() const;
  void _internal_set_tps_used(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsHeroMinuteDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > mana_spent_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > damage_absorbed_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > damage_done_;
  ::CDOTAUserMsg_StatsHeroPositionInfo* position_info_;
  ::PROTOBUF_NAMESPACE_ID::uint32 last_hits_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_kills_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_damage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tower_damage_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_xp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 net_worth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 harvested_creep_gold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 claimed_farm_;
  ::PROTOBUF_NAMESPACE_ID::uint32 wards_placed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 runes_collected_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tps_used_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance) */ {
 public:
  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance() : CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(nullptr) {}
  virtual ~CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance();
  explicit constexpr CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);
  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance&& from) noexcept
    : CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& operator=(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& operator=(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance*>(
               &_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    100;

  friend void swap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& a, CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance>(nullptr);
  }

  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);
  void MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance";
  }
  protected:
  explicit CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationCategoryFieldNumber = 1,
    kStatTypeFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // optional uint32 location_category = 1;
  bool has_location_category() const;
  private:
  bool _internal_has_location_category() const;
  public:
  void clear_location_category();
  ::PROTOBUF_NAMESPACE_ID::uint32 location_category() const;
  void set_location_category(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_location_category() const;
  void _internal_set_location_category(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 stat_type = 2;
  bool has_stat_type() const;
  private:
  bool _internal_has_stat_type() const;
  public:
  void clear_stat_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 stat_type() const;
  void set_stat_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stat_type() const;
  void _internal_set_stat_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value = 3;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 location_category_;
  ::PROTOBUF_NAMESPACE_ID::uint32 stat_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsTeamMinuteDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsTeamMinuteDetails) */ {
 public:
  inline CDOTAUserMsg_StatsTeamMinuteDetails() : CDOTAUserMsg_StatsTeamMinuteDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsTeamMinuteDetails();
  explicit constexpr CDOTAUserMsg_StatsTeamMinuteDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsTeamMinuteDetails(const CDOTAUserMsg_StatsTeamMinuteDetails& from);
  CDOTAUserMsg_StatsTeamMinuteDetails(CDOTAUserMsg_StatsTeamMinuteDetails&& from) noexcept
    : CDOTAUserMsg_StatsTeamMinuteDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsTeamMinuteDetails& operator=(const CDOTAUserMsg_StatsTeamMinuteDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsTeamMinuteDetails& operator=(CDOTAUserMsg_StatsTeamMinuteDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsTeamMinuteDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsTeamMinuteDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsTeamMinuteDetails*>(
               &_CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    101;

  friend void swap(CDOTAUserMsg_StatsTeamMinuteDetails& a, CDOTAUserMsg_StatsTeamMinuteDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsTeamMinuteDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsTeamMinuteDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsTeamMinuteDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsTeamMinuteDetails>(nullptr);
  }

  CDOTAUserMsg_StatsTeamMinuteDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsTeamMinuteDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsTeamMinuteDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsTeamMinuteDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance LocationPerformance;

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerStatsFieldNumber = 1,
    kLanePerformanceFieldNumber = 10,
    kTowerKillsFieldNumber = 2,
    kBarrackKillsFieldNumber = 3,
    kAvailableLaneCreepGoldFieldNumber = 4,
    kBalanceKillValueFieldNumber = 5,
    kBalanceTowerValueFieldNumber = 6,
    kBalanceBarracksValueFieldNumber = 7,
    kBalanceGoldValueFieldNumber = 8,
    kBalanceXpValueFieldNumber = 9,
  };
  // repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
  int player_stats_size() const;
  private:
  int _internal_player_stats_size() const;
  public:
  void clear_player_stats();
  ::CDOTAUserMsg_StatsHeroMinuteDetails* mutable_player_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroMinuteDetails >*
      mutable_player_stats();
  private:
  const ::CDOTAUserMsg_StatsHeroMinuteDetails& _internal_player_stats(int index) const;
  ::CDOTAUserMsg_StatsHeroMinuteDetails* _internal_add_player_stats();
  public:
  const ::CDOTAUserMsg_StatsHeroMinuteDetails& player_stats(int index) const;
  ::CDOTAUserMsg_StatsHeroMinuteDetails* add_player_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroMinuteDetails >&
      player_stats() const;

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
  int lane_performance_size() const;
  private:
  int _internal_lane_performance_size() const;
  public:
  void clear_lane_performance();
  ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* mutable_lane_performance(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >*
      mutable_lane_performance();
  private:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& _internal_lane_performance(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* _internal_add_lane_performance();
  public:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& lane_performance(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* add_lane_performance();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >&
      lane_performance() const;

  // optional uint32 tower_kills = 2;
  bool has_tower_kills() const;
  private:
  bool _internal_has_tower_kills() const;
  public:
  void clear_tower_kills();
  ::PROTOBUF_NAMESPACE_ID::uint32 tower_kills() const;
  void set_tower_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tower_kills() const;
  void _internal_set_tower_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 barrack_kills = 3;
  bool has_barrack_kills() const;
  private:
  bool _internal_has_barrack_kills() const;
  public:
  void clear_barrack_kills();
  ::PROTOBUF_NAMESPACE_ID::uint32 barrack_kills() const;
  void set_barrack_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_barrack_kills() const;
  void _internal_set_barrack_kills(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 available_lane_creep_gold = 4;
  bool has_available_lane_creep_gold() const;
  private:
  bool _internal_has_available_lane_creep_gold() const;
  public:
  void clear_available_lane_creep_gold();
  ::PROTOBUF_NAMESPACE_ID::uint32 available_lane_creep_gold() const;
  void set_available_lane_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_available_lane_creep_gold() const;
  void _internal_set_available_lane_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance_kill_value = 5;
  bool has_balance_kill_value() const;
  private:
  bool _internal_has_balance_kill_value() const;
  public:
  void clear_balance_kill_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_kill_value() const;
  void set_balance_kill_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance_kill_value() const;
  void _internal_set_balance_kill_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance_tower_value = 6;
  bool has_balance_tower_value() const;
  private:
  bool _internal_has_balance_tower_value() const;
  public:
  void clear_balance_tower_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_tower_value() const;
  void set_balance_tower_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance_tower_value() const;
  void _internal_set_balance_tower_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance_barracks_value = 7;
  bool has_balance_barracks_value() const;
  private:
  bool _internal_has_balance_barracks_value() const;
  public:
  void clear_balance_barracks_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_barracks_value() const;
  void set_balance_barracks_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance_barracks_value() const;
  void _internal_set_balance_barracks_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance_gold_value = 8;
  bool has_balance_gold_value() const;
  private:
  bool _internal_has_balance_gold_value() const;
  public:
  void clear_balance_gold_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_gold_value() const;
  void set_balance_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance_gold_value() const;
  void _internal_set_balance_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 balance_xp_value = 9;
  bool has_balance_xp_value() const;
  private:
  bool _internal_has_balance_xp_value() const;
  public:
  void clear_balance_xp_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_xp_value() const;
  void set_balance_xp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_balance_xp_value() const;
  void _internal_set_balance_xp_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsTeamMinuteDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroMinuteDetails > player_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance > lane_performance_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tower_kills_;
  ::PROTOBUF_NAMESPACE_ID::uint32 barrack_kills_;
  ::PROTOBUF_NAMESPACE_ID::uint32 available_lane_creep_gold_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_kill_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_tower_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_barracks_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_gold_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 balance_xp_value_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsPlayerKillShare PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsPlayerKillShare) */ {
 public:
  inline CDOTAUserMsg_StatsPlayerKillShare() : CDOTAUserMsg_StatsPlayerKillShare(nullptr) {}
  virtual ~CDOTAUserMsg_StatsPlayerKillShare();
  explicit constexpr CDOTAUserMsg_StatsPlayerKillShare(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsPlayerKillShare(const CDOTAUserMsg_StatsPlayerKillShare& from);
  CDOTAUserMsg_StatsPlayerKillShare(CDOTAUserMsg_StatsPlayerKillShare&& from) noexcept
    : CDOTAUserMsg_StatsPlayerKillShare() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsPlayerKillShare& operator=(const CDOTAUserMsg_StatsPlayerKillShare& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsPlayerKillShare& operator=(CDOTAUserMsg_StatsPlayerKillShare&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsPlayerKillShare& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsPlayerKillShare* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsPlayerKillShare*>(
               &_CDOTAUserMsg_StatsPlayerKillShare_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    102;

  friend void swap(CDOTAUserMsg_StatsPlayerKillShare& a, CDOTAUserMsg_StatsPlayerKillShare& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsPlayerKillShare* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsPlayerKillShare* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsPlayerKillShare* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsPlayerKillShare>(nullptr);
  }

  CDOTAUserMsg_StatsPlayerKillShare* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsPlayerKillShare>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsPlayerKillShare& from);
  void MergeFrom(const CDOTAUserMsg_StatsPlayerKillShare& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsPlayerKillShare* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsPlayerKillShare";
  }
  protected:
  explicit CDOTAUserMsg_StatsPlayerKillShare(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kKillSharePercentFieldNumber = 2,
    kPlayerLocXFieldNumber = 3,
    kPlayerLocYFieldNumber = 4,
    kHealthPercentFieldNumber = 5,
    kManaPercentFieldNumber = 6,
  };
  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float kill_share_percent = 2;
  bool has_kill_share_percent() const;
  private:
  bool _internal_has_kill_share_percent() const;
  public:
  void clear_kill_share_percent();
  float kill_share_percent() const;
  void set_kill_share_percent(float value);
  private:
  float _internal_kill_share_percent() const;
  void _internal_set_kill_share_percent(float value);
  public:

  // optional float player_loc_x = 3;
  bool has_player_loc_x() const;
  private:
  bool _internal_has_player_loc_x() const;
  public:
  void clear_player_loc_x();
  float player_loc_x() const;
  void set_player_loc_x(float value);
  private:
  float _internal_player_loc_x() const;
  void _internal_set_player_loc_x(float value);
  public:

  // optional float player_loc_y = 4;
  bool has_player_loc_y() const;
  private:
  bool _internal_has_player_loc_y() const;
  public:
  void clear_player_loc_y();
  float player_loc_y() const;
  void set_player_loc_y(float value);
  private:
  float _internal_player_loc_y() const;
  void _internal_set_player_loc_y(float value);
  public:

  // optional float health_percent = 5;
  bool has_health_percent() const;
  private:
  bool _internal_has_health_percent() const;
  public:
  void clear_health_percent();
  float health_percent() const;
  void set_health_percent(float value);
  private:
  float _internal_health_percent() const;
  void _internal_set_health_percent(float value);
  public:

  // optional float mana_percent = 6;
  bool has_mana_percent() const;
  private:
  bool _internal_has_mana_percent() const;
  public:
  void clear_mana_percent();
  float mana_percent() const;
  void set_mana_percent(float value);
  private:
  float _internal_mana_percent() const;
  void _internal_set_mana_percent(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsPlayerKillShare)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  float kill_share_percent_;
  float player_loc_x_;
  float player_loc_y_;
  float health_percent_;
  float mana_percent_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsKillDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsKillDetails) */ {
 public:
  inline CDOTAUserMsg_StatsKillDetails() : CDOTAUserMsg_StatsKillDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsKillDetails();
  explicit constexpr CDOTAUserMsg_StatsKillDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsKillDetails(const CDOTAUserMsg_StatsKillDetails& from);
  CDOTAUserMsg_StatsKillDetails(CDOTAUserMsg_StatsKillDetails&& from) noexcept
    : CDOTAUserMsg_StatsKillDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsKillDetails& operator=(const CDOTAUserMsg_StatsKillDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsKillDetails& operator=(CDOTAUserMsg_StatsKillDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsKillDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsKillDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsKillDetails*>(
               &_CDOTAUserMsg_StatsKillDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    103;

  friend void swap(CDOTAUserMsg_StatsKillDetails& a, CDOTAUserMsg_StatsKillDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsKillDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsKillDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsKillDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsKillDetails>(nullptr);
  }

  CDOTAUserMsg_StatsKillDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsKillDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsKillDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsKillDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsKillDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsKillDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsKillDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKillSharesFieldNumber = 2,
    kVictimIdFieldNumber = 1,
    kDamageToKillFieldNumber = 3,
    kEffectiveHealthFieldNumber = 4,
    kDeathTimeFieldNumber = 5,
    kKillerIdFieldNumber = 6,
  };
  // repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
  int kill_shares_size() const;
  private:
  int _internal_kill_shares_size() const;
  public:
  void clear_kill_shares();
  ::CDOTAUserMsg_StatsPlayerKillShare* mutable_kill_shares(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsPlayerKillShare >*
      mutable_kill_shares();
  private:
  const ::CDOTAUserMsg_StatsPlayerKillShare& _internal_kill_shares(int index) const;
  ::CDOTAUserMsg_StatsPlayerKillShare* _internal_add_kill_shares();
  public:
  const ::CDOTAUserMsg_StatsPlayerKillShare& kill_shares(int index) const;
  ::CDOTAUserMsg_StatsPlayerKillShare* add_kill_shares();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsPlayerKillShare >&
      kill_shares() const;

  // optional uint32 victim_id = 1;
  bool has_victim_id() const;
  private:
  bool _internal_has_victim_id() const;
  public:
  void clear_victim_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 victim_id() const;
  void set_victim_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_victim_id() const;
  void _internal_set_victim_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 damage_to_kill = 3;
  bool has_damage_to_kill() const;
  private:
  bool _internal_has_damage_to_kill() const;
  public:
  void clear_damage_to_kill();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_to_kill() const;
  void set_damage_to_kill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_to_kill() const;
  void _internal_set_damage_to_kill(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 effective_health = 4;
  bool has_effective_health() const;
  private:
  bool _internal_has_effective_health() const;
  public:
  void clear_effective_health();
  ::PROTOBUF_NAMESPACE_ID::uint32 effective_health() const;
  void set_effective_health(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_effective_health() const;
  void _internal_set_effective_health(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float death_time = 5;
  bool has_death_time() const;
  private:
  bool _internal_has_death_time() const;
  public:
  void clear_death_time();
  float death_time() const;
  void set_death_time(float value);
  private:
  float _internal_death_time() const;
  void _internal_set_death_time(float value);
  public:

  // optional uint32 killer_id = 6;
  bool has_killer_id() const;
  private:
  bool _internal_has_killer_id() const;
  public:
  void clear_killer_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_id() const;
  void set_killer_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_killer_id() const;
  void _internal_set_killer_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsKillDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsPlayerKillShare > kill_shares_;
  ::PROTOBUF_NAMESPACE_ID::uint32 victim_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_to_kill_;
  ::PROTOBUF_NAMESPACE_ID::uint32 effective_health_;
  float death_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 killer_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails) */ {
 public:
  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails() : CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails();
  explicit constexpr CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);
  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails&& from) noexcept
    : CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& operator=(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& operator=(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    104;

  friend void swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& a, CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(nullptr);
  }

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kParticipantsFieldNumber = 1,
    kDeathsFieldNumber = 2,
    kGoldDeltaFieldNumber = 3,
    kXpDeltaFieldNumber = 4,
  };
  // repeated uint32 participants = 1;
  int participants_size() const;
  private:
  int _internal_participants_size() const;
  public:
  void clear_participants();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_participants(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_participants() const;
  void _internal_add_participants(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_participants();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 participants(int index) const;
  void set_participants(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_participants(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      participants() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_participants();

  // repeated uint32 deaths = 2;
  int deaths_size() const;
  private:
  int _internal_deaths_size() const;
  public:
  void clear_deaths();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_deaths(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_deaths() const;
  void _internal_add_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_deaths();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 deaths(int index) const;
  void set_deaths(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      deaths() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_deaths();

  // optional uint32 gold_delta = 3;
  bool has_gold_delta() const;
  private:
  bool _internal_has_gold_delta() const;
  public:
  void clear_gold_delta();
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_delta() const;
  void set_gold_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gold_delta() const;
  void _internal_set_gold_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 xp_delta = 4;
  bool has_xp_delta() const;
  private:
  bool _internal_has_xp_delta() const;
  public:
  void clear_xp_delta();
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_delta() const;
  void set_xp_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_xp_delta() const;
  void _internal_set_xp_delta(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > participants_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > deaths_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gold_delta_;
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_delta_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails) */ {
 public:
  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails() : CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails();
  explicit constexpr CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);
  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails&& from) noexcept
    : CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& operator=(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& operator=(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    105;

  friend void swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& a, CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails>(nullptr);
  }

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRadiantFightDetailsFieldNumber = 3,
    kDireFightDetailsFieldNumber = 4,
    kStartTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
  };
  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
  bool has_radiant_fight_details() const;
  private:
  bool _internal_has_radiant_fight_details() const;
  public:
  void clear_radiant_fight_details();
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& radiant_fight_details() const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* release_radiant_fight_details();
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* mutable_radiant_fight_details();
  void set_allocated_radiant_fight_details(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details);
  private:
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& _internal_radiant_fight_details() const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* _internal_mutable_radiant_fight_details();
  public:
  void unsafe_arena_set_allocated_radiant_fight_details(
      ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details);
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* unsafe_arena_release_radiant_fight_details();

  // optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
  bool has_dire_fight_details() const;
  private:
  bool _internal_has_dire_fight_details() const;
  public:
  void clear_dire_fight_details();
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& dire_fight_details() const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* release_dire_fight_details();
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* mutable_dire_fight_details();
  void set_allocated_dire_fight_details(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details);
  private:
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& _internal_dire_fight_details() const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* _internal_mutable_dire_fight_details();
  public:
  void unsafe_arena_set_allocated_dire_fight_details(
      ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details);
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* unsafe_arena_release_dire_fight_details();

  // optional float start_time = 1;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  float start_time() const;
  void set_start_time(float value);
  private:
  float _internal_start_time() const;
  void _internal_set_start_time(float value);
  public:

  // optional float end_time = 2;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  float end_time() const;
  void set_end_time(float value);
  private:
  float _internal_end_time() const;
  void _internal_set_end_time(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details_;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details_;
  float start_time_;
  float end_time_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_StatsMatchDetails) */ {
 public:
  inline CDOTAUserMsg_StatsMatchDetails() : CDOTAUserMsg_StatsMatchDetails(nullptr) {}
  virtual ~CDOTAUserMsg_StatsMatchDetails();
  explicit constexpr CDOTAUserMsg_StatsMatchDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_StatsMatchDetails(const CDOTAUserMsg_StatsMatchDetails& from);
  CDOTAUserMsg_StatsMatchDetails(CDOTAUserMsg_StatsMatchDetails&& from) noexcept
    : CDOTAUserMsg_StatsMatchDetails() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_StatsMatchDetails& operator=(const CDOTAUserMsg_StatsMatchDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_StatsMatchDetails& operator=(CDOTAUserMsg_StatsMatchDetails&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_StatsMatchDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_StatsMatchDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    106;

  friend void swap(CDOTAUserMsg_StatsMatchDetails& a, CDOTAUserMsg_StatsMatchDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_StatsMatchDetails* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_StatsMatchDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails>(nullptr);
  }

  CDOTAUserMsg_StatsMatchDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_StatsMatchDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_StatsMatchDetails";
  }
  protected:
  explicit CDOTAUserMsg_StatsMatchDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails CDOTAUserMsg_StatsFightTeamDetails;
  typedef CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails CDOTAUserMsg_StatsFightDetails;

  // accessors -------------------------------------------------------

  enum : int {
    kHeroLookupFieldNumber = 1,
    kRadiantStatsFieldNumber = 2,
    kDireStatsFieldNumber = 3,
    kRadiantKillsFieldNumber = 4,
    kDireKillsFieldNumber = 5,
    kFightDetailsFieldNumber = 6,
  };
  // repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
  int hero_lookup_size() const;
  private:
  int _internal_hero_lookup_size() const;
  public:
  void clear_hero_lookup();
  ::CDOTAUserMsg_StatsHeroLookup* mutable_hero_lookup(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroLookup >*
      mutable_hero_lookup();
  private:
  const ::CDOTAUserMsg_StatsHeroLookup& _internal_hero_lookup(int index) const;
  ::CDOTAUserMsg_StatsHeroLookup* _internal_add_hero_lookup();
  public:
  const ::CDOTAUserMsg_StatsHeroLookup& hero_lookup(int index) const;
  ::CDOTAUserMsg_StatsHeroLookup* add_hero_lookup();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroLookup >&
      hero_lookup() const;

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
  int radiant_stats_size() const;
  private:
  int _internal_radiant_stats_size() const;
  public:
  void clear_radiant_stats();
  ::CDOTAUserMsg_StatsTeamMinuteDetails* mutable_radiant_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >*
      mutable_radiant_stats();
  private:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails& _internal_radiant_stats(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails* _internal_add_radiant_stats();
  public:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails& radiant_stats(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails* add_radiant_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >&
      radiant_stats() const;

  // repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
  int dire_stats_size() const;
  private:
  int _internal_dire_stats_size() const;
  public:
  void clear_dire_stats();
  ::CDOTAUserMsg_StatsTeamMinuteDetails* mutable_dire_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >*
      mutable_dire_stats();
  private:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails& _internal_dire_stats(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails* _internal_add_dire_stats();
  public:
  const ::CDOTAUserMsg_StatsTeamMinuteDetails& dire_stats(int index) const;
  ::CDOTAUserMsg_StatsTeamMinuteDetails* add_dire_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >&
      dire_stats() const;

  // repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
  int radiant_kills_size() const;
  private:
  int _internal_radiant_kills_size() const;
  public:
  void clear_radiant_kills();
  ::CDOTAUserMsg_StatsKillDetails* mutable_radiant_kills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >*
      mutable_radiant_kills();
  private:
  const ::CDOTAUserMsg_StatsKillDetails& _internal_radiant_kills(int index) const;
  ::CDOTAUserMsg_StatsKillDetails* _internal_add_radiant_kills();
  public:
  const ::CDOTAUserMsg_StatsKillDetails& radiant_kills(int index) const;
  ::CDOTAUserMsg_StatsKillDetails* add_radiant_kills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >&
      radiant_kills() const;

  // repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
  int dire_kills_size() const;
  private:
  int _internal_dire_kills_size() const;
  public:
  void clear_dire_kills();
  ::CDOTAUserMsg_StatsKillDetails* mutable_dire_kills(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >*
      mutable_dire_kills();
  private:
  const ::CDOTAUserMsg_StatsKillDetails& _internal_dire_kills(int index) const;
  ::CDOTAUserMsg_StatsKillDetails* _internal_add_dire_kills();
  public:
  const ::CDOTAUserMsg_StatsKillDetails& dire_kills(int index) const;
  ::CDOTAUserMsg_StatsKillDetails* add_dire_kills();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >&
      dire_kills() const;

  // repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
  int fight_details_size() const;
  private:
  int _internal_fight_details_size() const;
  public:
  void clear_fight_details();
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* mutable_fight_details(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >*
      mutable_fight_details();
  private:
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& _internal_fight_details(int index) const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* _internal_add_fight_details();
  public:
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& fight_details(int index) const;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* add_fight_details();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >&
      fight_details() const;

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_StatsMatchDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroLookup > hero_lookup_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails > radiant_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails > dire_stats_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails > radiant_kills_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails > dire_kills_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails > fight_details_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniTaunt PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MiniTaunt) */ {
 public:
  inline CDOTAUserMsg_MiniTaunt() : CDOTAUserMsg_MiniTaunt(nullptr) {}
  virtual ~CDOTAUserMsg_MiniTaunt();
  explicit constexpr CDOTAUserMsg_MiniTaunt(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MiniTaunt(const CDOTAUserMsg_MiniTaunt& from);
  CDOTAUserMsg_MiniTaunt(CDOTAUserMsg_MiniTaunt&& from) noexcept
    : CDOTAUserMsg_MiniTaunt() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MiniTaunt& operator=(const CDOTAUserMsg_MiniTaunt& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MiniTaunt& operator=(CDOTAUserMsg_MiniTaunt&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MiniTaunt& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MiniTaunt* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniTaunt*>(
               &_CDOTAUserMsg_MiniTaunt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    107;

  friend void swap(CDOTAUserMsg_MiniTaunt& a, CDOTAUserMsg_MiniTaunt& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MiniTaunt* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MiniTaunt* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniTaunt* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniTaunt>(nullptr);
  }

  CDOTAUserMsg_MiniTaunt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MiniTaunt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MiniTaunt& from);
  void MergeFrom(const CDOTAUserMsg_MiniTaunt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MiniTaunt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MiniTaunt";
  }
  protected:
  explicit CDOTAUserMsg_MiniTaunt(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTauntingPlayerIdFieldNumber = 1,
  };
  // optional uint32 taunting_player_id = 1;
  bool has_taunting_player_id() const;
  private:
  bool _internal_has_taunting_player_id() const;
  public:
  void clear_taunting_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 taunting_player_id() const;
  void set_taunting_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_taunting_player_id() const;
  void _internal_set_taunting_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MiniTaunt)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 taunting_player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpeechBubble PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SpeechBubble) */ {
 public:
  inline CDOTAUserMsg_SpeechBubble() : CDOTAUserMsg_SpeechBubble(nullptr) {}
  virtual ~CDOTAUserMsg_SpeechBubble();
  explicit constexpr CDOTAUserMsg_SpeechBubble(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SpeechBubble(const CDOTAUserMsg_SpeechBubble& from);
  CDOTAUserMsg_SpeechBubble(CDOTAUserMsg_SpeechBubble&& from) noexcept
    : CDOTAUserMsg_SpeechBubble() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SpeechBubble& operator=(const CDOTAUserMsg_SpeechBubble& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SpeechBubble& operator=(CDOTAUserMsg_SpeechBubble&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SpeechBubble& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SpeechBubble* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpeechBubble*>(
               &_CDOTAUserMsg_SpeechBubble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    108;

  friend void swap(CDOTAUserMsg_SpeechBubble& a, CDOTAUserMsg_SpeechBubble& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SpeechBubble* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SpeechBubble* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpeechBubble* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpeechBubble>(nullptr);
  }

  CDOTAUserMsg_SpeechBubble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SpeechBubble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SpeechBubble& from);
  void MergeFrom(const CDOTAUserMsg_SpeechBubble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SpeechBubble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SpeechBubble";
  }
  protected:
  explicit CDOTAUserMsg_SpeechBubble(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDestroyAllFieldNumber = 1,
  };
  // optional bool destroy_all = 1;
  bool has_destroy_all() const;
  private:
  bool _internal_has_destroy_all() const;
  public:
  void clear_destroy_all();
  bool destroy_all() const;
  void set_destroy_all(bool value);
  private:
  bool _internal_destroy_all() const;
  void _internal_set_destroy_all(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SpeechBubble)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool destroy_all_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHeaderMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CustomHeaderMessage) */ {
 public:
  inline CDOTAUserMsg_CustomHeaderMessage() : CDOTAUserMsg_CustomHeaderMessage(nullptr) {}
  virtual ~CDOTAUserMsg_CustomHeaderMessage();
  explicit constexpr CDOTAUserMsg_CustomHeaderMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CustomHeaderMessage(const CDOTAUserMsg_CustomHeaderMessage& from);
  CDOTAUserMsg_CustomHeaderMessage(CDOTAUserMsg_CustomHeaderMessage&& from) noexcept
    : CDOTAUserMsg_CustomHeaderMessage() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CustomHeaderMessage& operator=(const CDOTAUserMsg_CustomHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CustomHeaderMessage& operator=(CDOTAUserMsg_CustomHeaderMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CustomHeaderMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CustomHeaderMessage* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHeaderMessage*>(
               &_CDOTAUserMsg_CustomHeaderMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    109;

  friend void swap(CDOTAUserMsg_CustomHeaderMessage& a, CDOTAUserMsg_CustomHeaderMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CustomHeaderMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CustomHeaderMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHeaderMessage* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHeaderMessage>(nullptr);
  }

  CDOTAUserMsg_CustomHeaderMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHeaderMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CustomHeaderMessage& from);
  void MergeFrom(const CDOTAUserMsg_CustomHeaderMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CustomHeaderMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CustomHeaderMessage";
  }
  protected:
  explicit CDOTAUserMsg_CustomHeaderMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
    kDurationFieldNumber = 2,
    kValueFieldNumber = 4,
  };
  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float duration = 2;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  float duration() const;
  void set_duration(float value);
  private:
  float _internal_duration() const;
  void _internal_set_duration(float value);
  public:

  // optional int32 value = 4;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHeaderMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  float duration_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgHeroAbilityStat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgHeroAbilityStat) */ {
 public:
  inline CMsgHeroAbilityStat() : CMsgHeroAbilityStat(nullptr) {}
  virtual ~CMsgHeroAbilityStat();
  explicit constexpr CMsgHeroAbilityStat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgHeroAbilityStat(const CMsgHeroAbilityStat& from);
  CMsgHeroAbilityStat(CMsgHeroAbilityStat&& from) noexcept
    : CMsgHeroAbilityStat() {
    *this = ::std::move(from);
  }

  inline CMsgHeroAbilityStat& operator=(const CMsgHeroAbilityStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgHeroAbilityStat& operator=(CMsgHeroAbilityStat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgHeroAbilityStat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgHeroAbilityStat* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroAbilityStat*>(
               &_CMsgHeroAbilityStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    110;

  friend void swap(CMsgHeroAbilityStat& a, CMsgHeroAbilityStat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgHeroAbilityStat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgHeroAbilityStat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgHeroAbilityStat* New() const final {
    return CreateMaybeMessage<CMsgHeroAbilityStat>(nullptr);
  }

  CMsgHeroAbilityStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgHeroAbilityStat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgHeroAbilityStat& from);
  void MergeFrom(const CMsgHeroAbilityStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgHeroAbilityStat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgHeroAbilityStat";
  }
  protected:
  explicit CMsgHeroAbilityStat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatTypeFieldNumber = 1,
    kIntValueFieldNumber = 2,
    kFloatValueFieldNumber = 3,
  };
  // optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
  bool has_stat_type() const;
  private:
  bool _internal_has_stat_type() const;
  public:
  void clear_stat_type();
  ::EHeroStatType stat_type() const;
  void set_stat_type(::EHeroStatType value);
  private:
  ::EHeroStatType _internal_stat_type() const;
  void _internal_set_stat_type(::EHeroStatType value);
  public:

  // optional int32 int_value = 2;
  bool has_int_value() const;
  private:
  bool _internal_has_int_value() const;
  public:
  void clear_int_value();
  ::PROTOBUF_NAMESPACE_ID::int32 int_value() const;
  void set_int_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_value() const;
  void _internal_set_int_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float float_value = 3;
  bool has_float_value() const;
  private:
  bool _internal_has_float_value() const;
  public:
  void clear_float_value();
  float float_value() const;
  void set_float_value(float value);
  private:
  float _internal_float_value() const;
  void _internal_set_float_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgHeroAbilityStat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stat_type_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_value_;
  float float_value_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCombatAnalyzerPlayerStat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCombatAnalyzerPlayerStat) */ {
 public:
  inline CMsgCombatAnalyzerPlayerStat() : CMsgCombatAnalyzerPlayerStat(nullptr) {}
  virtual ~CMsgCombatAnalyzerPlayerStat();
  explicit constexpr CMsgCombatAnalyzerPlayerStat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCombatAnalyzerPlayerStat(const CMsgCombatAnalyzerPlayerStat& from);
  CMsgCombatAnalyzerPlayerStat(CMsgCombatAnalyzerPlayerStat&& from) noexcept
    : CMsgCombatAnalyzerPlayerStat() {
    *this = ::std::move(from);
  }

  inline CMsgCombatAnalyzerPlayerStat& operator=(const CMsgCombatAnalyzerPlayerStat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCombatAnalyzerPlayerStat& operator=(CMsgCombatAnalyzerPlayerStat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCombatAnalyzerPlayerStat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCombatAnalyzerPlayerStat* internal_default_instance() {
    return reinterpret_cast<const CMsgCombatAnalyzerPlayerStat*>(
               &_CMsgCombatAnalyzerPlayerStat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    111;

  friend void swap(CMsgCombatAnalyzerPlayerStat& a, CMsgCombatAnalyzerPlayerStat& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCombatAnalyzerPlayerStat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCombatAnalyzerPlayerStat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCombatAnalyzerPlayerStat* New() const final {
    return CreateMaybeMessage<CMsgCombatAnalyzerPlayerStat>(nullptr);
  }

  CMsgCombatAnalyzerPlayerStat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCombatAnalyzerPlayerStat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCombatAnalyzerPlayerStat& from);
  void MergeFrom(const CMsgCombatAnalyzerPlayerStat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCombatAnalyzerPlayerStat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCombatAnalyzerPlayerStat";
  }
  protected:
  explicit CMsgCombatAnalyzerPlayerStat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroAbilityStatsFieldNumber = 2,
    kAccountIdFieldNumber = 1,
  };
  // repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
  int hero_ability_stats_size() const;
  private:
  int _internal_hero_ability_stats_size() const;
  public:
  void clear_hero_ability_stats();
  ::CMsgHeroAbilityStat* mutable_hero_ability_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroAbilityStat >*
      mutable_hero_ability_stats();
  private:
  const ::CMsgHeroAbilityStat& _internal_hero_ability_stats(int index) const;
  ::CMsgHeroAbilityStat* _internal_add_hero_ability_stats();
  public:
  const ::CMsgHeroAbilityStat& hero_ability_stats(int index) const;
  ::CMsgHeroAbilityStat* add_hero_ability_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroAbilityStat >&
      hero_ability_stats() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCombatAnalyzerPlayerStat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroAbilityStat > hero_ability_stats_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CMsgCombatAnalyzerStats PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgCombatAnalyzerStats) */ {
 public:
  inline CMsgCombatAnalyzerStats() : CMsgCombatAnalyzerStats(nullptr) {}
  virtual ~CMsgCombatAnalyzerStats();
  explicit constexpr CMsgCombatAnalyzerStats(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgCombatAnalyzerStats(const CMsgCombatAnalyzerStats& from);
  CMsgCombatAnalyzerStats(CMsgCombatAnalyzerStats&& from) noexcept
    : CMsgCombatAnalyzerStats() {
    *this = ::std::move(from);
  }

  inline CMsgCombatAnalyzerStats& operator=(const CMsgCombatAnalyzerStats& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgCombatAnalyzerStats& operator=(CMsgCombatAnalyzerStats&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgCombatAnalyzerStats& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgCombatAnalyzerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgCombatAnalyzerStats*>(
               &_CMsgCombatAnalyzerStats_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    112;

  friend void swap(CMsgCombatAnalyzerStats& a, CMsgCombatAnalyzerStats& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgCombatAnalyzerStats* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgCombatAnalyzerStats* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgCombatAnalyzerStats* New() const final {
    return CreateMaybeMessage<CMsgCombatAnalyzerStats>(nullptr);
  }

  CMsgCombatAnalyzerStats* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgCombatAnalyzerStats>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgCombatAnalyzerStats& from);
  void MergeFrom(const CMsgCombatAnalyzerStats& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgCombatAnalyzerStats* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgCombatAnalyzerStats";
  }
  protected:
  explicit CMsgCombatAnalyzerStats(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerStatsFieldNumber = 2,
    kMatchIdFieldNumber = 1,
  };
  // repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
  int player_stats_size() const;
  private:
  int _internal_player_stats_size() const;
  public:
  void clear_player_stats();
  ::CMsgCombatAnalyzerPlayerStat* mutable_player_stats(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCombatAnalyzerPlayerStat >*
      mutable_player_stats();
  private:
  const ::CMsgCombatAnalyzerPlayerStat& _internal_player_stats(int index) const;
  ::CMsgCombatAnalyzerPlayerStat* _internal_add_player_stats();
  public:
  const ::CMsgCombatAnalyzerPlayerStat& player_stats(int index) const;
  ::CMsgCombatAnalyzerPlayerStat* add_player_stats();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCombatAnalyzerPlayerStat >&
      player_stats() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgCombatAnalyzerStats)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCombatAnalyzerPlayerStat > player_stats_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BeastChat PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_BeastChat) */ {
 public:
  inline CDOTAUserMsg_BeastChat() : CDOTAUserMsg_BeastChat(nullptr) {}
  virtual ~CDOTAUserMsg_BeastChat();
  explicit constexpr CDOTAUserMsg_BeastChat(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_BeastChat(const CDOTAUserMsg_BeastChat& from);
  CDOTAUserMsg_BeastChat(CDOTAUserMsg_BeastChat&& from) noexcept
    : CDOTAUserMsg_BeastChat() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_BeastChat& operator=(const CDOTAUserMsg_BeastChat& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_BeastChat& operator=(CDOTAUserMsg_BeastChat&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_BeastChat& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_BeastChat* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BeastChat*>(
               &_CDOTAUserMsg_BeastChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    113;

  friend void swap(CDOTAUserMsg_BeastChat& a, CDOTAUserMsg_BeastChat& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_BeastChat* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_BeastChat* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BeastChat* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_BeastChat>(nullptr);
  }

  CDOTAUserMsg_BeastChat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_BeastChat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_BeastChat& from);
  void MergeFrom(const CDOTAUserMsg_BeastChat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_BeastChat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_BeastChat";
  }
  protected:
  explicit CDOTAUserMsg_BeastChat(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFormatFieldNumber = 2,
    kMessageFieldNumber = 3,
    kTargetFieldNumber = 4,
    kTeamFieldNumber = 1,
  };
  // optional string format = 2;
  bool has_format() const;
  private:
  bool _internal_has_format() const;
  public:
  void clear_format();
  const std::string& format() const;
  void set_format(const std::string& value);
  void set_format(std::string&& value);
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  std::string* mutable_format();
  std::string* release_format();
  void set_allocated_format(std::string* format);
  private:
  const std::string& _internal_format() const;
  void _internal_set_format(const std::string& value);
  std::string* _internal_mutable_format();
  public:

  // optional string message = 3;
  bool has_message() const;
  private:
  bool _internal_has_message() const;
  public:
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // optional string target = 4;
  bool has_target() const;
  private:
  bool _internal_has_target() const;
  public:
  void clear_target();
  const std::string& target() const;
  void set_target(const std::string& value);
  void set_target(std::string&& value);
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  std::string* mutable_target();
  std::string* release_target();
  void set_allocated_target(std::string* target);
  private:
  const std::string& _internal_target() const;
  void _internal_set_target(const std::string& value);
  std::string* _internal_mutable_target();
  public:

  // optional uint32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::uint32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_BeastChat)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr format_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Create PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CustomHudElement_Create) */ {
 public:
  inline CDOTAUserMsg_CustomHudElement_Create() : CDOTAUserMsg_CustomHudElement_Create(nullptr) {}
  virtual ~CDOTAUserMsg_CustomHudElement_Create();
  explicit constexpr CDOTAUserMsg_CustomHudElement_Create(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CustomHudElement_Create(const CDOTAUserMsg_CustomHudElement_Create& from);
  CDOTAUserMsg_CustomHudElement_Create(CDOTAUserMsg_CustomHudElement_Create&& from) noexcept
    : CDOTAUserMsg_CustomHudElement_Create() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CustomHudElement_Create& operator=(const CDOTAUserMsg_CustomHudElement_Create& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CustomHudElement_Create& operator=(CDOTAUserMsg_CustomHudElement_Create&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CustomHudElement_Create& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CustomHudElement_Create* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Create*>(
               &_CDOTAUserMsg_CustomHudElement_Create_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    114;

  friend void swap(CDOTAUserMsg_CustomHudElement_Create& a, CDOTAUserMsg_CustomHudElement_Create& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CustomHudElement_Create* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CustomHudElement_Create* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Create* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Create>(nullptr);
  }

  CDOTAUserMsg_CustomHudElement_Create* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Create>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Create& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Create& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Create* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CustomHudElement_Create";
  }
  protected:
  explicit CDOTAUserMsg_CustomHudElement_Create(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementIdFieldNumber = 1,
    kLayoutFilenameFieldNumber = 2,
    kDataFieldNumber = 3,
  };
  // optional string element_id = 1;
  bool has_element_id() const;
  private:
  bool _internal_has_element_id() const;
  public:
  void clear_element_id();
  const std::string& element_id() const;
  void set_element_id(const std::string& value);
  void set_element_id(std::string&& value);
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  std::string* mutable_element_id();
  std::string* release_element_id();
  void set_allocated_element_id(std::string* element_id);
  private:
  const std::string& _internal_element_id() const;
  void _internal_set_element_id(const std::string& value);
  std::string* _internal_mutable_element_id();
  public:

  // optional string layout_filename = 2;
  bool has_layout_filename() const;
  private:
  bool _internal_has_layout_filename() const;
  public:
  void clear_layout_filename();
  const std::string& layout_filename() const;
  void set_layout_filename(const std::string& value);
  void set_layout_filename(std::string&& value);
  void set_layout_filename(const char* value);
  void set_layout_filename(const char* value, size_t size);
  std::string* mutable_layout_filename();
  std::string* release_layout_filename();
  void set_allocated_layout_filename(std::string* layout_filename);
  private:
  const std::string& _internal_layout_filename() const;
  void _internal_set_layout_filename(const std::string& value);
  std::string* _internal_mutable_layout_filename();
  public:

  // optional bytes data = 3;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Create)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr element_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr layout_filename_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Modify PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CustomHudElement_Modify) */ {
 public:
  inline CDOTAUserMsg_CustomHudElement_Modify() : CDOTAUserMsg_CustomHudElement_Modify(nullptr) {}
  virtual ~CDOTAUserMsg_CustomHudElement_Modify();
  explicit constexpr CDOTAUserMsg_CustomHudElement_Modify(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CustomHudElement_Modify(const CDOTAUserMsg_CustomHudElement_Modify& from);
  CDOTAUserMsg_CustomHudElement_Modify(CDOTAUserMsg_CustomHudElement_Modify&& from) noexcept
    : CDOTAUserMsg_CustomHudElement_Modify() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CustomHudElement_Modify& operator=(const CDOTAUserMsg_CustomHudElement_Modify& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CustomHudElement_Modify& operator=(CDOTAUserMsg_CustomHudElement_Modify&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CustomHudElement_Modify& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CustomHudElement_Modify* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Modify*>(
               &_CDOTAUserMsg_CustomHudElement_Modify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    115;

  friend void swap(CDOTAUserMsg_CustomHudElement_Modify& a, CDOTAUserMsg_CustomHudElement_Modify& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CustomHudElement_Modify* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CustomHudElement_Modify* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Modify* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Modify>(nullptr);
  }

  CDOTAUserMsg_CustomHudElement_Modify* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Modify>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Modify& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Modify& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Modify* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CustomHudElement_Modify";
  }
  protected:
  explicit CDOTAUserMsg_CustomHudElement_Modify(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementIdFieldNumber = 1,
    kDataFieldNumber = 3,
    kModifyVisibleFieldNumber = 2,
  };
  // optional string element_id = 1;
  bool has_element_id() const;
  private:
  bool _internal_has_element_id() const;
  public:
  void clear_element_id();
  const std::string& element_id() const;
  void set_element_id(const std::string& value);
  void set_element_id(std::string&& value);
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  std::string* mutable_element_id();
  std::string* release_element_id();
  void set_allocated_element_id(std::string* element_id);
  private:
  const std::string& _internal_element_id() const;
  void _internal_set_element_id(const std::string& value);
  std::string* _internal_mutable_element_id();
  public:

  // optional bytes data = 3;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  const std::string& data() const;
  void set_data(const std::string& value);
  void set_data(std::string&& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  std::string* mutable_data();
  std::string* release_data();
  void set_allocated_data(std::string* data);
  private:
  const std::string& _internal_data() const;
  void _internal_set_data(const std::string& value);
  std::string* _internal_mutable_data();
  public:

  // optional bool modify_visible = 2;
  bool has_modify_visible() const;
  private:
  bool _internal_has_modify_visible() const;
  public:
  void clear_modify_visible();
  bool modify_visible() const;
  void set_modify_visible(bool value);
  private:
  bool _internal_modify_visible() const;
  void _internal_set_modify_visible(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Modify)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr element_id_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_;
  bool modify_visible_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Destroy PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CustomHudElement_Destroy) */ {
 public:
  inline CDOTAUserMsg_CustomHudElement_Destroy() : CDOTAUserMsg_CustomHudElement_Destroy(nullptr) {}
  virtual ~CDOTAUserMsg_CustomHudElement_Destroy();
  explicit constexpr CDOTAUserMsg_CustomHudElement_Destroy(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CustomHudElement_Destroy(const CDOTAUserMsg_CustomHudElement_Destroy& from);
  CDOTAUserMsg_CustomHudElement_Destroy(CDOTAUserMsg_CustomHudElement_Destroy&& from) noexcept
    : CDOTAUserMsg_CustomHudElement_Destroy() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CustomHudElement_Destroy& operator=(const CDOTAUserMsg_CustomHudElement_Destroy& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CustomHudElement_Destroy& operator=(CDOTAUserMsg_CustomHudElement_Destroy&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CustomHudElement_Destroy& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CustomHudElement_Destroy* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Destroy*>(
               &_CDOTAUserMsg_CustomHudElement_Destroy_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    116;

  friend void swap(CDOTAUserMsg_CustomHudElement_Destroy& a, CDOTAUserMsg_CustomHudElement_Destroy& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CustomHudElement_Destroy* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CustomHudElement_Destroy* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Destroy* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Destroy>(nullptr);
  }

  CDOTAUserMsg_CustomHudElement_Destroy* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CustomHudElement_Destroy>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Destroy* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CustomHudElement_Destroy";
  }
  protected:
  explicit CDOTAUserMsg_CustomHudElement_Destroy(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kElementIdFieldNumber = 1,
  };
  // optional string element_id = 1;
  bool has_element_id() const;
  private:
  bool _internal_has_element_id() const;
  public:
  void clear_element_id();
  const std::string& element_id() const;
  void set_element_id(const std::string& value);
  void set_element_id(std::string&& value);
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  std::string* mutable_element_id();
  std::string* release_element_id();
  void set_allocated_element_id(std::string* element_id);
  private:
  const std::string& _internal_element_id() const;
  void _internal_set_element_id(const std::string& value);
  std::string* _internal_mutable_element_id();
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CustomHudElement_Destroy)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr element_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CompendiumStatePlayer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CompendiumStatePlayer) */ {
 public:
  inline CDOTAUserMsg_CompendiumStatePlayer() : CDOTAUserMsg_CompendiumStatePlayer(nullptr) {}
  virtual ~CDOTAUserMsg_CompendiumStatePlayer();
  explicit constexpr CDOTAUserMsg_CompendiumStatePlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CompendiumStatePlayer(const CDOTAUserMsg_CompendiumStatePlayer& from);
  CDOTAUserMsg_CompendiumStatePlayer(CDOTAUserMsg_CompendiumStatePlayer&& from) noexcept
    : CDOTAUserMsg_CompendiumStatePlayer() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CompendiumStatePlayer& operator=(const CDOTAUserMsg_CompendiumStatePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CompendiumStatePlayer& operator=(CDOTAUserMsg_CompendiumStatePlayer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CompendiumStatePlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CompendiumStatePlayer* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CompendiumStatePlayer*>(
               &_CDOTAUserMsg_CompendiumStatePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    117;

  friend void swap(CDOTAUserMsg_CompendiumStatePlayer& a, CDOTAUserMsg_CompendiumStatePlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CompendiumStatePlayer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CompendiumStatePlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CompendiumStatePlayer* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CompendiumStatePlayer>(nullptr);
  }

  CDOTAUserMsg_CompendiumStatePlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CompendiumStatePlayer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CompendiumStatePlayer& from);
  void MergeFrom(const CDOTAUserMsg_CompendiumStatePlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CompendiumStatePlayer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CompendiumStatePlayer";
  }
  protected:
  explicit CDOTAUserMsg_CompendiumStatePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kLevelFieldNumber = 2,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 level = 2;
  bool has_level() const;
  private:
  bool _internal_has_level() const;
  public:
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CompendiumStatePlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 level_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CompendiumState PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_CompendiumState) */ {
 public:
  inline CDOTAUserMsg_CompendiumState() : CDOTAUserMsg_CompendiumState(nullptr) {}
  virtual ~CDOTAUserMsg_CompendiumState();
  explicit constexpr CDOTAUserMsg_CompendiumState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_CompendiumState(const CDOTAUserMsg_CompendiumState& from);
  CDOTAUserMsg_CompendiumState(CDOTAUserMsg_CompendiumState&& from) noexcept
    : CDOTAUserMsg_CompendiumState() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_CompendiumState& operator=(const CDOTAUserMsg_CompendiumState& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_CompendiumState& operator=(CDOTAUserMsg_CompendiumState&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_CompendiumState& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_CompendiumState* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CompendiumState*>(
               &_CDOTAUserMsg_CompendiumState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    118;

  friend void swap(CDOTAUserMsg_CompendiumState& a, CDOTAUserMsg_CompendiumState& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_CompendiumState* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_CompendiumState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CompendiumState* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_CompendiumState>(nullptr);
  }

  CDOTAUserMsg_CompendiumState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_CompendiumState>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_CompendiumState& from);
  void MergeFrom(const CDOTAUserMsg_CompendiumState& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_CompendiumState* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_CompendiumState";
  }
  protected:
  explicit CDOTAUserMsg_CompendiumState(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCompendiumPlayersFieldNumber = 1,
  };
  // repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
  int compendium_players_size() const;
  private:
  int _internal_compendium_players_size() const;
  public:
  void clear_compendium_players();
  ::CDOTAUserMsg_CompendiumStatePlayer* mutable_compendium_players(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CompendiumStatePlayer >*
      mutable_compendium_players();
  private:
  const ::CDOTAUserMsg_CompendiumStatePlayer& _internal_compendium_players(int index) const;
  ::CDOTAUserMsg_CompendiumStatePlayer* _internal_add_compendium_players();
  public:
  const ::CDOTAUserMsg_CompendiumStatePlayer& compendium_players(int index) const;
  ::CDOTAUserMsg_CompendiumStatePlayer* add_compendium_players();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CompendiumStatePlayer >&
      compendium_players() const;

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_CompendiumState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CompendiumStatePlayer > compendium_players_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ProjectionAbility PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ProjectionAbility) */ {
 public:
  inline CDOTAUserMsg_ProjectionAbility() : CDOTAUserMsg_ProjectionAbility(nullptr) {}
  virtual ~CDOTAUserMsg_ProjectionAbility();
  explicit constexpr CDOTAUserMsg_ProjectionAbility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ProjectionAbility(const CDOTAUserMsg_ProjectionAbility& from);
  CDOTAUserMsg_ProjectionAbility(CDOTAUserMsg_ProjectionAbility&& from) noexcept
    : CDOTAUserMsg_ProjectionAbility() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ProjectionAbility& operator=(const CDOTAUserMsg_ProjectionAbility& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ProjectionAbility& operator=(CDOTAUserMsg_ProjectionAbility&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ProjectionAbility& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ProjectionAbility* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ProjectionAbility*>(
               &_CDOTAUserMsg_ProjectionAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    119;

  friend void swap(CDOTAUserMsg_ProjectionAbility& a, CDOTAUserMsg_ProjectionAbility& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ProjectionAbility* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ProjectionAbility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ProjectionAbility* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ProjectionAbility>(nullptr);
  }

  CDOTAUserMsg_ProjectionAbility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ProjectionAbility>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ProjectionAbility& from);
  void MergeFrom(const CDOTAUserMsg_ProjectionAbility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ProjectionAbility* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ProjectionAbility";
  }
  protected:
  explicit CDOTAUserMsg_ProjectionAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOriginFieldNumber = 5,
    kAbilityIdFieldNumber = 1,
    kCasterEntIndexFieldNumber = 2,
    kCasterTeamFieldNumber = 3,
    kChannelEndFieldNumber = 4,
    kTrackCasterOnlyFieldNumber = 6,
    kEndTimeFieldNumber = 7,
    kVictimEntIndexFieldNumber = 8,
  };
  // optional .CMsgVector origin = 5;
  bool has_origin() const;
  private:
  bool _internal_has_origin() const;
  public:
  void clear_origin();
  const ::CMsgVector& origin() const;
  ::CMsgVector* release_origin();
  ::CMsgVector* mutable_origin();
  void set_allocated_origin(::CMsgVector* origin);
  private:
  const ::CMsgVector& _internal_origin() const;
  ::CMsgVector* _internal_mutable_origin();
  public:
  void unsafe_arena_set_allocated_origin(
      ::CMsgVector* origin);
  ::CMsgVector* unsafe_arena_release_origin();

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 caster_ent_index = 2;
  bool has_caster_ent_index() const;
  private:
  bool _internal_has_caster_ent_index() const;
  public:
  void clear_caster_ent_index();
  ::PROTOBUF_NAMESPACE_ID::int32 caster_ent_index() const;
  void set_caster_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caster_ent_index() const;
  void _internal_set_caster_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 caster_team = 3;
  bool has_caster_team() const;
  private:
  bool _internal_has_caster_team() const;
  public:
  void clear_caster_team();
  ::PROTOBUF_NAMESPACE_ID::int32 caster_team() const;
  void set_caster_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_caster_team() const;
  void _internal_set_caster_team(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool channel_end = 4;
  bool has_channel_end() const;
  private:
  bool _internal_has_channel_end() const;
  public:
  void clear_channel_end();
  bool channel_end() const;
  void set_channel_end(bool value);
  private:
  bool _internal_channel_end() const;
  void _internal_set_channel_end(bool value);
  public:

  // optional bool track_caster_only = 6;
  bool has_track_caster_only() const;
  private:
  bool _internal_has_track_caster_only() const;
  public:
  void clear_track_caster_only();
  bool track_caster_only() const;
  void set_track_caster_only(bool value);
  private:
  bool _internal_track_caster_only() const;
  void _internal_set_track_caster_only(bool value);
  public:

  // optional float end_time = 7;
  bool has_end_time() const;
  private:
  bool _internal_has_end_time() const;
  public:
  void clear_end_time();
  float end_time() const;
  void set_end_time(float value);
  private:
  float _internal_end_time() const;
  void _internal_set_end_time(float value);
  public:

  // optional int32 victim_ent_index = 8;
  bool has_victim_ent_index() const;
  private:
  bool _internal_has_victim_ent_index() const;
  public:
  void clear_victim_ent_index();
  ::PROTOBUF_NAMESPACE_ID::int32 victim_ent_index() const;
  void set_victim_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_victim_ent_index() const;
  void _internal_set_victim_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ProjectionAbility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgVector* origin_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 caster_ent_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 caster_team_;
  bool channel_end_;
  bool track_caster_only_;
  float end_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 victim_ent_index_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ProjectionEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ProjectionEvent) */ {
 public:
  inline CDOTAUserMsg_ProjectionEvent() : CDOTAUserMsg_ProjectionEvent(nullptr) {}
  virtual ~CDOTAUserMsg_ProjectionEvent();
  explicit constexpr CDOTAUserMsg_ProjectionEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ProjectionEvent(const CDOTAUserMsg_ProjectionEvent& from);
  CDOTAUserMsg_ProjectionEvent(CDOTAUserMsg_ProjectionEvent&& from) noexcept
    : CDOTAUserMsg_ProjectionEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ProjectionEvent& operator=(const CDOTAUserMsg_ProjectionEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ProjectionEvent& operator=(CDOTAUserMsg_ProjectionEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ProjectionEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ProjectionEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ProjectionEvent*>(
               &_CDOTAUserMsg_ProjectionEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    120;

  friend void swap(CDOTAUserMsg_ProjectionEvent& a, CDOTAUserMsg_ProjectionEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ProjectionEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ProjectionEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ProjectionEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ProjectionEvent>(nullptr);
  }

  CDOTAUserMsg_ProjectionEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ProjectionEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ProjectionEvent& from);
  void MergeFrom(const CDOTAUserMsg_ProjectionEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ProjectionEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ProjectionEvent";
  }
  protected:
  explicit CDOTAUserMsg_ProjectionEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEventIdFieldNumber = 1,
    kTeamFieldNumber = 2,
  };
  // optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::EProjectionEvent event_id() const;
  void set_event_id(::EProjectionEvent value);
  private:
  ::EProjectionEvent _internal_event_id() const;
  void _internal_set_event_id(::EProjectionEvent value);
  public:

  // optional uint32 team = 2;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::uint32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ProjectionEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_XPAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_XPAlert) */ {
 public:
  inline CDOTAUserMsg_XPAlert() : CDOTAUserMsg_XPAlert(nullptr) {}
  virtual ~CDOTAUserMsg_XPAlert();
  explicit constexpr CDOTAUserMsg_XPAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_XPAlert(const CDOTAUserMsg_XPAlert& from);
  CDOTAUserMsg_XPAlert(CDOTAUserMsg_XPAlert&& from) noexcept
    : CDOTAUserMsg_XPAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_XPAlert& operator=(const CDOTAUserMsg_XPAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_XPAlert& operator=(CDOTAUserMsg_XPAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_XPAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_XPAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_XPAlert*>(
               &_CDOTAUserMsg_XPAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    121;

  friend void swap(CDOTAUserMsg_XPAlert& a, CDOTAUserMsg_XPAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_XPAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_XPAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_XPAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_XPAlert>(nullptr);
  }

  CDOTAUserMsg_XPAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_XPAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_XPAlert& from);
  void MergeFrom(const CDOTAUserMsg_XPAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_XPAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_XPAlert";
  }
  protected:
  explicit CDOTAUserMsg_XPAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTargetEntindexFieldNumber = 2,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_entindex = 2;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_XPAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TalentTreeAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TalentTreeAlert) */ {
 public:
  inline CDOTAUserMsg_TalentTreeAlert() : CDOTAUserMsg_TalentTreeAlert(nullptr) {}
  virtual ~CDOTAUserMsg_TalentTreeAlert();
  explicit constexpr CDOTAUserMsg_TalentTreeAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TalentTreeAlert(const CDOTAUserMsg_TalentTreeAlert& from);
  CDOTAUserMsg_TalentTreeAlert(CDOTAUserMsg_TalentTreeAlert&& from) noexcept
    : CDOTAUserMsg_TalentTreeAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TalentTreeAlert& operator=(const CDOTAUserMsg_TalentTreeAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TalentTreeAlert& operator=(CDOTAUserMsg_TalentTreeAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TalentTreeAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TalentTreeAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TalentTreeAlert*>(
               &_CDOTAUserMsg_TalentTreeAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    122;

  friend void swap(CDOTAUserMsg_TalentTreeAlert& a, CDOTAUserMsg_TalentTreeAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TalentTreeAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TalentTreeAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TalentTreeAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TalentTreeAlert>(nullptr);
  }

  CDOTAUserMsg_TalentTreeAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TalentTreeAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TalentTreeAlert& from);
  void MergeFrom(const CDOTAUserMsg_TalentTreeAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TalentTreeAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TalentTreeAlert";
  }
  protected:
  explicit CDOTAUserMsg_TalentTreeAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTargetEntindexFieldNumber = 2,
    kAbilityIdFieldNumber = 3,
    kSlotFieldNumber = 4,
    kLearnedFieldNumber = 5,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_entindex = 2;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 ability_id = 3;
  bool has_ability_id() const;
  private:
  bool _internal_has_ability_id() const;
  public:
  void clear_ability_id();
  ::PROTOBUF_NAMESPACE_ID::int32 ability_id() const;
  void set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ability_id() const;
  void _internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot = 4;
  bool has_slot() const;
  private:
  bool _internal_has_slot() const;
  public:
  void clear_slot();
  ::PROTOBUF_NAMESPACE_ID::int32 slot() const;
  void set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot() const;
  void _internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool learned = 5;
  bool has_learned() const;
  private:
  bool _internal_has_learned() const;
  public:
  void clear_learned();
  bool learned() const;
  void set_learned(bool value);
  private:
  bool _internal_learned() const;
  void _internal_set_learned(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TalentTreeAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  ::PROTOBUF_NAMESPACE_ID::int32 ability_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_;
  bool learned_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UpdateQuestProgress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_UpdateQuestProgress) */ {
 public:
  inline CDOTAUserMsg_UpdateQuestProgress() : CDOTAUserMsg_UpdateQuestProgress(nullptr) {}
  virtual ~CDOTAUserMsg_UpdateQuestProgress();
  explicit constexpr CDOTAUserMsg_UpdateQuestProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_UpdateQuestProgress(const CDOTAUserMsg_UpdateQuestProgress& from);
  CDOTAUserMsg_UpdateQuestProgress(CDOTAUserMsg_UpdateQuestProgress&& from) noexcept
    : CDOTAUserMsg_UpdateQuestProgress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_UpdateQuestProgress& operator=(const CDOTAUserMsg_UpdateQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_UpdateQuestProgress& operator=(CDOTAUserMsg_UpdateQuestProgress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_UpdateQuestProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_UpdateQuestProgress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UpdateQuestProgress*>(
               &_CDOTAUserMsg_UpdateQuestProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    123;

  friend void swap(CDOTAUserMsg_UpdateQuestProgress& a, CDOTAUserMsg_UpdateQuestProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_UpdateQuestProgress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_UpdateQuestProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UpdateQuestProgress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_UpdateQuestProgress>(nullptr);
  }

  CDOTAUserMsg_UpdateQuestProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_UpdateQuestProgress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_UpdateQuestProgress& from);
  void MergeFrom(const CDOTAUserMsg_UpdateQuestProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_UpdateQuestProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_UpdateQuestProgress";
  }
  protected:
  explicit CDOTAUserMsg_UpdateQuestProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_UpdateQuestProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QuestStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_QuestStatus) */ {
 public:
  inline CDOTAUserMsg_QuestStatus() : CDOTAUserMsg_QuestStatus(nullptr) {}
  virtual ~CDOTAUserMsg_QuestStatus();
  explicit constexpr CDOTAUserMsg_QuestStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_QuestStatus(const CDOTAUserMsg_QuestStatus& from);
  CDOTAUserMsg_QuestStatus(CDOTAUserMsg_QuestStatus&& from) noexcept
    : CDOTAUserMsg_QuestStatus() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_QuestStatus& operator=(const CDOTAUserMsg_QuestStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_QuestStatus& operator=(CDOTAUserMsg_QuestStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_QuestStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_QuestStatus* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QuestStatus*>(
               &_CDOTAUserMsg_QuestStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    124;

  friend void swap(CDOTAUserMsg_QuestStatus& a, CDOTAUserMsg_QuestStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_QuestStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_QuestStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QuestStatus* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_QuestStatus>(nullptr);
  }

  CDOTAUserMsg_QuestStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_QuestStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_QuestStatus& from);
  void MergeFrom(const CDOTAUserMsg_QuestStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_QuestStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_QuestStatus";
  }
  protected:
  explicit CDOTAUserMsg_QuestStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kQuestIdFieldNumber = 2,
    kChallengeIdFieldNumber = 3,
    kProgressFieldNumber = 4,
    kGoalFieldNumber = 5,
    kQueryFieldNumber = 6,
    kFailGametimeFieldNumber = 7,
    kItemAbilityIdFieldNumber = 8,
  };
  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 quest_id = 2;
  bool has_quest_id() const;
  private:
  bool _internal_has_quest_id() const;
  public:
  void clear_quest_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id() const;
  void set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quest_id() const;
  void _internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_id = 3;
  bool has_challenge_id() const;
  private:
  bool _internal_has_challenge_id() const;
  public:
  void clear_challenge_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_id() const;
  void set_challenge_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_id() const;
  void _internal_set_challenge_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 progress = 4;
  bool has_progress() const;
  private:
  bool _internal_has_progress() const;
  public:
  void clear_progress();
  ::PROTOBUF_NAMESPACE_ID::uint32 progress() const;
  void set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_progress() const;
  void _internal_set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 goal = 5;
  bool has_goal() const;
  private:
  bool _internal_has_goal() const;
  public:
  void clear_goal();
  ::PROTOBUF_NAMESPACE_ID::uint32 goal() const;
  void set_goal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_goal() const;
  void _internal_set_goal(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 query = 6;
  bool has_query() const;
  private:
  bool _internal_has_query() const;
  public:
  void clear_query();
  ::PROTOBUF_NAMESPACE_ID::uint32 query() const;
  void set_query(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_query() const;
  void _internal_set_query(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float fail_gametime = 7;
  bool has_fail_gametime() const;
  private:
  bool _internal_has_fail_gametime() const;
  public:
  void clear_fail_gametime();
  float fail_gametime() const;
  void set_fail_gametime(float value);
  private:
  float _internal_fail_gametime() const;
  void _internal_set_fail_gametime(float value);
  public:

  // optional uint32 item_ability_id = 8;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QuestStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quest_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 progress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 goal_;
  ::PROTOBUF_NAMESPACE_ID::uint32 query_;
  float fail_gametime_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SuggestHeroPick PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SuggestHeroPick) */ {
 public:
  inline CDOTAUserMsg_SuggestHeroPick() : CDOTAUserMsg_SuggestHeroPick(nullptr) {}
  virtual ~CDOTAUserMsg_SuggestHeroPick();
  explicit constexpr CDOTAUserMsg_SuggestHeroPick(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SuggestHeroPick(const CDOTAUserMsg_SuggestHeroPick& from);
  CDOTAUserMsg_SuggestHeroPick(CDOTAUserMsg_SuggestHeroPick&& from) noexcept
    : CDOTAUserMsg_SuggestHeroPick() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SuggestHeroPick& operator=(const CDOTAUserMsg_SuggestHeroPick& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SuggestHeroPick& operator=(CDOTAUserMsg_SuggestHeroPick&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SuggestHeroPick& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SuggestHeroPick* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SuggestHeroPick*>(
               &_CDOTAUserMsg_SuggestHeroPick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    125;

  friend void swap(CDOTAUserMsg_SuggestHeroPick& a, CDOTAUserMsg_SuggestHeroPick& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SuggestHeroPick* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SuggestHeroPick* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SuggestHeroPick* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SuggestHeroPick>(nullptr);
  }

  CDOTAUserMsg_SuggestHeroPick* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SuggestHeroPick>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SuggestHeroPick& from);
  void MergeFrom(const CDOTAUserMsg_SuggestHeroPick& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SuggestHeroPick* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SuggestHeroPick";
  }
  protected:
  explicit CDOTAUserMsg_SuggestHeroPick(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kHeroIdFieldNumber = 2,
    kBanFieldNumber = 3,
  };
  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id() const;
  void set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_id() const;
  void _internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool ban = 3;
  bool has_ban() const;
  private:
  bool _internal_has_ban() const;
  public:
  void clear_ban();
  bool ban() const;
  void set_ban(bool value);
  private:
  bool _internal_ban() const;
  void _internal_set_ban(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SuggestHeroPick)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id_;
  bool ban_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SuggestHeroRole PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SuggestHeroRole) */ {
 public:
  inline CDOTAUserMsg_SuggestHeroRole() : CDOTAUserMsg_SuggestHeroRole(nullptr) {}
  virtual ~CDOTAUserMsg_SuggestHeroRole();
  explicit constexpr CDOTAUserMsg_SuggestHeroRole(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SuggestHeroRole(const CDOTAUserMsg_SuggestHeroRole& from);
  CDOTAUserMsg_SuggestHeroRole(CDOTAUserMsg_SuggestHeroRole&& from) noexcept
    : CDOTAUserMsg_SuggestHeroRole() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SuggestHeroRole& operator=(const CDOTAUserMsg_SuggestHeroRole& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SuggestHeroRole& operator=(CDOTAUserMsg_SuggestHeroRole&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SuggestHeroRole& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SuggestHeroRole* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SuggestHeroRole*>(
               &_CDOTAUserMsg_SuggestHeroRole_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    126;

  friend void swap(CDOTAUserMsg_SuggestHeroRole& a, CDOTAUserMsg_SuggestHeroRole& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SuggestHeroRole* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SuggestHeroRole* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SuggestHeroRole* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SuggestHeroRole>(nullptr);
  }

  CDOTAUserMsg_SuggestHeroRole* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SuggestHeroRole>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SuggestHeroRole& from);
  void MergeFrom(const CDOTAUserMsg_SuggestHeroRole& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SuggestHeroRole* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SuggestHeroRole";
  }
  protected:
  explicit CDOTAUserMsg_SuggestHeroRole(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroRoleFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional string hero_role = 2;
  bool has_hero_role() const;
  private:
  bool _internal_has_hero_role() const;
  public:
  void clear_hero_role();
  const std::string& hero_role() const;
  void set_hero_role(const std::string& value);
  void set_hero_role(std::string&& value);
  void set_hero_role(const char* value);
  void set_hero_role(const char* value, size_t size);
  std::string* mutable_hero_role();
  std::string* release_hero_role();
  void set_allocated_hero_role(std::string* hero_role);
  private:
  const std::string& _internal_hero_role() const;
  void _internal_set_hero_role(const std::string& value);
  std::string* _internal_mutable_hero_role();
  public:

  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SuggestHeroRole)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hero_role_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_KillcamDamageTaken PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_KillcamDamageTaken) */ {
 public:
  inline CDOTAUserMsg_KillcamDamageTaken() : CDOTAUserMsg_KillcamDamageTaken(nullptr) {}
  virtual ~CDOTAUserMsg_KillcamDamageTaken();
  explicit constexpr CDOTAUserMsg_KillcamDamageTaken(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_KillcamDamageTaken(const CDOTAUserMsg_KillcamDamageTaken& from);
  CDOTAUserMsg_KillcamDamageTaken(CDOTAUserMsg_KillcamDamageTaken&& from) noexcept
    : CDOTAUserMsg_KillcamDamageTaken() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_KillcamDamageTaken& operator=(const CDOTAUserMsg_KillcamDamageTaken& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_KillcamDamageTaken& operator=(CDOTAUserMsg_KillcamDamageTaken&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_KillcamDamageTaken& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_KillcamDamageTaken* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_KillcamDamageTaken*>(
               &_CDOTAUserMsg_KillcamDamageTaken_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    127;

  friend void swap(CDOTAUserMsg_KillcamDamageTaken& a, CDOTAUserMsg_KillcamDamageTaken& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_KillcamDamageTaken* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_KillcamDamageTaken* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_KillcamDamageTaken* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_KillcamDamageTaken>(nullptr);
  }

  CDOTAUserMsg_KillcamDamageTaken* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_KillcamDamageTaken>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_KillcamDamageTaken& from);
  void MergeFrom(const CDOTAUserMsg_KillcamDamageTaken& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_KillcamDamageTaken* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_KillcamDamageTaken";
  }
  protected:
  explicit CDOTAUserMsg_KillcamDamageTaken(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroNameFieldNumber = 5,
    kDamageColorFieldNumber = 6,
    kPlayerIdFieldNumber = 1,
    kDamageTakenFieldNumber = 2,
    kItemTypeFieldNumber = 3,
    kItemAbilityIdFieldNumber = 4,
  };
  // optional string hero_name = 5;
  bool has_hero_name() const;
  private:
  bool _internal_has_hero_name() const;
  public:
  void clear_hero_name();
  const std::string& hero_name() const;
  void set_hero_name(const std::string& value);
  void set_hero_name(std::string&& value);
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  std::string* mutable_hero_name();
  std::string* release_hero_name();
  void set_allocated_hero_name(std::string* hero_name);
  private:
  const std::string& _internal_hero_name() const;
  void _internal_set_hero_name(const std::string& value);
  std::string* _internal_mutable_hero_name();
  public:

  // optional string damage_color = 6;
  bool has_damage_color() const;
  private:
  bool _internal_has_damage_color() const;
  public:
  void clear_damage_color();
  const std::string& damage_color() const;
  void set_damage_color(const std::string& value);
  void set_damage_color(std::string&& value);
  void set_damage_color(const char* value);
  void set_damage_color(const char* value, size_t size);
  std::string* mutable_damage_color();
  std::string* release_damage_color();
  void set_allocated_damage_color(std::string* damage_color);
  private:
  const std::string& _internal_damage_color() const;
  void _internal_set_damage_color(const std::string& value);
  std::string* _internal_mutable_damage_color();
  public:

  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 damage_taken = 2;
  bool has_damage_taken() const;
  private:
  bool _internal_has_damage_taken() const;
  public:
  void clear_damage_taken();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_taken() const;
  void set_damage_taken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_taken() const;
  void _internal_set_damage_taken(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_type = 3;
  bool has_item_type() const;
  private:
  bool _internal_has_item_type() const;
  public:
  void clear_item_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_type() const;
  void set_item_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_type() const;
  void _internal_set_item_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_ability_id = 4;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_KillcamDamageTaken)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr hero_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr damage_color_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_taken_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SelectPenaltyGold PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SelectPenaltyGold) */ {
 public:
  inline CDOTAUserMsg_SelectPenaltyGold() : CDOTAUserMsg_SelectPenaltyGold(nullptr) {}
  virtual ~CDOTAUserMsg_SelectPenaltyGold();
  explicit constexpr CDOTAUserMsg_SelectPenaltyGold(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SelectPenaltyGold(const CDOTAUserMsg_SelectPenaltyGold& from);
  CDOTAUserMsg_SelectPenaltyGold(CDOTAUserMsg_SelectPenaltyGold&& from) noexcept
    : CDOTAUserMsg_SelectPenaltyGold() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SelectPenaltyGold& operator=(const CDOTAUserMsg_SelectPenaltyGold& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SelectPenaltyGold& operator=(CDOTAUserMsg_SelectPenaltyGold&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SelectPenaltyGold& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SelectPenaltyGold* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SelectPenaltyGold*>(
               &_CDOTAUserMsg_SelectPenaltyGold_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    128;

  friend void swap(CDOTAUserMsg_SelectPenaltyGold& a, CDOTAUserMsg_SelectPenaltyGold& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SelectPenaltyGold* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SelectPenaltyGold* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SelectPenaltyGold* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SelectPenaltyGold>(nullptr);
  }

  CDOTAUserMsg_SelectPenaltyGold* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SelectPenaltyGold>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SelectPenaltyGold& from);
  void MergeFrom(const CDOTAUserMsg_SelectPenaltyGold& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SelectPenaltyGold* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SelectPenaltyGold";
  }
  protected:
  explicit CDOTAUserMsg_SelectPenaltyGold(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kCostFieldNumber = 2,
  };
  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional sint32 cost = 2;
  bool has_cost() const;
  private:
  bool _internal_has_cost() const;
  public:
  void clear_cost();
  ::PROTOBUF_NAMESPACE_ID::int32 cost() const;
  void set_cost(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cost() const;
  void _internal_set_cost(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SelectPenaltyGold)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 cost_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_RollDiceResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_RollDiceResult) */ {
 public:
  inline CDOTAUserMsg_RollDiceResult() : CDOTAUserMsg_RollDiceResult(nullptr) {}
  virtual ~CDOTAUserMsg_RollDiceResult();
  explicit constexpr CDOTAUserMsg_RollDiceResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_RollDiceResult(const CDOTAUserMsg_RollDiceResult& from);
  CDOTAUserMsg_RollDiceResult(CDOTAUserMsg_RollDiceResult&& from) noexcept
    : CDOTAUserMsg_RollDiceResult() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_RollDiceResult& operator=(const CDOTAUserMsg_RollDiceResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_RollDiceResult& operator=(CDOTAUserMsg_RollDiceResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_RollDiceResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_RollDiceResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_RollDiceResult*>(
               &_CDOTAUserMsg_RollDiceResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    129;

  friend void swap(CDOTAUserMsg_RollDiceResult& a, CDOTAUserMsg_RollDiceResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_RollDiceResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_RollDiceResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_RollDiceResult* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_RollDiceResult>(nullptr);
  }

  CDOTAUserMsg_RollDiceResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_RollDiceResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_RollDiceResult& from);
  void MergeFrom(const CDOTAUserMsg_RollDiceResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_RollDiceResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_RollDiceResult";
  }
  protected:
  explicit CDOTAUserMsg_RollDiceResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kChannelTypeFieldNumber = 2,
    kRollMinFieldNumber = 3,
    kRollMaxFieldNumber = 4,
    kResultFieldNumber = 5,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 channel_type = 2;
  bool has_channel_type() const;
  private:
  bool _internal_has_channel_type() const;
  public:
  void clear_channel_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type() const;
  void set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_type() const;
  void _internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 roll_min = 3;
  bool has_roll_min() const;
  private:
  bool _internal_has_roll_min() const;
  public:
  void clear_roll_min();
  ::PROTOBUF_NAMESPACE_ID::uint32 roll_min() const;
  void set_roll_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_roll_min() const;
  void _internal_set_roll_min(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 roll_max = 4;
  bool has_roll_max() const;
  private:
  bool _internal_has_roll_max() const;
  public:
  void clear_roll_max();
  ::PROTOBUF_NAMESPACE_ID::uint32 roll_max() const;
  void set_roll_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_roll_max() const;
  void _internal_set_roll_max(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 result = 5;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::PROTOBUF_NAMESPACE_ID::uint32 result() const;
  void set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_result() const;
  void _internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_RollDiceResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 roll_min_;
  ::PROTOBUF_NAMESPACE_ID::uint32 roll_max_;
  ::PROTOBUF_NAMESPACE_ID::uint32 result_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_FlipCoinResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_FlipCoinResult) */ {
 public:
  inline CDOTAUserMsg_FlipCoinResult() : CDOTAUserMsg_FlipCoinResult(nullptr) {}
  virtual ~CDOTAUserMsg_FlipCoinResult();
  explicit constexpr CDOTAUserMsg_FlipCoinResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_FlipCoinResult(const CDOTAUserMsg_FlipCoinResult& from);
  CDOTAUserMsg_FlipCoinResult(CDOTAUserMsg_FlipCoinResult&& from) noexcept
    : CDOTAUserMsg_FlipCoinResult() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_FlipCoinResult& operator=(const CDOTAUserMsg_FlipCoinResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_FlipCoinResult& operator=(CDOTAUserMsg_FlipCoinResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_FlipCoinResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_FlipCoinResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_FlipCoinResult*>(
               &_CDOTAUserMsg_FlipCoinResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    130;

  friend void swap(CDOTAUserMsg_FlipCoinResult& a, CDOTAUserMsg_FlipCoinResult& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_FlipCoinResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_FlipCoinResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_FlipCoinResult* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_FlipCoinResult>(nullptr);
  }

  CDOTAUserMsg_FlipCoinResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_FlipCoinResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_FlipCoinResult& from);
  void MergeFrom(const CDOTAUserMsg_FlipCoinResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_FlipCoinResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_FlipCoinResult";
  }
  protected:
  explicit CDOTAUserMsg_FlipCoinResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kChannelTypeFieldNumber = 2,
    kResultFieldNumber = 3,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 channel_type = 2;
  bool has_channel_type() const;
  private:
  bool _internal_has_channel_type() const;
  public:
  void clear_channel_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type() const;
  void set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_type() const;
  void _internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool result = 3;
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_FlipCoinResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type_;
  bool result_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMessage_RequestItemSuggestions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMessage_RequestItemSuggestions) */ {
 public:
  inline CDOTAUserMessage_RequestItemSuggestions() : CDOTAUserMessage_RequestItemSuggestions(nullptr) {}
  virtual ~CDOTAUserMessage_RequestItemSuggestions();
  explicit constexpr CDOTAUserMessage_RequestItemSuggestions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMessage_RequestItemSuggestions(const CDOTAUserMessage_RequestItemSuggestions& from);
  CDOTAUserMessage_RequestItemSuggestions(CDOTAUserMessage_RequestItemSuggestions&& from) noexcept
    : CDOTAUserMessage_RequestItemSuggestions() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMessage_RequestItemSuggestions& operator=(const CDOTAUserMessage_RequestItemSuggestions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMessage_RequestItemSuggestions& operator=(CDOTAUserMessage_RequestItemSuggestions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMessage_RequestItemSuggestions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMessage_RequestItemSuggestions* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMessage_RequestItemSuggestions*>(
               &_CDOTAUserMessage_RequestItemSuggestions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    131;

  friend void swap(CDOTAUserMessage_RequestItemSuggestions& a, CDOTAUserMessage_RequestItemSuggestions& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMessage_RequestItemSuggestions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMessage_RequestItemSuggestions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMessage_RequestItemSuggestions* New() const final {
    return CreateMaybeMessage<CDOTAUserMessage_RequestItemSuggestions>(nullptr);
  }

  CDOTAUserMessage_RequestItemSuggestions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMessage_RequestItemSuggestions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMessage_RequestItemSuggestions& from);
  void MergeFrom(const CDOTAUserMessage_RequestItemSuggestions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMessage_RequestItemSuggestions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMessage_RequestItemSuggestions";
  }
  protected:
  explicit CDOTAUserMessage_RequestItemSuggestions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMessage_RequestItemSuggestions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMessage_TeamCaptainChanged PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMessage_TeamCaptainChanged) */ {
 public:
  inline CDOTAUserMessage_TeamCaptainChanged() : CDOTAUserMessage_TeamCaptainChanged(nullptr) {}
  virtual ~CDOTAUserMessage_TeamCaptainChanged();
  explicit constexpr CDOTAUserMessage_TeamCaptainChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMessage_TeamCaptainChanged(const CDOTAUserMessage_TeamCaptainChanged& from);
  CDOTAUserMessage_TeamCaptainChanged(CDOTAUserMessage_TeamCaptainChanged&& from) noexcept
    : CDOTAUserMessage_TeamCaptainChanged() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMessage_TeamCaptainChanged& operator=(const CDOTAUserMessage_TeamCaptainChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMessage_TeamCaptainChanged& operator=(CDOTAUserMessage_TeamCaptainChanged&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMessage_TeamCaptainChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMessage_TeamCaptainChanged* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMessage_TeamCaptainChanged*>(
               &_CDOTAUserMessage_TeamCaptainChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    132;

  friend void swap(CDOTAUserMessage_TeamCaptainChanged& a, CDOTAUserMessage_TeamCaptainChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMessage_TeamCaptainChanged* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMessage_TeamCaptainChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMessage_TeamCaptainChanged* New() const final {
    return CreateMaybeMessage<CDOTAUserMessage_TeamCaptainChanged>(nullptr);
  }

  CDOTAUserMessage_TeamCaptainChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMessage_TeamCaptainChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMessage_TeamCaptainChanged& from);
  void MergeFrom(const CDOTAUserMessage_TeamCaptainChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMessage_TeamCaptainChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMessage_TeamCaptainChanged";
  }
  protected:
  explicit CDOTAUserMessage_TeamCaptainChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamFieldNumber = 1,
    kCaptainPlayerIdFieldNumber = 2,
  };
  // optional uint32 team = 1;
  bool has_team() const;
  private:
  bool _internal_has_team() const;
  public:
  void clear_team();
  ::PROTOBUF_NAMESPACE_ID::uint32 team() const;
  void set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team() const;
  void _internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 captain_player_id = 2;
  bool has_captain_player_id() const;
  private:
  bool _internal_has_captain_player_id() const;
  public:
  void clear_captain_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 captain_player_id() const;
  void set_captain_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_captain_player_id() const;
  void _internal_set_captain_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMessage_TeamCaptainChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_;
  ::PROTOBUF_NAMESPACE_ID::uint32 captain_player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatWheelCooldown PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ChatWheelCooldown) */ {
 public:
  inline CDOTAUserMsg_ChatWheelCooldown() : CDOTAUserMsg_ChatWheelCooldown(nullptr) {}
  virtual ~CDOTAUserMsg_ChatWheelCooldown();
  explicit constexpr CDOTAUserMsg_ChatWheelCooldown(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ChatWheelCooldown(const CDOTAUserMsg_ChatWheelCooldown& from);
  CDOTAUserMsg_ChatWheelCooldown(CDOTAUserMsg_ChatWheelCooldown&& from) noexcept
    : CDOTAUserMsg_ChatWheelCooldown() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ChatWheelCooldown& operator=(const CDOTAUserMsg_ChatWheelCooldown& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ChatWheelCooldown& operator=(CDOTAUserMsg_ChatWheelCooldown&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ChatWheelCooldown& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ChatWheelCooldown* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatWheelCooldown*>(
               &_CDOTAUserMsg_ChatWheelCooldown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    133;

  friend void swap(CDOTAUserMsg_ChatWheelCooldown& a, CDOTAUserMsg_ChatWheelCooldown& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ChatWheelCooldown* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ChatWheelCooldown* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatWheelCooldown* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatWheelCooldown>(nullptr);
  }

  CDOTAUserMsg_ChatWheelCooldown* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatWheelCooldown>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ChatWheelCooldown& from);
  void MergeFrom(const CDOTAUserMsg_ChatWheelCooldown& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ChatWheelCooldown* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ChatWheelCooldown";
  }
  protected:
  explicit CDOTAUserMsg_ChatWheelCooldown(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageIdFieldNumber = 1,
    kCooldownRemainingFieldNumber = 2,
  };
  // optional uint32 message_id = 1;
  bool has_message_id() const;
  private:
  bool _internal_has_message_id() const;
  public:
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional float cooldown_remaining = 2;
  bool has_cooldown_remaining() const;
  private:
  bool _internal_has_cooldown_remaining() const;
  public:
  void clear_cooldown_remaining();
  float cooldown_remaining() const;
  void set_cooldown_remaining(float value);
  private:
  float _internal_cooldown_remaining() const;
  void _internal_set_cooldown_remaining(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatWheelCooldown)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 message_id_;
  float cooldown_remaining_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HeroRelicProgress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HeroRelicProgress) */ {
 public:
  inline CDOTAUserMsg_HeroRelicProgress() : CDOTAUserMsg_HeroRelicProgress(nullptr) {}
  virtual ~CDOTAUserMsg_HeroRelicProgress();
  explicit constexpr CDOTAUserMsg_HeroRelicProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HeroRelicProgress(const CDOTAUserMsg_HeroRelicProgress& from);
  CDOTAUserMsg_HeroRelicProgress(CDOTAUserMsg_HeroRelicProgress&& from) noexcept
    : CDOTAUserMsg_HeroRelicProgress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HeroRelicProgress& operator=(const CDOTAUserMsg_HeroRelicProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HeroRelicProgress& operator=(CDOTAUserMsg_HeroRelicProgress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HeroRelicProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HeroRelicProgress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HeroRelicProgress*>(
               &_CDOTAUserMsg_HeroRelicProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    134;

  friend void swap(CDOTAUserMsg_HeroRelicProgress& a, CDOTAUserMsg_HeroRelicProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HeroRelicProgress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HeroRelicProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HeroRelicProgress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HeroRelicProgress>(nullptr);
  }

  CDOTAUserMsg_HeroRelicProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HeroRelicProgress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HeroRelicProgress& from);
  void MergeFrom(const CDOTAUserMsg_HeroRelicProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HeroRelicProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HeroRelicProgress";
  }
  protected:
  explicit CDOTAUserMsg_HeroRelicProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeroRelicTypeFieldNumber = 1,
    kValueFieldNumber = 2,
    kEhandleFieldNumber = 3,
    kEventIdFieldNumber = 4,
  };
  // optional uint32 hero_relic_type = 1;
  bool has_hero_relic_type() const;
  private:
  bool _internal_has_hero_relic_type() const;
  public:
  void clear_hero_relic_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_relic_type() const;
  void set_hero_relic_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_relic_type() const;
  void _internal_set_hero_relic_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::uint32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 ehandle = 3;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 event_id = 4;
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_id() const;
  void _internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HeroRelicProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_relic_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AbilityDraftRequestAbility PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AbilityDraftRequestAbility) */ {
 public:
  inline CDOTAUserMsg_AbilityDraftRequestAbility() : CDOTAUserMsg_AbilityDraftRequestAbility(nullptr) {}
  virtual ~CDOTAUserMsg_AbilityDraftRequestAbility();
  explicit constexpr CDOTAUserMsg_AbilityDraftRequestAbility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AbilityDraftRequestAbility(const CDOTAUserMsg_AbilityDraftRequestAbility& from);
  CDOTAUserMsg_AbilityDraftRequestAbility(CDOTAUserMsg_AbilityDraftRequestAbility&& from) noexcept
    : CDOTAUserMsg_AbilityDraftRequestAbility() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AbilityDraftRequestAbility& operator=(const CDOTAUserMsg_AbilityDraftRequestAbility& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AbilityDraftRequestAbility& operator=(CDOTAUserMsg_AbilityDraftRequestAbility&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AbilityDraftRequestAbility& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AbilityDraftRequestAbility* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AbilityDraftRequestAbility*>(
               &_CDOTAUserMsg_AbilityDraftRequestAbility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    135;

  friend void swap(CDOTAUserMsg_AbilityDraftRequestAbility& a, CDOTAUserMsg_AbilityDraftRequestAbility& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AbilityDraftRequestAbility* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AbilityDraftRequestAbility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AbilityDraftRequestAbility* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilityDraftRequestAbility>(nullptr);
  }

  CDOTAUserMsg_AbilityDraftRequestAbility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AbilityDraftRequestAbility>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AbilityDraftRequestAbility& from);
  void MergeFrom(const CDOTAUserMsg_AbilityDraftRequestAbility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AbilityDraftRequestAbility* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AbilityDraftRequestAbility";
  }
  protected:
  explicit CDOTAUserMsg_AbilityDraftRequestAbility(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kRequestedAbilityIdFieldNumber = 2,
    kCtrlIsDownFieldNumber = 3,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 requested_ability_id = 2;
  bool has_requested_ability_id() const;
  private:
  bool _internal_has_requested_ability_id() const;
  public:
  void clear_requested_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_ability_id() const;
  void set_requested_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requested_ability_id() const;
  void _internal_set_requested_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool ctrl_is_down = 3;
  bool has_ctrl_is_down() const;
  private:
  bool _internal_has_ctrl_is_down() const;
  public:
  void clear_ctrl_is_down();
  bool ctrl_is_down() const;
  void set_ctrl_is_down(bool value);
  private:
  bool _internal_ctrl_is_down() const;
  void _internal_set_ctrl_is_down(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AbilityDraftRequestAbility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_ability_id_;
  bool ctrl_is_down_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DamageReport PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_DamageReport) */ {
 public:
  inline CDOTAUserMsg_DamageReport() : CDOTAUserMsg_DamageReport(nullptr) {}
  virtual ~CDOTAUserMsg_DamageReport();
  explicit constexpr CDOTAUserMsg_DamageReport(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_DamageReport(const CDOTAUserMsg_DamageReport& from);
  CDOTAUserMsg_DamageReport(CDOTAUserMsg_DamageReport&& from) noexcept
    : CDOTAUserMsg_DamageReport() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_DamageReport& operator=(const CDOTAUserMsg_DamageReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_DamageReport& operator=(CDOTAUserMsg_DamageReport&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_DamageReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_DamageReport* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DamageReport*>(
               &_CDOTAUserMsg_DamageReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    136;

  friend void swap(CDOTAUserMsg_DamageReport& a, CDOTAUserMsg_DamageReport& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_DamageReport* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_DamageReport* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DamageReport* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_DamageReport>(nullptr);
  }

  CDOTAUserMsg_DamageReport* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_DamageReport>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_DamageReport& from);
  void MergeFrom(const CDOTAUserMsg_DamageReport& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_DamageReport* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_DamageReport";
  }
  protected:
  explicit CDOTAUserMsg_DamageReport(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTargetHeroIdFieldNumber = 2,
    kSourceHeroIdFieldNumber = 3,
    kDamageAmountFieldNumber = 4,
    kBroadcastFieldNumber = 5,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_hero_id = 2;
  bool has_target_hero_id() const;
  private:
  bool _internal_has_target_hero_id() const;
  public:
  void clear_target_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hero_id() const;
  void set_target_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_hero_id() const;
  void _internal_set_target_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 source_hero_id = 3;
  bool has_source_hero_id() const;
  private:
  bool _internal_has_source_hero_id() const;
  public:
  void clear_source_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_hero_id() const;
  void set_source_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_hero_id() const;
  void _internal_set_source_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 damage_amount = 4;
  bool has_damage_amount() const;
  private:
  bool _internal_has_damage_amount() const;
  public:
  void clear_damage_amount();
  ::PROTOBUF_NAMESPACE_ID::int32 damage_amount() const;
  void set_damage_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_damage_amount() const;
  void _internal_set_damage_amount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool broadcast = 5;
  bool has_broadcast() const;
  private:
  bool _internal_has_broadcast() const;
  public:
  void clear_broadcast();
  bool broadcast() const;
  void set_broadcast(bool value);
  private:
  bool _internal_broadcast() const;
  void _internal_set_broadcast(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DamageReport)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hero_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_hero_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 damage_amount_;
  bool broadcast_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SalutePlayer PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_SalutePlayer) */ {
 public:
  inline CDOTAUserMsg_SalutePlayer() : CDOTAUserMsg_SalutePlayer(nullptr) {}
  virtual ~CDOTAUserMsg_SalutePlayer();
  explicit constexpr CDOTAUserMsg_SalutePlayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_SalutePlayer(const CDOTAUserMsg_SalutePlayer& from);
  CDOTAUserMsg_SalutePlayer(CDOTAUserMsg_SalutePlayer&& from) noexcept
    : CDOTAUserMsg_SalutePlayer() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_SalutePlayer& operator=(const CDOTAUserMsg_SalutePlayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_SalutePlayer& operator=(CDOTAUserMsg_SalutePlayer&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_SalutePlayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_SalutePlayer* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SalutePlayer*>(
               &_CDOTAUserMsg_SalutePlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    137;

  friend void swap(CDOTAUserMsg_SalutePlayer& a, CDOTAUserMsg_SalutePlayer& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_SalutePlayer* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_SalutePlayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SalutePlayer* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_SalutePlayer>(nullptr);
  }

  CDOTAUserMsg_SalutePlayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_SalutePlayer>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_SalutePlayer& from);
  void MergeFrom(const CDOTAUserMsg_SalutePlayer& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_SalutePlayer* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_SalutePlayer";
  }
  protected:
  explicit CDOTAUserMsg_SalutePlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kTipAmountFieldNumber = 3,
    kEventIdFieldNumber = 4,
  };
  // optional int32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 tip_amount = 3;
  bool has_tip_amount() const;
  private:
  bool _internal_has_tip_amount() const;
  public:
  void clear_tip_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 tip_amount() const;
  void set_tip_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tip_amount() const;
  void _internal_set_tip_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 event_id = 4;
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_id() const;
  void _internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_SalutePlayer)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tip_amount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TipAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_TipAlert) */ {
 public:
  inline CDOTAUserMsg_TipAlert() : CDOTAUserMsg_TipAlert(nullptr) {}
  virtual ~CDOTAUserMsg_TipAlert();
  explicit constexpr CDOTAUserMsg_TipAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_TipAlert(const CDOTAUserMsg_TipAlert& from);
  CDOTAUserMsg_TipAlert(CDOTAUserMsg_TipAlert&& from) noexcept
    : CDOTAUserMsg_TipAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_TipAlert& operator=(const CDOTAUserMsg_TipAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_TipAlert& operator=(CDOTAUserMsg_TipAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_TipAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_TipAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TipAlert*>(
               &_CDOTAUserMsg_TipAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    138;

  friend void swap(CDOTAUserMsg_TipAlert& a, CDOTAUserMsg_TipAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_TipAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_TipAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TipAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_TipAlert>(nullptr);
  }

  CDOTAUserMsg_TipAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_TipAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_TipAlert& from);
  void MergeFrom(const CDOTAUserMsg_TipAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_TipAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_TipAlert";
  }
  protected:
  explicit CDOTAUserMsg_TipAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTipTextFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // optional string tip_text = 2;
  bool has_tip_text() const;
  private:
  bool _internal_has_tip_text() const;
  public:
  void clear_tip_text();
  const std::string& tip_text() const;
  void set_tip_text(const std::string& value);
  void set_tip_text(std::string&& value);
  void set_tip_text(const char* value);
  void set_tip_text(const char* value, size_t size);
  std::string* mutable_tip_text();
  std::string* release_tip_text();
  void set_allocated_tip_text(std::string* tip_text);
  private:
  const std::string& _internal_tip_text() const;
  void _internal_set_tip_text(const std::string& value);
  std::string* _internal_mutable_tip_text();
  public:

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_TipAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tip_text_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ReplaceQueryUnit PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ReplaceQueryUnit) */ {
 public:
  inline CDOTAUserMsg_ReplaceQueryUnit() : CDOTAUserMsg_ReplaceQueryUnit(nullptr) {}
  virtual ~CDOTAUserMsg_ReplaceQueryUnit();
  explicit constexpr CDOTAUserMsg_ReplaceQueryUnit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ReplaceQueryUnit(const CDOTAUserMsg_ReplaceQueryUnit& from);
  CDOTAUserMsg_ReplaceQueryUnit(CDOTAUserMsg_ReplaceQueryUnit&& from) noexcept
    : CDOTAUserMsg_ReplaceQueryUnit() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ReplaceQueryUnit& operator=(const CDOTAUserMsg_ReplaceQueryUnit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ReplaceQueryUnit& operator=(CDOTAUserMsg_ReplaceQueryUnit&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ReplaceQueryUnit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ReplaceQueryUnit* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ReplaceQueryUnit*>(
               &_CDOTAUserMsg_ReplaceQueryUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    139;

  friend void swap(CDOTAUserMsg_ReplaceQueryUnit& a, CDOTAUserMsg_ReplaceQueryUnit& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ReplaceQueryUnit* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ReplaceQueryUnit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ReplaceQueryUnit* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ReplaceQueryUnit>(nullptr);
  }

  CDOTAUserMsg_ReplaceQueryUnit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ReplaceQueryUnit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ReplaceQueryUnit& from);
  void MergeFrom(const CDOTAUserMsg_ReplaceQueryUnit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ReplaceQueryUnit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ReplaceQueryUnit";
  }
  protected:
  explicit CDOTAUserMsg_ReplaceQueryUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kSourceEntindexFieldNumber = 2,
    kTargetEntindexFieldNumber = 3,
  };
  // required uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 source_entindex = 2;
  bool has_source_entindex() const;
  private:
  bool _internal_has_source_entindex() const;
  public:
  void clear_source_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_entindex() const;
  void set_source_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_entindex() const;
  void _internal_set_source_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_entindex = 3;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ReplaceQueryUnit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_entindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ESArcanaCombo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ESArcanaCombo) */ {
 public:
  inline CDOTAUserMsg_ESArcanaCombo() : CDOTAUserMsg_ESArcanaCombo(nullptr) {}
  virtual ~CDOTAUserMsg_ESArcanaCombo();
  explicit constexpr CDOTAUserMsg_ESArcanaCombo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ESArcanaCombo(const CDOTAUserMsg_ESArcanaCombo& from);
  CDOTAUserMsg_ESArcanaCombo(CDOTAUserMsg_ESArcanaCombo&& from) noexcept
    : CDOTAUserMsg_ESArcanaCombo() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ESArcanaCombo& operator=(const CDOTAUserMsg_ESArcanaCombo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ESArcanaCombo& operator=(CDOTAUserMsg_ESArcanaCombo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ESArcanaCombo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ESArcanaCombo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ESArcanaCombo*>(
               &_CDOTAUserMsg_ESArcanaCombo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    140;

  friend void swap(CDOTAUserMsg_ESArcanaCombo& a, CDOTAUserMsg_ESArcanaCombo& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ESArcanaCombo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ESArcanaCombo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ESArcanaCombo* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ESArcanaCombo>(nullptr);
  }

  CDOTAUserMsg_ESArcanaCombo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ESArcanaCombo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ESArcanaCombo& from);
  void MergeFrom(const CDOTAUserMsg_ESArcanaCombo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ESArcanaCombo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ESArcanaCombo";
  }
  protected:
  explicit CDOTAUserMsg_ESArcanaCombo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kComboCountFieldNumber = 2,
    kArcanaLevelFieldNumber = 3,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 combo_count = 2;
  bool has_combo_count() const;
  private:
  bool _internal_has_combo_count() const;
  public:
  void clear_combo_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 combo_count() const;
  void set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_combo_count() const;
  void _internal_set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 3;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ESArcanaCombo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 combo_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ESArcanaComboSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ESArcanaComboSummary) */ {
 public:
  inline CDOTAUserMsg_ESArcanaComboSummary() : CDOTAUserMsg_ESArcanaComboSummary(nullptr) {}
  virtual ~CDOTAUserMsg_ESArcanaComboSummary();
  explicit constexpr CDOTAUserMsg_ESArcanaComboSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ESArcanaComboSummary(const CDOTAUserMsg_ESArcanaComboSummary& from);
  CDOTAUserMsg_ESArcanaComboSummary(CDOTAUserMsg_ESArcanaComboSummary&& from) noexcept
    : CDOTAUserMsg_ESArcanaComboSummary() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ESArcanaComboSummary& operator=(const CDOTAUserMsg_ESArcanaComboSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ESArcanaComboSummary& operator=(CDOTAUserMsg_ESArcanaComboSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ESArcanaComboSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ESArcanaComboSummary* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ESArcanaComboSummary*>(
               &_CDOTAUserMsg_ESArcanaComboSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    141;

  friend void swap(CDOTAUserMsg_ESArcanaComboSummary& a, CDOTAUserMsg_ESArcanaComboSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ESArcanaComboSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ESArcanaComboSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ESArcanaComboSummary* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ESArcanaComboSummary>(nullptr);
  }

  CDOTAUserMsg_ESArcanaComboSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ESArcanaComboSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ESArcanaComboSummary& from);
  void MergeFrom(const CDOTAUserMsg_ESArcanaComboSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ESArcanaComboSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ESArcanaComboSummary";
  }
  protected:
  explicit CDOTAUserMsg_ESArcanaComboSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kComboCountFieldNumber = 2,
    kDamageAmountFieldNumber = 3,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 combo_count = 2;
  bool has_combo_count() const;
  private:
  bool _internal_has_combo_count() const;
  public:
  void clear_combo_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 combo_count() const;
  void set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_combo_count() const;
  void _internal_set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 damage_amount = 3;
  bool has_damage_amount() const;
  private:
  bool _internal_has_damage_amount() const;
  public:
  void clear_damage_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_amount() const;
  void set_damage_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_amount() const;
  void _internal_set_damage_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ESArcanaComboSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 combo_count_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_amount_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_OMArcanaCombo PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_OMArcanaCombo) */ {
 public:
  inline CDOTAUserMsg_OMArcanaCombo() : CDOTAUserMsg_OMArcanaCombo(nullptr) {}
  virtual ~CDOTAUserMsg_OMArcanaCombo();
  explicit constexpr CDOTAUserMsg_OMArcanaCombo(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_OMArcanaCombo(const CDOTAUserMsg_OMArcanaCombo& from);
  CDOTAUserMsg_OMArcanaCombo(CDOTAUserMsg_OMArcanaCombo&& from) noexcept
    : CDOTAUserMsg_OMArcanaCombo() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_OMArcanaCombo& operator=(const CDOTAUserMsg_OMArcanaCombo& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_OMArcanaCombo& operator=(CDOTAUserMsg_OMArcanaCombo&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_OMArcanaCombo& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_OMArcanaCombo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_OMArcanaCombo*>(
               &_CDOTAUserMsg_OMArcanaCombo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    142;

  friend void swap(CDOTAUserMsg_OMArcanaCombo& a, CDOTAUserMsg_OMArcanaCombo& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_OMArcanaCombo* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_OMArcanaCombo* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_OMArcanaCombo* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_OMArcanaCombo>(nullptr);
  }

  CDOTAUserMsg_OMArcanaCombo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_OMArcanaCombo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_OMArcanaCombo& from);
  void MergeFrom(const CDOTAUserMsg_OMArcanaCombo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_OMArcanaCombo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_OMArcanaCombo";
  }
  protected:
  explicit CDOTAUserMsg_OMArcanaCombo(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kMulticastAmountFieldNumber = 2,
    kArcanaLevelFieldNumber = 3,
    kMulticastChanceFieldNumber = 4,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 multicast_amount = 2;
  bool has_multicast_amount() const;
  private:
  bool _internal_has_multicast_amount() const;
  public:
  void clear_multicast_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 multicast_amount() const;
  void set_multicast_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_multicast_amount() const;
  void _internal_set_multicast_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 3;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 multicast_chance = 4;
  bool has_multicast_chance() const;
  private:
  bool _internal_has_multicast_chance() const;
  public:
  void clear_multicast_chance();
  ::PROTOBUF_NAMESPACE_ID::uint32 multicast_chance() const;
  void set_multicast_chance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_multicast_chance() const;
  void _internal_set_multicast_chance(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OMArcanaCombo)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 multicast_amount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 multicast_chance_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HighFiveCompleted PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HighFiveCompleted) */ {
 public:
  inline CDOTAUserMsg_HighFiveCompleted() : CDOTAUserMsg_HighFiveCompleted(nullptr) {}
  virtual ~CDOTAUserMsg_HighFiveCompleted();
  explicit constexpr CDOTAUserMsg_HighFiveCompleted(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HighFiveCompleted(const CDOTAUserMsg_HighFiveCompleted& from);
  CDOTAUserMsg_HighFiveCompleted(CDOTAUserMsg_HighFiveCompleted&& from) noexcept
    : CDOTAUserMsg_HighFiveCompleted() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HighFiveCompleted& operator=(const CDOTAUserMsg_HighFiveCompleted& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HighFiveCompleted& operator=(CDOTAUserMsg_HighFiveCompleted&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HighFiveCompleted& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HighFiveCompleted* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HighFiveCompleted*>(
               &_CDOTAUserMsg_HighFiveCompleted_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    143;

  friend void swap(CDOTAUserMsg_HighFiveCompleted& a, CDOTAUserMsg_HighFiveCompleted& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HighFiveCompleted* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HighFiveCompleted* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HighFiveCompleted* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HighFiveCompleted>(nullptr);
  }

  CDOTAUserMsg_HighFiveCompleted* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HighFiveCompleted>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HighFiveCompleted& from);
  void MergeFrom(const CDOTAUserMsg_HighFiveCompleted& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HighFiveCompleted* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HighFiveCompleted";
  }
  protected:
  explicit CDOTAUserMsg_HighFiveCompleted(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerId1FieldNumber = 1,
    kPlayerId2FieldNumber = 2,
    kSpecialHighFiveFieldNumber = 3,
  };
  // optional uint32 player_id_1 = 1;
  bool has_player_id_1() const;
  private:
  bool _internal_has_player_id_1() const;
  public:
  void clear_player_id_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_1() const;
  void set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id_1() const;
  void _internal_set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 player_id_2 = 2;
  bool has_player_id_2() const;
  private:
  bool _internal_has_player_id_2() const;
  public:
  void clear_player_id_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_2() const;
  void set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id_2() const;
  void _internal_set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool special_high_five = 3;
  bool has_special_high_five() const;
  private:
  bool _internal_has_special_high_five() const;
  public:
  void clear_special_high_five();
  bool special_high_five() const;
  void set_special_high_five(bool value);
  private:
  bool _internal_special_high_five() const;
  void _internal_set_special_high_five(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HighFiveCompleted)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_2_;
  bool special_high_five_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HighFiveLeftHanging PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HighFiveLeftHanging) */ {
 public:
  inline CDOTAUserMsg_HighFiveLeftHanging() : CDOTAUserMsg_HighFiveLeftHanging(nullptr) {}
  virtual ~CDOTAUserMsg_HighFiveLeftHanging();
  explicit constexpr CDOTAUserMsg_HighFiveLeftHanging(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HighFiveLeftHanging(const CDOTAUserMsg_HighFiveLeftHanging& from);
  CDOTAUserMsg_HighFiveLeftHanging(CDOTAUserMsg_HighFiveLeftHanging&& from) noexcept
    : CDOTAUserMsg_HighFiveLeftHanging() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HighFiveLeftHanging& operator=(const CDOTAUserMsg_HighFiveLeftHanging& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HighFiveLeftHanging& operator=(CDOTAUserMsg_HighFiveLeftHanging&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HighFiveLeftHanging& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HighFiveLeftHanging* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HighFiveLeftHanging*>(
               &_CDOTAUserMsg_HighFiveLeftHanging_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    144;

  friend void swap(CDOTAUserMsg_HighFiveLeftHanging& a, CDOTAUserMsg_HighFiveLeftHanging& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HighFiveLeftHanging* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HighFiveLeftHanging* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HighFiveLeftHanging* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HighFiveLeftHanging>(nullptr);
  }

  CDOTAUserMsg_HighFiveLeftHanging* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HighFiveLeftHanging>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HighFiveLeftHanging& from);
  void MergeFrom(const CDOTAUserMsg_HighFiveLeftHanging& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HighFiveLeftHanging* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HighFiveLeftHanging";
  }
  protected:
  explicit CDOTAUserMsg_HighFiveLeftHanging(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HighFiveLeftHanging)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ShovelUnearth PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ShovelUnearth) */ {
 public:
  inline CDOTAUserMsg_ShovelUnearth() : CDOTAUserMsg_ShovelUnearth(nullptr) {}
  virtual ~CDOTAUserMsg_ShovelUnearth();
  explicit constexpr CDOTAUserMsg_ShovelUnearth(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ShovelUnearth(const CDOTAUserMsg_ShovelUnearth& from);
  CDOTAUserMsg_ShovelUnearth(CDOTAUserMsg_ShovelUnearth&& from) noexcept
    : CDOTAUserMsg_ShovelUnearth() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ShovelUnearth& operator=(const CDOTAUserMsg_ShovelUnearth& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ShovelUnearth& operator=(CDOTAUserMsg_ShovelUnearth&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ShovelUnearth& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ShovelUnearth* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ShovelUnearth*>(
               &_CDOTAUserMsg_ShovelUnearth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    145;

  friend void swap(CDOTAUserMsg_ShovelUnearth& a, CDOTAUserMsg_ShovelUnearth& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ShovelUnearth* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ShovelUnearth* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ShovelUnearth* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShovelUnearth>(nullptr);
  }

  CDOTAUserMsg_ShovelUnearth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ShovelUnearth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ShovelUnearth& from);
  void MergeFrom(const CDOTAUserMsg_ShovelUnearth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ShovelUnearth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ShovelUnearth";
  }
  protected:
  explicit CDOTAUserMsg_ShovelUnearth(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocstringFieldNumber = 3,
    kPlayerIdFieldNumber = 1,
    kAllChatFieldNumber = 2,
    kQuantityFieldNumber = 4,
  };
  // optional string locstring = 3;
  bool has_locstring() const;
  private:
  bool _internal_has_locstring() const;
  public:
  void clear_locstring();
  const std::string& locstring() const;
  void set_locstring(const std::string& value);
  void set_locstring(std::string&& value);
  void set_locstring(const char* value);
  void set_locstring(const char* value, size_t size);
  std::string* mutable_locstring();
  std::string* release_locstring();
  void set_allocated_locstring(std::string* locstring);
  private:
  const std::string& _internal_locstring() const;
  void _internal_set_locstring(const std::string& value);
  std::string* _internal_mutable_locstring();
  public:

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool all_chat = 2;
  bool has_all_chat() const;
  private:
  bool _internal_has_all_chat() const;
  public:
  void clear_all_chat();
  bool all_chat() const;
  void set_all_chat(bool value);
  private:
  bool _internal_all_chat() const;
  void _internal_set_all_chat(bool value);
  public:

  // optional uint32 quantity = 4;
  bool has_quantity() const;
  private:
  bool _internal_has_quantity() const;
  public:
  void clear_quantity();
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity() const;
  void set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_quantity() const;
  void _internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ShovelUnearth)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr locstring_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  bool all_chat_;
  ::PROTOBUF_NAMESPACE_ID::uint32 quantity_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AllStarEvent_PlayerScore PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AllStarEvent.PlayerScore) */ {
 public:
  inline CDOTAUserMsg_AllStarEvent_PlayerScore() : CDOTAUserMsg_AllStarEvent_PlayerScore(nullptr) {}
  virtual ~CDOTAUserMsg_AllStarEvent_PlayerScore();
  explicit constexpr CDOTAUserMsg_AllStarEvent_PlayerScore(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AllStarEvent_PlayerScore(const CDOTAUserMsg_AllStarEvent_PlayerScore& from);
  CDOTAUserMsg_AllStarEvent_PlayerScore(CDOTAUserMsg_AllStarEvent_PlayerScore&& from) noexcept
    : CDOTAUserMsg_AllStarEvent_PlayerScore() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AllStarEvent_PlayerScore& operator=(const CDOTAUserMsg_AllStarEvent_PlayerScore& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AllStarEvent_PlayerScore& operator=(CDOTAUserMsg_AllStarEvent_PlayerScore&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AllStarEvent_PlayerScore& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AllStarEvent_PlayerScore* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AllStarEvent_PlayerScore*>(
               &_CDOTAUserMsg_AllStarEvent_PlayerScore_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    146;

  friend void swap(CDOTAUserMsg_AllStarEvent_PlayerScore& a, CDOTAUserMsg_AllStarEvent_PlayerScore& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AllStarEvent_PlayerScore* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AllStarEvent_PlayerScore* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AllStarEvent_PlayerScore* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AllStarEvent_PlayerScore>(nullptr);
  }

  CDOTAUserMsg_AllStarEvent_PlayerScore* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AllStarEvent_PlayerScore>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AllStarEvent_PlayerScore& from);
  void MergeFrom(const CDOTAUserMsg_AllStarEvent_PlayerScore& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AllStarEvent_PlayerScore* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AllStarEvent.PlayerScore";
  }
  protected:
  explicit CDOTAUserMsg_AllStarEvent_PlayerScore(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kScoreSansKdaFieldNumber = 2,
  };
  // optional int32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 score_sans_kda = 2;
  bool has_score_sans_kda() const;
  private:
  bool _internal_has_score_sans_kda() const;
  public:
  void clear_score_sans_kda();
  ::PROTOBUF_NAMESPACE_ID::uint32 score_sans_kda() const;
  void set_score_sans_kda(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score_sans_kda() const;
  void _internal_set_score_sans_kda(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AllStarEvent.PlayerScore)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 score_sans_kda_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AllStarEvent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AllStarEvent) */ {
 public:
  inline CDOTAUserMsg_AllStarEvent() : CDOTAUserMsg_AllStarEvent(nullptr) {}
  virtual ~CDOTAUserMsg_AllStarEvent();
  explicit constexpr CDOTAUserMsg_AllStarEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AllStarEvent(const CDOTAUserMsg_AllStarEvent& from);
  CDOTAUserMsg_AllStarEvent(CDOTAUserMsg_AllStarEvent&& from) noexcept
    : CDOTAUserMsg_AllStarEvent() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AllStarEvent& operator=(const CDOTAUserMsg_AllStarEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AllStarEvent& operator=(CDOTAUserMsg_AllStarEvent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AllStarEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AllStarEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AllStarEvent*>(
               &_CDOTAUserMsg_AllStarEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    147;

  friend void swap(CDOTAUserMsg_AllStarEvent& a, CDOTAUserMsg_AllStarEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AllStarEvent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AllStarEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AllStarEvent* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AllStarEvent>(nullptr);
  }

  CDOTAUserMsg_AllStarEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AllStarEvent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AllStarEvent& from);
  void MergeFrom(const CDOTAUserMsg_AllStarEvent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AllStarEvent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AllStarEvent";
  }
  protected:
  explicit CDOTAUserMsg_AllStarEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_AllStarEvent_PlayerScore PlayerScore;

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerScoresFieldNumber = 5,
    kSourcePlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kPointAmountFieldNumber = 3,
    kEventIdFieldNumber = 4,
  };
  // repeated .CDOTAUserMsg_AllStarEvent.PlayerScore player_scores = 5;
  int player_scores_size() const;
  private:
  int _internal_player_scores_size() const;
  public:
  void clear_player_scores();
  ::CDOTAUserMsg_AllStarEvent_PlayerScore* mutable_player_scores(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_AllStarEvent_PlayerScore >*
      mutable_player_scores();
  private:
  const ::CDOTAUserMsg_AllStarEvent_PlayerScore& _internal_player_scores(int index) const;
  ::CDOTAUserMsg_AllStarEvent_PlayerScore* _internal_add_player_scores();
  public:
  const ::CDOTAUserMsg_AllStarEvent_PlayerScore& player_scores(int index) const;
  ::CDOTAUserMsg_AllStarEvent_PlayerScore* add_player_scores();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_AllStarEvent_PlayerScore >&
      player_scores() const;

  // optional int32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 point_amount = 3;
  bool has_point_amount() const;
  private:
  bool _internal_has_point_amount() const;
  public:
  void clear_point_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 point_amount() const;
  void set_point_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_point_amount() const;
  void _internal_set_point_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 event_id = 4;
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_id() const;
  void _internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AllStarEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_AllStarEvent_PlayerScore > player_scores_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 point_amount_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QueuedOrderRemoved PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_QueuedOrderRemoved) */ {
 public:
  inline CDOTAUserMsg_QueuedOrderRemoved() : CDOTAUserMsg_QueuedOrderRemoved(nullptr) {}
  virtual ~CDOTAUserMsg_QueuedOrderRemoved();
  explicit constexpr CDOTAUserMsg_QueuedOrderRemoved(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_QueuedOrderRemoved(const CDOTAUserMsg_QueuedOrderRemoved& from);
  CDOTAUserMsg_QueuedOrderRemoved(CDOTAUserMsg_QueuedOrderRemoved&& from) noexcept
    : CDOTAUserMsg_QueuedOrderRemoved() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_QueuedOrderRemoved& operator=(const CDOTAUserMsg_QueuedOrderRemoved& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_QueuedOrderRemoved& operator=(CDOTAUserMsg_QueuedOrderRemoved&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_QueuedOrderRemoved& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_QueuedOrderRemoved* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QueuedOrderRemoved*>(
               &_CDOTAUserMsg_QueuedOrderRemoved_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    148;

  friend void swap(CDOTAUserMsg_QueuedOrderRemoved& a, CDOTAUserMsg_QueuedOrderRemoved& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_QueuedOrderRemoved* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_QueuedOrderRemoved* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QueuedOrderRemoved* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_QueuedOrderRemoved>(nullptr);
  }

  CDOTAUserMsg_QueuedOrderRemoved* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_QueuedOrderRemoved>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_QueuedOrderRemoved& from);
  void MergeFrom(const CDOTAUserMsg_QueuedOrderRemoved& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_QueuedOrderRemoved* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_QueuedOrderRemoved";
  }
  protected:
  explicit CDOTAUserMsg_QueuedOrderRemoved(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitOrderSequenceFieldNumber = 1,
  };
  // repeated uint32 unit_order_sequence = 1;
  int unit_order_sequence_size() const;
  private:
  int _internal_unit_order_sequence_size() const;
  public:
  void clear_unit_order_sequence();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_unit_order_sequence(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_unit_order_sequence() const;
  void _internal_add_unit_order_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_unit_order_sequence();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 unit_order_sequence(int index) const;
  void set_unit_order_sequence(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_unit_order_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      unit_order_sequence() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_unit_order_sequence();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QueuedOrderRemoved)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > unit_order_sequence_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DebugChallenge PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_DebugChallenge) */ {
 public:
  inline CDOTAUserMsg_DebugChallenge() : CDOTAUserMsg_DebugChallenge(nullptr) {}
  virtual ~CDOTAUserMsg_DebugChallenge();
  explicit constexpr CDOTAUserMsg_DebugChallenge(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_DebugChallenge(const CDOTAUserMsg_DebugChallenge& from);
  CDOTAUserMsg_DebugChallenge(CDOTAUserMsg_DebugChallenge&& from) noexcept
    : CDOTAUserMsg_DebugChallenge() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_DebugChallenge& operator=(const CDOTAUserMsg_DebugChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_DebugChallenge& operator=(CDOTAUserMsg_DebugChallenge&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_DebugChallenge& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_DebugChallenge* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DebugChallenge*>(
               &_CDOTAUserMsg_DebugChallenge_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    149;

  friend void swap(CDOTAUserMsg_DebugChallenge& a, CDOTAUserMsg_DebugChallenge& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_DebugChallenge* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_DebugChallenge* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DebugChallenge* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_DebugChallenge>(nullptr);
  }

  CDOTAUserMsg_DebugChallenge* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_DebugChallenge>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_DebugChallenge& from);
  void MergeFrom(const CDOTAUserMsg_DebugChallenge& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_DebugChallenge* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_DebugChallenge";
  }
  protected:
  explicit CDOTAUserMsg_DebugChallenge(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChallengeTypeFieldNumber = 1,
    kChallengeQueryIdFieldNumber = 2,
    kEventIdFieldNumber = 3,
    kInstanceIdFieldNumber = 4,
    kChallengeVar0FieldNumber = 5,
    kChallengeVar1FieldNumber = 6,
    kChallengeMaxRankFieldNumber = 7,
  };
  // required uint32 challenge_type = 1;
  bool has_challenge_type() const;
  private:
  bool _internal_has_challenge_type() const;
  public:
  void clear_challenge_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_type() const;
  void set_challenge_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_type() const;
  void _internal_set_challenge_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 challenge_query_id = 2;
  bool has_challenge_query_id() const;
  private:
  bool _internal_has_challenge_query_id() const;
  public:
  void clear_challenge_query_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_query_id() const;
  void set_challenge_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_query_id() const;
  void _internal_set_challenge_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // required uint32 event_id = 3;
  bool has_event_id() const;
  private:
  bool _internal_has_event_id() const;
  public:
  void clear_event_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id() const;
  void set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_event_id() const;
  void _internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 instance_id = 4;
  bool has_instance_id() const;
  private:
  bool _internal_has_instance_id() const;
  public:
  void clear_instance_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 instance_id() const;
  void set_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_instance_id() const;
  void _internal_set_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_var_0 = 5;
  bool has_challenge_var_0() const;
  private:
  bool _internal_has_challenge_var_0() const;
  public:
  void clear_challenge_var_0();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_var_0() const;
  void set_challenge_var_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_var_0() const;
  void _internal_set_challenge_var_0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_var_1 = 6;
  bool has_challenge_var_1() const;
  private:
  bool _internal_has_challenge_var_1() const;
  public:
  void clear_challenge_var_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_var_1() const;
  void set_challenge_var_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_var_1() const;
  void _internal_set_challenge_var_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_max_rank = 7;
  bool has_challenge_max_rank() const;
  private:
  bool _internal_has_challenge_max_rank() const;
  public:
  void clear_challenge_max_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_max_rank() const;
  void set_challenge_max_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_max_rank() const;
  void _internal_set_challenge_max_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_DebugChallenge)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_query_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 event_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 instance_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_var_0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_var_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_max_rank_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_FoundNeutralItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_FoundNeutralItem) */ {
 public:
  inline CDOTAUserMsg_FoundNeutralItem() : CDOTAUserMsg_FoundNeutralItem(nullptr) {}
  virtual ~CDOTAUserMsg_FoundNeutralItem();
  explicit constexpr CDOTAUserMsg_FoundNeutralItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_FoundNeutralItem(const CDOTAUserMsg_FoundNeutralItem& from);
  CDOTAUserMsg_FoundNeutralItem(CDOTAUserMsg_FoundNeutralItem&& from) noexcept
    : CDOTAUserMsg_FoundNeutralItem() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_FoundNeutralItem& operator=(const CDOTAUserMsg_FoundNeutralItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_FoundNeutralItem& operator=(CDOTAUserMsg_FoundNeutralItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_FoundNeutralItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_FoundNeutralItem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_FoundNeutralItem*>(
               &_CDOTAUserMsg_FoundNeutralItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    150;

  friend void swap(CDOTAUserMsg_FoundNeutralItem& a, CDOTAUserMsg_FoundNeutralItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_FoundNeutralItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_FoundNeutralItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_FoundNeutralItem* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_FoundNeutralItem>(nullptr);
  }

  CDOTAUserMsg_FoundNeutralItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_FoundNeutralItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_FoundNeutralItem& from);
  void MergeFrom(const CDOTAUserMsg_FoundNeutralItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_FoundNeutralItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_FoundNeutralItem";
  }
  protected:
  explicit CDOTAUserMsg_FoundNeutralItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kItemAbilityIdFieldNumber = 2,
    kItemTierFieldNumber = 3,
    kTierItemCountFieldNumber = 4,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_ability_id = 2;
  bool has_item_ability_id() const;
  private:
  bool _internal_has_item_ability_id() const;
  public:
  void clear_item_ability_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id() const;
  void set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_ability_id() const;
  void _internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 item_tier = 3;
  bool has_item_tier() const;
  private:
  bool _internal_has_item_tier() const;
  public:
  void clear_item_tier();
  ::PROTOBUF_NAMESPACE_ID::uint32 item_tier() const;
  void set_item_tier(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_item_tier() const;
  void _internal_set_item_tier(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 tier_item_count = 4;
  bool has_tier_item_count() const;
  private:
  bool _internal_has_tier_item_count() const;
  public:
  void clear_tier_item_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 tier_item_count() const;
  void set_tier_item_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_tier_item_count() const;
  void _internal_set_tier_item_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_FoundNeutralItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_ability_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 item_tier_;
  ::PROTOBUF_NAMESPACE_ID::uint32 tier_item_count_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_OutpostCaptured PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_OutpostCaptured) */ {
 public:
  inline CDOTAUserMsg_OutpostCaptured() : CDOTAUserMsg_OutpostCaptured(nullptr) {}
  virtual ~CDOTAUserMsg_OutpostCaptured();
  explicit constexpr CDOTAUserMsg_OutpostCaptured(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_OutpostCaptured(const CDOTAUserMsg_OutpostCaptured& from);
  CDOTAUserMsg_OutpostCaptured(CDOTAUserMsg_OutpostCaptured&& from) noexcept
    : CDOTAUserMsg_OutpostCaptured() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_OutpostCaptured& operator=(const CDOTAUserMsg_OutpostCaptured& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_OutpostCaptured& operator=(CDOTAUserMsg_OutpostCaptured&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_OutpostCaptured& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_OutpostCaptured* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_OutpostCaptured*>(
               &_CDOTAUserMsg_OutpostCaptured_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    151;

  friend void swap(CDOTAUserMsg_OutpostCaptured& a, CDOTAUserMsg_OutpostCaptured& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_OutpostCaptured* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_OutpostCaptured* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_OutpostCaptured* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_OutpostCaptured>(nullptr);
  }

  CDOTAUserMsg_OutpostCaptured* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_OutpostCaptured>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_OutpostCaptured& from);
  void MergeFrom(const CDOTAUserMsg_OutpostCaptured& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_OutpostCaptured* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_OutpostCaptured";
  }
  protected:
  explicit CDOTAUserMsg_OutpostCaptured(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutpostEntindexFieldNumber = 1,
    kTeamIdFieldNumber = 2,
  };
  // optional uint32 outpost_entindex = 1;
  bool has_outpost_entindex() const;
  private:
  bool _internal_has_outpost_entindex() const;
  public:
  void clear_outpost_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 outpost_entindex() const;
  void set_outpost_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_outpost_entindex() const;
  void _internal_set_outpost_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 team_id = 2;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OutpostCaptured)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 outpost_entindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_OutpostGrantedXP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_OutpostGrantedXP) */ {
 public:
  inline CDOTAUserMsg_OutpostGrantedXP() : CDOTAUserMsg_OutpostGrantedXP(nullptr) {}
  virtual ~CDOTAUserMsg_OutpostGrantedXP();
  explicit constexpr CDOTAUserMsg_OutpostGrantedXP(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_OutpostGrantedXP(const CDOTAUserMsg_OutpostGrantedXP& from);
  CDOTAUserMsg_OutpostGrantedXP(CDOTAUserMsg_OutpostGrantedXP&& from) noexcept
    : CDOTAUserMsg_OutpostGrantedXP() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_OutpostGrantedXP& operator=(const CDOTAUserMsg_OutpostGrantedXP& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_OutpostGrantedXP& operator=(CDOTAUserMsg_OutpostGrantedXP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_OutpostGrantedXP& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_OutpostGrantedXP* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_OutpostGrantedXP*>(
               &_CDOTAUserMsg_OutpostGrantedXP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    152;

  friend void swap(CDOTAUserMsg_OutpostGrantedXP& a, CDOTAUserMsg_OutpostGrantedXP& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_OutpostGrantedXP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_OutpostGrantedXP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_OutpostGrantedXP* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_OutpostGrantedXP>(nullptr);
  }

  CDOTAUserMsg_OutpostGrantedXP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_OutpostGrantedXP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_OutpostGrantedXP& from);
  void MergeFrom(const CDOTAUserMsg_OutpostGrantedXP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_OutpostGrantedXP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_OutpostGrantedXP";
  }
  protected:
  explicit CDOTAUserMsg_OutpostGrantedXP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kXpAmountFieldNumber = 2,
  };
  // optional uint32 team_id = 1;
  bool has_team_id() const;
  private:
  bool _internal_has_team_id() const;
  public:
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 xp_amount = 2;
  bool has_xp_amount() const;
  private:
  bool _internal_has_xp_amount() const;
  public:
  void clear_xp_amount();
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_amount() const;
  void set_xp_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_xp_amount() const;
  void _internal_set_xp_amount(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_OutpostGrantedXP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 xp_amount_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MoveCameraToUnit PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MoveCameraToUnit) */ {
 public:
  inline CDOTAUserMsg_MoveCameraToUnit() : CDOTAUserMsg_MoveCameraToUnit(nullptr) {}
  virtual ~CDOTAUserMsg_MoveCameraToUnit();
  explicit constexpr CDOTAUserMsg_MoveCameraToUnit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MoveCameraToUnit(const CDOTAUserMsg_MoveCameraToUnit& from);
  CDOTAUserMsg_MoveCameraToUnit(CDOTAUserMsg_MoveCameraToUnit&& from) noexcept
    : CDOTAUserMsg_MoveCameraToUnit() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MoveCameraToUnit& operator=(const CDOTAUserMsg_MoveCameraToUnit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MoveCameraToUnit& operator=(CDOTAUserMsg_MoveCameraToUnit&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MoveCameraToUnit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MoveCameraToUnit* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MoveCameraToUnit*>(
               &_CDOTAUserMsg_MoveCameraToUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    153;

  friend void swap(CDOTAUserMsg_MoveCameraToUnit& a, CDOTAUserMsg_MoveCameraToUnit& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MoveCameraToUnit* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MoveCameraToUnit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MoveCameraToUnit* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MoveCameraToUnit>(nullptr);
  }

  CDOTAUserMsg_MoveCameraToUnit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MoveCameraToUnit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MoveCameraToUnit& from);
  void MergeFrom(const CDOTAUserMsg_MoveCameraToUnit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MoveCameraToUnit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MoveCameraToUnit";
  }
  protected:
  explicit CDOTAUserMsg_MoveCameraToUnit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnitEhandleFieldNumber = 1,
  };
  // optional int32 unit_ehandle = 1;
  bool has_unit_ehandle() const;
  private:
  bool _internal_has_unit_ehandle() const;
  public:
  void clear_unit_ehandle();
  ::PROTOBUF_NAMESPACE_ID::int32 unit_ehandle() const;
  void set_unit_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_unit_ehandle() const;
  void _internal_set_unit_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MoveCameraToUnit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 unit_ehandle_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PauseMinigameData_DataBit PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PauseMinigameData.DataBit) */ {
 public:
  inline CDOTAUserMsg_PauseMinigameData_DataBit() : CDOTAUserMsg_PauseMinigameData_DataBit(nullptr) {}
  virtual ~CDOTAUserMsg_PauseMinigameData_DataBit();
  explicit constexpr CDOTAUserMsg_PauseMinigameData_DataBit(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PauseMinigameData_DataBit(const CDOTAUserMsg_PauseMinigameData_DataBit& from);
  CDOTAUserMsg_PauseMinigameData_DataBit(CDOTAUserMsg_PauseMinigameData_DataBit&& from) noexcept
    : CDOTAUserMsg_PauseMinigameData_DataBit() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PauseMinigameData_DataBit& operator=(const CDOTAUserMsg_PauseMinigameData_DataBit& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PauseMinigameData_DataBit& operator=(CDOTAUserMsg_PauseMinigameData_DataBit&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PauseMinigameData_DataBit& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PauseMinigameData_DataBit* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PauseMinigameData_DataBit*>(
               &_CDOTAUserMsg_PauseMinigameData_DataBit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    154;

  friend void swap(CDOTAUserMsg_PauseMinigameData_DataBit& a, CDOTAUserMsg_PauseMinigameData_DataBit& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PauseMinigameData_DataBit* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PauseMinigameData_DataBit* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PauseMinigameData_DataBit* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PauseMinigameData_DataBit>(nullptr);
  }

  CDOTAUserMsg_PauseMinigameData_DataBit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PauseMinigameData_DataBit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PauseMinigameData_DataBit& from);
  void MergeFrom(const CDOTAUserMsg_PauseMinigameData_DataBit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PauseMinigameData_DataBit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PauseMinigameData.DataBit";
  }
  protected:
  explicit CDOTAUserMsg_PauseMinigameData_DataBit(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndexFieldNumber = 1,
    kDataFieldNumber = 2,
    kDataExtraFieldNumber = 3,
  };
  // optional uint32 index = 1;
  bool has_index() const;
  private:
  bool _internal_has_index() const;
  public:
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::uint32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 data = 2;
  bool has_data() const;
  private:
  bool _internal_has_data() const;
  public:
  void clear_data();
  ::PROTOBUF_NAMESPACE_ID::int32 data() const;
  void set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_data() const;
  void _internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int64 data_extra = 3;
  bool has_data_extra() const;
  private:
  bool _internal_has_data_extra() const;
  public:
  void clear_data_extra();
  ::PROTOBUF_NAMESPACE_ID::int64 data_extra() const;
  void set_data_extra(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_data_extra() const;
  void _internal_set_data_extra(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PauseMinigameData.DataBit)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 index_;
  ::PROTOBUF_NAMESPACE_ID::int32 data_;
  ::PROTOBUF_NAMESPACE_ID::int64 data_extra_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PauseMinigameData PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_PauseMinigameData) */ {
 public:
  inline CDOTAUserMsg_PauseMinigameData() : CDOTAUserMsg_PauseMinigameData(nullptr) {}
  virtual ~CDOTAUserMsg_PauseMinigameData();
  explicit constexpr CDOTAUserMsg_PauseMinigameData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_PauseMinigameData(const CDOTAUserMsg_PauseMinigameData& from);
  CDOTAUserMsg_PauseMinigameData(CDOTAUserMsg_PauseMinigameData&& from) noexcept
    : CDOTAUserMsg_PauseMinigameData() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_PauseMinigameData& operator=(const CDOTAUserMsg_PauseMinigameData& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_PauseMinigameData& operator=(CDOTAUserMsg_PauseMinigameData&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_PauseMinigameData& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_PauseMinigameData* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PauseMinigameData*>(
               &_CDOTAUserMsg_PauseMinigameData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    155;

  friend void swap(CDOTAUserMsg_PauseMinigameData& a, CDOTAUserMsg_PauseMinigameData& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_PauseMinigameData* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_PauseMinigameData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PauseMinigameData* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_PauseMinigameData>(nullptr);
  }

  CDOTAUserMsg_PauseMinigameData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_PauseMinigameData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_PauseMinigameData& from);
  void MergeFrom(const CDOTAUserMsg_PauseMinigameData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_PauseMinigameData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_PauseMinigameData";
  }
  protected:
  explicit CDOTAUserMsg_PauseMinigameData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_PauseMinigameData_DataBit DataBit;

  // accessors -------------------------------------------------------

  enum : int {
    kDataBitsFieldNumber = 1,
  };
  // repeated .CDOTAUserMsg_PauseMinigameData.DataBit data_bits = 1;
  int data_bits_size() const;
  private:
  int _internal_data_bits_size() const;
  public:
  void clear_data_bits();
  ::CDOTAUserMsg_PauseMinigameData_DataBit* mutable_data_bits(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PauseMinigameData_DataBit >*
      mutable_data_bits();
  private:
  const ::CDOTAUserMsg_PauseMinigameData_DataBit& _internal_data_bits(int index) const;
  ::CDOTAUserMsg_PauseMinigameData_DataBit* _internal_add_data_bits();
  public:
  const ::CDOTAUserMsg_PauseMinigameData_DataBit& data_bits(int index) const;
  ::CDOTAUserMsg_PauseMinigameData_DataBit* add_data_bits();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PauseMinigameData_DataBit >&
      data_bits() const;

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_PauseMinigameData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PauseMinigameData_DataBit > data_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VersusScene_PlayerBehavior PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_VersusScene_PlayerBehavior) */ {
 public:
  inline CDOTAUserMsg_VersusScene_PlayerBehavior() : CDOTAUserMsg_VersusScene_PlayerBehavior(nullptr) {}
  virtual ~CDOTAUserMsg_VersusScene_PlayerBehavior();
  explicit constexpr CDOTAUserMsg_VersusScene_PlayerBehavior(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_VersusScene_PlayerBehavior(const CDOTAUserMsg_VersusScene_PlayerBehavior& from);
  CDOTAUserMsg_VersusScene_PlayerBehavior(CDOTAUserMsg_VersusScene_PlayerBehavior&& from) noexcept
    : CDOTAUserMsg_VersusScene_PlayerBehavior() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_VersusScene_PlayerBehavior& operator=(const CDOTAUserMsg_VersusScene_PlayerBehavior& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_VersusScene_PlayerBehavior& operator=(CDOTAUserMsg_VersusScene_PlayerBehavior&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_VersusScene_PlayerBehavior& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_VersusScene_PlayerBehavior* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VersusScene_PlayerBehavior*>(
               &_CDOTAUserMsg_VersusScene_PlayerBehavior_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    156;

  friend void swap(CDOTAUserMsg_VersusScene_PlayerBehavior& a, CDOTAUserMsg_VersusScene_PlayerBehavior& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_VersusScene_PlayerBehavior* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_VersusScene_PlayerBehavior* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VersusScene_PlayerBehavior* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_VersusScene_PlayerBehavior>(nullptr);
  }

  CDOTAUserMsg_VersusScene_PlayerBehavior* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_VersusScene_PlayerBehavior>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_VersusScene_PlayerBehavior& from);
  void MergeFrom(const CDOTAUserMsg_VersusScene_PlayerBehavior& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_VersusScene_PlayerBehavior* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_VersusScene_PlayerBehavior";
  }
  protected:
  explicit CDOTAUserMsg_VersusScene_PlayerBehavior(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayActivityFieldNumber = 3,
    kChatWheelFieldNumber = 4,
    kPlaybackRateFieldNumber = 5,
    kPlayerIdFieldNumber = 1,
    kBehaviorFieldNumber = 2,
  };
  // optional .VersusScene_PlayActivity play_activity = 3;
  bool has_play_activity() const;
  private:
  bool _internal_has_play_activity() const;
  public:
  void clear_play_activity();
  const ::VersusScene_PlayActivity& play_activity() const;
  ::VersusScene_PlayActivity* release_play_activity();
  ::VersusScene_PlayActivity* mutable_play_activity();
  void set_allocated_play_activity(::VersusScene_PlayActivity* play_activity);
  private:
  const ::VersusScene_PlayActivity& _internal_play_activity() const;
  ::VersusScene_PlayActivity* _internal_mutable_play_activity();
  public:
  void unsafe_arena_set_allocated_play_activity(
      ::VersusScene_PlayActivity* play_activity);
  ::VersusScene_PlayActivity* unsafe_arena_release_play_activity();

  // optional .VersusScene_ChatWheel chat_wheel = 4;
  bool has_chat_wheel() const;
  private:
  bool _internal_has_chat_wheel() const;
  public:
  void clear_chat_wheel();
  const ::VersusScene_ChatWheel& chat_wheel() const;
  ::VersusScene_ChatWheel* release_chat_wheel();
  ::VersusScene_ChatWheel* mutable_chat_wheel();
  void set_allocated_chat_wheel(::VersusScene_ChatWheel* chat_wheel);
  private:
  const ::VersusScene_ChatWheel& _internal_chat_wheel() const;
  ::VersusScene_ChatWheel* _internal_mutable_chat_wheel();
  public:
  void unsafe_arena_set_allocated_chat_wheel(
      ::VersusScene_ChatWheel* chat_wheel);
  ::VersusScene_ChatWheel* unsafe_arena_release_chat_wheel();

  // optional .VersusScene_PlaybackRate playback_rate = 5;
  bool has_playback_rate() const;
  private:
  bool _internal_has_playback_rate() const;
  public:
  void clear_playback_rate();
  const ::VersusScene_PlaybackRate& playback_rate() const;
  ::VersusScene_PlaybackRate* release_playback_rate();
  ::VersusScene_PlaybackRate* mutable_playback_rate();
  void set_allocated_playback_rate(::VersusScene_PlaybackRate* playback_rate);
  private:
  const ::VersusScene_PlaybackRate& _internal_playback_rate() const;
  ::VersusScene_PlaybackRate* _internal_mutable_playback_rate();
  public:
  void unsafe_arena_set_allocated_playback_rate(
      ::VersusScene_PlaybackRate* playback_rate);
  ::VersusScene_PlaybackRate* unsafe_arena_release_playback_rate();

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .EDOTAVersusScenePlayerBehavior behavior = 2 [default = VS_PLAYER_BEHAVIOR_PLAY_ACTIVITY];
  bool has_behavior() const;
  private:
  bool _internal_has_behavior() const;
  public:
  void clear_behavior();
  ::EDOTAVersusScenePlayerBehavior behavior() const;
  void set_behavior(::EDOTAVersusScenePlayerBehavior value);
  private:
  ::EDOTAVersusScenePlayerBehavior _internal_behavior() const;
  void _internal_set_behavior(::EDOTAVersusScenePlayerBehavior value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_VersusScene_PlayerBehavior)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::VersusScene_PlayActivity* play_activity_;
  ::VersusScene_ChatWheel* chat_wheel_;
  ::VersusScene_PlaybackRate* playback_rate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  int behavior_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QoP_ArcanaSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_QoP_ArcanaSummary) */ {
 public:
  inline CDOTAUserMsg_QoP_ArcanaSummary() : CDOTAUserMsg_QoP_ArcanaSummary(nullptr) {}
  virtual ~CDOTAUserMsg_QoP_ArcanaSummary();
  explicit constexpr CDOTAUserMsg_QoP_ArcanaSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_QoP_ArcanaSummary(const CDOTAUserMsg_QoP_ArcanaSummary& from);
  CDOTAUserMsg_QoP_ArcanaSummary(CDOTAUserMsg_QoP_ArcanaSummary&& from) noexcept
    : CDOTAUserMsg_QoP_ArcanaSummary() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_QoP_ArcanaSummary& operator=(const CDOTAUserMsg_QoP_ArcanaSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_QoP_ArcanaSummary& operator=(CDOTAUserMsg_QoP_ArcanaSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_QoP_ArcanaSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_QoP_ArcanaSummary* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QoP_ArcanaSummary*>(
               &_CDOTAUserMsg_QoP_ArcanaSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    157;

  friend void swap(CDOTAUserMsg_QoP_ArcanaSummary& a, CDOTAUserMsg_QoP_ArcanaSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_QoP_ArcanaSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_QoP_ArcanaSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QoP_ArcanaSummary* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_QoP_ArcanaSummary>(nullptr);
  }

  CDOTAUserMsg_QoP_ArcanaSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_QoP_ArcanaSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_QoP_ArcanaSummary& from);
  void MergeFrom(const CDOTAUserMsg_QoP_ArcanaSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_QoP_ArcanaSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_QoP_ArcanaSummary";
  }
  protected:
  explicit CDOTAUserMsg_QoP_ArcanaSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kArcanaLevelFieldNumber = 2,
    kPlayersHitFieldNumber = 3,
    kPlayersKilledFieldNumber = 4,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 2;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 players_hit = 3;
  bool has_players_hit() const;
  private:
  bool _internal_has_players_hit() const;
  public:
  void clear_players_hit();
  ::PROTOBUF_NAMESPACE_ID::uint32 players_hit() const;
  void set_players_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_players_hit() const;
  void _internal_set_players_hit(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 players_killed = 4;
  bool has_players_killed() const;
  private:
  bool _internal_has_players_killed() const;
  public:
  void clear_players_killed();
  ::PROTOBUF_NAMESPACE_ID::uint32 players_killed() const;
  void set_players_killed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_players_killed() const;
  void _internal_set_players_killed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_QoP_ArcanaSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 players_hit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 players_killed_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HotPotato_Created PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HotPotato_Created) */ {
 public:
  inline CDOTAUserMsg_HotPotato_Created() : CDOTAUserMsg_HotPotato_Created(nullptr) {}
  virtual ~CDOTAUserMsg_HotPotato_Created();
  explicit constexpr CDOTAUserMsg_HotPotato_Created(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HotPotato_Created(const CDOTAUserMsg_HotPotato_Created& from);
  CDOTAUserMsg_HotPotato_Created(CDOTAUserMsg_HotPotato_Created&& from) noexcept
    : CDOTAUserMsg_HotPotato_Created() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HotPotato_Created& operator=(const CDOTAUserMsg_HotPotato_Created& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HotPotato_Created& operator=(CDOTAUserMsg_HotPotato_Created&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HotPotato_Created& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HotPotato_Created* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HotPotato_Created*>(
               &_CDOTAUserMsg_HotPotato_Created_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    158;

  friend void swap(CDOTAUserMsg_HotPotato_Created& a, CDOTAUserMsg_HotPotato_Created& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HotPotato_Created* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HotPotato_Created* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HotPotato_Created* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HotPotato_Created>(nullptr);
  }

  CDOTAUserMsg_HotPotato_Created* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HotPotato_Created>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HotPotato_Created& from);
  void MergeFrom(const CDOTAUserMsg_HotPotato_Created& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HotPotato_Created* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HotPotato_Created";
  }
  protected:
  explicit CDOTAUserMsg_HotPotato_Created(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerId1FieldNumber = 1,
    kPlayerId2FieldNumber = 2,
  };
  // optional uint32 player_id_1 = 1;
  bool has_player_id_1() const;
  private:
  bool _internal_has_player_id_1() const;
  public:
  void clear_player_id_1();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_1() const;
  void set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id_1() const;
  void _internal_set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 player_id_2 = 2;
  bool has_player_id_2() const;
  private:
  bool _internal_has_player_id_2() const;
  public:
  void clear_player_id_2();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_2() const;
  void set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id_2() const;
  void _internal_set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HotPotato_Created)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_2_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HotPotato_Exploded PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_HotPotato_Exploded) */ {
 public:
  inline CDOTAUserMsg_HotPotato_Exploded() : CDOTAUserMsg_HotPotato_Exploded(nullptr) {}
  virtual ~CDOTAUserMsg_HotPotato_Exploded();
  explicit constexpr CDOTAUserMsg_HotPotato_Exploded(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_HotPotato_Exploded(const CDOTAUserMsg_HotPotato_Exploded& from);
  CDOTAUserMsg_HotPotato_Exploded(CDOTAUserMsg_HotPotato_Exploded&& from) noexcept
    : CDOTAUserMsg_HotPotato_Exploded() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_HotPotato_Exploded& operator=(const CDOTAUserMsg_HotPotato_Exploded& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_HotPotato_Exploded& operator=(CDOTAUserMsg_HotPotato_Exploded&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_HotPotato_Exploded& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_HotPotato_Exploded* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HotPotato_Exploded*>(
               &_CDOTAUserMsg_HotPotato_Exploded_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    159;

  friend void swap(CDOTAUserMsg_HotPotato_Exploded& a, CDOTAUserMsg_HotPotato_Exploded& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_HotPotato_Exploded* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_HotPotato_Exploded* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HotPotato_Exploded* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_HotPotato_Exploded>(nullptr);
  }

  CDOTAUserMsg_HotPotato_Exploded* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_HotPotato_Exploded>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_HotPotato_Exploded& from);
  void MergeFrom(const CDOTAUserMsg_HotPotato_Exploded& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_HotPotato_Exploded* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_HotPotato_Exploded";
  }
  protected:
  explicit CDOTAUserMsg_HotPotato_Exploded(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_HotPotato_Exploded)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WK_Arcana_Progress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_WK_Arcana_Progress) */ {
 public:
  inline CDOTAUserMsg_WK_Arcana_Progress() : CDOTAUserMsg_WK_Arcana_Progress(nullptr) {}
  virtual ~CDOTAUserMsg_WK_Arcana_Progress();
  explicit constexpr CDOTAUserMsg_WK_Arcana_Progress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_WK_Arcana_Progress(const CDOTAUserMsg_WK_Arcana_Progress& from);
  CDOTAUserMsg_WK_Arcana_Progress(CDOTAUserMsg_WK_Arcana_Progress&& from) noexcept
    : CDOTAUserMsg_WK_Arcana_Progress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_WK_Arcana_Progress& operator=(const CDOTAUserMsg_WK_Arcana_Progress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_WK_Arcana_Progress& operator=(CDOTAUserMsg_WK_Arcana_Progress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_WK_Arcana_Progress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_WK_Arcana_Progress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WK_Arcana_Progress*>(
               &_CDOTAUserMsg_WK_Arcana_Progress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    160;

  friend void swap(CDOTAUserMsg_WK_Arcana_Progress& a, CDOTAUserMsg_WK_Arcana_Progress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_WK_Arcana_Progress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_WK_Arcana_Progress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WK_Arcana_Progress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_WK_Arcana_Progress>(nullptr);
  }

  CDOTAUserMsg_WK_Arcana_Progress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_WK_Arcana_Progress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_WK_Arcana_Progress& from);
  void MergeFrom(const CDOTAUserMsg_WK_Arcana_Progress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_WK_Arcana_Progress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_WK_Arcana_Progress";
  }
  protected:
  explicit CDOTAUserMsg_WK_Arcana_Progress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kArcanaLevelFieldNumber = 2,
    kHeroIdFieldNumber = 3,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 2;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  private:
  bool _internal_has_hero_id() const;
  public:
  void clear_hero_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id() const;
  void set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hero_id() const;
  void _internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WK_Arcana_Progress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hero_id_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress) */ {
 public:
  inline CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress() : CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress(nullptr) {}
  virtual ~CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress();
  explicit constexpr CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress(const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& from);
  CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress&& from) noexcept
    : CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& operator=(const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& operator=(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress*>(
               &_CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    161;

  friend void swap(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& a, CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress>(nullptr);
  }

  CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& from);
  void MergeFrom(const CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress";
  }
  protected:
  explicit CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kProgressFieldNumber = 6,
  };
  // optional uint32 player_id = 1;
  bool has_player_id() const;
  private:
  bool _internal_has_player_id() const;
  public:
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 progress = 6;
  bool has_progress() const;
  private:
  bool _internal_has_progress() const;
  public:
  void clear_progress();
  ::PROTOBUF_NAMESPACE_ID::uint32 progress() const;
  void set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_progress() const;
  void _internal_set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 progress_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GuildChallenge_Progress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_GuildChallenge_Progress) */ {
 public:
  inline CDOTAUserMsg_GuildChallenge_Progress() : CDOTAUserMsg_GuildChallenge_Progress(nullptr) {}
  virtual ~CDOTAUserMsg_GuildChallenge_Progress();
  explicit constexpr CDOTAUserMsg_GuildChallenge_Progress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_GuildChallenge_Progress(const CDOTAUserMsg_GuildChallenge_Progress& from);
  CDOTAUserMsg_GuildChallenge_Progress(CDOTAUserMsg_GuildChallenge_Progress&& from) noexcept
    : CDOTAUserMsg_GuildChallenge_Progress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_GuildChallenge_Progress& operator=(const CDOTAUserMsg_GuildChallenge_Progress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_GuildChallenge_Progress& operator=(CDOTAUserMsg_GuildChallenge_Progress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_GuildChallenge_Progress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_GuildChallenge_Progress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GuildChallenge_Progress*>(
               &_CDOTAUserMsg_GuildChallenge_Progress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    162;

  friend void swap(CDOTAUserMsg_GuildChallenge_Progress& a, CDOTAUserMsg_GuildChallenge_Progress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_GuildChallenge_Progress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_GuildChallenge_Progress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GuildChallenge_Progress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_GuildChallenge_Progress>(nullptr);
  }

  CDOTAUserMsg_GuildChallenge_Progress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_GuildChallenge_Progress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_GuildChallenge_Progress& from);
  void MergeFrom(const CDOTAUserMsg_GuildChallenge_Progress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_GuildChallenge_Progress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_GuildChallenge_Progress";
  }
  protected:
  explicit CDOTAUserMsg_GuildChallenge_Progress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress PlayerProgress;

  typedef CDOTAUserMsg_GuildChallenge_Progress_EChallengeType EChallengeType;
  static constexpr EChallengeType k_EChallengeType_Invalid =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Invalid;
  static constexpr EChallengeType k_EChallengeType_Cooperative =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Cooperative;
  static constexpr EChallengeType k_EChallengeType_Contract =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_k_EChallengeType_Contract;
  static inline bool EChallengeType_IsValid(int value) {
    return CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_IsValid(value);
  }
  static constexpr EChallengeType EChallengeType_MIN =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_MIN;
  static constexpr EChallengeType EChallengeType_MAX =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_MAX;
  static constexpr int EChallengeType_ARRAYSIZE =
    CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_EChallengeType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EChallengeType_descriptor() {
    return CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_descriptor();
  }
  template<typename T>
  static inline const std::string& EChallengeType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EChallengeType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EChallengeType_Name.");
    return CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_Name(enum_t_value);
  }
  static inline bool EChallengeType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EChallengeType* value) {
    return CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerProgressFieldNumber = 1,
    kGuildIdFieldNumber = 2,
    kChallengeInstanceIdFieldNumber = 3,
    kChallengeParameterFieldNumber = 4,
    kChallengeTypeFieldNumber = 5,
    kChallengeProgressAtStartFieldNumber = 7,
    kCompleteFieldNumber = 8,
  };
  // repeated .CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress player_progress = 1;
  int player_progress_size() const;
  private:
  int _internal_player_progress_size() const;
  public:
  void clear_player_progress();
  ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* mutable_player_progress(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress >*
      mutable_player_progress();
  private:
  const ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& _internal_player_progress(int index) const;
  ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* _internal_add_player_progress();
  public:
  const ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& player_progress(int index) const;
  ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* add_player_progress();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress >&
      player_progress() const;

  // optional uint32 guild_id = 2;
  bool has_guild_id() const;
  private:
  bool _internal_has_guild_id() const;
  public:
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_instance_id = 3;
  bool has_challenge_instance_id() const;
  private:
  bool _internal_has_challenge_instance_id() const;
  public:
  void clear_challenge_instance_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id() const;
  void set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_instance_id() const;
  void _internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 challenge_parameter = 4;
  bool has_challenge_parameter() const;
  private:
  bool _internal_has_challenge_parameter() const;
  public:
  void clear_challenge_parameter();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter() const;
  void set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_parameter() const;
  void _internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .CDOTAUserMsg_GuildChallenge_Progress.EChallengeType challenge_type = 5 [default = k_EChallengeType_Invalid];
  bool has_challenge_type() const;
  private:
  bool _internal_has_challenge_type() const;
  public:
  void clear_challenge_type();
  ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType challenge_type() const;
  void set_challenge_type(::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType value);
  private:
  ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType _internal_challenge_type() const;
  void _internal_set_challenge_type(::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType value);
  public:

  // optional uint32 challenge_progress_at_start = 7;
  bool has_challenge_progress_at_start() const;
  private:
  bool _internal_has_challenge_progress_at_start() const;
  public:
  void clear_challenge_progress_at_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_progress_at_start() const;
  void set_challenge_progress_at_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_challenge_progress_at_start() const;
  void _internal_set_challenge_progress_at_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool complete = 8;
  bool has_complete() const;
  private:
  bool _internal_has_complete() const;
  public:
  void clear_complete();
  bool complete() const;
  void set_complete(bool value);
  private:
  bool _internal_complete() const;
  void _internal_set_complete(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_GuildChallenge_Progress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress > player_progress_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_instance_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_parameter_;
  int challenge_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 challenge_progress_at_start_;
  bool complete_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WRArcanaProgress PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_WRArcanaProgress) */ {
 public:
  inline CDOTAUserMsg_WRArcanaProgress() : CDOTAUserMsg_WRArcanaProgress(nullptr) {}
  virtual ~CDOTAUserMsg_WRArcanaProgress();
  explicit constexpr CDOTAUserMsg_WRArcanaProgress(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_WRArcanaProgress(const CDOTAUserMsg_WRArcanaProgress& from);
  CDOTAUserMsg_WRArcanaProgress(CDOTAUserMsg_WRArcanaProgress&& from) noexcept
    : CDOTAUserMsg_WRArcanaProgress() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_WRArcanaProgress& operator=(const CDOTAUserMsg_WRArcanaProgress& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_WRArcanaProgress& operator=(CDOTAUserMsg_WRArcanaProgress&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_WRArcanaProgress& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_WRArcanaProgress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WRArcanaProgress*>(
               &_CDOTAUserMsg_WRArcanaProgress_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    163;

  friend void swap(CDOTAUserMsg_WRArcanaProgress& a, CDOTAUserMsg_WRArcanaProgress& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_WRArcanaProgress* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_WRArcanaProgress* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WRArcanaProgress* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_WRArcanaProgress>(nullptr);
  }

  CDOTAUserMsg_WRArcanaProgress* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_WRArcanaProgress>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_WRArcanaProgress& from);
  void MergeFrom(const CDOTAUserMsg_WRArcanaProgress& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_WRArcanaProgress* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_WRArcanaProgress";
  }
  protected:
  explicit CDOTAUserMsg_WRArcanaProgress(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kTargetEhandleFieldNumber = 2,
    kArrowsLandedFieldNumber = 3,
    kDamageDealtFieldNumber = 4,
    kTargetHpFieldNumber = 5,
    kTargetMaxHpFieldNumber = 6,
    kArcanaLevelFieldNumber = 7,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_ehandle = 2;
  bool has_target_ehandle() const;
  private:
  bool _internal_has_target_ehandle() const;
  public:
  void clear_target_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_ehandle() const;
  void set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_ehandle() const;
  void _internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arrows_landed = 3;
  bool has_arrows_landed() const;
  private:
  bool _internal_has_arrows_landed() const;
  public:
  void clear_arrows_landed();
  ::PROTOBUF_NAMESPACE_ID::uint32 arrows_landed() const;
  void set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arrows_landed() const;
  void _internal_set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 damage_dealt = 4;
  bool has_damage_dealt() const;
  private:
  bool _internal_has_damage_dealt() const;
  public:
  void clear_damage_dealt();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_dealt() const;
  void set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_dealt() const;
  void _internal_set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_hp = 5;
  bool has_target_hp() const;
  private:
  bool _internal_has_target_hp() const;
  public:
  void clear_target_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hp() const;
  void set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_hp() const;
  void _internal_set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_max_hp = 6;
  bool has_target_max_hp() const;
  private:
  bool _internal_has_target_max_hp() const;
  public:
  void clear_target_max_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_max_hp() const;
  void set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_max_hp() const;
  void _internal_set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 7;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WRArcanaProgress)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arrows_landed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_dealt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_max_hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WRArcanaSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_WRArcanaSummary) */ {
 public:
  inline CDOTAUserMsg_WRArcanaSummary() : CDOTAUserMsg_WRArcanaSummary(nullptr) {}
  virtual ~CDOTAUserMsg_WRArcanaSummary();
  explicit constexpr CDOTAUserMsg_WRArcanaSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_WRArcanaSummary(const CDOTAUserMsg_WRArcanaSummary& from);
  CDOTAUserMsg_WRArcanaSummary(CDOTAUserMsg_WRArcanaSummary&& from) noexcept
    : CDOTAUserMsg_WRArcanaSummary() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_WRArcanaSummary& operator=(const CDOTAUserMsg_WRArcanaSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_WRArcanaSummary& operator=(CDOTAUserMsg_WRArcanaSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_WRArcanaSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_WRArcanaSummary* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WRArcanaSummary*>(
               &_CDOTAUserMsg_WRArcanaSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    164;

  friend void swap(CDOTAUserMsg_WRArcanaSummary& a, CDOTAUserMsg_WRArcanaSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_WRArcanaSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_WRArcanaSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WRArcanaSummary* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_WRArcanaSummary>(nullptr);
  }

  CDOTAUserMsg_WRArcanaSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_WRArcanaSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_WRArcanaSummary& from);
  void MergeFrom(const CDOTAUserMsg_WRArcanaSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_WRArcanaSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_WRArcanaSummary";
  }
  protected:
  explicit CDOTAUserMsg_WRArcanaSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEhandleFieldNumber = 1,
    kTargetEhandleFieldNumber = 2,
    kArrowsLandedFieldNumber = 3,
    kDamageDealtFieldNumber = 4,
    kTargetHpFieldNumber = 5,
    kTargetMaxHpFieldNumber = 6,
    kArcanaLevelFieldNumber = 7,
    kSuccessFieldNumber = 8,
  };
  // optional uint32 ehandle = 1;
  bool has_ehandle() const;
  private:
  bool _internal_has_ehandle() const;
  public:
  void clear_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle() const;
  void set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_ehandle() const;
  void _internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_ehandle = 2;
  bool has_target_ehandle() const;
  private:
  bool _internal_has_target_ehandle() const;
  public:
  void clear_target_ehandle();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_ehandle() const;
  void set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_ehandle() const;
  void _internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arrows_landed = 3;
  bool has_arrows_landed() const;
  private:
  bool _internal_has_arrows_landed() const;
  public:
  void clear_arrows_landed();
  ::PROTOBUF_NAMESPACE_ID::uint32 arrows_landed() const;
  void set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arrows_landed() const;
  void _internal_set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 damage_dealt = 4;
  bool has_damage_dealt() const;
  private:
  bool _internal_has_damage_dealt() const;
  public:
  void clear_damage_dealt();
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_dealt() const;
  void set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_damage_dealt() const;
  void _internal_set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_hp = 5;
  bool has_target_hp() const;
  private:
  bool _internal_has_target_hp() const;
  public:
  void clear_target_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hp() const;
  void set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_hp() const;
  void _internal_set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_max_hp = 6;
  bool has_target_max_hp() const;
  private:
  bool _internal_has_target_max_hp() const;
  public:
  void clear_target_max_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_max_hp() const;
  void set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_max_hp() const;
  void _internal_set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 arcana_level = 7;
  bool has_arcana_level() const;
  private:
  bool _internal_has_arcana_level() const;
  public:
  void clear_arcana_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level() const;
  void set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_arcana_level() const;
  void _internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool success = 8;
  bool has_success() const;
  private:
  bool _internal_has_success() const;
  public:
  void clear_success();
  bool success() const;
  void set_success(bool value);
  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_WRArcanaSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_ehandle_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arrows_landed_;
  ::PROTOBUF_NAMESPACE_ID::uint32 damage_dealt_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_max_hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 arcana_level_;
  bool success_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_EmptyItemSlotAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_EmptyItemSlotAlert) */ {
 public:
  inline CDOTAUserMsg_EmptyItemSlotAlert() : CDOTAUserMsg_EmptyItemSlotAlert(nullptr) {}
  virtual ~CDOTAUserMsg_EmptyItemSlotAlert();
  explicit constexpr CDOTAUserMsg_EmptyItemSlotAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_EmptyItemSlotAlert(const CDOTAUserMsg_EmptyItemSlotAlert& from);
  CDOTAUserMsg_EmptyItemSlotAlert(CDOTAUserMsg_EmptyItemSlotAlert&& from) noexcept
    : CDOTAUserMsg_EmptyItemSlotAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_EmptyItemSlotAlert& operator=(const CDOTAUserMsg_EmptyItemSlotAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_EmptyItemSlotAlert& operator=(CDOTAUserMsg_EmptyItemSlotAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_EmptyItemSlotAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_EmptyItemSlotAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_EmptyItemSlotAlert*>(
               &_CDOTAUserMsg_EmptyItemSlotAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    165;

  friend void swap(CDOTAUserMsg_EmptyItemSlotAlert& a, CDOTAUserMsg_EmptyItemSlotAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_EmptyItemSlotAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_EmptyItemSlotAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_EmptyItemSlotAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_EmptyItemSlotAlert>(nullptr);
  }

  CDOTAUserMsg_EmptyItemSlotAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_EmptyItemSlotAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_EmptyItemSlotAlert& from);
  void MergeFrom(const CDOTAUserMsg_EmptyItemSlotAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_EmptyItemSlotAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_EmptyItemSlotAlert";
  }
  protected:
  explicit CDOTAUserMsg_EmptyItemSlotAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kSlotIndexFieldNumber = 3,
    kCooldownSecondsFieldNumber = 4,
  };
  // optional int32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 slot_index = 3;
  bool has_slot_index() const;
  private:
  bool _internal_has_slot_index() const;
  public:
  void clear_slot_index();
  ::PROTOBUF_NAMESPACE_ID::int32 slot_index() const;
  void set_slot_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_slot_index() const;
  void _internal_set_slot_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 cooldown_seconds = 4;
  bool has_cooldown_seconds() const;
  private:
  bool _internal_has_cooldown_seconds() const;
  public:
  void clear_cooldown_seconds();
  ::PROTOBUF_NAMESPACE_ID::int32 cooldown_seconds() const;
  void set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cooldown_seconds() const;
  void _internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_EmptyItemSlotAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 slot_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 cooldown_seconds_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AghsStatusAlert PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_AghsStatusAlert) */ {
 public:
  inline CDOTAUserMsg_AghsStatusAlert() : CDOTAUserMsg_AghsStatusAlert(nullptr) {}
  virtual ~CDOTAUserMsg_AghsStatusAlert();
  explicit constexpr CDOTAUserMsg_AghsStatusAlert(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_AghsStatusAlert(const CDOTAUserMsg_AghsStatusAlert& from);
  CDOTAUserMsg_AghsStatusAlert(CDOTAUserMsg_AghsStatusAlert&& from) noexcept
    : CDOTAUserMsg_AghsStatusAlert() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_AghsStatusAlert& operator=(const CDOTAUserMsg_AghsStatusAlert& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_AghsStatusAlert& operator=(CDOTAUserMsg_AghsStatusAlert&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_AghsStatusAlert& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_AghsStatusAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AghsStatusAlert*>(
               &_CDOTAUserMsg_AghsStatusAlert_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    166;

  friend void swap(CDOTAUserMsg_AghsStatusAlert& a, CDOTAUserMsg_AghsStatusAlert& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_AghsStatusAlert* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_AghsStatusAlert* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AghsStatusAlert* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_AghsStatusAlert>(nullptr);
  }

  CDOTAUserMsg_AghsStatusAlert* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_AghsStatusAlert>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_AghsStatusAlert& from);
  void MergeFrom(const CDOTAUserMsg_AghsStatusAlert& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_AghsStatusAlert* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_AghsStatusAlert";
  }
  protected:
  explicit CDOTAUserMsg_AghsStatusAlert(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSourcePlayerIdFieldNumber = 1,
    kTargetPlayerIdFieldNumber = 2,
    kTargetEntindexFieldNumber = 3,
    kAlertTypeFieldNumber = 4,
    kHasScepterFieldNumber = 5,
    kHasShardFieldNumber = 6,
  };
  // optional uint32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_player_id = 2;
  bool has_target_player_id() const;
  private:
  bool _internal_has_target_player_id() const;
  public:
  void clear_target_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_player_id() const;
  void set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_player_id() const;
  void _internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 target_entindex = 3;
  bool has_target_entindex() const;
  private:
  bool _internal_has_target_entindex() const;
  public:
  void clear_target_entindex();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex() const;
  void set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_entindex() const;
  void _internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 alert_type = 4;
  bool has_alert_type() const;
  private:
  bool _internal_has_alert_type() const;
  public:
  void clear_alert_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 alert_type() const;
  void set_alert_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_alert_type() const;
  void _internal_set_alert_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional bool has_scepter = 5;
  bool has_has_scepter() const;
  private:
  bool _internal_has_has_scepter() const;
  public:
  void clear_has_scepter();
  bool has_scepter() const;
  void set_has_scepter(bool value);
  private:
  bool _internal_has_scepter() const;
  void _internal_set_has_scepter(bool value);
  public:

  // optional bool has_shard = 6;
  bool has_has_shard() const;
  private:
  bool _internal_has_has_shard() const;
  public:
  void clear_has_shard();
  bool has_shard() const;
  void set_has_shard(bool value);
  private:
  bool _internal_has_shard() const;
  void _internal_set_has_shard(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_AghsStatusAlert)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_entindex_;
  ::PROTOBUF_NAMESPACE_ID::uint32 alert_type_;
  bool has_scepter_;
  bool has_shard_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MutedPlayers PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_MutedPlayers) */ {
 public:
  inline CDOTAUserMsg_MutedPlayers() : CDOTAUserMsg_MutedPlayers(nullptr) {}
  virtual ~CDOTAUserMsg_MutedPlayers();
  explicit constexpr CDOTAUserMsg_MutedPlayers(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_MutedPlayers(const CDOTAUserMsg_MutedPlayers& from);
  CDOTAUserMsg_MutedPlayers(CDOTAUserMsg_MutedPlayers&& from) noexcept
    : CDOTAUserMsg_MutedPlayers() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_MutedPlayers& operator=(const CDOTAUserMsg_MutedPlayers& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_MutedPlayers& operator=(CDOTAUserMsg_MutedPlayers&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_MutedPlayers& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_MutedPlayers* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MutedPlayers*>(
               &_CDOTAUserMsg_MutedPlayers_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    167;

  friend void swap(CDOTAUserMsg_MutedPlayers& a, CDOTAUserMsg_MutedPlayers& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_MutedPlayers* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_MutedPlayers* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MutedPlayers* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_MutedPlayers>(nullptr);
  }

  CDOTAUserMsg_MutedPlayers* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_MutedPlayers>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_MutedPlayers& from);
  void MergeFrom(const CDOTAUserMsg_MutedPlayers& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_MutedPlayers* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_MutedPlayers";
  }
  protected:
  explicit CDOTAUserMsg_MutedPlayers(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTextMutedPlayerIdsFieldNumber = 1,
    kVoiceMutedPlayerIdsFieldNumber = 2,
  };
  // repeated int32 text_muted_player_ids = 1;
  int text_muted_player_ids_size() const;
  private:
  int _internal_text_muted_player_ids_size() const;
  public:
  void clear_text_muted_player_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_text_muted_player_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_text_muted_player_ids() const;
  void _internal_add_text_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_text_muted_player_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 text_muted_player_ids(int index) const;
  void set_text_muted_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_text_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      text_muted_player_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_text_muted_player_ids();

  // repeated int32 voice_muted_player_ids = 2;
  int voice_muted_player_ids_size() const;
  private:
  int _internal_voice_muted_player_ids_size() const;
  public:
  void clear_voice_muted_player_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_voice_muted_player_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_voice_muted_player_ids() const;
  void _internal_add_voice_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_voice_muted_player_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 voice_muted_player_ids(int index) const;
  void set_voice_muted_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_voice_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      voice_muted_player_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_voice_muted_player_ids();

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_MutedPlayers)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > text_muted_player_ids_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > voice_muted_player_ids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ContextualTip PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ContextualTip) */ {
 public:
  inline CDOTAUserMsg_ContextualTip() : CDOTAUserMsg_ContextualTip(nullptr) {}
  virtual ~CDOTAUserMsg_ContextualTip();
  explicit constexpr CDOTAUserMsg_ContextualTip(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ContextualTip(const CDOTAUserMsg_ContextualTip& from);
  CDOTAUserMsg_ContextualTip(CDOTAUserMsg_ContextualTip&& from) noexcept
    : CDOTAUserMsg_ContextualTip() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ContextualTip& operator=(const CDOTAUserMsg_ContextualTip& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ContextualTip& operator=(CDOTAUserMsg_ContextualTip&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ContextualTip& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ContextualTip* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ContextualTip*>(
               &_CDOTAUserMsg_ContextualTip_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    168;

  friend void swap(CDOTAUserMsg_ContextualTip& a, CDOTAUserMsg_ContextualTip& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ContextualTip* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ContextualTip* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ContextualTip* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ContextualTip>(nullptr);
  }

  CDOTAUserMsg_ContextualTip* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ContextualTip>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ContextualTip& from);
  void MergeFrom(const CDOTAUserMsg_ContextualTip& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ContextualTip* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ContextualTip";
  }
  protected:
  explicit CDOTAUserMsg_ContextualTip(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReferencedAbilitiesFieldNumber = 2,
    kReferencedUnitsFieldNumber = 3,
    kPanoramaClassesFieldNumber = 4,
    kStringParamFieldNumber = 11,
    kStringParam2FieldNumber = 12,
    kTipTextOverrideFieldNumber = 13,
    kTipAnnotationOverrideFieldNumber = 14,
    kPanoramaSnippetFieldNumber = 15,
    kTipIdFieldNumber = 1,
    kForceAnnotationFieldNumber = 5,
    kVariantFieldNumber = 6,
    kIntParamFieldNumber = 7,
    kIntParam2FieldNumber = 8,
    kFloatParamFieldNumber = 9,
    kFloatParam2FieldNumber = 10,
  };
  // repeated string referenced_abilities = 2;
  int referenced_abilities_size() const;
  private:
  int _internal_referenced_abilities_size() const;
  public:
  void clear_referenced_abilities();
  const std::string& referenced_abilities(int index) const;
  std::string* mutable_referenced_abilities(int index);
  void set_referenced_abilities(int index, const std::string& value);
  void set_referenced_abilities(int index, std::string&& value);
  void set_referenced_abilities(int index, const char* value);
  void set_referenced_abilities(int index, const char* value, size_t size);
  std::string* add_referenced_abilities();
  void add_referenced_abilities(const std::string& value);
  void add_referenced_abilities(std::string&& value);
  void add_referenced_abilities(const char* value);
  void add_referenced_abilities(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& referenced_abilities() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_referenced_abilities();
  private:
  const std::string& _internal_referenced_abilities(int index) const;
  std::string* _internal_add_referenced_abilities();
  public:

  // repeated string referenced_units = 3;
  int referenced_units_size() const;
  private:
  int _internal_referenced_units_size() const;
  public:
  void clear_referenced_units();
  const std::string& referenced_units(int index) const;
  std::string* mutable_referenced_units(int index);
  void set_referenced_units(int index, const std::string& value);
  void set_referenced_units(int index, std::string&& value);
  void set_referenced_units(int index, const char* value);
  void set_referenced_units(int index, const char* value, size_t size);
  std::string* add_referenced_units();
  void add_referenced_units(const std::string& value);
  void add_referenced_units(std::string&& value);
  void add_referenced_units(const char* value);
  void add_referenced_units(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& referenced_units() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_referenced_units();
  private:
  const std::string& _internal_referenced_units(int index) const;
  std::string* _internal_add_referenced_units();
  public:

  // repeated string panorama_classes = 4;
  int panorama_classes_size() const;
  private:
  int _internal_panorama_classes_size() const;
  public:
  void clear_panorama_classes();
  const std::string& panorama_classes(int index) const;
  std::string* mutable_panorama_classes(int index);
  void set_panorama_classes(int index, const std::string& value);
  void set_panorama_classes(int index, std::string&& value);
  void set_panorama_classes(int index, const char* value);
  void set_panorama_classes(int index, const char* value, size_t size);
  std::string* add_panorama_classes();
  void add_panorama_classes(const std::string& value);
  void add_panorama_classes(std::string&& value);
  void add_panorama_classes(const char* value);
  void add_panorama_classes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& panorama_classes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_panorama_classes();
  private:
  const std::string& _internal_panorama_classes(int index) const;
  std::string* _internal_add_panorama_classes();
  public:

  // optional string string_param = 11;
  bool has_string_param() const;
  private:
  bool _internal_has_string_param() const;
  public:
  void clear_string_param();
  const std::string& string_param() const;
  void set_string_param(const std::string& value);
  void set_string_param(std::string&& value);
  void set_string_param(const char* value);
  void set_string_param(const char* value, size_t size);
  std::string* mutable_string_param();
  std::string* release_string_param();
  void set_allocated_string_param(std::string* string_param);
  private:
  const std::string& _internal_string_param() const;
  void _internal_set_string_param(const std::string& value);
  std::string* _internal_mutable_string_param();
  public:

  // optional string string_param2 = 12;
  bool has_string_param2() const;
  private:
  bool _internal_has_string_param2() const;
  public:
  void clear_string_param2();
  const std::string& string_param2() const;
  void set_string_param2(const std::string& value);
  void set_string_param2(std::string&& value);
  void set_string_param2(const char* value);
  void set_string_param2(const char* value, size_t size);
  std::string* mutable_string_param2();
  std::string* release_string_param2();
  void set_allocated_string_param2(std::string* string_param2);
  private:
  const std::string& _internal_string_param2() const;
  void _internal_set_string_param2(const std::string& value);
  std::string* _internal_mutable_string_param2();
  public:

  // optional string tip_text_override = 13;
  bool has_tip_text_override() const;
  private:
  bool _internal_has_tip_text_override() const;
  public:
  void clear_tip_text_override();
  const std::string& tip_text_override() const;
  void set_tip_text_override(const std::string& value);
  void set_tip_text_override(std::string&& value);
  void set_tip_text_override(const char* value);
  void set_tip_text_override(const char* value, size_t size);
  std::string* mutable_tip_text_override();
  std::string* release_tip_text_override();
  void set_allocated_tip_text_override(std::string* tip_text_override);
  private:
  const std::string& _internal_tip_text_override() const;
  void _internal_set_tip_text_override(const std::string& value);
  std::string* _internal_mutable_tip_text_override();
  public:

  // optional string tip_annotation_override = 14;
  bool has_tip_annotation_override() const;
  private:
  bool _internal_has_tip_annotation_override() const;
  public:
  void clear_tip_annotation_override();
  const std::string& tip_annotation_override() const;
  void set_tip_annotation_override(const std::string& value);
  void set_tip_annotation_override(std::string&& value);
  void set_tip_annotation_override(const char* value);
  void set_tip_annotation_override(const char* value, size_t size);
  std::string* mutable_tip_annotation_override();
  std::string* release_tip_annotation_override();
  void set_allocated_tip_annotation_override(std::string* tip_annotation_override);
  private:
  const std::string& _internal_tip_annotation_override() const;
  void _internal_set_tip_annotation_override(const std::string& value);
  std::string* _internal_mutable_tip_annotation_override();
  public:

  // optional string panorama_snippet = 15;
  bool has_panorama_snippet() const;
  private:
  bool _internal_has_panorama_snippet() const;
  public:
  void clear_panorama_snippet();
  const std::string& panorama_snippet() const;
  void set_panorama_snippet(const std::string& value);
  void set_panorama_snippet(std::string&& value);
  void set_panorama_snippet(const char* value);
  void set_panorama_snippet(const char* value, size_t size);
  std::string* mutable_panorama_snippet();
  std::string* release_panorama_snippet();
  void set_allocated_panorama_snippet(std::string* panorama_snippet);
  private:
  const std::string& _internal_panorama_snippet() const;
  void _internal_set_panorama_snippet(const std::string& value);
  std::string* _internal_mutable_panorama_snippet();
  public:

  // optional int32 tip_id = 1;
  bool has_tip_id() const;
  private:
  bool _internal_has_tip_id() const;
  public:
  void clear_tip_id();
  ::PROTOBUF_NAMESPACE_ID::int32 tip_id() const;
  void set_tip_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tip_id() const;
  void _internal_set_tip_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool force_annotation = 5;
  bool has_force_annotation() const;
  private:
  bool _internal_has_force_annotation() const;
  public:
  void clear_force_annotation();
  bool force_annotation() const;
  void set_force_annotation(bool value);
  private:
  bool _internal_force_annotation() const;
  void _internal_set_force_annotation(bool value);
  public:

  // optional int32 variant = 6;
  bool has_variant() const;
  private:
  bool _internal_has_variant() const;
  public:
  void clear_variant();
  ::PROTOBUF_NAMESPACE_ID::int32 variant() const;
  void set_variant(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_variant() const;
  void _internal_set_variant(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 int_param = 7;
  bool has_int_param() const;
  private:
  bool _internal_has_int_param() const;
  public:
  void clear_int_param();
  ::PROTOBUF_NAMESPACE_ID::int32 int_param() const;
  void set_int_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_param() const;
  void _internal_set_int_param(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 int_param2 = 8;
  bool has_int_param2() const;
  private:
  bool _internal_has_int_param2() const;
  public:
  void clear_int_param2();
  ::PROTOBUF_NAMESPACE_ID::int32 int_param2() const;
  void set_int_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int_param2() const;
  void _internal_set_int_param2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional float float_param = 9;
  bool has_float_param() const;
  private:
  bool _internal_has_float_param() const;
  public:
  void clear_float_param();
  float float_param() const;
  void set_float_param(float value);
  private:
  float _internal_float_param() const;
  void _internal_set_float_param(float value);
  public:

  // optional float float_param2 = 10;
  bool has_float_param2() const;
  private:
  bool _internal_has_float_param2() const;
  public:
  void clear_float_param2();
  float float_param2() const;
  void set_float_param2(float value);
  private:
  float _internal_float_param2() const;
  void _internal_set_float_param2(float value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ContextualTip)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> referenced_abilities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> referenced_units_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> panorama_classes_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_param_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr string_param2_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tip_text_override_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tip_annotation_override_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr panorama_snippet_;
  ::PROTOBUF_NAMESPACE_ID::int32 tip_id_;
  bool force_annotation_;
  ::PROTOBUF_NAMESPACE_ID::int32 variant_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_param_;
  ::PROTOBUF_NAMESPACE_ID::int32 int_param2_;
  float float_param_;
  float float_param2_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CDOTAUserMsg_ChatMessage) */ {
 public:
  inline CDOTAUserMsg_ChatMessage() : CDOTAUserMsg_ChatMessage(nullptr) {}
  virtual ~CDOTAUserMsg_ChatMessage();
  explicit constexpr CDOTAUserMsg_ChatMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CDOTAUserMsg_ChatMessage(const CDOTAUserMsg_ChatMessage& from);
  CDOTAUserMsg_ChatMessage(CDOTAUserMsg_ChatMessage&& from) noexcept
    : CDOTAUserMsg_ChatMessage() {
    *this = ::std::move(from);
  }

  inline CDOTAUserMsg_ChatMessage& operator=(const CDOTAUserMsg_ChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CDOTAUserMsg_ChatMessage& operator=(CDOTAUserMsg_ChatMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CDOTAUserMsg_ChatMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CDOTAUserMsg_ChatMessage* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatMessage*>(
               &_CDOTAUserMsg_ChatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    169;

  friend void swap(CDOTAUserMsg_ChatMessage& a, CDOTAUserMsg_ChatMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(CDOTAUserMsg_ChatMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CDOTAUserMsg_ChatMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatMessage* New() const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatMessage>(nullptr);
  }

  CDOTAUserMsg_ChatMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CDOTAUserMsg_ChatMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CDOTAUserMsg_ChatMessage& from);
  void MergeFrom(const CDOTAUserMsg_ChatMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CDOTAUserMsg_ChatMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CDOTAUserMsg_ChatMessage";
  }
  protected:
  explicit CDOTAUserMsg_ChatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fusermessages_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageTextFieldNumber = 3,
    kSourcePlayerIdFieldNumber = 1,
    kChannelTypeFieldNumber = 2,
  };
  // optional string message_text = 3;
  bool has_message_text() const;
  private:
  bool _internal_has_message_text() const;
  public:
  void clear_message_text();
  const std::string& message_text() const;
  void set_message_text(const std::string& value);
  void set_message_text(std::string&& value);
  void set_message_text(const char* value);
  void set_message_text(const char* value, size_t size);
  std::string* mutable_message_text();
  std::string* release_message_text();
  void set_allocated_message_text(std::string* message_text);
  private:
  const std::string& _internal_message_text() const;
  void _internal_set_message_text(const std::string& value);
  std::string* _internal_mutable_message_text();
  public:

  // optional int32 source_player_id = 1;
  bool has_source_player_id() const;
  private:
  bool _internal_has_source_player_id() const;
  public:
  void clear_source_player_id();
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id() const;
  void set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_source_player_id() const;
  void _internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional uint32 channel_type = 2;
  bool has_channel_type() const;
  private:
  bool _internal_has_channel_type() const;
  public:
  void clear_channel_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type() const;
  void set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_channel_type() const;
  void _internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CDOTAUserMsg_ChatMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_text_;
  ::PROTOBUF_NAMESPACE_ID::int32 source_player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 channel_type_;
  friend struct ::TableStruct_dota_5fusermessages_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CDOTAUserMsg_AIDebugLine

// optional string message = 1;
inline bool CDOTAUserMsg_AIDebugLine::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AIDebugLine::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_AIDebugLine::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_AIDebugLine::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AIDebugLine.message)
  return _internal_message();
}
inline void CDOTAUserMsg_AIDebugLine::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AIDebugLine.message)
}
inline std::string* CDOTAUserMsg_AIDebugLine::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_AIDebugLine.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_AIDebugLine::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_AIDebugLine::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_AIDebugLine::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_AIDebugLine.message)
}
inline void CDOTAUserMsg_AIDebugLine::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_AIDebugLine.message)
}
inline void CDOTAUserMsg_AIDebugLine::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_AIDebugLine.message)
}
inline std::string* CDOTAUserMsg_AIDebugLine::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_AIDebugLine::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_AIDebugLine.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_AIDebugLine::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_AIDebugLine.message)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_Ping

// optional uint32 ping = 2;
inline bool CDOTAUserMsg_Ping::_internal_has_ping() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_Ping::has_ping() const {
  return _internal_has_ping();
}
inline void CDOTAUserMsg_Ping::clear_ping() {
  ping_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_Ping::_internal_ping() const {
  return ping_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_Ping::ping() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_Ping.ping)
  return _internal_ping();
}
inline void CDOTAUserMsg_Ping::_internal_set_ping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ping_ = value;
}
inline void CDOTAUserMsg_Ping::set_ping(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ping(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_Ping.ping)
}

// optional uint32 loss = 3;
inline bool CDOTAUserMsg_Ping::_internal_has_loss() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_Ping::has_loss() const {
  return _internal_has_loss();
}
inline void CDOTAUserMsg_Ping::clear_loss() {
  loss_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_Ping::_internal_loss() const {
  return loss_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_Ping::loss() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_Ping.loss)
  return _internal_loss();
}
inline void CDOTAUserMsg_Ping::_internal_set_loss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  loss_ = value;
}
inline void CDOTAUserMsg_Ping::set_loss(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_loss(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_Ping.loss)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SwapVerify

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_SwapVerify::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SwapVerify::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_SwapVerify::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SwapVerify::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SwapVerify::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SwapVerify.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_SwapVerify::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_SwapVerify::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SwapVerify.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatEvent

// required .DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_type() const {
  return _internal_has_type();
}
inline void CDOTAUserMsg_ChatEvent::clear_type() {
  type_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::DOTA_CHAT_MESSAGE CDOTAUserMsg_ChatEvent::_internal_type() const {
  return static_cast< ::DOTA_CHAT_MESSAGE >(type_);
}
inline ::DOTA_CHAT_MESSAGE CDOTAUserMsg_ChatEvent::type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.type)
  return _internal_type();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_type(::DOTA_CHAT_MESSAGE value) {
  assert(::DOTA_CHAT_MESSAGE_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  type_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_type(::DOTA_CHAT_MESSAGE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.type)
}

// optional uint32 value = 2;
inline bool CDOTAUserMsg_ChatEvent::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_ChatEvent::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.value)
  return _internal_value();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  value_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.value)
}

// optional sint32 playerid_1 = 3 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_1() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_1() const {
  return _internal_has_playerid_1();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_1() {
  playerid_1_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_1() const {
  return playerid_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_1() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_1)
  return _internal_playerid_1();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  playerid_1_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_1(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_1)
}

// optional sint32 playerid_2 = 4 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_2() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_2() const {
  return _internal_has_playerid_2();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_2() {
  playerid_2_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_2() const {
  return playerid_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_2)
  return _internal_playerid_2();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  playerid_2_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_2)
}

// optional sint32 playerid_3 = 5 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_3() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_3() const {
  return _internal_has_playerid_3();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_3() {
  playerid_3_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_3() const {
  return playerid_3_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_3() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_3)
  return _internal_playerid_3();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  playerid_3_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_3(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_3)
}

// optional sint32 playerid_4 = 6 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_4() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_4() const {
  return _internal_has_playerid_4();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_4() {
  playerid_4_ = -1;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_4() const {
  return playerid_4_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_4() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_4)
  return _internal_playerid_4();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_4(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  playerid_4_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_4(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_4(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_4)
}

// optional sint32 playerid_5 = 7 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_5() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_5() const {
  return _internal_has_playerid_5();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_5() {
  playerid_5_ = -1;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_5() const {
  return playerid_5_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_5() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_5)
  return _internal_playerid_5();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_5(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  playerid_5_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_5(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_5(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_5)
}

// optional sint32 playerid_6 = 8 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::_internal_has_playerid_6() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_playerid_6() const {
  return _internal_has_playerid_6();
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_6() {
  playerid_6_ = -1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::_internal_playerid_6() const {
  return playerid_6_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatEvent::playerid_6() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.playerid_6)
  return _internal_playerid_6();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_playerid_6(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  playerid_6_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_6(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_playerid_6(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.playerid_6)
}

// optional uint32 value2 = 9;
inline bool CDOTAUserMsg_ChatEvent::_internal_has_value2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_value2() const {
  return _internal_has_value2();
}
inline void CDOTAUserMsg_ChatEvent::clear_value2() {
  value2_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::_internal_value2() const {
  return value2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::value2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.value2)
  return _internal_value2();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_value2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  value2_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_value2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.value2)
}

// optional uint32 value3 = 10;
inline bool CDOTAUserMsg_ChatEvent::_internal_has_value3() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatEvent::has_value3() const {
  return _internal_has_value3();
}
inline void CDOTAUserMsg_ChatEvent::clear_value3() {
  value3_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::_internal_value3() const {
  return value3_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatEvent::value3() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatEvent.value3)
  return _internal_value3();
}
inline void CDOTAUserMsg_ChatEvent::_internal_set_value3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  value3_ = value;
}
inline void CDOTAUserMsg_ChatEvent::set_value3(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value3(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatEvent.value3)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BotChat

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_BotChat::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BotChat::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_BotChat::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BotChat::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BotChat::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BotChat.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_BotChat::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
}
inline void CDOTAUserMsg_BotChat::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BotChat.player_id)
}

// optional string message = 3;
inline bool CDOTAUserMsg_BotChat::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BotChat::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_BotChat::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_BotChat::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BotChat.message)
  return _internal_message();
}
inline void CDOTAUserMsg_BotChat::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BotChat.message)
}
inline std::string* CDOTAUserMsg_BotChat::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BotChat.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_BotChat::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_BotChat::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_BotChat::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_BotChat.message)
}
inline void CDOTAUserMsg_BotChat::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_BotChat.message)
}
inline void CDOTAUserMsg_BotChat::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_BotChat.message)
}
inline std::string* CDOTAUserMsg_BotChat::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_BotChat::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_BotChat.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_BotChat::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_BotChat.message)
}

// optional string target = 4;
inline bool CDOTAUserMsg_BotChat::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BotChat::has_target() const {
  return _internal_has_target();
}
inline void CDOTAUserMsg_BotChat::clear_target() {
  target_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_BotChat::target() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BotChat.target)
  return _internal_target();
}
inline void CDOTAUserMsg_BotChat::set_target(const std::string& value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BotChat.target)
}
inline std::string* CDOTAUserMsg_BotChat::mutable_target() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BotChat.target)
  return _internal_mutable_target();
}
inline const std::string& CDOTAUserMsg_BotChat::_internal_target() const {
  return target_.Get();
}
inline void CDOTAUserMsg_BotChat::_internal_set_target(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_BotChat::set_target(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  target_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_BotChat.target)
}
inline void CDOTAUserMsg_BotChat::set_target(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_BotChat.target)
}
inline void CDOTAUserMsg_BotChat::set_target(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_BotChat.target)
}
inline std::string* CDOTAUserMsg_BotChat::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000002u;
  return target_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_BotChat::release_target() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_BotChat.target)
  if (!_internal_has_target()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return target_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_BotChat::set_allocated_target(std::string* target) {
  if (target != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  target_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), target,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_BotChat.target)
}

// optional bool team_only = 5;
inline bool CDOTAUserMsg_BotChat::_internal_has_team_only() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BotChat::has_team_only() const {
  return _internal_has_team_only();
}
inline void CDOTAUserMsg_BotChat::clear_team_only() {
  team_only_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CDOTAUserMsg_BotChat::_internal_team_only() const {
  return team_only_;
}
inline bool CDOTAUserMsg_BotChat::team_only() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BotChat.team_only)
  return _internal_team_only();
}
inline void CDOTAUserMsg_BotChat::_internal_set_team_only(bool value) {
  _has_bits_[0] |= 0x00000008u;
  team_only_ = value;
}
inline void CDOTAUserMsg_BotChat::set_team_only(bool value) {
  _internal_set_team_only(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BotChat.team_only)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CombatHeroPositions

// optional uint32 index = 1;
inline bool CDOTAUserMsg_CombatHeroPositions::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatHeroPositions::has_index() const {
  return _internal_has_index();
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_index() {
  index_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CombatHeroPositions::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CombatHeroPositions::index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatHeroPositions.index)
  return _internal_index();
}
inline void CDOTAUserMsg_CombatHeroPositions::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  index_ = value;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatHeroPositions.index)
}

// optional int32 time = 2;
inline bool CDOTAUserMsg_CombatHeroPositions::_internal_has_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatHeroPositions::has_time() const {
  return _internal_has_time();
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_time() {
  time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CombatHeroPositions::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CombatHeroPositions::time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatHeroPositions.time)
  return _internal_time();
}
inline void CDOTAUserMsg_CombatHeroPositions::_internal_set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  time_ = value;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatHeroPositions.time)
}

// optional .CMsgVector2D world_pos = 3;
inline bool CDOTAUserMsg_CombatHeroPositions::_internal_has_world_pos() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || world_pos_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_CombatHeroPositions::has_world_pos() const {
  return _internal_has_world_pos();
}
inline const ::CMsgVector2D& CDOTAUserMsg_CombatHeroPositions::_internal_world_pos() const {
  const ::CMsgVector2D* p = world_pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector2D&>(
      ::_CMsgVector2D_default_instance_);
}
inline const ::CMsgVector2D& CDOTAUserMsg_CombatHeroPositions::world_pos() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatHeroPositions.world_pos)
  return _internal_world_pos();
}
inline void CDOTAUserMsg_CombatHeroPositions::unsafe_arena_set_allocated_world_pos(
    ::CMsgVector2D* world_pos) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(world_pos_);
  }
  world_pos_ = world_pos;
  if (world_pos) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_CombatHeroPositions.world_pos)
}
inline ::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::release_world_pos() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector2D* temp = world_pos_;
  world_pos_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::unsafe_arena_release_world_pos() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CombatHeroPositions.world_pos)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector2D* temp = world_pos_;
  world_pos_ = nullptr;
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::_internal_mutable_world_pos() {
  _has_bits_[0] |= 0x00000001u;
  if (world_pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector2D>(GetArena());
    world_pos_ = p;
  }
  return world_pos_;
}
inline ::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::mutable_world_pos() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CombatHeroPositions.world_pos)
  return _internal_mutable_world_pos();
}
inline void CDOTAUserMsg_CombatHeroPositions::set_allocated_world_pos(::CMsgVector2D* world_pos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(world_pos_);
  }
  if (world_pos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(world_pos)->GetArena();
    if (message_arena != submessage_arena) {
      world_pos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, world_pos, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  world_pos_ = world_pos;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CombatHeroPositions.world_pos)
}

// optional int32 health = 4;
inline bool CDOTAUserMsg_CombatHeroPositions::_internal_has_health() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatHeroPositions::has_health() const {
  return _internal_has_health();
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_health() {
  health_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CombatHeroPositions::_internal_health() const {
  return health_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CombatHeroPositions::health() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatHeroPositions.health)
  return _internal_health();
}
inline void CDOTAUserMsg_CombatHeroPositions::_internal_set_health(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  health_ = value;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_health(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_health(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatHeroPositions.health)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CombatLogBulkData

// repeated .CMsgDOTACombatLogEntry combat_entries = 1;
inline int CDOTAUserMsg_CombatLogBulkData::_internal_combat_entries_size() const {
  return combat_entries_.size();
}
inline int CDOTAUserMsg_CombatLogBulkData::combat_entries_size() const {
  return _internal_combat_entries_size();
}
inline ::CMsgDOTACombatLogEntry* CDOTAUserMsg_CombatLogBulkData::mutable_combat_entries(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CombatLogBulkData.combat_entries)
  return combat_entries_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDOTACombatLogEntry >*
CDOTAUserMsg_CombatLogBulkData::mutable_combat_entries() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_CombatLogBulkData.combat_entries)
  return &combat_entries_;
}
inline const ::CMsgDOTACombatLogEntry& CDOTAUserMsg_CombatLogBulkData::_internal_combat_entries(int index) const {
  return combat_entries_.Get(index);
}
inline const ::CMsgDOTACombatLogEntry& CDOTAUserMsg_CombatLogBulkData::combat_entries(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatLogBulkData.combat_entries)
  return _internal_combat_entries(index);
}
inline ::CMsgDOTACombatLogEntry* CDOTAUserMsg_CombatLogBulkData::_internal_add_combat_entries() {
  return combat_entries_.Add();
}
inline ::CMsgDOTACombatLogEntry* CDOTAUserMsg_CombatLogBulkData::add_combat_entries() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_CombatLogBulkData.combat_entries)
  return _internal_add_combat_entries();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgDOTACombatLogEntry >&
CDOTAUserMsg_CombatLogBulkData::combat_entries() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_CombatLogBulkData.combat_entries)
  return combat_entries_;
}

// optional float timestamp = 2;
inline bool CDOTAUserMsg_CombatLogBulkData::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatLogBulkData::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CDOTAUserMsg_CombatLogBulkData::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CDOTAUserMsg_CombatLogBulkData::_internal_timestamp() const {
  return timestamp_;
}
inline float CDOTAUserMsg_CombatLogBulkData::timestamp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatLogBulkData.timestamp)
  return _internal_timestamp();
}
inline void CDOTAUserMsg_CombatLogBulkData::_internal_set_timestamp(float value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
}
inline void CDOTAUserMsg_CombatLogBulkData::set_timestamp(float value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatLogBulkData.timestamp)
}

// optional float duration = 3;
inline bool CDOTAUserMsg_CombatLogBulkData::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatLogBulkData::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_CombatLogBulkData::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_CombatLogBulkData::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_CombatLogBulkData::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatLogBulkData.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_CombatLogBulkData::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CDOTAUserMsg_CombatLogBulkData::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatLogBulkData.duration)
}

// optional uint32 player_id = 4;
inline bool CDOTAUserMsg_CombatLogBulkData::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CombatLogBulkData::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_CombatLogBulkData::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CombatLogBulkData::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CombatLogBulkData::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CombatLogBulkData.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_CombatLogBulkData::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
}
inline void CDOTAUserMsg_CombatLogBulkData::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CombatLogBulkData.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability

// optional uint32 ability_id = 1;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.ability_id)
}

// optional int32 damage = 2;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_has_damage() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_damage() const {
  return _internal_has_damage();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_damage() {
  damage_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_damage() const {
  return damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::damage() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.damage)
  return _internal_damage();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::_internal_set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  damage_ = value;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.damage)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo_Attacker

// optional uint32 attacker = 1;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_has_attacker() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_attacker() const {
  return _internal_has_attacker();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_attacker() {
  attacker_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_attacker() const {
  return attacker_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker::attacker() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker)
  return _internal_attacker();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_set_attacker(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  attacker_ = value;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_attacker(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker)
}

// optional int32 total_damage = 2;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_has_total_damage() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_total_damage() const {
  return _internal_has_total_damage();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_total_damage() {
  total_damage_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_total_damage() const {
  return total_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker::total_damage() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.total_damage)
  return _internal_total_damage();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_set_total_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  total_damage_ = value;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_total_damage(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_total_damage(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniKillCamInfo.Attacker.total_damage)
}

// repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
inline int CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_abilities_size() const {
  return abilities_.size();
}
inline int CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities_size() const {
  return _internal_abilities_size();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_abilities() {
  abilities_.Clear();
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >*
CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return &abilities_;
}
inline const ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_abilities(int index) const {
  return abilities_.Get(index);
}
inline const ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return _internal_abilities(index);
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_add_abilities() {
  return abilities_.Add();
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* CDOTAUserMsg_MiniKillCamInfo_Attacker::add_abilities() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return _internal_add_abilities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >&
CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_;
}

// optional string attacker_name = 4;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_has_attacker_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_attacker_name() const {
  return _internal_has_attacker_name();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_attacker_name() {
  attacker_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_MiniKillCamInfo_Attacker::attacker_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  return _internal_attacker_name();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const std::string& value) {
  _internal_set_attacker_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline std::string* CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_attacker_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  return _internal_mutable_attacker_name();
}
inline const std::string& CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_attacker_name() const {
  return attacker_name_.Get();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_set_attacker_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  attacker_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  attacker_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  attacker_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  attacker_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline std::string* CDOTAUserMsg_MiniKillCamInfo_Attacker::_internal_mutable_attacker_name() {
  _has_bits_[0] |= 0x00000001u;
  return attacker_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_MiniKillCamInfo_Attacker::release_attacker_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  if (!_internal_has_attacker_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return attacker_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_allocated_attacker_name(std::string* attacker_name) {
  if (attacker_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  attacker_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attacker_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo

// repeated .CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
inline int CDOTAUserMsg_MiniKillCamInfo::_internal_attackers_size() const {
  return attackers_.size();
}
inline int CDOTAUserMsg_MiniKillCamInfo::attackers_size() const {
  return _internal_attackers_size();
}
inline void CDOTAUserMsg_MiniKillCamInfo::clear_attackers() {
  attackers_.Clear();
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker* CDOTAUserMsg_MiniKillCamInfo::mutable_attackers(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >*
CDOTAUserMsg_MiniKillCamInfo::mutable_attackers() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_MiniKillCamInfo.attackers)
  return &attackers_;
}
inline const ::CDOTAUserMsg_MiniKillCamInfo_Attacker& CDOTAUserMsg_MiniKillCamInfo::_internal_attackers(int index) const {
  return attackers_.Get(index);
}
inline const ::CDOTAUserMsg_MiniKillCamInfo_Attacker& CDOTAUserMsg_MiniKillCamInfo::attackers(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniKillCamInfo.attackers)
  return _internal_attackers(index);
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker* CDOTAUserMsg_MiniKillCamInfo::_internal_add_attackers() {
  return attackers_.Add();
}
inline ::CDOTAUserMsg_MiniKillCamInfo_Attacker* CDOTAUserMsg_MiniKillCamInfo::add_attackers() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_MiniKillCamInfo.attackers)
  return _internal_add_attackers();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_MiniKillCamInfo_Attacker >&
CDOTAUserMsg_MiniKillCamInfo::attackers() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlobalLightColor

// optional uint32 color = 1;
inline bool CDOTAUserMsg_GlobalLightColor::_internal_has_color() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GlobalLightColor::has_color() const {
  return _internal_has_color();
}
inline void CDOTAUserMsg_GlobalLightColor::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GlobalLightColor::_internal_color() const {
  return color_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GlobalLightColor::color() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlobalLightColor.color)
  return _internal_color();
}
inline void CDOTAUserMsg_GlobalLightColor::_internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  color_ = value;
}
inline void CDOTAUserMsg_GlobalLightColor::set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GlobalLightColor.color)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_GlobalLightColor::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GlobalLightColor::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_GlobalLightColor::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_GlobalLightColor::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_GlobalLightColor::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlobalLightColor.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_GlobalLightColor::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CDOTAUserMsg_GlobalLightColor::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GlobalLightColor.duration)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlobalLightDirection

// optional .CMsgVector direction = 1;
inline bool CDOTAUserMsg_GlobalLightDirection::_internal_has_direction() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || direction_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_GlobalLightDirection::has_direction() const {
  return _internal_has_direction();
}
inline const ::CMsgVector& CDOTAUserMsg_GlobalLightDirection::_internal_direction() const {
  const ::CMsgVector* p = direction_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_GlobalLightDirection::direction() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlobalLightDirection.direction)
  return _internal_direction();
}
inline void CDOTAUserMsg_GlobalLightDirection::unsafe_arena_set_allocated_direction(
    ::CMsgVector* direction) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(direction_);
  }
  direction_ = direction;
  if (direction) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_GlobalLightDirection.direction)
}
inline ::CMsgVector* CDOTAUserMsg_GlobalLightDirection::release_direction() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = direction_;
  direction_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_GlobalLightDirection::unsafe_arena_release_direction() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_GlobalLightDirection.direction)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = direction_;
  direction_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_GlobalLightDirection::_internal_mutable_direction() {
  _has_bits_[0] |= 0x00000001u;
  if (direction_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    direction_ = p;
  }
  return direction_;
}
inline ::CMsgVector* CDOTAUserMsg_GlobalLightDirection::mutable_direction() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_GlobalLightDirection.direction)
  return _internal_mutable_direction();
}
inline void CDOTAUserMsg_GlobalLightDirection::set_allocated_direction(::CMsgVector* direction) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(direction_);
  }
  if (direction) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(direction)->GetArena();
    if (message_arena != submessage_arena) {
      direction = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, direction, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  direction_ = direction;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_GlobalLightDirection.direction)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_GlobalLightDirection::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GlobalLightDirection::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_GlobalLightDirection::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_GlobalLightDirection::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_GlobalLightDirection::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlobalLightDirection.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_GlobalLightDirection::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CDOTAUserMsg_GlobalLightDirection::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GlobalLightDirection.duration)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_LocationPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_LocationPing::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_LocationPing::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_LocationPing::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_LocationPing::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_LocationPing::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_LocationPing.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_LocationPing::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_LocationPing::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_LocationPing.player_id)
}

// optional .CDOTAMsg_LocationPing location_ping = 2;
inline bool CDOTAUserMsg_LocationPing::_internal_has_location_ping() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ping_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_LocationPing::has_location_ping() const {
  return _internal_has_location_ping();
}
inline const ::CDOTAMsg_LocationPing& CDOTAUserMsg_LocationPing::_internal_location_ping() const {
  const ::CDOTAMsg_LocationPing* p = location_ping_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_LocationPing&>(
      ::_CDOTAMsg_LocationPing_default_instance_);
}
inline const ::CDOTAMsg_LocationPing& CDOTAUserMsg_LocationPing::location_ping() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_LocationPing.location_ping)
  return _internal_location_ping();
}
inline void CDOTAUserMsg_LocationPing::unsafe_arena_set_allocated_location_ping(
    ::CDOTAMsg_LocationPing* location_ping) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_ping_);
  }
  location_ping_ = location_ping;
  if (location_ping) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_LocationPing.location_ping)
}
inline ::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::release_location_ping() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_LocationPing* temp = location_ping_;
  location_ping_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::unsafe_arena_release_location_ping() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_LocationPing.location_ping)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_LocationPing* temp = location_ping_;
  location_ping_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::_internal_mutable_location_ping() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ping_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_LocationPing>(GetArena());
    location_ping_ = p;
  }
  return location_ping_;
}
inline ::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::mutable_location_ping() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_LocationPing.location_ping)
  return _internal_mutable_location_ping();
}
inline void CDOTAUserMsg_LocationPing::set_allocated_location_ping(::CDOTAMsg_LocationPing* location_ping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_ping_);
  }
  if (location_ping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_ping)->GetArena();
    if (message_arena != submessage_arena) {
      location_ping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location_ping, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ping_ = location_ping;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_LocationPing.location_ping)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PingConfirmation

// optional uint32 player_id_of_original_pinger = 1;
inline bool CDOTAUserMsg_PingConfirmation::_internal_has_player_id_of_original_pinger() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PingConfirmation::has_player_id_of_original_pinger() const {
  return _internal_has_player_id_of_original_pinger();
}
inline void CDOTAUserMsg_PingConfirmation::clear_player_id_of_original_pinger() {
  player_id_of_original_pinger_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::_internal_player_id_of_original_pinger() const {
  return player_id_of_original_pinger_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::player_id_of_original_pinger() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PingConfirmation.player_id_of_original_pinger)
  return _internal_player_id_of_original_pinger();
}
inline void CDOTAUserMsg_PingConfirmation::_internal_set_player_id_of_original_pinger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_of_original_pinger_ = value;
}
inline void CDOTAUserMsg_PingConfirmation::set_player_id_of_original_pinger(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id_of_original_pinger(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PingConfirmation.player_id_of_original_pinger)
}

// optional uint32 entity_index = 2;
inline bool CDOTAUserMsg_PingConfirmation::_internal_has_entity_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PingConfirmation::has_entity_index() const {
  return _internal_has_entity_index();
}
inline void CDOTAUserMsg_PingConfirmation::clear_entity_index() {
  entity_index_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::_internal_entity_index() const {
  return entity_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::entity_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PingConfirmation.entity_index)
  return _internal_entity_index();
}
inline void CDOTAUserMsg_PingConfirmation::_internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_index_ = value;
}
inline void CDOTAUserMsg_PingConfirmation::set_entity_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PingConfirmation.entity_index)
}

// optional uint32 icon_type = 3;
inline bool CDOTAUserMsg_PingConfirmation::_internal_has_icon_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PingConfirmation::has_icon_type() const {
  return _internal_has_icon_type();
}
inline void CDOTAUserMsg_PingConfirmation::clear_icon_type() {
  icon_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::_internal_icon_type() const {
  return icon_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PingConfirmation::icon_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PingConfirmation.icon_type)
  return _internal_icon_type();
}
inline void CDOTAUserMsg_PingConfirmation::_internal_set_icon_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  icon_type_ = value;
}
inline void CDOTAUserMsg_PingConfirmation::set_icon_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_icon_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PingConfirmation.icon_type)
}

// optional .CMsgVector location = 4;
inline bool CDOTAUserMsg_PingConfirmation::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_PingConfirmation::has_location() const {
  return _internal_has_location();
}
inline const ::CMsgVector& CDOTAUserMsg_PingConfirmation::_internal_location() const {
  const ::CMsgVector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_PingConfirmation::location() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PingConfirmation.location)
  return _internal_location();
}
inline void CDOTAUserMsg_PingConfirmation::unsafe_arena_set_allocated_location(
    ::CMsgVector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_PingConfirmation.location)
}
inline ::CMsgVector* CDOTAUserMsg_PingConfirmation::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_PingConfirmation::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_PingConfirmation.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_PingConfirmation::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgVector* CDOTAUserMsg_PingConfirmation::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_PingConfirmation.location)
  return _internal_mutable_location();
}
inline void CDOTAUserMsg_PingConfirmation::set_allocated_location(::CMsgVector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location)->GetArena();
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_PingConfirmation.location)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_ItemAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ItemAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ItemAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ItemAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ItemAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ItemAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemAlert.player_id)
}

// optional .CDOTAMsg_ItemAlert item_alert = 2;
inline bool CDOTAUserMsg_ItemAlert::_internal_has_item_alert() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || item_alert_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_ItemAlert::has_item_alert() const {
  return _internal_has_item_alert();
}
inline const ::CDOTAMsg_ItemAlert& CDOTAUserMsg_ItemAlert::_internal_item_alert() const {
  const ::CDOTAMsg_ItemAlert* p = item_alert_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_ItemAlert&>(
      ::_CDOTAMsg_ItemAlert_default_instance_);
}
inline const ::CDOTAMsg_ItemAlert& CDOTAUserMsg_ItemAlert::item_alert() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemAlert.item_alert)
  return _internal_item_alert();
}
inline void CDOTAUserMsg_ItemAlert::unsafe_arena_set_allocated_item_alert(
    ::CDOTAMsg_ItemAlert* item_alert) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_alert_);
  }
  item_alert_ = item_alert;
  if (item_alert) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_ItemAlert.item_alert)
}
inline ::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::release_item_alert() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_ItemAlert* temp = item_alert_;
  item_alert_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::unsafe_arena_release_item_alert() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ItemAlert.item_alert)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_ItemAlert* temp = item_alert_;
  item_alert_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::_internal_mutable_item_alert() {
  _has_bits_[0] |= 0x00000001u;
  if (item_alert_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_ItemAlert>(GetArena());
    item_alert_ = p;
  }
  return item_alert_;
}
inline ::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::mutable_item_alert() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ItemAlert.item_alert)
  return _internal_mutable_item_alert();
}
inline void CDOTAUserMsg_ItemAlert::set_allocated_item_alert(::CDOTAMsg_ItemAlert* item_alert) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_alert_);
  }
  if (item_alert) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(item_alert)->GetArena();
    if (message_arena != submessage_arena) {
      item_alert = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, item_alert, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_alert_ = item_alert;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ItemAlert.item_alert)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_EnemyItemAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_EnemyItemAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_EnemyItemAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.player_id)
}

// optional uint32 target_player_id = 2;
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_target_player_id() {
  target_player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_EnemyItemAlert::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_EnemyItemAlert::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.target_player_id)
}

// optional int32 item_ability_id = 3;
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.item_ability_id)
}

// optional int32 rune_type = 4 [default = -1];
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_rune_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_rune_type() const {
  return _internal_has_rune_type();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_rune_type() {
  rune_type_ = -1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_rune_type() const {
  return rune_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::rune_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.rune_type)
  return _internal_rune_type();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_rune_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  rune_type_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_rune_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rune_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.rune_type)
}

// optional int32 entity_id = 5;
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_entity_id() {
  entity_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_entity_id() const {
  return entity_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::entity_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.entity_id)
  return _internal_entity_id();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  entity_id_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_entity_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.entity_id)
}

// optional int32 item_level = 6 [default = -1];
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_item_level() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_item_level() const {
  return _internal_has_item_level();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_item_level() {
  item_level_ = -1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_item_level() const {
  return item_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::item_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.item_level)
  return _internal_item_level();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_item_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  item_level_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_item_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.item_level)
}

// optional int32 primary_charges = 7 [default = -1];
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_primary_charges() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_primary_charges() const {
  return _internal_has_primary_charges();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_primary_charges() {
  primary_charges_ = -1;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_primary_charges() const {
  return primary_charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::primary_charges() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.primary_charges)
  return _internal_primary_charges();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  primary_charges_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_primary_charges(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.primary_charges)
}

// optional int32 secondary_charges = 8 [default = -1];
inline bool CDOTAUserMsg_EnemyItemAlert::_internal_has_secondary_charges() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EnemyItemAlert::has_secondary_charges() const {
  return _internal_has_secondary_charges();
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_secondary_charges() {
  secondary_charges_ = -1;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::_internal_secondary_charges() const {
  return secondary_charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EnemyItemAlert::secondary_charges() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EnemyItemAlert.secondary_charges)
  return _internal_secondary_charges();
}
inline void CDOTAUserMsg_EnemyItemAlert::_internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  secondary_charges_ = value;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_secondary_charges(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EnemyItemAlert.secondary_charges)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ModifierAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ModifierAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ModifierAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.player_id)
}

// optional string class_name = 2;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_class_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_class_name() const {
  return _internal_has_class_name();
}
inline void CDOTAUserMsg_ModifierAlert::clear_class_name() {
  class_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ModifierAlert::class_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.class_name)
  return _internal_class_name();
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const std::string& value) {
  _internal_set_class_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.class_name)
}
inline std::string* CDOTAUserMsg_ModifierAlert::mutable_class_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ModifierAlert.class_name)
  return _internal_mutable_class_name();
}
inline const std::string& CDOTAUserMsg_ModifierAlert::_internal_class_name() const {
  return class_name_.Get();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_class_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ModifierAlert.class_name)
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ModifierAlert.class_name)
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  class_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ModifierAlert.class_name)
}
inline std::string* CDOTAUserMsg_ModifierAlert::_internal_mutable_class_name() {
  _has_bits_[0] |= 0x00000001u;
  return class_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ModifierAlert::release_class_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ModifierAlert.class_name)
  if (!_internal_has_class_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return class_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ModifierAlert::set_allocated_class_name(std::string* class_name) {
  if (class_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  class_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), class_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ModifierAlert.class_name)
}

// optional uint32 stack_count = 3;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_stack_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_stack_count() const {
  return _internal_has_stack_count();
}
inline void CDOTAUserMsg_ModifierAlert::clear_stack_count() {
  stack_count_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::_internal_stack_count() const {
  return stack_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::stack_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.stack_count)
  return _internal_stack_count();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  stack_count_ = value;
}
inline void CDOTAUserMsg_ModifierAlert::set_stack_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stack_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.stack_count)
}

// optional bool is_debuff = 4;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_is_debuff() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_is_debuff() const {
  return _internal_has_is_debuff();
}
inline void CDOTAUserMsg_ModifierAlert::clear_is_debuff() {
  is_debuff_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CDOTAUserMsg_ModifierAlert::_internal_is_debuff() const {
  return is_debuff_;
}
inline bool CDOTAUserMsg_ModifierAlert::is_debuff() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.is_debuff)
  return _internal_is_debuff();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_is_debuff(bool value) {
  _has_bits_[0] |= 0x00000008u;
  is_debuff_ = value;
}
inline void CDOTAUserMsg_ModifierAlert::set_is_debuff(bool value) {
  _internal_set_is_debuff(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.is_debuff)
}

// optional uint32 target_entindex = 5;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_ModifierAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ModifierAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_ModifierAlert::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.target_entindex)
}

// optional float seconds_remaining = 6;
inline bool CDOTAUserMsg_ModifierAlert::_internal_has_seconds_remaining() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ModifierAlert::has_seconds_remaining() const {
  return _internal_has_seconds_remaining();
}
inline void CDOTAUserMsg_ModifierAlert::clear_seconds_remaining() {
  seconds_remaining_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CDOTAUserMsg_ModifierAlert::_internal_seconds_remaining() const {
  return seconds_remaining_;
}
inline float CDOTAUserMsg_ModifierAlert::seconds_remaining() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ModifierAlert.seconds_remaining)
  return _internal_seconds_remaining();
}
inline void CDOTAUserMsg_ModifierAlert::_internal_set_seconds_remaining(float value) {
  _has_bits_[0] |= 0x00000020u;
  seconds_remaining_ = value;
}
inline void CDOTAUserMsg_ModifierAlert::set_seconds_remaining(float value) {
  _internal_set_seconds_remaining(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ModifierAlert.seconds_remaining)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HPManaAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_HPManaAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HPManaAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_HPManaAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HPManaAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HPManaAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HPManaAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_HPManaAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_HPManaAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HPManaAlert.player_id)
}

// optional uint32 target_entindex = 2;
inline bool CDOTAUserMsg_HPManaAlert::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HPManaAlert::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_HPManaAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HPManaAlert::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HPManaAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HPManaAlert.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_HPManaAlert::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_HPManaAlert::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HPManaAlert.target_entindex)
}

// optional bool show_raw_values = 3;
inline bool CDOTAUserMsg_HPManaAlert::_internal_has_show_raw_values() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HPManaAlert::has_show_raw_values() const {
  return _internal_has_show_raw_values();
}
inline void CDOTAUserMsg_HPManaAlert::clear_show_raw_values() {
  show_raw_values_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_HPManaAlert::_internal_show_raw_values() const {
  return show_raw_values_;
}
inline bool CDOTAUserMsg_HPManaAlert::show_raw_values() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HPManaAlert.show_raw_values)
  return _internal_show_raw_values();
}
inline void CDOTAUserMsg_HPManaAlert::_internal_set_show_raw_values(bool value) {
  _has_bits_[0] |= 0x00000004u;
  show_raw_values_ = value;
}
inline void CDOTAUserMsg_HPManaAlert::set_show_raw_values(bool value) {
  _internal_set_show_raw_values(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HPManaAlert.show_raw_values)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlyphAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_GlyphAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GlyphAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_GlyphAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GlyphAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GlyphAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlyphAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_GlyphAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_GlyphAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GlyphAlert.player_id)
}

// optional bool negative = 2;
inline bool CDOTAUserMsg_GlyphAlert::_internal_has_negative() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GlyphAlert::has_negative() const {
  return _internal_has_negative();
}
inline void CDOTAUserMsg_GlyphAlert::clear_negative() {
  negative_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CDOTAUserMsg_GlyphAlert::_internal_negative() const {
  return negative_;
}
inline bool CDOTAUserMsg_GlyphAlert::negative() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GlyphAlert.negative)
  return _internal_negative();
}
inline void CDOTAUserMsg_GlyphAlert::_internal_set_negative(bool value) {
  _has_bits_[0] |= 0x00000002u;
  negative_ = value;
}
inline void CDOTAUserMsg_GlyphAlert::set_negative(bool value) {
  _internal_set_negative(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GlyphAlert.negative)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_RadarAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_RadarAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RadarAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_RadarAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RadarAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RadarAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RadarAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_RadarAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_RadarAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RadarAlert.player_id)
}

// optional bool negative = 2;
inline bool CDOTAUserMsg_RadarAlert::_internal_has_negative() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RadarAlert::has_negative() const {
  return _internal_has_negative();
}
inline void CDOTAUserMsg_RadarAlert::clear_negative() {
  negative_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CDOTAUserMsg_RadarAlert::_internal_negative() const {
  return negative_;
}
inline bool CDOTAUserMsg_RadarAlert::negative() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RadarAlert.negative)
  return _internal_negative();
}
inline void CDOTAUserMsg_RadarAlert::_internal_set_negative(bool value) {
  _has_bits_[0] |= 0x00000002u;
  negative_ = value;
}
inline void CDOTAUserMsg_RadarAlert::set_negative(bool value) {
  _internal_set_negative(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RadarAlert.negative)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WillPurchaseAlert

// optional int32 item_ability_id = 1;
inline bool CDOTAUserMsg_WillPurchaseAlert::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WillPurchaseAlert::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WillPurchaseAlert.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WillPurchaseAlert.item_ability_id)
}

// optional int32 player_id = 2;
inline bool CDOTAUserMsg_WillPurchaseAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WillPurchaseAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WillPurchaseAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WillPurchaseAlert.player_id)
}

// optional uint32 gold_remaining = 3;
inline bool CDOTAUserMsg_WillPurchaseAlert::_internal_has_gold_remaining() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WillPurchaseAlert::has_gold_remaining() const {
  return _internal_has_gold_remaining();
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_gold_remaining() {
  gold_remaining_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WillPurchaseAlert::_internal_gold_remaining() const {
  return gold_remaining_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WillPurchaseAlert::gold_remaining() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WillPurchaseAlert.gold_remaining)
  return _internal_gold_remaining();
}
inline void CDOTAUserMsg_WillPurchaseAlert::_internal_set_gold_remaining(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  gold_remaining_ = value;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_gold_remaining(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gold_remaining(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WillPurchaseAlert.gold_remaining)
}

// optional int32 suggestion_player_id = 4;
inline bool CDOTAUserMsg_WillPurchaseAlert::_internal_has_suggestion_player_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WillPurchaseAlert::has_suggestion_player_id() const {
  return _internal_has_suggestion_player_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_suggestion_player_id() {
  suggestion_player_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::_internal_suggestion_player_id() const {
  return suggestion_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WillPurchaseAlert::suggestion_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WillPurchaseAlert.suggestion_player_id)
  return _internal_suggestion_player_id();
}
inline void CDOTAUserMsg_WillPurchaseAlert::_internal_set_suggestion_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  suggestion_player_id_ = value;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_suggestion_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_suggestion_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WillPurchaseAlert.suggestion_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_EmptyTeleportAlert

// optional int32 source_player_id = 1;
inline bool CDOTAUserMsg_EmptyTeleportAlert::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyTeleportAlert::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::clear_source_player_id() {
  source_player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyTeleportAlert.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_EmptyTeleportAlert::set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyTeleportAlert.source_player_id)
}

// optional int32 target_player_id = 2;
inline bool CDOTAUserMsg_EmptyTeleportAlert::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyTeleportAlert::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::clear_target_player_id() {
  target_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyTeleportAlert.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_EmptyTeleportAlert::set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyTeleportAlert.target_player_id)
}

// optional int32 cooldown_seconds = 3;
inline bool CDOTAUserMsg_EmptyTeleportAlert::_internal_has_cooldown_seconds() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyTeleportAlert::has_cooldown_seconds() const {
  return _internal_has_cooldown_seconds();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::clear_cooldown_seconds() {
  cooldown_seconds_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::_internal_cooldown_seconds() const {
  return cooldown_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyTeleportAlert::cooldown_seconds() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyTeleportAlert.cooldown_seconds)
  return _internal_cooldown_seconds();
}
inline void CDOTAUserMsg_EmptyTeleportAlert::_internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  cooldown_seconds_ = value;
}
inline void CDOTAUserMsg_EmptyTeleportAlert::set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cooldown_seconds(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyTeleportAlert.cooldown_seconds)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MarsArenaOfBloodAttack

// optional int32 source_ehandle = 1;
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_has_source_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::has_source_ehandle() const {
  return _internal_has_source_ehandle();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::clear_source_ehandle() {
  source_ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_source_ehandle() const {
  return source_ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::source_ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MarsArenaOfBloodAttack.source_ehandle)
  return _internal_source_ehandle();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_set_source_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_ehandle_ = value;
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::set_source_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MarsArenaOfBloodAttack.source_ehandle)
}

// optional int32 target_ehandle = 2;
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_has_target_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::has_target_ehandle() const {
  return _internal_has_target_ehandle();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::clear_target_ehandle() {
  target_ehandle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_target_ehandle() const {
  return target_ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::target_ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MarsArenaOfBloodAttack.target_ehandle)
  return _internal_target_ehandle();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_ehandle_ = value;
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::set_target_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MarsArenaOfBloodAttack.target_ehandle)
}

// optional int32 warrior_index = 3;
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_has_warrior_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MarsArenaOfBloodAttack::has_warrior_index() const {
  return _internal_has_warrior_index();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::clear_warrior_index() {
  warrior_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_warrior_index() const {
  return warrior_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MarsArenaOfBloodAttack::warrior_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MarsArenaOfBloodAttack.warrior_index)
  return _internal_warrior_index();
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::_internal_set_warrior_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  warrior_index_ = value;
}
inline void CDOTAUserMsg_MarsArenaOfBloodAttack::set_warrior_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_warrior_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MarsArenaOfBloodAttack.warrior_index)
}

// -------------------------------------------------------------------

// CDOTAEntityMsg_InvokerSpellCast

// optional .CEntityMsg entity_msg = 1;
inline bool CDOTAEntityMsg_InvokerSpellCast::_internal_has_entity_msg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || entity_msg_ != nullptr);
  return value;
}
inline bool CDOTAEntityMsg_InvokerSpellCast::has_entity_msg() const {
  return _internal_has_entity_msg();
}
inline const ::CEntityMsg& CDOTAEntityMsg_InvokerSpellCast::_internal_entity_msg() const {
  const ::CEntityMsg* p = entity_msg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CEntityMsg&>(
      ::_CEntityMsg_default_instance_);
}
inline const ::CEntityMsg& CDOTAEntityMsg_InvokerSpellCast::entity_msg() const {
  // @@protoc_insertion_point(field_get:CDOTAEntityMsg_InvokerSpellCast.entity_msg)
  return _internal_entity_msg();
}
inline void CDOTAEntityMsg_InvokerSpellCast::unsafe_arena_set_allocated_entity_msg(
    ::CEntityMsg* entity_msg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_msg_);
  }
  entity_msg_ = entity_msg;
  if (entity_msg) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAEntityMsg_InvokerSpellCast.entity_msg)
}
inline ::CEntityMsg* CDOTAEntityMsg_InvokerSpellCast::release_entity_msg() {
  _has_bits_[0] &= ~0x00000001u;
  ::CEntityMsg* temp = entity_msg_;
  entity_msg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CEntityMsg* CDOTAEntityMsg_InvokerSpellCast::unsafe_arena_release_entity_msg() {
  // @@protoc_insertion_point(field_release:CDOTAEntityMsg_InvokerSpellCast.entity_msg)
  _has_bits_[0] &= ~0x00000001u;
  ::CEntityMsg* temp = entity_msg_;
  entity_msg_ = nullptr;
  return temp;
}
inline ::CEntityMsg* CDOTAEntityMsg_InvokerSpellCast::_internal_mutable_entity_msg() {
  _has_bits_[0] |= 0x00000001u;
  if (entity_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CEntityMsg>(GetArena());
    entity_msg_ = p;
  }
  return entity_msg_;
}
inline ::CEntityMsg* CDOTAEntityMsg_InvokerSpellCast::mutable_entity_msg() {
  // @@protoc_insertion_point(field_mutable:CDOTAEntityMsg_InvokerSpellCast.entity_msg)
  return _internal_mutable_entity_msg();
}
inline void CDOTAEntityMsg_InvokerSpellCast::set_allocated_entity_msg(::CEntityMsg* entity_msg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_msg_);
  }
  if (entity_msg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(entity_msg)->GetArena();
    if (message_arena != submessage_arena) {
      entity_msg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, entity_msg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  entity_msg_ = entity_msg;
  // @@protoc_insertion_point(field_set_allocated:CDOTAEntityMsg_InvokerSpellCast.entity_msg)
}

// optional int32 cast_activity = 2;
inline bool CDOTAEntityMsg_InvokerSpellCast::_internal_has_cast_activity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAEntityMsg_InvokerSpellCast::has_cast_activity() const {
  return _internal_has_cast_activity();
}
inline void CDOTAEntityMsg_InvokerSpellCast::clear_cast_activity() {
  cast_activity_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAEntityMsg_InvokerSpellCast::_internal_cast_activity() const {
  return cast_activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAEntityMsg_InvokerSpellCast::cast_activity() const {
  // @@protoc_insertion_point(field_get:CDOTAEntityMsg_InvokerSpellCast.cast_activity)
  return _internal_cast_activity();
}
inline void CDOTAEntityMsg_InvokerSpellCast::_internal_set_cast_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cast_activity_ = value;
}
inline void CDOTAEntityMsg_InvokerSpellCast::set_cast_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cast_activity(value);
  // @@protoc_insertion_point(field_set:CDOTAEntityMsg_InvokerSpellCast.cast_activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BuyBackStateAlert

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_BuyBackStateAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BuyBackStateAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_BuyBackStateAlert::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_BuyBackStateAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_BuyBackStateAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BuyBackStateAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_BuyBackStateAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_BuyBackStateAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BuyBackStateAlert.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_QuickBuyAlert

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuickBuyAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuickBuyAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_QuickBuyAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuickBuyAlert.player_id)
}

// optional int32 item_ability_id = 2;
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuickBuyAlert::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuickBuyAlert.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_QuickBuyAlert::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuickBuyAlert.item_ability_id)
}

// optional int32 gold_cost = 3;
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_has_gold_cost() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuickBuyAlert::has_gold_cost() const {
  return _internal_has_gold_cost();
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_gold_cost() {
  gold_cost_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::_internal_gold_cost() const {
  return gold_cost_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::gold_cost() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuickBuyAlert.gold_cost)
  return _internal_gold_cost();
}
inline void CDOTAUserMsg_QuickBuyAlert::_internal_set_gold_cost(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  gold_cost_ = value;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_gold_cost(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gold_cost(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuickBuyAlert.gold_cost)
}

// optional int32 item_cooldown_seconds = 4;
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_has_item_cooldown_seconds() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuickBuyAlert::has_item_cooldown_seconds() const {
  return _internal_has_item_cooldown_seconds();
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_item_cooldown_seconds() {
  item_cooldown_seconds_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::_internal_item_cooldown_seconds() const {
  return item_cooldown_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_QuickBuyAlert::item_cooldown_seconds() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuickBuyAlert.item_cooldown_seconds)
  return _internal_item_cooldown_seconds();
}
inline void CDOTAUserMsg_QuickBuyAlert::_internal_set_item_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  item_cooldown_seconds_ = value;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_item_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_cooldown_seconds(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuickBuyAlert.item_cooldown_seconds)
}

// optional bool show_buyback = 5;
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_has_show_buyback() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuickBuyAlert::has_show_buyback() const {
  return _internal_has_show_buyback();
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_show_buyback() {
  show_buyback_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_QuickBuyAlert::_internal_show_buyback() const {
  return show_buyback_;
}
inline bool CDOTAUserMsg_QuickBuyAlert::show_buyback() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuickBuyAlert.show_buyback)
  return _internal_show_buyback();
}
inline void CDOTAUserMsg_QuickBuyAlert::_internal_set_show_buyback(bool value) {
  _has_bits_[0] |= 0x00000010u;
  show_buyback_ = value;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_show_buyback(bool value) {
  _internal_set_show_buyback(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuickBuyAlert.show_buyback)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CourierKilledAlert_LostItem

// optional int32 item_ability_id = 1;
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert_LostItem::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.LostItem.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.LostItem.item_ability_id)
}

// optional uint32 quantity = 2;
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::has_quantity() const {
  return _internal_has_quantity();
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert_LostItem::quantity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.LostItem.quantity)
  return _internal_quantity();
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quantity_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.LostItem.quantity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CourierKilledAlert

// optional uint32 team = 1;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_team() const {
  return _internal_has_team();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert::team() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.team)
  return _internal_team();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.team)
}

// optional uint32 gold_value = 2;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_gold_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_gold_value() const {
  return _internal_has_gold_value();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_gold_value() {
  gold_value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert::_internal_gold_value() const {
  return gold_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CourierKilledAlert::gold_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.gold_value)
  return _internal_gold_value();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  gold_value_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gold_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.gold_value)
}

// optional int32 entity_handle = 3;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_entity_handle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_entity_handle() const {
  return _internal_has_entity_handle();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::_internal_entity_handle() const {
  return entity_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::entity_handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.entity_handle)
  return _internal_entity_handle();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entity_handle_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.entity_handle)
}

// optional int32 timestamp = 4;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::timestamp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.timestamp)
  return _internal_timestamp();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  timestamp_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_timestamp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.timestamp)
}

// repeated .CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
inline int CDOTAUserMsg_CourierKilledAlert::_internal_lost_items_size() const {
  return lost_items_.size();
}
inline int CDOTAUserMsg_CourierKilledAlert::lost_items_size() const {
  return _internal_lost_items_size();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_lost_items() {
  lost_items_.Clear();
}
inline ::CDOTAUserMsg_CourierKilledAlert_LostItem* CDOTAUserMsg_CourierKilledAlert::mutable_lost_items(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CourierKilledAlert_LostItem >*
CDOTAUserMsg_CourierKilledAlert::mutable_lost_items() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_CourierKilledAlert.lost_items)
  return &lost_items_;
}
inline const ::CDOTAUserMsg_CourierKilledAlert_LostItem& CDOTAUserMsg_CourierKilledAlert::_internal_lost_items(int index) const {
  return lost_items_.Get(index);
}
inline const ::CDOTAUserMsg_CourierKilledAlert_LostItem& CDOTAUserMsg_CourierKilledAlert::lost_items(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.lost_items)
  return _internal_lost_items(index);
}
inline ::CDOTAUserMsg_CourierKilledAlert_LostItem* CDOTAUserMsg_CourierKilledAlert::_internal_add_lost_items() {
  return lost_items_.Add();
}
inline ::CDOTAUserMsg_CourierKilledAlert_LostItem* CDOTAUserMsg_CourierKilledAlert::add_lost_items() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_CourierKilledAlert.lost_items)
  return _internal_add_lost_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CourierKilledAlert_LostItem >&
CDOTAUserMsg_CourierKilledAlert::lost_items() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_;
}

// optional int32 killer_player_id = 6;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_killer_player_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_killer_player_id() const {
  return _internal_has_killer_player_id();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_killer_player_id() {
  killer_player_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::_internal_killer_player_id() const {
  return killer_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::killer_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.killer_player_id)
  return _internal_killer_player_id();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  killer_player_id_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_killer_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_killer_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.killer_player_id)
}

// optional int32 owning_player_id = 7;
inline bool CDOTAUserMsg_CourierKilledAlert::_internal_has_owning_player_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CourierKilledAlert::has_owning_player_id() const {
  return _internal_has_owning_player_id();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_owning_player_id() {
  owning_player_id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::_internal_owning_player_id() const {
  return owning_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CourierKilledAlert::owning_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CourierKilledAlert.owning_player_id)
  return _internal_owning_player_id();
}
inline void CDOTAUserMsg_CourierKilledAlert::_internal_set_owning_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  owning_player_id_ = value;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_owning_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_owning_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CourierKilledAlert.owning_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MinimapEvent

// optional int32 event_type = 1;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_event_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_event_type() const {
  return _internal_has_event_type();
}
inline void CDOTAUserMsg_MinimapEvent::clear_event_type() {
  event_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_event_type() const {
  return event_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::event_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.event_type)
  return _internal_event_type();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_event_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  event_type_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_event_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_event_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.event_type)
}

// optional int32 entity_handle = 2;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_entity_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_entity_handle() const {
  return _internal_has_entity_handle();
}
inline void CDOTAUserMsg_MinimapEvent::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_entity_handle() const {
  return entity_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::entity_handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.entity_handle)
  return _internal_entity_handle();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entity_handle_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.entity_handle)
}

// optional int32 x = 3;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_x() const {
  return _internal_has_x();
}
inline void CDOTAUserMsg_MinimapEvent::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::x() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.x)
  return _internal_x();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  x_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.x)
}

// optional int32 y = 4;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_y() const {
  return _internal_has_y();
}
inline void CDOTAUserMsg_MinimapEvent::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::y() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.y)
  return _internal_y();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  y_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.y)
}

// optional int32 duration = 5;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_MinimapEvent::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  duration_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_duration(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.duration)
}

// optional int32 target_entity_handle = 6;
inline bool CDOTAUserMsg_MinimapEvent::_internal_has_target_entity_handle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapEvent::has_target_entity_handle() const {
  return _internal_has_target_entity_handle();
}
inline void CDOTAUserMsg_MinimapEvent::clear_target_entity_handle() {
  target_entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::_internal_target_entity_handle() const {
  return target_entity_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapEvent::target_entity_handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapEvent.target_entity_handle)
  return _internal_target_entity_handle();
}
inline void CDOTAUserMsg_MinimapEvent::_internal_set_target_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  target_entity_handle_ = value;
}
inline void CDOTAUserMsg_MinimapEvent::set_target_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_entity_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapEvent.target_entity_handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MapLine

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_MapLine::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MapLine::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_MapLine::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MapLine::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MapLine::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MapLine.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_MapLine::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_MapLine::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MapLine.player_id)
}

// optional .CDOTAMsg_MapLine mapline = 2;
inline bool CDOTAUserMsg_MapLine::_internal_has_mapline() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || mapline_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_MapLine::has_mapline() const {
  return _internal_has_mapline();
}
inline const ::CDOTAMsg_MapLine& CDOTAUserMsg_MapLine::_internal_mapline() const {
  const ::CDOTAMsg_MapLine* p = mapline_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_MapLine&>(
      ::_CDOTAMsg_MapLine_default_instance_);
}
inline const ::CDOTAMsg_MapLine& CDOTAUserMsg_MapLine::mapline() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MapLine.mapline)
  return _internal_mapline();
}
inline void CDOTAUserMsg_MapLine::unsafe_arena_set_allocated_mapline(
    ::CDOTAMsg_MapLine* mapline) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mapline_);
  }
  mapline_ = mapline;
  if (mapline) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_MapLine.mapline)
}
inline ::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::release_mapline() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_MapLine* temp = mapline_;
  mapline_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::unsafe_arena_release_mapline() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_MapLine.mapline)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_MapLine* temp = mapline_;
  mapline_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::_internal_mutable_mapline() {
  _has_bits_[0] |= 0x00000001u;
  if (mapline_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_MapLine>(GetArena());
    mapline_ = p;
  }
  return mapline_;
}
inline ::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::mutable_mapline() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_MapLine.mapline)
  return _internal_mutable_mapline();
}
inline void CDOTAUserMsg_MapLine::set_allocated_mapline(::CDOTAMsg_MapLine* mapline) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(mapline_);
  }
  if (mapline) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(mapline)->GetArena();
    if (message_arena != submessage_arena) {
      mapline = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mapline, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  mapline_ = mapline;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_MapLine.mapline)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MinimapDebugPoint

// optional .CMsgVector location = 1;
inline bool CDOTAUserMsg_MinimapDebugPoint::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || location_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_MinimapDebugPoint::has_location() const {
  return _internal_has_location();
}
inline const ::CMsgVector& CDOTAUserMsg_MinimapDebugPoint::_internal_location() const {
  const ::CMsgVector* p = location_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_MinimapDebugPoint::location() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapDebugPoint.location)
  return _internal_location();
}
inline void CDOTAUserMsg_MinimapDebugPoint::unsafe_arena_set_allocated_location(
    ::CMsgVector* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_MinimapDebugPoint.location)
}
inline ::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::release_location() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_MinimapDebugPoint.location)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::_internal_mutable_location() {
  _has_bits_[0] |= 0x00000001u;
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::mutable_location() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_MinimapDebugPoint.location)
  return _internal_mutable_location();
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_allocated_location(::CMsgVector* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location)->GetArena();
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_MinimapDebugPoint.location)
}

// optional uint32 color = 2;
inline bool CDOTAUserMsg_MinimapDebugPoint::_internal_has_color() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapDebugPoint::has_color() const {
  return _internal_has_color();
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_color() {
  color_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MinimapDebugPoint::_internal_color() const {
  return color_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MinimapDebugPoint::color() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapDebugPoint.color)
  return _internal_color();
}
inline void CDOTAUserMsg_MinimapDebugPoint::_internal_set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  color_ = value;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_color(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_color(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapDebugPoint.color)
}

// optional int32 size = 3;
inline bool CDOTAUserMsg_MinimapDebugPoint::_internal_has_size() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapDebugPoint::has_size() const {
  return _internal_has_size();
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_size() {
  size_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapDebugPoint::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapDebugPoint::size() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapDebugPoint.size)
  return _internal_size();
}
inline void CDOTAUserMsg_MinimapDebugPoint::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  size_ = value;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapDebugPoint.size)
}

// optional float duration = 4;
inline bool CDOTAUserMsg_MinimapDebugPoint::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapDebugPoint::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_MinimapDebugPoint::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_MinimapDebugPoint::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapDebugPoint.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_MinimapDebugPoint::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000008u;
  duration_ = value;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapDebugPoint.duration)
}

// optional int32 index = 5;
inline bool CDOTAUserMsg_MinimapDebugPoint::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MinimapDebugPoint::has_index() const {
  return _internal_has_index();
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_index() {
  index_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapDebugPoint::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MinimapDebugPoint::index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MinimapDebugPoint.index)
  return _internal_index();
}
inline void CDOTAUserMsg_MinimapDebugPoint::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  index_ = value;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MinimapDebugPoint.index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CreateLinearProjectile

// optional .CMsgVector origin = 1;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_origin() const {
  return _internal_has_origin();
}
inline const ::CMsgVector& CDOTAUserMsg_CreateLinearProjectile::_internal_origin() const {
  const ::CMsgVector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_CreateLinearProjectile::origin() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.origin)
  return _internal_origin();
}
inline void CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_set_allocated_origin(
    ::CMsgVector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_CreateLinearProjectile.origin)
}
inline ::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::release_origin() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CreateLinearProjectile.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CreateLinearProjectile.origin)
  return _internal_mutable_origin();
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_origin(::CMsgVector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin)->GetArena();
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CreateLinearProjectile.origin)
}

// optional .CMsgVector2D velocity = 2;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_velocity() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || velocity_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_velocity() const {
  return _internal_has_velocity();
}
inline const ::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::_internal_velocity() const {
  const ::CMsgVector2D* p = velocity_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector2D&>(
      ::_CMsgVector2D_default_instance_);
}
inline const ::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::velocity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.velocity)
  return _internal_velocity();
}
inline void CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_set_allocated_velocity(
    ::CMsgVector2D* velocity) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(velocity_);
  }
  velocity_ = velocity;
  if (velocity) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_CreateLinearProjectile.velocity)
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::release_velocity() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector2D* temp = velocity_;
  velocity_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_release_velocity() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CreateLinearProjectile.velocity)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector2D* temp = velocity_;
  velocity_ = nullptr;
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::_internal_mutable_velocity() {
  _has_bits_[0] |= 0x00000002u;
  if (velocity_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector2D>(GetArena());
    velocity_ = p;
  }
  return velocity_;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::mutable_velocity() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CreateLinearProjectile.velocity)
  return _internal_mutable_velocity();
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_velocity(::CMsgVector2D* velocity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(velocity_);
  }
  if (velocity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(velocity)->GetArena();
    if (message_arena != submessage_arena) {
      velocity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, velocity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  velocity_ = velocity;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CreateLinearProjectile.velocity)
}

// optional int32 entindex = 4;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CreateLinearProjectile::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CreateLinearProjectile::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  entindex_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.entindex)
}

// optional uint64 particle_index = 5;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_particle_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_particle_index() const {
  return _internal_has_particle_index();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_particle_index() {
  particle_index_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_CreateLinearProjectile::_internal_particle_index() const {
  return particle_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_CreateLinearProjectile::particle_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.particle_index)
  return _internal_particle_index();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_particle_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  particle_index_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_particle_index(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_particle_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.particle_index)
}

// optional int32 handle = 6;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_handle() const {
  return _internal_has_handle();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_handle() {
  handle_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CreateLinearProjectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CreateLinearProjectile::handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.handle)
  return _internal_handle();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  handle_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.handle)
}

// optional .CMsgVector2D acceleration = 7;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_acceleration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || acceleration_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_acceleration() const {
  return _internal_has_acceleration();
}
inline const ::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::_internal_acceleration() const {
  const ::CMsgVector2D* p = acceleration_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector2D&>(
      ::_CMsgVector2D_default_instance_);
}
inline const ::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::acceleration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.acceleration)
  return _internal_acceleration();
}
inline void CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_set_allocated_acceleration(
    ::CMsgVector2D* acceleration) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(acceleration_);
  }
  acceleration_ = acceleration;
  if (acceleration) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_CreateLinearProjectile.acceleration)
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::release_acceleration() {
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgVector2D* temp = acceleration_;
  acceleration_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::unsafe_arena_release_acceleration() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CreateLinearProjectile.acceleration)
  _has_bits_[0] &= ~0x00000004u;
  ::CMsgVector2D* temp = acceleration_;
  acceleration_ = nullptr;
  return temp;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::_internal_mutable_acceleration() {
  _has_bits_[0] |= 0x00000004u;
  if (acceleration_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector2D>(GetArena());
    acceleration_ = p;
  }
  return acceleration_;
}
inline ::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::mutable_acceleration() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CreateLinearProjectile.acceleration)
  return _internal_mutable_acceleration();
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_acceleration(::CMsgVector2D* acceleration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(acceleration_);
  }
  if (acceleration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(acceleration)->GetArena();
    if (message_arena != submessage_arena) {
      acceleration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acceleration, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  acceleration_ = acceleration;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CreateLinearProjectile.acceleration)
}

// optional float max_speed = 8;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_max_speed() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_max_speed() const {
  return _internal_has_max_speed();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_max_speed() {
  max_speed_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CDOTAUserMsg_CreateLinearProjectile::_internal_max_speed() const {
  return max_speed_;
}
inline float CDOTAUserMsg_CreateLinearProjectile::max_speed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.max_speed)
  return _internal_max_speed();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_max_speed(float value) {
  _has_bits_[0] |= 0x00000040u;
  max_speed_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_max_speed(float value) {
  _internal_set_max_speed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.max_speed)
}

// optional float fow_radius = 9;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_fow_radius() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_fow_radius() const {
  return _internal_has_fow_radius();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_fow_radius() {
  fow_radius_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CDOTAUserMsg_CreateLinearProjectile::_internal_fow_radius() const {
  return fow_radius_;
}
inline float CDOTAUserMsg_CreateLinearProjectile::fow_radius() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.fow_radius)
  return _internal_fow_radius();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_fow_radius(float value) {
  _has_bits_[0] |= 0x00000080u;
  fow_radius_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_fow_radius(float value) {
  _internal_set_fow_radius(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.fow_radius)
}

// optional bool sticky_fow_reveal = 10;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_sticky_fow_reveal() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_sticky_fow_reveal() const {
  return _internal_has_sticky_fow_reveal();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_sticky_fow_reveal() {
  sticky_fow_reveal_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_sticky_fow_reveal() const {
  return sticky_fow_reveal_;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::sticky_fow_reveal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.sticky_fow_reveal)
  return _internal_sticky_fow_reveal();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_sticky_fow_reveal(bool value) {
  _has_bits_[0] |= 0x00000100u;
  sticky_fow_reveal_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_sticky_fow_reveal(bool value) {
  _internal_set_sticky_fow_reveal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.sticky_fow_reveal)
}

// optional float distance = 11;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_distance() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_distance() const {
  return _internal_has_distance();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_distance() {
  distance_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CDOTAUserMsg_CreateLinearProjectile::_internal_distance() const {
  return distance_;
}
inline float CDOTAUserMsg_CreateLinearProjectile::distance() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.distance)
  return _internal_distance();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_distance(float value) {
  _has_bits_[0] |= 0x00000200u;
  distance_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_distance(float value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.distance)
}

// optional fixed32 colorgemcolor = 12;
inline bool CDOTAUserMsg_CreateLinearProjectile::_internal_has_colorgemcolor() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CreateLinearProjectile::has_colorgemcolor() const {
  return _internal_has_colorgemcolor();
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_colorgemcolor() {
  colorgemcolor_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CreateLinearProjectile::_internal_colorgemcolor() const {
  return colorgemcolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CreateLinearProjectile::colorgemcolor() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CreateLinearProjectile.colorgemcolor)
  return _internal_colorgemcolor();
}
inline void CDOTAUserMsg_CreateLinearProjectile::_internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  colorgemcolor_ = value;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_colorgemcolor(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CreateLinearProjectile.colorgemcolor)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DestroyLinearProjectile

// optional int32 handle = 1;
inline bool CDOTAUserMsg_DestroyLinearProjectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DestroyLinearProjectile::has_handle() const {
  return _internal_has_handle();
}
inline void CDOTAUserMsg_DestroyLinearProjectile::clear_handle() {
  handle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DestroyLinearProjectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DestroyLinearProjectile::handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DestroyLinearProjectile.handle)
  return _internal_handle();
}
inline void CDOTAUserMsg_DestroyLinearProjectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  handle_ = value;
}
inline void CDOTAUserMsg_DestroyLinearProjectile::set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DestroyLinearProjectile.handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DodgeTrackingProjectiles

// required int32 entindex = 1;
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DodgeTrackingProjectiles::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DodgeTrackingProjectiles::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DodgeTrackingProjectiles.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entindex_ = value;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DodgeTrackingProjectiles.entindex)
}

// optional bool attacks_only = 2;
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::_internal_has_attacks_only() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::has_attacks_only() const {
  return _internal_has_attacks_only();
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_attacks_only() {
  attacks_only_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::_internal_attacks_only() const {
  return attacks_only_;
}
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::attacks_only() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DodgeTrackingProjectiles.attacks_only)
  return _internal_attacks_only();
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::_internal_set_attacks_only(bool value) {
  _has_bits_[0] |= 0x00000002u;
  attacks_only_ = value;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_attacks_only(bool value) {
  _internal_set_attacks_only(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DodgeTrackingProjectiles.attacks_only)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpectatorPlayerClick

// required int32 entindex = 1;
inline bool CDOTAUserMsg_SpectatorPlayerClick::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerClick.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entindex_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerClick.entindex)
}

// optional int32 order_type = 2;
inline bool CDOTAUserMsg_SpectatorPlayerClick::_internal_has_order_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_order_type() const {
  return _internal_has_order_type();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_order_type() {
  order_type_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::_internal_order_type() const {
  return order_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::order_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerClick.order_type)
  return _internal_order_type();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::_internal_set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  order_type_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerClick.order_type)
}

// optional int32 target_index = 3;
inline bool CDOTAUserMsg_SpectatorPlayerClick::_internal_has_target_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_target_index() const {
  return _internal_has_target_index();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_target_index() {
  target_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::_internal_target_index() const {
  return target_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerClick::target_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerClick.target_index)
  return _internal_target_index();
}
inline void CDOTAUserMsg_SpectatorPlayerClick::_internal_set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  target_index_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerClick.target_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpectatorPlayerUnitOrders

// optional int32 entindex = 1;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entindex_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.entindex)
}

// optional int32 order_type = 2;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_order_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_order_type() const {
  return _internal_has_order_type();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_order_type() {
  order_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_order_type() const {
  return order_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::order_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.order_type)
  return _internal_order_type();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  order_type_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_order_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_order_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.order_type)
}

// repeated int32 units = 3;
inline int CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_units_size() const {
  return units_.size();
}
inline int CDOTAUserMsg_SpectatorPlayerUnitOrders::units_size() const {
  return _internal_units_size();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_units() {
  units_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_units(int index) const {
  return units_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::units(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return _internal_units(index);
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_units(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  units_.Add(value);
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::add_units(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_units(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_units() const {
  return units_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_SpectatorPlayerUnitOrders::units() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return _internal_units();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_mutable_units() {
  return &units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_SpectatorPlayerUnitOrders::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return _internal_mutable_units();
}

// optional int32 target_index = 4;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_target_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_target_index() const {
  return _internal_has_target_index();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_target_index() {
  target_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_target_index() const {
  return target_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::target_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.target_index)
  return _internal_target_index();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  target_index_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_target_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.target_index)
}

// optional int32 ability_id = 5;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_ability_id() {
  ability_id_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.ability_id)
}

// optional .CMsgVector position = 6;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_position() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || position_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_position() const {
  return _internal_has_position();
}
inline const ::CMsgVector& CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_position() const {
  const ::CMsgVector* p = position_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_SpectatorPlayerUnitOrders::position() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  return _internal_position();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::unsafe_arena_set_allocated_position(
    ::CMsgVector* position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  position_ = position;
  if (position) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
}
inline ::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::release_position() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::unsafe_arena_release_position() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_mutable_position() {
  _has_bits_[0] |= 0x00000001u;
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    position_ = p;
  }
  return position_;
}
inline ::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::mutable_position() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  return _internal_mutable_position();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_allocated_position(::CMsgVector* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position)->GetArena();
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
}

// optional bool queue = 7;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_queue() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_queue() const {
  return _internal_has_queue();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_queue() {
  queue_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_queue() const {
  return queue_;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::queue() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.queue)
  return _internal_queue();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_queue(bool value) {
  _has_bits_[0] |= 0x00000020u;
  queue_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_queue(bool value) {
  _internal_set_queue(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.queue)
}

// optional int32 sequence_number = 8;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_sequence_number() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_sequence_number() const {
  return _internal_has_sequence_number();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_sequence_number() {
  sequence_number_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_sequence_number() const {
  return sequence_number_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::sequence_number() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.sequence_number)
  return _internal_sequence_number();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  sequence_number_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_sequence_number(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sequence_number(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.sequence_number)
}

// optional uint32 flags = 9;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_flags() const {
  return _internal_has_flags();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SpectatorPlayerUnitOrders::flags() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpectatorPlayerUnitOrders.flags)
  return _internal_flags();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  flags_ = value;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpectatorPlayerUnitOrders.flags)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_NevermoreRequiem

// optional int32 entity_handle = 1;
inline bool CDOTAUserMsg_NevermoreRequiem::_internal_has_entity_handle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_NevermoreRequiem::has_entity_handle() const {
  return _internal_has_entity_handle();
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_entity_handle() {
  entity_handle_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_NevermoreRequiem::_internal_entity_handle() const {
  return entity_handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_NevermoreRequiem::entity_handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_NevermoreRequiem.entity_handle)
  return _internal_entity_handle();
}
inline void CDOTAUserMsg_NevermoreRequiem::_internal_set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entity_handle_ = value;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_entity_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_NevermoreRequiem.entity_handle)
}

// optional int32 lines = 2;
inline bool CDOTAUserMsg_NevermoreRequiem::_internal_has_lines() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_NevermoreRequiem::has_lines() const {
  return _internal_has_lines();
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_lines() {
  lines_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_NevermoreRequiem::_internal_lines() const {
  return lines_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_NevermoreRequiem::lines() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_NevermoreRequiem.lines)
  return _internal_lines();
}
inline void CDOTAUserMsg_NevermoreRequiem::_internal_set_lines(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  lines_ = value;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_lines(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lines(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_NevermoreRequiem.lines)
}

// optional .CMsgVector origin = 3;
inline bool CDOTAUserMsg_NevermoreRequiem::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_NevermoreRequiem::has_origin() const {
  return _internal_has_origin();
}
inline const ::CMsgVector& CDOTAUserMsg_NevermoreRequiem::_internal_origin() const {
  const ::CMsgVector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_NevermoreRequiem::origin() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_NevermoreRequiem.origin)
  return _internal_origin();
}
inline void CDOTAUserMsg_NevermoreRequiem::unsafe_arena_set_allocated_origin(
    ::CMsgVector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_NevermoreRequiem.origin)
}
inline ::CMsgVector* CDOTAUserMsg_NevermoreRequiem::release_origin() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_NevermoreRequiem::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_NevermoreRequiem.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_NevermoreRequiem::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgVector* CDOTAUserMsg_NevermoreRequiem::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_NevermoreRequiem.origin)
  return _internal_mutable_origin();
}
inline void CDOTAUserMsg_NevermoreRequiem::set_allocated_origin(::CMsgVector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin)->GetArena();
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_NevermoreRequiem.origin)
}

// optional bool reverse = 4;
inline bool CDOTAUserMsg_NevermoreRequiem::_internal_has_reverse() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_NevermoreRequiem::has_reverse() const {
  return _internal_has_reverse();
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_reverse() {
  reverse_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CDOTAUserMsg_NevermoreRequiem::_internal_reverse() const {
  return reverse_;
}
inline bool CDOTAUserMsg_NevermoreRequiem::reverse() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_NevermoreRequiem.reverse)
  return _internal_reverse();
}
inline void CDOTAUserMsg_NevermoreRequiem::_internal_set_reverse(bool value) {
  _has_bits_[0] |= 0x00000008u;
  reverse_ = value;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_reverse(bool value) {
  _internal_set_reverse(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_NevermoreRequiem.reverse)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_InvalidCommand

// optional string message = 1;
inline bool CDOTAUserMsg_InvalidCommand::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_InvalidCommand::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_InvalidCommand::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_InvalidCommand::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_InvalidCommand.message)
  return _internal_message();
}
inline void CDOTAUserMsg_InvalidCommand::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_InvalidCommand.message)
}
inline std::string* CDOTAUserMsg_InvalidCommand::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_InvalidCommand.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_InvalidCommand::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_InvalidCommand::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_InvalidCommand::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_InvalidCommand.message)
}
inline void CDOTAUserMsg_InvalidCommand::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_InvalidCommand.message)
}
inline void CDOTAUserMsg_InvalidCommand::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_InvalidCommand.message)
}
inline std::string* CDOTAUserMsg_InvalidCommand::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_InvalidCommand::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_InvalidCommand.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_InvalidCommand::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_InvalidCommand.message)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HudError

// optional int32 order_id = 1;
inline bool CDOTAUserMsg_HudError::_internal_has_order_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HudError::has_order_id() const {
  return _internal_has_order_id();
}
inline void CDOTAUserMsg_HudError::clear_order_id() {
  order_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_HudError::_internal_order_id() const {
  return order_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_HudError::order_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HudError.order_id)
  return _internal_order_id();
}
inline void CDOTAUserMsg_HudError::_internal_set_order_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  order_id_ = value;
}
inline void CDOTAUserMsg_HudError::set_order_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_order_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HudError.order_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SharedCooldown

// optional int32 entindex = 1;
inline bool CDOTAUserMsg_SharedCooldown::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SharedCooldown::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_SharedCooldown::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SharedCooldown::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SharedCooldown::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SharedCooldown.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_SharedCooldown::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  entindex_ = value;
}
inline void CDOTAUserMsg_SharedCooldown::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SharedCooldown.entindex)
}

// optional string name = 2;
inline bool CDOTAUserMsg_SharedCooldown::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SharedCooldown::has_name() const {
  return _internal_has_name();
}
inline void CDOTAUserMsg_SharedCooldown::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_SharedCooldown::name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SharedCooldown.name)
  return _internal_name();
}
inline void CDOTAUserMsg_SharedCooldown::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SharedCooldown.name)
}
inline std::string* CDOTAUserMsg_SharedCooldown::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SharedCooldown.name)
  return _internal_mutable_name();
}
inline const std::string& CDOTAUserMsg_SharedCooldown::_internal_name() const {
  return name_.Get();
}
inline void CDOTAUserMsg_SharedCooldown::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_SharedCooldown::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_SharedCooldown.name)
}
inline void CDOTAUserMsg_SharedCooldown::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_SharedCooldown.name)
}
inline void CDOTAUserMsg_SharedCooldown::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_SharedCooldown.name)
}
inline std::string* CDOTAUserMsg_SharedCooldown::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_SharedCooldown::release_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SharedCooldown.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_SharedCooldown::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SharedCooldown.name)
}

// optional float cooldown = 3;
inline bool CDOTAUserMsg_SharedCooldown::_internal_has_cooldown() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SharedCooldown::has_cooldown() const {
  return _internal_has_cooldown();
}
inline void CDOTAUserMsg_SharedCooldown::clear_cooldown() {
  cooldown_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_SharedCooldown::_internal_cooldown() const {
  return cooldown_;
}
inline float CDOTAUserMsg_SharedCooldown::cooldown() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SharedCooldown.cooldown)
  return _internal_cooldown();
}
inline void CDOTAUserMsg_SharedCooldown::_internal_set_cooldown(float value) {
  _has_bits_[0] |= 0x00000004u;
  cooldown_ = value;
}
inline void CDOTAUserMsg_SharedCooldown::set_cooldown(float value) {
  _internal_set_cooldown(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SharedCooldown.cooldown)
}

// optional int32 name_index = 4;
inline bool CDOTAUserMsg_SharedCooldown::_internal_has_name_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SharedCooldown::has_name_index() const {
  return _internal_has_name_index();
}
inline void CDOTAUserMsg_SharedCooldown::clear_name_index() {
  name_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SharedCooldown::_internal_name_index() const {
  return name_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SharedCooldown::name_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SharedCooldown.name_index)
  return _internal_name_index();
}
inline void CDOTAUserMsg_SharedCooldown::_internal_set_name_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  name_index_ = value;
}
inline void CDOTAUserMsg_SharedCooldown::set_name_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_name_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SharedCooldown.name_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SetNextAutobuyItem

// optional string name = 1;
inline bool CDOTAUserMsg_SetNextAutobuyItem::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SetNextAutobuyItem::has_name() const {
  return _internal_has_name();
}
inline void CDOTAUserMsg_SetNextAutobuyItem::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_SetNextAutobuyItem::name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SetNextAutobuyItem.name)
  return _internal_name();
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline std::string* CDOTAUserMsg_SetNextAutobuyItem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SetNextAutobuyItem.name)
  return _internal_mutable_name();
}
inline const std::string& CDOTAUserMsg_SetNextAutobuyItem::_internal_name() const {
  return name_.Get();
}
inline void CDOTAUserMsg_SetNextAutobuyItem::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline std::string* CDOTAUserMsg_SetNextAutobuyItem::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_SetNextAutobuyItem::release_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SetNextAutobuyItem.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SetNextAutobuyItem.name)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HalloweenDrops

// repeated uint32 item_defs = 1;
inline int CDOTAUserMsg_HalloweenDrops::_internal_item_defs_size() const {
  return item_defs_.size();
}
inline int CDOTAUserMsg_HalloweenDrops::item_defs_size() const {
  return _internal_item_defs_size();
}
inline void CDOTAUserMsg_HalloweenDrops::clear_item_defs() {
  item_defs_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::_internal_item_defs(int index) const {
  return item_defs_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HalloweenDrops.item_defs)
  return _internal_item_defs(index);
}
inline void CDOTAUserMsg_HalloweenDrops::set_item_defs(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HalloweenDrops.item_defs)
}
inline void CDOTAUserMsg_HalloweenDrops::_internal_add_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  item_defs_.Add(value);
}
inline void CDOTAUserMsg_HalloweenDrops::add_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_item_defs(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_HalloweenDrops.item_defs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_HalloweenDrops::_internal_item_defs() const {
  return item_defs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_HalloweenDrops::item_defs() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_HalloweenDrops.item_defs)
  return _internal_item_defs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_HalloweenDrops::_internal_mutable_item_defs() {
  return &item_defs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_HalloweenDrops::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_HalloweenDrops.item_defs)
  return _internal_mutable_item_defs();
}

// repeated uint32 player_ids = 2;
inline int CDOTAUserMsg_HalloweenDrops::_internal_player_ids_size() const {
  return player_ids_.size();
}
inline int CDOTAUserMsg_HalloweenDrops::player_ids_size() const {
  return _internal_player_ids_size();
}
inline void CDOTAUserMsg_HalloweenDrops::clear_player_ids() {
  player_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::_internal_player_ids(int index) const {
  return player_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::player_ids(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HalloweenDrops.player_ids)
  return _internal_player_ids(index);
}
inline void CDOTAUserMsg_HalloweenDrops::set_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HalloweenDrops.player_ids)
}
inline void CDOTAUserMsg_HalloweenDrops::_internal_add_player_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  player_ids_.Add(value);
}
inline void CDOTAUserMsg_HalloweenDrops::add_player_ids(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_player_ids(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_HalloweenDrops.player_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_HalloweenDrops::_internal_player_ids() const {
  return player_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_HalloweenDrops::player_ids() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_HalloweenDrops.player_ids)
  return _internal_player_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_HalloweenDrops::_internal_mutable_player_ids() {
  return &player_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_HalloweenDrops::mutable_player_ids() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_HalloweenDrops.player_ids)
  return _internal_mutable_player_ids();
}

// optional uint32 prize_list = 3;
inline bool CDOTAUserMsg_HalloweenDrops::_internal_has_prize_list() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HalloweenDrops::has_prize_list() const {
  return _internal_has_prize_list();
}
inline void CDOTAUserMsg_HalloweenDrops::clear_prize_list() {
  prize_list_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::_internal_prize_list() const {
  return prize_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HalloweenDrops::prize_list() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HalloweenDrops.prize_list)
  return _internal_prize_list();
}
inline void CDOTAUserMsg_HalloweenDrops::_internal_set_prize_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  prize_list_ = value;
}
inline void CDOTAUserMsg_HalloweenDrops::set_prize_list(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prize_list(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HalloweenDrops.prize_list)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PredictionResult_Prediction

// optional uint32 item_def = 1;
inline bool CDOTAUserMsg_PredictionResult_Prediction::_internal_has_item_def() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_item_def() const {
  return _internal_has_item_def();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_item_def() {
  item_def_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::_internal_item_def() const {
  return item_def_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::item_def() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.Prediction.item_def)
  return _internal_item_def();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::_internal_set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_def_ = value;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_item_def(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_def(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.Prediction.item_def)
}

// optional uint32 num_correct = 2;
inline bool CDOTAUserMsg_PredictionResult_Prediction::_internal_has_num_correct() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_num_correct() const {
  return _internal_has_num_correct();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_num_correct() {
  num_correct_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::_internal_num_correct() const {
  return num_correct_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::num_correct() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.Prediction.num_correct)
  return _internal_num_correct();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::_internal_set_num_correct(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  num_correct_ = value;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_num_correct(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_correct(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.Prediction.num_correct)
}

// optional uint32 num_fails = 3;
inline bool CDOTAUserMsg_PredictionResult_Prediction::_internal_has_num_fails() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_num_fails() const {
  return _internal_has_num_fails();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_num_fails() {
  num_fails_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::_internal_num_fails() const {
  return num_fails_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::num_fails() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.Prediction.num_fails)
  return _internal_num_fails();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::_internal_set_num_fails(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  num_fails_ = value;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_num_fails(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num_fails(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.Prediction.num_fails)
}

// optional .CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
inline bool CDOTAUserMsg_PredictionResult_Prediction::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_result() const {
  return _internal_has_result();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_result() {
  result_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::_internal_result() const {
  return static_cast< ::CDOTAUserMsg_PredictionResult_Prediction_EResult >(result_);
}
inline ::CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::result() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.Prediction.result)
  return _internal_result();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::_internal_set_result(::CDOTAUserMsg_PredictionResult_Prediction_EResult value) {
  assert(::CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  result_ = value;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_result(::CDOTAUserMsg_PredictionResult_Prediction_EResult value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.Prediction.result)
}

// repeated uint32 granted_item_defs = 6;
inline int CDOTAUserMsg_PredictionResult_Prediction::_internal_granted_item_defs_size() const {
  return granted_item_defs_.size();
}
inline int CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs_size() const {
  return _internal_granted_item_defs_size();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_granted_item_defs() {
  granted_item_defs_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::_internal_granted_item_defs(int index) const {
  return granted_item_defs_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return _internal_granted_item_defs(index);
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_granted_item_defs(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
}
inline void CDOTAUserMsg_PredictionResult_Prediction::_internal_add_granted_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  granted_item_defs_.Add(value);
}
inline void CDOTAUserMsg_PredictionResult_Prediction::add_granted_item_defs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_granted_item_defs(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_PredictionResult_Prediction::_internal_granted_item_defs() const {
  return granted_item_defs_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return _internal_granted_item_defs();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_PredictionResult_Prediction::_internal_mutable_granted_item_defs() {
  return &granted_item_defs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_PredictionResult_Prediction::mutable_granted_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return _internal_mutable_granted_item_defs();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PredictionResult

// optional uint32 account_id = 1;
inline bool CDOTAUserMsg_PredictionResult::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult::has_account_id() const {
  return _internal_has_account_id();
}
inline void CDOTAUserMsg_PredictionResult::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PredictionResult::account_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.account_id)
  return _internal_account_id();
}
inline void CDOTAUserMsg_PredictionResult::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  account_id_ = value;
}
inline void CDOTAUserMsg_PredictionResult::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.account_id)
}

// optional uint64 match_id = 2;
inline bool CDOTAUserMsg_PredictionResult::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult::has_match_id() const {
  return _internal_has_match_id();
}
inline void CDOTAUserMsg_PredictionResult::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_PredictionResult::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_PredictionResult::match_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.match_id)
  return _internal_match_id();
}
inline void CDOTAUserMsg_PredictionResult::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
}
inline void CDOTAUserMsg_PredictionResult::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.match_id)
}

// optional bool correct = 3;
inline bool CDOTAUserMsg_PredictionResult::_internal_has_correct() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PredictionResult::has_correct() const {
  return _internal_has_correct();
}
inline void CDOTAUserMsg_PredictionResult::clear_correct() {
  correct_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_PredictionResult::_internal_correct() const {
  return correct_;
}
inline bool CDOTAUserMsg_PredictionResult::correct() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.correct)
  return _internal_correct();
}
inline void CDOTAUserMsg_PredictionResult::_internal_set_correct(bool value) {
  _has_bits_[0] |= 0x00000004u;
  correct_ = value;
}
inline void CDOTAUserMsg_PredictionResult::set_correct(bool value) {
  _internal_set_correct(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PredictionResult.correct)
}

// repeated .CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
inline int CDOTAUserMsg_PredictionResult::_internal_predictions_size() const {
  return predictions_.size();
}
inline int CDOTAUserMsg_PredictionResult::predictions_size() const {
  return _internal_predictions_size();
}
inline void CDOTAUserMsg_PredictionResult::clear_predictions() {
  predictions_.Clear();
}
inline ::CDOTAUserMsg_PredictionResult_Prediction* CDOTAUserMsg_PredictionResult::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_PredictionResult.predictions)
  return predictions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PredictionResult_Prediction >*
CDOTAUserMsg_PredictionResult::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_PredictionResult.predictions)
  return &predictions_;
}
inline const ::CDOTAUserMsg_PredictionResult_Prediction& CDOTAUserMsg_PredictionResult::_internal_predictions(int index) const {
  return predictions_.Get(index);
}
inline const ::CDOTAUserMsg_PredictionResult_Prediction& CDOTAUserMsg_PredictionResult::predictions(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PredictionResult.predictions)
  return _internal_predictions(index);
}
inline ::CDOTAUserMsg_PredictionResult_Prediction* CDOTAUserMsg_PredictionResult::_internal_add_predictions() {
  return predictions_.Add();
}
inline ::CDOTAUserMsg_PredictionResult_Prediction* CDOTAUserMsg_PredictionResult::add_predictions() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_PredictionResult.predictions)
  return _internal_add_predictions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PredictionResult_Prediction >&
CDOTAUserMsg_PredictionResult::predictions() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_PredictionResult.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CDOTAResponseQuerySerialized_Fact

// required int32 key = 1;
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_key() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_key() const {
  return _internal_has_key();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_key() {
  key_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::_internal_key() const {
  return key_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::key() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.key)
  return _internal_key();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_key(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  key_ = value;
}
inline void CDOTAResponseQuerySerialized_Fact::set_key(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_key(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.key)
}

// required .CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_valtype() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_valtype() const {
  return _internal_has_valtype();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_valtype() {
  valtype_ = 1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::_internal_valtype() const {
  return static_cast< ::CDOTAResponseQuerySerialized_Fact_ValueType >(valtype_);
}
inline ::CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::valtype() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.valtype)
  return _internal_valtype();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_valtype(::CDOTAResponseQuerySerialized_Fact_ValueType value) {
  assert(::CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(value));
  _has_bits_[0] |= 0x00000020u;
  valtype_ = value;
}
inline void CDOTAResponseQuerySerialized_Fact::set_valtype(::CDOTAResponseQuerySerialized_Fact_ValueType value) {
  _internal_set_valtype(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.valtype)
}

// optional float val_numeric = 3;
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_val_numeric() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_val_numeric() const {
  return _internal_has_val_numeric();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_numeric() {
  val_numeric_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAResponseQuerySerialized_Fact::_internal_val_numeric() const {
  return val_numeric_;
}
inline float CDOTAResponseQuerySerialized_Fact::val_numeric() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.val_numeric)
  return _internal_val_numeric();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_val_numeric(float value) {
  _has_bits_[0] |= 0x00000004u;
  val_numeric_ = value;
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_numeric(float value) {
  _internal_set_val_numeric(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.val_numeric)
}

// optional string val_string = 4;
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_val_string() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_val_string() const {
  return _internal_has_val_string();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_string() {
  val_string_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAResponseQuerySerialized_Fact::val_string() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.val_string)
  return _internal_val_string();
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const std::string& value) {
  _internal_set_val_string(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.val_string)
}
inline std::string* CDOTAResponseQuerySerialized_Fact::mutable_val_string() {
  // @@protoc_insertion_point(field_mutable:CDOTAResponseQuerySerialized.Fact.val_string)
  return _internal_mutable_val_string();
}
inline const std::string& CDOTAResponseQuerySerialized_Fact::_internal_val_string() const {
  return val_string_.Get();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_val_string(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAResponseQuerySerialized.Fact.val_string)
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAResponseQuerySerialized.Fact.val_string)
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  val_string_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAResponseQuerySerialized.Fact.val_string)
}
inline std::string* CDOTAResponseQuerySerialized_Fact::_internal_mutable_val_string() {
  _has_bits_[0] |= 0x00000001u;
  return val_string_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAResponseQuerySerialized_Fact::release_val_string() {
  // @@protoc_insertion_point(field_release:CDOTAResponseQuerySerialized.Fact.val_string)
  if (!_internal_has_val_string()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return val_string_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAResponseQuerySerialized_Fact::set_allocated_val_string(std::string* val_string) {
  if (val_string != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  val_string_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), val_string,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAResponseQuerySerialized.Fact.val_string)
}

// optional int32 val_stringtable_index = 5;
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_val_stringtable_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_val_stringtable_index() const {
  return _internal_has_val_stringtable_index();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_stringtable_index() {
  val_stringtable_index_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::_internal_val_stringtable_index() const {
  return val_stringtable_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::val_stringtable_index() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.val_stringtable_index)
  return _internal_val_stringtable_index();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_val_stringtable_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  val_stringtable_index_ = value;
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_stringtable_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_val_stringtable_index(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.val_stringtable_index)
}

// optional sint32 val_int_numeric = 6;
inline bool CDOTAResponseQuerySerialized_Fact::_internal_has_val_int_numeric() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAResponseQuerySerialized_Fact::has_val_int_numeric() const {
  return _internal_has_val_int_numeric();
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_int_numeric() {
  val_int_numeric_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::_internal_val_int_numeric() const {
  return val_int_numeric_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAResponseQuerySerialized_Fact::val_int_numeric() const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.Fact.val_int_numeric)
  return _internal_val_int_numeric();
}
inline void CDOTAResponseQuerySerialized_Fact::_internal_set_val_int_numeric(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  val_int_numeric_ = value;
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_int_numeric(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_val_int_numeric(value);
  // @@protoc_insertion_point(field_set:CDOTAResponseQuerySerialized.Fact.val_int_numeric)
}

// -------------------------------------------------------------------

// CDOTAResponseQuerySerialized

// repeated .CDOTAResponseQuerySerialized.Fact facts = 1;
inline int CDOTAResponseQuerySerialized::_internal_facts_size() const {
  return facts_.size();
}
inline int CDOTAResponseQuerySerialized::facts_size() const {
  return _internal_facts_size();
}
inline void CDOTAResponseQuerySerialized::clear_facts() {
  facts_.Clear();
}
inline ::CDOTAResponseQuerySerialized_Fact* CDOTAResponseQuerySerialized::mutable_facts(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAResponseQuerySerialized.facts)
  return facts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAResponseQuerySerialized_Fact >*
CDOTAResponseQuerySerialized::mutable_facts() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAResponseQuerySerialized.facts)
  return &facts_;
}
inline const ::CDOTAResponseQuerySerialized_Fact& CDOTAResponseQuerySerialized::_internal_facts(int index) const {
  return facts_.Get(index);
}
inline const ::CDOTAResponseQuerySerialized_Fact& CDOTAResponseQuerySerialized::facts(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAResponseQuerySerialized.facts)
  return _internal_facts(index);
}
inline ::CDOTAResponseQuerySerialized_Fact* CDOTAResponseQuerySerialized::_internal_add_facts() {
  return facts_.Add();
}
inline ::CDOTAResponseQuerySerialized_Fact* CDOTAResponseQuerySerialized::add_facts() {
  // @@protoc_insertion_point(field_add:CDOTAResponseQuerySerialized.facts)
  return _internal_add_facts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAResponseQuerySerialized_Fact >&
CDOTAResponseQuerySerialized::facts() const {
  // @@protoc_insertion_point(field_list:CDOTAResponseQuerySerialized.facts)
  return facts_;
}

// -------------------------------------------------------------------

// CDOTASpeechMatchOnClient

// optional int32 speech_concept = 1;
inline bool CDOTASpeechMatchOnClient::_internal_has_speech_concept() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTASpeechMatchOnClient::has_speech_concept() const {
  return _internal_has_speech_concept();
}
inline void CDOTASpeechMatchOnClient::clear_speech_concept() {
  speech_concept_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::_internal_speech_concept() const {
  return speech_concept_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::speech_concept() const {
  // @@protoc_insertion_point(field_get:CDOTASpeechMatchOnClient.speech_concept)
  return _internal_speech_concept();
}
inline void CDOTASpeechMatchOnClient::_internal_set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  speech_concept_ = value;
}
inline void CDOTASpeechMatchOnClient::set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speech_concept(value);
  // @@protoc_insertion_point(field_set:CDOTASpeechMatchOnClient.speech_concept)
}

// optional int32 recipient_type = 2;
inline bool CDOTASpeechMatchOnClient::_internal_has_recipient_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTASpeechMatchOnClient::has_recipient_type() const {
  return _internal_has_recipient_type();
}
inline void CDOTASpeechMatchOnClient::clear_recipient_type() {
  recipient_type_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::_internal_recipient_type() const {
  return recipient_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::recipient_type() const {
  // @@protoc_insertion_point(field_get:CDOTASpeechMatchOnClient.recipient_type)
  return _internal_recipient_type();
}
inline void CDOTASpeechMatchOnClient::_internal_set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  recipient_type_ = value;
}
inline void CDOTASpeechMatchOnClient::set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recipient_type(value);
  // @@protoc_insertion_point(field_set:CDOTASpeechMatchOnClient.recipient_type)
}

// optional .CDOTAResponseQuerySerialized responsequery = 3;
inline bool CDOTASpeechMatchOnClient::_internal_has_responsequery() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || responsequery_ != nullptr);
  return value;
}
inline bool CDOTASpeechMatchOnClient::has_responsequery() const {
  return _internal_has_responsequery();
}
inline void CDOTASpeechMatchOnClient::clear_responsequery() {
  if (responsequery_ != nullptr) responsequery_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CDOTAResponseQuerySerialized& CDOTASpeechMatchOnClient::_internal_responsequery() const {
  const ::CDOTAResponseQuerySerialized* p = responsequery_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAResponseQuerySerialized&>(
      ::_CDOTAResponseQuerySerialized_default_instance_);
}
inline const ::CDOTAResponseQuerySerialized& CDOTASpeechMatchOnClient::responsequery() const {
  // @@protoc_insertion_point(field_get:CDOTASpeechMatchOnClient.responsequery)
  return _internal_responsequery();
}
inline void CDOTASpeechMatchOnClient::unsafe_arena_set_allocated_responsequery(
    ::CDOTAResponseQuerySerialized* responsequery) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(responsequery_);
  }
  responsequery_ = responsequery;
  if (responsequery) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTASpeechMatchOnClient.responsequery)
}
inline ::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::release_responsequery() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAResponseQuerySerialized* temp = responsequery_;
  responsequery_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::unsafe_arena_release_responsequery() {
  // @@protoc_insertion_point(field_release:CDOTASpeechMatchOnClient.responsequery)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAResponseQuerySerialized* temp = responsequery_;
  responsequery_ = nullptr;
  return temp;
}
inline ::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::_internal_mutable_responsequery() {
  _has_bits_[0] |= 0x00000001u;
  if (responsequery_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAResponseQuerySerialized>(GetArena());
    responsequery_ = p;
  }
  return responsequery_;
}
inline ::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::mutable_responsequery() {
  // @@protoc_insertion_point(field_mutable:CDOTASpeechMatchOnClient.responsequery)
  return _internal_mutable_responsequery();
}
inline void CDOTASpeechMatchOnClient::set_allocated_responsequery(::CDOTAResponseQuerySerialized* responsequery) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete responsequery_;
  }
  if (responsequery) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(responsequery);
    if (message_arena != submessage_arena) {
      responsequery = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, responsequery, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  responsequery_ = responsequery;
  // @@protoc_insertion_point(field_set_allocated:CDOTASpeechMatchOnClient.responsequery)
}

// optional sfixed32 randomseed = 4 [default = 0];
inline bool CDOTASpeechMatchOnClient::_internal_has_randomseed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTASpeechMatchOnClient::has_randomseed() const {
  return _internal_has_randomseed();
}
inline void CDOTASpeechMatchOnClient::clear_randomseed() {
  randomseed_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::_internal_randomseed() const {
  return randomseed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTASpeechMatchOnClient::randomseed() const {
  // @@protoc_insertion_point(field_get:CDOTASpeechMatchOnClient.randomseed)
  return _internal_randomseed();
}
inline void CDOTASpeechMatchOnClient::_internal_set_randomseed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  randomseed_ = value;
}
inline void CDOTASpeechMatchOnClient::set_randomseed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_randomseed(value);
  // @@protoc_insertion_point(field_set:CDOTASpeechMatchOnClient.randomseed)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_Interval

// optional float start = 1;
inline bool CDOTAUserMsg_UnitEvent_Interval::_internal_has_start() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Interval::has_start() const {
  return _internal_has_start();
}
inline void CDOTAUserMsg_UnitEvent_Interval::clear_start() {
  start_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CDOTAUserMsg_UnitEvent_Interval::_internal_start() const {
  return start_;
}
inline float CDOTAUserMsg_UnitEvent_Interval::start() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Interval.start)
  return _internal_start();
}
inline void CDOTAUserMsg_UnitEvent_Interval::_internal_set_start(float value) {
  _has_bits_[0] |= 0x00000001u;
  start_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Interval::set_start(float value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Interval.start)
}

// optional float range = 2;
inline bool CDOTAUserMsg_UnitEvent_Interval::_internal_has_range() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Interval::has_range() const {
  return _internal_has_range();
}
inline void CDOTAUserMsg_UnitEvent_Interval::clear_range() {
  range_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_UnitEvent_Interval::_internal_range() const {
  return range_;
}
inline float CDOTAUserMsg_UnitEvent_Interval::range() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Interval.range)
  return _internal_range();
}
inline void CDOTAUserMsg_UnitEvent_Interval::_internal_set_range(float value) {
  _has_bits_[0] |= 0x00000002u;
  range_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Interval::set_range(float value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Interval.range)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_Speech

// optional int32 speech_concept = 1;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_speech_concept() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_speech_concept() const {
  return _internal_has_speech_concept();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_speech_concept() {
  speech_concept_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::_internal_speech_concept() const {
  return speech_concept_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::speech_concept() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.speech_concept)
  return _internal_speech_concept();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  speech_concept_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_speech_concept(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_speech_concept(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.speech_concept)
}

// optional string response = 2;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_response() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_response() const {
  return _internal_has_response();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_response() {
  response_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_UnitEvent_Speech::response() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.response)
  return _internal_response();
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const std::string& value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.response)
}
inline std::string* CDOTAUserMsg_UnitEvent_Speech::mutable_response() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.Speech.response)
  return _internal_mutable_response();
}
inline const std::string& CDOTAUserMsg_UnitEvent_Speech::_internal_response() const {
  return response_.Get();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_response(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  response_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_UnitEvent.Speech.response)
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_UnitEvent.Speech.response)
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  response_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_UnitEvent.Speech.response)
}
inline std::string* CDOTAUserMsg_UnitEvent_Speech::_internal_mutable_response() {
  _has_bits_[0] |= 0x00000001u;
  return response_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_UnitEvent_Speech::release_response() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.Speech.response)
  if (!_internal_has_response()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return response_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_allocated_response(std::string* response) {
  if (response != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  response_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.Speech.response)
}

// optional int32 recipient_type = 3;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_recipient_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_recipient_type() const {
  return _internal_has_recipient_type();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_recipient_type() {
  recipient_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::_internal_recipient_type() const {
  return recipient_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::recipient_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.recipient_type)
  return _internal_recipient_type();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  recipient_type_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_recipient_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recipient_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.recipient_type)
}

// optional int32 level = 4;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_level() const {
  return _internal_has_level();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_level() {
  level_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_Speech::level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.level)
  return _internal_level();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  level_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.level)
}

// optional bool muteable = 5 [default = false];
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_muteable() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_muteable() const {
  return _internal_has_muteable();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_muteable() {
  muteable_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_muteable() const {
  return muteable_;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::muteable() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.muteable)
  return _internal_muteable();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_muteable(bool value) {
  _has_bits_[0] |= 0x00000020u;
  muteable_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_muteable(bool value) {
  _internal_set_muteable(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.muteable)
}

// optional .CDOTAUserMsg_UnitEvent.Interval predelay = 6;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_predelay() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || predelay_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_predelay() const {
  return _internal_has_predelay();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_predelay() {
  if (predelay_ != nullptr) predelay_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CDOTAUserMsg_UnitEvent_Interval& CDOTAUserMsg_UnitEvent_Speech::_internal_predelay() const {
  const ::CDOTAUserMsg_UnitEvent_Interval* p = predelay_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_Interval&>(
      ::_CDOTAUserMsg_UnitEvent_Interval_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_Interval& CDOTAUserMsg_UnitEvent_Speech::predelay() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.predelay)
  return _internal_predelay();
}
inline void CDOTAUserMsg_UnitEvent_Speech::unsafe_arena_set_allocated_predelay(
    ::CDOTAUserMsg_UnitEvent_Interval* predelay) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(predelay_);
  }
  predelay_ = predelay;
  if (predelay) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.Speech.predelay)
}
inline ::CDOTAUserMsg_UnitEvent_Interval* CDOTAUserMsg_UnitEvent_Speech::release_predelay() {
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_UnitEvent_Interval* temp = predelay_;
  predelay_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_Interval* CDOTAUserMsg_UnitEvent_Speech::unsafe_arena_release_predelay() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.Speech.predelay)
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_UnitEvent_Interval* temp = predelay_;
  predelay_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_Interval* CDOTAUserMsg_UnitEvent_Speech::_internal_mutable_predelay() {
  _has_bits_[0] |= 0x00000002u;
  if (predelay_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_Interval>(GetArena());
    predelay_ = p;
  }
  return predelay_;
}
inline ::CDOTAUserMsg_UnitEvent_Interval* CDOTAUserMsg_UnitEvent_Speech::mutable_predelay() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.Speech.predelay)
  return _internal_mutable_predelay();
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_allocated_predelay(::CDOTAUserMsg_UnitEvent_Interval* predelay) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete predelay_;
  }
  if (predelay) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(predelay);
    if (message_arena != submessage_arena) {
      predelay = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, predelay, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  predelay_ = predelay;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.Speech.predelay)
}

// optional uint32 flags = 7;
inline bool CDOTAUserMsg_UnitEvent_Speech::_internal_has_flags() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_Speech::has_flags() const {
  return _internal_has_flags();
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_flags() {
  flags_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_UnitEvent_Speech::_internal_flags() const {
  return flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_UnitEvent_Speech::flags() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.Speech.flags)
  return _internal_flags();
}
inline void CDOTAUserMsg_UnitEvent_Speech::_internal_set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  flags_ = value;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.Speech.flags)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_SpeechMute

// optional float delay = 1 [default = 0.5];
inline bool CDOTAUserMsg_UnitEvent_SpeechMute::_internal_has_delay() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_SpeechMute::has_delay() const {
  return _internal_has_delay();
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::clear_delay() {
  delay_ = 0.5f;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CDOTAUserMsg_UnitEvent_SpeechMute::_internal_delay() const {
  return delay_;
}
inline float CDOTAUserMsg_UnitEvent_SpeechMute::delay() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.SpeechMute.delay)
  return _internal_delay();
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::_internal_set_delay(float value) {
  _has_bits_[0] |= 0x00000001u;
  delay_ = value;
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::set_delay(float value) {
  _internal_set_delay(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.SpeechMute.delay)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_AddGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_activity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_activity() const {
  return _internal_has_activity();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_activity() {
  activity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::_internal_activity() const {
  return activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::activity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.activity)
  return _internal_activity();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  activity_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_activity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.activity)
}

// optional int32 slot = 2;
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_slot() const {
  return _internal_has_slot();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::slot() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.slot)
  return _internal_slot();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  slot_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.slot)
}

// optional float fade_in = 3 [default = 0];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_fade_in() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_fade_in() const {
  return _internal_has_fade_in();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_in() {
  fade_in_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::_internal_fade_in() const {
  return fade_in_;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::fade_in() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.fade_in)
  return _internal_fade_in();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_fade_in(float value) {
  _has_bits_[0] |= 0x00000004u;
  fade_in_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_fade_in(float value) {
  _internal_set_fade_in(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.fade_in)
}

// optional float fade_out = 4 [default = 0.1];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_fade_out() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_fade_out() const {
  return _internal_has_fade_out();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_out() {
  fade_out_ = 0.1f;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::_internal_fade_out() const {
  return fade_out_;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::fade_out() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.fade_out)
  return _internal_fade_out();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_fade_out(float value) {
  _has_bits_[0] |= 0x00000010u;
  fade_out_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_fade_out(float value) {
  _internal_set_fade_out(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.fade_out)
}

// optional float playback_rate = 5 [default = 1];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_playback_rate() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_playback_rate() const {
  return _internal_has_playback_rate();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_playback_rate() {
  playback_rate_ = 1;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::_internal_playback_rate() const {
  return playback_rate_;
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::playback_rate() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.playback_rate)
  return _internal_playback_rate();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_playback_rate(float value) {
  _has_bits_[0] |= 0x00000020u;
  playback_rate_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_playback_rate(float value) {
  _internal_set_playback_rate(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.playback_rate)
}

// optional int32 sequence_variant = 6;
inline bool CDOTAUserMsg_UnitEvent_AddGesture::_internal_has_sequence_variant() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_sequence_variant() const {
  return _internal_has_sequence_variant();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_sequence_variant() {
  sequence_variant_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::_internal_sequence_variant() const {
  return sequence_variant_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_AddGesture::sequence_variant() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.AddGesture.sequence_variant)
  return _internal_sequence_variant();
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::_internal_set_sequence_variant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  sequence_variant_ = value;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_sequence_variant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sequence_variant(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.AddGesture.sequence_variant)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_RemoveGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_RemoveGesture::_internal_has_activity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_RemoveGesture::has_activity() const {
  return _internal_has_activity();
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::clear_activity() {
  activity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_RemoveGesture::_internal_activity() const {
  return activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_RemoveGesture::activity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.RemoveGesture.activity)
  return _internal_activity();
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::_internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  activity_ = value;
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_activity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.RemoveGesture.activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_BloodImpact

// optional int32 scale = 1;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::_internal_has_scale() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_scale() const {
  return _internal_has_scale();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::_internal_scale() const {
  return scale_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::scale() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.BloodImpact.scale)
  return _internal_scale();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::_internal_set_scale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  scale_ = value;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_scale(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.BloodImpact.scale)
}

// optional int32 x_normal = 2;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::_internal_has_x_normal() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_x_normal() const {
  return _internal_has_x_normal();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_x_normal() {
  x_normal_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::_internal_x_normal() const {
  return x_normal_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::x_normal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.BloodImpact.x_normal)
  return _internal_x_normal();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::_internal_set_x_normal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  x_normal_ = value;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_x_normal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x_normal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.BloodImpact.x_normal)
}

// optional int32 y_normal = 3;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::_internal_has_y_normal() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_y_normal() const {
  return _internal_has_y_normal();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_y_normal() {
  y_normal_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::_internal_y_normal() const {
  return y_normal_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_BloodImpact::y_normal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.BloodImpact.y_normal)
  return _internal_y_normal();
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::_internal_set_y_normal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  y_normal_ = value;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_y_normal(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y_normal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.BloodImpact.y_normal)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_FadeGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_FadeGesture::_internal_has_activity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent_FadeGesture::has_activity() const {
  return _internal_has_activity();
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::clear_activity() {
  activity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_FadeGesture::_internal_activity() const {
  return activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent_FadeGesture::activity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.FadeGesture.activity)
  return _internal_activity();
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::_internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  activity_ = value;
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_activity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.FadeGesture.activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent

// required .EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
inline bool CDOTAUserMsg_UnitEvent::_internal_has_msg_type() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_msg_type() const {
  return _internal_has_msg_type();
}
inline void CDOTAUserMsg_UnitEvent::clear_msg_type() {
  msg_type_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::EDotaEntityMessages CDOTAUserMsg_UnitEvent::_internal_msg_type() const {
  return static_cast< ::EDotaEntityMessages >(msg_type_);
}
inline ::EDotaEntityMessages CDOTAUserMsg_UnitEvent::msg_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.msg_type)
  return _internal_msg_type();
}
inline void CDOTAUserMsg_UnitEvent::_internal_set_msg_type(::EDotaEntityMessages value) {
  assert(::EDotaEntityMessages_IsValid(value));
  _has_bits_[0] |= 0x00000080u;
  msg_type_ = value;
}
inline void CDOTAUserMsg_UnitEvent::set_msg_type(::EDotaEntityMessages value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.msg_type)
}

// required int32 entity_index = 2;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_entity_index() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_entity_index() const {
  return _internal_has_entity_index();
}
inline void CDOTAUserMsg_UnitEvent::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent::_internal_entity_index() const {
  return entity_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UnitEvent::entity_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.entity_index)
  return _internal_entity_index();
}
inline void CDOTAUserMsg_UnitEvent::_internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  entity_index_ = value;
}
inline void CDOTAUserMsg_UnitEvent::set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UnitEvent.entity_index)
}

// optional .CDOTAUserMsg_UnitEvent.Speech speech = 3;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_speech() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || speech_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_speech() const {
  return _internal_has_speech();
}
inline void CDOTAUserMsg_UnitEvent::clear_speech() {
  if (speech_ != nullptr) speech_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CDOTAUserMsg_UnitEvent_Speech& CDOTAUserMsg_UnitEvent::_internal_speech() const {
  const ::CDOTAUserMsg_UnitEvent_Speech* p = speech_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_Speech&>(
      ::_CDOTAUserMsg_UnitEvent_Speech_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_Speech& CDOTAUserMsg_UnitEvent::speech() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.speech)
  return _internal_speech();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_speech(
    ::CDOTAUserMsg_UnitEvent_Speech* speech) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(speech_);
  }
  speech_ = speech;
  if (speech) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.speech)
}
inline ::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::release_speech() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_UnitEvent_Speech* temp = speech_;
  speech_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::unsafe_arena_release_speech() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.speech)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_UnitEvent_Speech* temp = speech_;
  speech_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::_internal_mutable_speech() {
  _has_bits_[0] |= 0x00000001u;
  if (speech_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_Speech>(GetArena());
    speech_ = p;
  }
  return speech_;
}
inline ::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::mutable_speech() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.speech)
  return _internal_mutable_speech();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech(::CDOTAUserMsg_UnitEvent_Speech* speech) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete speech_;
  }
  if (speech) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(speech);
    if (message_arena != submessage_arena) {
      speech = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, speech, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  speech_ = speech;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.speech)
}

// optional .CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_speech_mute() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || speech_mute_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_speech_mute() const {
  return _internal_has_speech_mute();
}
inline void CDOTAUserMsg_UnitEvent::clear_speech_mute() {
  if (speech_mute_ != nullptr) speech_mute_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CDOTAUserMsg_UnitEvent_SpeechMute& CDOTAUserMsg_UnitEvent::_internal_speech_mute() const {
  const ::CDOTAUserMsg_UnitEvent_SpeechMute* p = speech_mute_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_SpeechMute&>(
      ::_CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_SpeechMute& CDOTAUserMsg_UnitEvent::speech_mute() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.speech_mute)
  return _internal_speech_mute();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_speech_mute(
    ::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(speech_mute_);
  }
  speech_mute_ = speech_mute;
  if (speech_mute) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.speech_mute)
}
inline ::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::release_speech_mute() {
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_UnitEvent_SpeechMute* temp = speech_mute_;
  speech_mute_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::unsafe_arena_release_speech_mute() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.speech_mute)
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_UnitEvent_SpeechMute* temp = speech_mute_;
  speech_mute_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::_internal_mutable_speech_mute() {
  _has_bits_[0] |= 0x00000002u;
  if (speech_mute_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_SpeechMute>(GetArena());
    speech_mute_ = p;
  }
  return speech_mute_;
}
inline ::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::mutable_speech_mute() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.speech_mute)
  return _internal_mutable_speech_mute();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech_mute(::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete speech_mute_;
  }
  if (speech_mute) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(speech_mute);
    if (message_arena != submessage_arena) {
      speech_mute = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, speech_mute, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  speech_mute_ = speech_mute;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.speech_mute)
}

// optional .CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_add_gesture() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || add_gesture_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_add_gesture() const {
  return _internal_has_add_gesture();
}
inline void CDOTAUserMsg_UnitEvent::clear_add_gesture() {
  if (add_gesture_ != nullptr) add_gesture_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::CDOTAUserMsg_UnitEvent_AddGesture& CDOTAUserMsg_UnitEvent::_internal_add_gesture() const {
  const ::CDOTAUserMsg_UnitEvent_AddGesture* p = add_gesture_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_AddGesture&>(
      ::_CDOTAUserMsg_UnitEvent_AddGesture_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_AddGesture& CDOTAUserMsg_UnitEvent::add_gesture() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.add_gesture)
  return _internal_add_gesture();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_add_gesture(
    ::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(add_gesture_);
  }
  add_gesture_ = add_gesture;
  if (add_gesture) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.add_gesture)
}
inline ::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::release_add_gesture() {
  _has_bits_[0] &= ~0x00000004u;
  ::CDOTAUserMsg_UnitEvent_AddGesture* temp = add_gesture_;
  add_gesture_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::unsafe_arena_release_add_gesture() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.add_gesture)
  _has_bits_[0] &= ~0x00000004u;
  ::CDOTAUserMsg_UnitEvent_AddGesture* temp = add_gesture_;
  add_gesture_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::_internal_mutable_add_gesture() {
  _has_bits_[0] |= 0x00000004u;
  if (add_gesture_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_AddGesture>(GetArena());
    add_gesture_ = p;
  }
  return add_gesture_;
}
inline ::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::mutable_add_gesture() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.add_gesture)
  return _internal_mutable_add_gesture();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_add_gesture(::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete add_gesture_;
  }
  if (add_gesture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(add_gesture);
    if (message_arena != submessage_arena) {
      add_gesture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, add_gesture, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  add_gesture_ = add_gesture;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.add_gesture)
}

// optional .CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_remove_gesture() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || remove_gesture_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_remove_gesture() const {
  return _internal_has_remove_gesture();
}
inline void CDOTAUserMsg_UnitEvent::clear_remove_gesture() {
  if (remove_gesture_ != nullptr) remove_gesture_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::CDOTAUserMsg_UnitEvent_RemoveGesture& CDOTAUserMsg_UnitEvent::_internal_remove_gesture() const {
  const ::CDOTAUserMsg_UnitEvent_RemoveGesture* p = remove_gesture_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_RemoveGesture&>(
      ::_CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_RemoveGesture& CDOTAUserMsg_UnitEvent::remove_gesture() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.remove_gesture)
  return _internal_remove_gesture();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_remove_gesture(
    ::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(remove_gesture_);
  }
  remove_gesture_ = remove_gesture;
  if (remove_gesture) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.remove_gesture)
}
inline ::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::release_remove_gesture() {
  _has_bits_[0] &= ~0x00000008u;
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* temp = remove_gesture_;
  remove_gesture_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::unsafe_arena_release_remove_gesture() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.remove_gesture)
  _has_bits_[0] &= ~0x00000008u;
  ::CDOTAUserMsg_UnitEvent_RemoveGesture* temp = remove_gesture_;
  remove_gesture_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::_internal_mutable_remove_gesture() {
  _has_bits_[0] |= 0x00000008u;
  if (remove_gesture_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_RemoveGesture>(GetArena());
    remove_gesture_ = p;
  }
  return remove_gesture_;
}
inline ::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::mutable_remove_gesture() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.remove_gesture)
  return _internal_mutable_remove_gesture();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_remove_gesture(::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete remove_gesture_;
  }
  if (remove_gesture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(remove_gesture);
    if (message_arena != submessage_arena) {
      remove_gesture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, remove_gesture, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  remove_gesture_ = remove_gesture;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.remove_gesture)
}

// optional .CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_blood_impact() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || blood_impact_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_blood_impact() const {
  return _internal_has_blood_impact();
}
inline void CDOTAUserMsg_UnitEvent::clear_blood_impact() {
  if (blood_impact_ != nullptr) blood_impact_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::CDOTAUserMsg_UnitEvent_BloodImpact& CDOTAUserMsg_UnitEvent::_internal_blood_impact() const {
  const ::CDOTAUserMsg_UnitEvent_BloodImpact* p = blood_impact_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_BloodImpact&>(
      ::_CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_BloodImpact& CDOTAUserMsg_UnitEvent::blood_impact() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.blood_impact)
  return _internal_blood_impact();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_blood_impact(
    ::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(blood_impact_);
  }
  blood_impact_ = blood_impact;
  if (blood_impact) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.blood_impact)
}
inline ::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::release_blood_impact() {
  _has_bits_[0] &= ~0x00000010u;
  ::CDOTAUserMsg_UnitEvent_BloodImpact* temp = blood_impact_;
  blood_impact_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::unsafe_arena_release_blood_impact() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.blood_impact)
  _has_bits_[0] &= ~0x00000010u;
  ::CDOTAUserMsg_UnitEvent_BloodImpact* temp = blood_impact_;
  blood_impact_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::_internal_mutable_blood_impact() {
  _has_bits_[0] |= 0x00000010u;
  if (blood_impact_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_BloodImpact>(GetArena());
    blood_impact_ = p;
  }
  return blood_impact_;
}
inline ::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::mutable_blood_impact() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.blood_impact)
  return _internal_mutable_blood_impact();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_blood_impact(::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete blood_impact_;
  }
  if (blood_impact) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(blood_impact);
    if (message_arena != submessage_arena) {
      blood_impact = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, blood_impact, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  blood_impact_ = blood_impact;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.blood_impact)
}

// optional .CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_fade_gesture() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || fade_gesture_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_fade_gesture() const {
  return _internal_has_fade_gesture();
}
inline void CDOTAUserMsg_UnitEvent::clear_fade_gesture() {
  if (fade_gesture_ != nullptr) fade_gesture_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::CDOTAUserMsg_UnitEvent_FadeGesture& CDOTAUserMsg_UnitEvent::_internal_fade_gesture() const {
  const ::CDOTAUserMsg_UnitEvent_FadeGesture* p = fade_gesture_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_UnitEvent_FadeGesture&>(
      ::_CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_);
}
inline const ::CDOTAUserMsg_UnitEvent_FadeGesture& CDOTAUserMsg_UnitEvent::fade_gesture() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.fade_gesture)
  return _internal_fade_gesture();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_fade_gesture(
    ::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(fade_gesture_);
  }
  fade_gesture_ = fade_gesture;
  if (fade_gesture) {
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.fade_gesture)
}
inline ::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::release_fade_gesture() {
  _has_bits_[0] &= ~0x00000020u;
  ::CDOTAUserMsg_UnitEvent_FadeGesture* temp = fade_gesture_;
  fade_gesture_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::unsafe_arena_release_fade_gesture() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.fade_gesture)
  _has_bits_[0] &= ~0x00000020u;
  ::CDOTAUserMsg_UnitEvent_FadeGesture* temp = fade_gesture_;
  fade_gesture_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::_internal_mutable_fade_gesture() {
  _has_bits_[0] |= 0x00000020u;
  if (fade_gesture_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_UnitEvent_FadeGesture>(GetArena());
    fade_gesture_ = p;
  }
  return fade_gesture_;
}
inline ::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::mutable_fade_gesture() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.fade_gesture)
  return _internal_mutable_fade_gesture();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_fade_gesture(::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete fade_gesture_;
  }
  if (fade_gesture) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(fade_gesture);
    if (message_arena != submessage_arena) {
      fade_gesture = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, fade_gesture, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  fade_gesture_ = fade_gesture;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.fade_gesture)
}

// optional .CDOTASpeechMatchOnClient speech_match_on_client = 9;
inline bool CDOTAUserMsg_UnitEvent::_internal_has_speech_match_on_client() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || speech_match_on_client_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_UnitEvent::has_speech_match_on_client() const {
  return _internal_has_speech_match_on_client();
}
inline void CDOTAUserMsg_UnitEvent::clear_speech_match_on_client() {
  if (speech_match_on_client_ != nullptr) speech_match_on_client_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::CDOTASpeechMatchOnClient& CDOTAUserMsg_UnitEvent::_internal_speech_match_on_client() const {
  const ::CDOTASpeechMatchOnClient* p = speech_match_on_client_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTASpeechMatchOnClient&>(
      ::_CDOTASpeechMatchOnClient_default_instance_);
}
inline const ::CDOTASpeechMatchOnClient& CDOTAUserMsg_UnitEvent::speech_match_on_client() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UnitEvent.speech_match_on_client)
  return _internal_speech_match_on_client();
}
inline void CDOTAUserMsg_UnitEvent::unsafe_arena_set_allocated_speech_match_on_client(
    ::CDOTASpeechMatchOnClient* speech_match_on_client) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(speech_match_on_client_);
  }
  speech_match_on_client_ = speech_match_on_client;
  if (speech_match_on_client) {
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_UnitEvent.speech_match_on_client)
}
inline ::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::release_speech_match_on_client() {
  _has_bits_[0] &= ~0x00000040u;
  ::CDOTASpeechMatchOnClient* temp = speech_match_on_client_;
  speech_match_on_client_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::unsafe_arena_release_speech_match_on_client() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_UnitEvent.speech_match_on_client)
  _has_bits_[0] &= ~0x00000040u;
  ::CDOTASpeechMatchOnClient* temp = speech_match_on_client_;
  speech_match_on_client_ = nullptr;
  return temp;
}
inline ::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::_internal_mutable_speech_match_on_client() {
  _has_bits_[0] |= 0x00000040u;
  if (speech_match_on_client_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTASpeechMatchOnClient>(GetArena());
    speech_match_on_client_ = p;
  }
  return speech_match_on_client_;
}
inline ::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::mutable_speech_match_on_client() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_UnitEvent.speech_match_on_client)
  return _internal_mutable_speech_match_on_client();
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech_match_on_client(::CDOTASpeechMatchOnClient* speech_match_on_client) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete speech_match_on_client_;
  }
  if (speech_match_on_client) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(speech_match_on_client);
    if (message_arena != submessage_arena) {
      speech_match_on_client = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, speech_match_on_client, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  speech_match_on_client_ = speech_match_on_client;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_UnitEvent.speech_match_on_client)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemPurchased

// optional int32 item_ability_id = 1;
inline bool CDOTAUserMsg_ItemPurchased::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemPurchased::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_ItemPurchased::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemPurchased::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemPurchased::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemPurchased.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_ItemPurchased::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_ItemPurchased::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemPurchased.item_ability_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemSold

// optional int32 item_ability_id = 1;
inline bool CDOTAUserMsg_ItemSold::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemSold::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_ItemSold::clear_item_ability_id() {
  item_ability_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemSold::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemSold::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemSold.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_ItemSold::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_ItemSold::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemSold.item_ability_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemFound

// optional int32 player = 1;
inline bool CDOTAUserMsg_ItemFound::_internal_has_player() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemFound::has_player() const {
  return _internal_has_player();
}
inline void CDOTAUserMsg_ItemFound::clear_player() {
  player_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::_internal_player() const {
  return player_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::player() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemFound.player)
  return _internal_player();
}
inline void CDOTAUserMsg_ItemFound::_internal_set_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_ = value;
}
inline void CDOTAUserMsg_ItemFound::set_player(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemFound.player)
}

// optional int32 quality = 2;
inline bool CDOTAUserMsg_ItemFound::_internal_has_quality() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemFound::has_quality() const {
  return _internal_has_quality();
}
inline void CDOTAUserMsg_ItemFound::clear_quality() {
  quality_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::_internal_quality() const {
  return quality_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::quality() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemFound.quality)
  return _internal_quality();
}
inline void CDOTAUserMsg_ItemFound::_internal_set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  quality_ = value;
}
inline void CDOTAUserMsg_ItemFound::set_quality(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_quality(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemFound.quality)
}

// optional int32 rarity = 3;
inline bool CDOTAUserMsg_ItemFound::_internal_has_rarity() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemFound::has_rarity() const {
  return _internal_has_rarity();
}
inline void CDOTAUserMsg_ItemFound::clear_rarity() {
  rarity_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::_internal_rarity() const {
  return rarity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::rarity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemFound.rarity)
  return _internal_rarity();
}
inline void CDOTAUserMsg_ItemFound::_internal_set_rarity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  rarity_ = value;
}
inline void CDOTAUserMsg_ItemFound::set_rarity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rarity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemFound.rarity)
}

// optional int32 method = 4;
inline bool CDOTAUserMsg_ItemFound::_internal_has_method() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemFound::has_method() const {
  return _internal_has_method();
}
inline void CDOTAUserMsg_ItemFound::clear_method() {
  method_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::_internal_method() const {
  return method_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::method() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemFound.method)
  return _internal_method();
}
inline void CDOTAUserMsg_ItemFound::_internal_set_method(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  method_ = value;
}
inline void CDOTAUserMsg_ItemFound::set_method(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_method(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemFound.method)
}

// optional int32 itemdef = 5;
inline bool CDOTAUserMsg_ItemFound::_internal_has_itemdef() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ItemFound::has_itemdef() const {
  return _internal_has_itemdef();
}
inline void CDOTAUserMsg_ItemFound::clear_itemdef() {
  itemdef_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::_internal_itemdef() const {
  return itemdef_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ItemFound::itemdef() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ItemFound.itemdef)
  return _internal_itemdef();
}
inline void CDOTAUserMsg_ItemFound::_internal_set_itemdef(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  itemdef_ = value;
}
inline void CDOTAUserMsg_ItemFound::set_itemdef(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_itemdef(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ItemFound.itemdef)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_OverheadEvent

// required .DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
inline bool CDOTAUserMsg_OverheadEvent::_internal_has_message_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OverheadEvent::has_message_type() const {
  return _internal_has_message_type();
}
inline void CDOTAUserMsg_OverheadEvent::clear_message_type() {
  message_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::DOTA_OVERHEAD_ALERT CDOTAUserMsg_OverheadEvent::_internal_message_type() const {
  return static_cast< ::DOTA_OVERHEAD_ALERT >(message_type_);
}
inline ::DOTA_OVERHEAD_ALERT CDOTAUserMsg_OverheadEvent::message_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OverheadEvent.message_type)
  return _internal_message_type();
}
inline void CDOTAUserMsg_OverheadEvent::_internal_set_message_type(::DOTA_OVERHEAD_ALERT value) {
  assert(::DOTA_OVERHEAD_ALERT_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  message_type_ = value;
}
inline void CDOTAUserMsg_OverheadEvent::set_message_type(::DOTA_OVERHEAD_ALERT value) {
  _internal_set_message_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OverheadEvent.message_type)
}

// optional int32 value = 2;
inline bool CDOTAUserMsg_OverheadEvent::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OverheadEvent::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_OverheadEvent::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OverheadEvent.value)
  return _internal_value();
}
inline void CDOTAUserMsg_OverheadEvent::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void CDOTAUserMsg_OverheadEvent::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OverheadEvent.value)
}

// optional int32 target_player_entindex = 3;
inline bool CDOTAUserMsg_OverheadEvent::_internal_has_target_player_entindex() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OverheadEvent::has_target_player_entindex() const {
  return _internal_has_target_player_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::clear_target_player_entindex() {
  target_player_entindex_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::_internal_target_player_entindex() const {
  return target_player_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::target_player_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OverheadEvent.target_player_entindex)
  return _internal_target_player_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::_internal_set_target_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  target_player_entindex_ = value;
}
inline void CDOTAUserMsg_OverheadEvent::set_target_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_player_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OverheadEvent.target_player_entindex)
}

// optional int32 target_entindex = 4;
inline bool CDOTAUserMsg_OverheadEvent::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OverheadEvent::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::clear_target_entindex() {
  target_entindex_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OverheadEvent.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_OverheadEvent::set_target_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OverheadEvent.target_entindex)
}

// optional int32 source_player_entindex = 5;
inline bool CDOTAUserMsg_OverheadEvent::_internal_has_source_player_entindex() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OverheadEvent::has_source_player_entindex() const {
  return _internal_has_source_player_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::clear_source_player_entindex() {
  source_player_entindex_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::_internal_source_player_entindex() const {
  return source_player_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_OverheadEvent::source_player_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OverheadEvent.source_player_entindex)
  return _internal_source_player_entindex();
}
inline void CDOTAUserMsg_OverheadEvent::_internal_set_source_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  source_player_entindex_ = value;
}
inline void CDOTAUserMsg_OverheadEvent::set_source_player_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OverheadEvent.source_player_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialTipInfo

// optional string name = 1;
inline bool CDOTAUserMsg_TutorialTipInfo::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialTipInfo::has_name() const {
  return _internal_has_name();
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_name() {
  name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_TutorialTipInfo::name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialTipInfo.name)
  return _internal_name();
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialTipInfo.name)
}
inline std::string* CDOTAUserMsg_TutorialTipInfo::mutable_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TutorialTipInfo.name)
  return _internal_mutable_name();
}
inline const std::string& CDOTAUserMsg_TutorialTipInfo::_internal_name() const {
  return name_.Get();
}
inline void CDOTAUserMsg_TutorialTipInfo::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_TutorialTipInfo.name)
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_TutorialTipInfo.name)
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_TutorialTipInfo.name)
}
inline std::string* CDOTAUserMsg_TutorialTipInfo::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_TutorialTipInfo::release_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TutorialTipInfo.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_TutorialTipInfo::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TutorialTipInfo.name)
}

// optional int32 progress = 2;
inline bool CDOTAUserMsg_TutorialTipInfo::_internal_has_progress() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialTipInfo::has_progress() const {
  return _internal_has_progress();
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_progress() {
  progress_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialTipInfo::_internal_progress() const {
  return progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialTipInfo::progress() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialTipInfo.progress)
  return _internal_progress();
}
inline void CDOTAUserMsg_TutorialTipInfo::_internal_set_progress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  progress_ = value;
}
inline void CDOTAUserMsg_TutorialTipInfo::set_progress(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialTipInfo.progress)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialFinish

// optional string heading = 1;
inline bool CDOTAUserMsg_TutorialFinish::_internal_has_heading() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialFinish::has_heading() const {
  return _internal_has_heading();
}
inline void CDOTAUserMsg_TutorialFinish::clear_heading() {
  heading_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_TutorialFinish::heading() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialFinish.heading)
  return _internal_heading();
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(const std::string& value) {
  _internal_set_heading(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialFinish.heading)
}
inline std::string* CDOTAUserMsg_TutorialFinish::mutable_heading() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TutorialFinish.heading)
  return _internal_mutable_heading();
}
inline const std::string& CDOTAUserMsg_TutorialFinish::_internal_heading() const {
  return heading_.Get();
}
inline void CDOTAUserMsg_TutorialFinish::_internal_set_heading(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  heading_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  heading_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_TutorialFinish.heading)
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  heading_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_TutorialFinish.heading)
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  heading_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_TutorialFinish.heading)
}
inline std::string* CDOTAUserMsg_TutorialFinish::_internal_mutable_heading() {
  _has_bits_[0] |= 0x00000001u;
  return heading_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_TutorialFinish::release_heading() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TutorialFinish.heading)
  if (!_internal_has_heading()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return heading_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_heading(std::string* heading) {
  if (heading != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  heading_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), heading,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TutorialFinish.heading)
}

// optional string emblem = 2;
inline bool CDOTAUserMsg_TutorialFinish::_internal_has_emblem() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialFinish::has_emblem() const {
  return _internal_has_emblem();
}
inline void CDOTAUserMsg_TutorialFinish::clear_emblem() {
  emblem_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_TutorialFinish::emblem() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialFinish.emblem)
  return _internal_emblem();
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const std::string& value) {
  _internal_set_emblem(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialFinish.emblem)
}
inline std::string* CDOTAUserMsg_TutorialFinish::mutable_emblem() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TutorialFinish.emblem)
  return _internal_mutable_emblem();
}
inline const std::string& CDOTAUserMsg_TutorialFinish::_internal_emblem() const {
  return emblem_.Get();
}
inline void CDOTAUserMsg_TutorialFinish::_internal_set_emblem(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  emblem_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  emblem_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_TutorialFinish.emblem)
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  emblem_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_TutorialFinish.emblem)
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  emblem_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_TutorialFinish.emblem)
}
inline std::string* CDOTAUserMsg_TutorialFinish::_internal_mutable_emblem() {
  _has_bits_[0] |= 0x00000002u;
  return emblem_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_TutorialFinish::release_emblem() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TutorialFinish.emblem)
  if (!_internal_has_emblem()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return emblem_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_emblem(std::string* emblem) {
  if (emblem != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  emblem_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), emblem,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TutorialFinish.emblem)
}

// optional string body = 3;
inline bool CDOTAUserMsg_TutorialFinish::_internal_has_body() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialFinish::has_body() const {
  return _internal_has_body();
}
inline void CDOTAUserMsg_TutorialFinish::clear_body() {
  body_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDOTAUserMsg_TutorialFinish::body() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialFinish.body)
  return _internal_body();
}
inline void CDOTAUserMsg_TutorialFinish::set_body(const std::string& value) {
  _internal_set_body(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialFinish.body)
}
inline std::string* CDOTAUserMsg_TutorialFinish::mutable_body() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TutorialFinish.body)
  return _internal_mutable_body();
}
inline const std::string& CDOTAUserMsg_TutorialFinish::_internal_body() const {
  return body_.Get();
}
inline void CDOTAUserMsg_TutorialFinish::_internal_set_body(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_body(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  body_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_TutorialFinish.body)
}
inline void CDOTAUserMsg_TutorialFinish::set_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_TutorialFinish.body)
}
inline void CDOTAUserMsg_TutorialFinish::set_body(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_TutorialFinish.body)
}
inline std::string* CDOTAUserMsg_TutorialFinish::_internal_mutable_body() {
  _has_bits_[0] |= 0x00000004u;
  return body_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_TutorialFinish::release_body() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TutorialFinish.body)
  if (!_internal_has_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return body_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_body(std::string* body) {
  if (body != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  body_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), body,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TutorialFinish.body)
}

// optional bool success = 4;
inline bool CDOTAUserMsg_TutorialFinish::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialFinish::has_success() const {
  return _internal_has_success();
}
inline void CDOTAUserMsg_TutorialFinish::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CDOTAUserMsg_TutorialFinish::_internal_success() const {
  return success_;
}
inline bool CDOTAUserMsg_TutorialFinish::success() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialFinish.success)
  return _internal_success();
}
inline void CDOTAUserMsg_TutorialFinish::_internal_set_success(bool value) {
  _has_bits_[0] |= 0x00000008u;
  success_ = value;
}
inline void CDOTAUserMsg_TutorialFinish::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialFinish.success)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialMinimapPosition

// -------------------------------------------------------------------

// CDOTAUserMsg_SendGenericToolTip

// optional string title = 1;
inline bool CDOTAUserMsg_SendGenericToolTip::_internal_has_title() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendGenericToolTip::has_title() const {
  return _internal_has_title();
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_title() {
  title_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_SendGenericToolTip::title() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendGenericToolTip.title)
  return _internal_title();
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendGenericToolTip.title)
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::mutable_title() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SendGenericToolTip.title)
  return _internal_mutable_title();
}
inline const std::string& CDOTAUserMsg_SendGenericToolTip::_internal_title() const {
  return title_.Get();
}
inline void CDOTAUserMsg_SendGenericToolTip::_internal_set_title(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_SendGenericToolTip.title)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_SendGenericToolTip.title)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_SendGenericToolTip.title)
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::_internal_mutable_title() {
  _has_bits_[0] |= 0x00000001u;
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::release_title() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SendGenericToolTip.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return title_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SendGenericToolTip.title)
}

// optional string text = 2;
inline bool CDOTAUserMsg_SendGenericToolTip::_internal_has_text() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendGenericToolTip::has_text() const {
  return _internal_has_text();
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_text() {
  text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_SendGenericToolTip::text() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendGenericToolTip.text)
  return _internal_text();
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const std::string& value) {
  _internal_set_text(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendGenericToolTip.text)
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::mutable_text() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SendGenericToolTip.text)
  return _internal_mutable_text();
}
inline const std::string& CDOTAUserMsg_SendGenericToolTip::_internal_text() const {
  return text_.Get();
}
inline void CDOTAUserMsg_SendGenericToolTip::_internal_set_text(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_SendGenericToolTip.text)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_SendGenericToolTip.text)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_SendGenericToolTip.text)
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::_internal_mutable_text() {
  _has_bits_[0] |= 0x00000002u;
  return text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_SendGenericToolTip::release_text() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SendGenericToolTip.text)
  if (!_internal_has_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_allocated_text(std::string* text) {
  if (text != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SendGenericToolTip.text)
}

// optional int32 entindex = 3;
inline bool CDOTAUserMsg_SendGenericToolTip::_internal_has_entindex() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendGenericToolTip::has_entindex() const {
  return _internal_has_entindex();
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_entindex() {
  entindex_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendGenericToolTip::_internal_entindex() const {
  return entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendGenericToolTip::entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendGenericToolTip.entindex)
  return _internal_entindex();
}
inline void CDOTAUserMsg_SendGenericToolTip::_internal_set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  entindex_ = value;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_entindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendGenericToolTip.entindex)
}

// optional bool close = 4;
inline bool CDOTAUserMsg_SendGenericToolTip::_internal_has_close() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendGenericToolTip::has_close() const {
  return _internal_has_close();
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_close() {
  close_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CDOTAUserMsg_SendGenericToolTip::_internal_close() const {
  return close_;
}
inline bool CDOTAUserMsg_SendGenericToolTip::close() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendGenericToolTip.close)
  return _internal_close();
}
inline void CDOTAUserMsg_SendGenericToolTip::_internal_set_close(bool value) {
  _has_bits_[0] |= 0x00000008u;
  close_ = value;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_close(bool value) {
  _internal_set_close(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendGenericToolTip.close)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WorldLine

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_WorldLine::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WorldLine::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_WorldLine::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WorldLine::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_WorldLine::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WorldLine.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_WorldLine::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_WorldLine::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WorldLine.player_id)
}

// optional .CDOTAMsg_WorldLine worldline = 2;
inline bool CDOTAUserMsg_WorldLine::_internal_has_worldline() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || worldline_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_WorldLine::has_worldline() const {
  return _internal_has_worldline();
}
inline const ::CDOTAMsg_WorldLine& CDOTAUserMsg_WorldLine::_internal_worldline() const {
  const ::CDOTAMsg_WorldLine* p = worldline_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_WorldLine&>(
      ::_CDOTAMsg_WorldLine_default_instance_);
}
inline const ::CDOTAMsg_WorldLine& CDOTAUserMsg_WorldLine::worldline() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WorldLine.worldline)
  return _internal_worldline();
}
inline void CDOTAUserMsg_WorldLine::unsafe_arena_set_allocated_worldline(
    ::CDOTAMsg_WorldLine* worldline) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldline_);
  }
  worldline_ = worldline;
  if (worldline) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_WorldLine.worldline)
}
inline ::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::release_worldline() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_WorldLine* temp = worldline_;
  worldline_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::unsafe_arena_release_worldline() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_WorldLine.worldline)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_WorldLine* temp = worldline_;
  worldline_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::_internal_mutable_worldline() {
  _has_bits_[0] |= 0x00000001u;
  if (worldline_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_WorldLine>(GetArena());
    worldline_ = p;
  }
  return worldline_;
}
inline ::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::mutable_worldline() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_WorldLine.worldline)
  return _internal_mutable_worldline();
}
inline void CDOTAUserMsg_WorldLine::set_allocated_worldline(::CDOTAMsg_WorldLine* worldline) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldline_);
  }
  if (worldline) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(worldline)->GetArena();
    if (message_arena != submessage_arena) {
      worldline = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, worldline, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  worldline_ = worldline;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_WorldLine.worldline)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatWheel

// optional uint32 chat_message_id = 1;
inline bool CDOTAUserMsg_ChatWheel::_internal_has_chat_message_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheel::has_chat_message_id() const {
  return _internal_has_chat_message_id();
}
inline void CDOTAUserMsg_ChatWheel::clear_chat_message_id() {
  chat_message_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::_internal_chat_message_id() const {
  return chat_message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::chat_message_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheel.chat_message_id)
  return _internal_chat_message_id();
}
inline void CDOTAUserMsg_ChatWheel::_internal_set_chat_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  chat_message_id_ = value;
}
inline void CDOTAUserMsg_ChatWheel::set_chat_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_chat_message_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheel.chat_message_id)
}

// optional uint32 player_id = 2;
inline bool CDOTAUserMsg_ChatWheel::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheel::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ChatWheel::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheel.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ChatWheel::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ChatWheel::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheel.player_id)
}

// optional uint32 account_id = 3;
inline bool CDOTAUserMsg_ChatWheel::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheel::has_account_id() const {
  return _internal_has_account_id();
}
inline void CDOTAUserMsg_ChatWheel::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::account_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheel.account_id)
  return _internal_account_id();
}
inline void CDOTAUserMsg_ChatWheel::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  account_id_ = value;
}
inline void CDOTAUserMsg_ChatWheel::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheel.account_id)
}

// optional uint32 param_hero_id = 4;
inline bool CDOTAUserMsg_ChatWheel::_internal_has_param_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheel::has_param_hero_id() const {
  return _internal_has_param_hero_id();
}
inline void CDOTAUserMsg_ChatWheel::clear_param_hero_id() {
  param_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::_internal_param_hero_id() const {
  return param_hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::param_hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheel.param_hero_id)
  return _internal_param_hero_id();
}
inline void CDOTAUserMsg_ChatWheel::_internal_set_param_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  param_hero_id_ = value;
}
inline void CDOTAUserMsg_ChatWheel::set_param_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_param_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheel.param_hero_id)
}

// optional uint32 emoticon_id = 5;
inline bool CDOTAUserMsg_ChatWheel::_internal_has_emoticon_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheel::has_emoticon_id() const {
  return _internal_has_emoticon_id();
}
inline void CDOTAUserMsg_ChatWheel::clear_emoticon_id() {
  emoticon_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::_internal_emoticon_id() const {
  return emoticon_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheel::emoticon_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheel.emoticon_id)
  return _internal_emoticon_id();
}
inline void CDOTAUserMsg_ChatWheel::_internal_set_emoticon_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  emoticon_id_ = value;
}
inline void CDOTAUserMsg_ChatWheel::set_emoticon_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_emoticon_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheel.emoticon_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ReceivedXmasGift

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_ReceivedXmasGift::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReceivedXmasGift::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ReceivedXmasGift::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ReceivedXmasGift::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReceivedXmasGift.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ReceivedXmasGift::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReceivedXmasGift.player_id)
}

// optional string item_name = 2;
inline bool CDOTAUserMsg_ReceivedXmasGift::_internal_has_item_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReceivedXmasGift::has_item_name() const {
  return _internal_has_item_name();
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_item_name() {
  item_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ReceivedXmasGift::item_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReceivedXmasGift.item_name)
  return _internal_item_name();
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const std::string& value) {
  _internal_set_item_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline std::string* CDOTAUserMsg_ReceivedXmasGift::mutable_item_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ReceivedXmasGift.item_name)
  return _internal_mutable_item_name();
}
inline const std::string& CDOTAUserMsg_ReceivedXmasGift::_internal_item_name() const {
  return item_name_.Get();
}
inline void CDOTAUserMsg_ReceivedXmasGift::_internal_set_item_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  item_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline std::string* CDOTAUserMsg_ReceivedXmasGift::_internal_mutable_item_name() {
  _has_bits_[0] |= 0x00000001u;
  return item_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ReceivedXmasGift::release_item_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ReceivedXmasGift.item_name)
  if (!_internal_has_item_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return item_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_allocated_item_name(std::string* item_name) {
  if (item_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  item_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), item_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ReceivedXmasGift.item_name)
}

// optional int32 inventory_slot = 3;
inline bool CDOTAUserMsg_ReceivedXmasGift::_internal_has_inventory_slot() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReceivedXmasGift::has_inventory_slot() const {
  return _internal_has_inventory_slot();
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_inventory_slot() {
  inventory_slot_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ReceivedXmasGift::_internal_inventory_slot() const {
  return inventory_slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ReceivedXmasGift::inventory_slot() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReceivedXmasGift.inventory_slot)
  return _internal_inventory_slot();
}
inline void CDOTAUserMsg_ReceivedXmasGift::_internal_set_inventory_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  inventory_slot_ = value;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_inventory_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_inventory_slot(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReceivedXmasGift.inventory_slot)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ShowSurvey

// optional int32 survey_id = 1;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_survey_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_survey_id() const {
  return _internal_has_survey_id();
}
inline void CDOTAUserMsg_ShowSurvey::clear_survey_id() {
  survey_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ShowSurvey::_internal_survey_id() const {
  return survey_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ShowSurvey::survey_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.survey_id)
  return _internal_survey_id();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_survey_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  survey_id_ = value;
}
inline void CDOTAUserMsg_ShowSurvey::set_survey_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_survey_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.survey_id)
}

// optional uint64 match_id = 2;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_match_id() const {
  return _internal_has_match_id();
}
inline void CDOTAUserMsg_ShowSurvey::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_ShowSurvey::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CDOTAUserMsg_ShowSurvey::match_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.match_id)
  return _internal_match_id();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000004u;
  match_id_ = value;
}
inline void CDOTAUserMsg_ShowSurvey::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.match_id)
}

// optional string response_style = 3;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_response_style() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_response_style() const {
  return _internal_has_response_style();
}
inline void CDOTAUserMsg_ShowSurvey::clear_response_style() {
  response_style_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ShowSurvey::response_style() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.response_style)
  return _internal_response_style();
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const std::string& value) {
  _internal_set_response_style(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.response_style)
}
inline std::string* CDOTAUserMsg_ShowSurvey::mutable_response_style() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowSurvey.response_style)
  return _internal_mutable_response_style();
}
inline const std::string& CDOTAUserMsg_ShowSurvey::_internal_response_style() const {
  return response_style_.Get();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_response_style(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  response_style_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  response_style_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowSurvey.response_style)
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  response_style_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowSurvey.response_style)
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  response_style_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowSurvey.response_style)
}
inline std::string* CDOTAUserMsg_ShowSurvey::_internal_mutable_response_style() {
  _has_bits_[0] |= 0x00000001u;
  return response_style_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowSurvey::release_response_style() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowSurvey.response_style)
  if (!_internal_has_response_style()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return response_style_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowSurvey::set_allocated_response_style(std::string* response_style) {
  if (response_style != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  response_style_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response_style,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowSurvey.response_style)
}

// optional uint32 teammate_hero_id = 4;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_teammate_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_hero_id() const {
  return _internal_has_teammate_hero_id();
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_hero_id() {
  teammate_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShowSurvey::_internal_teammate_hero_id() const {
  return teammate_hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShowSurvey::teammate_hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.teammate_hero_id)
  return _internal_teammate_hero_id();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_teammate_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  teammate_hero_id_ = value;
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_teammate_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.teammate_hero_id)
}

// optional string teammate_name = 5;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_teammate_name() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_name() const {
  return _internal_has_teammate_name();
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_name() {
  teammate_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_ShowSurvey::teammate_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.teammate_name)
  return _internal_teammate_name();
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const std::string& value) {
  _internal_set_teammate_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline std::string* CDOTAUserMsg_ShowSurvey::mutable_teammate_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowSurvey.teammate_name)
  return _internal_mutable_teammate_name();
}
inline const std::string& CDOTAUserMsg_ShowSurvey::_internal_teammate_name() const {
  return teammate_name_.Get();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_teammate_name(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  teammate_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  teammate_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  teammate_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  teammate_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline std::string* CDOTAUserMsg_ShowSurvey::_internal_mutable_teammate_name() {
  _has_bits_[0] |= 0x00000002u;
  return teammate_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowSurvey::release_teammate_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowSurvey.teammate_name)
  if (!_internal_has_teammate_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return teammate_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowSurvey::set_allocated_teammate_name(std::string* teammate_name) {
  if (teammate_name != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  teammate_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), teammate_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowSurvey.teammate_name)
}

// optional uint32 teammate_account_id = 6;
inline bool CDOTAUserMsg_ShowSurvey::_internal_has_teammate_account_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_account_id() const {
  return _internal_has_teammate_account_id();
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_account_id() {
  teammate_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShowSurvey::_internal_teammate_account_id() const {
  return teammate_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShowSurvey::teammate_account_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowSurvey.teammate_account_id)
  return _internal_teammate_account_id();
}
inline void CDOTAUserMsg_ShowSurvey::_internal_set_teammate_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  teammate_account_id_ = value;
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_teammate_account_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowSurvey.teammate_account_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UpdateSharedContent

// optional int32 slot_type = 1;
inline bool CDOTAUserMsg_UpdateSharedContent::_internal_has_slot_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_UpdateSharedContent::has_slot_type() const {
  return _internal_has_slot_type();
}
inline void CDOTAUserMsg_UpdateSharedContent::clear_slot_type() {
  slot_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UpdateSharedContent::_internal_slot_type() const {
  return slot_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_UpdateSharedContent::slot_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_UpdateSharedContent.slot_type)
  return _internal_slot_type();
}
inline void CDOTAUserMsg_UpdateSharedContent::_internal_set_slot_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  slot_type_ = value;
}
inline void CDOTAUserMsg_UpdateSharedContent::set_slot_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_UpdateSharedContent.slot_type)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialRequestExp

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialFade

// optional int32 tgt_alpha = 1;
inline bool CDOTAUserMsg_TutorialFade::_internal_has_tgt_alpha() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialFade::has_tgt_alpha() const {
  return _internal_has_tgt_alpha();
}
inline void CDOTAUserMsg_TutorialFade::clear_tgt_alpha() {
  tgt_alpha_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialFade::_internal_tgt_alpha() const {
  return tgt_alpha_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialFade::tgt_alpha() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialFade.tgt_alpha)
  return _internal_tgt_alpha();
}
inline void CDOTAUserMsg_TutorialFade::_internal_set_tgt_alpha(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  tgt_alpha_ = value;
}
inline void CDOTAUserMsg_TutorialFade::set_tgt_alpha(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tgt_alpha(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialFade.tgt_alpha)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialPingMinimap

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_TutorialPingMinimap::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialPingMinimap::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TutorialPingMinimap::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TutorialPingMinimap::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialPingMinimap.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_TutorialPingMinimap::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialPingMinimap.player_id)
}

// optional float pos_x = 2;
inline bool CDOTAUserMsg_TutorialPingMinimap::_internal_has_pos_x() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_x() const {
  return _internal_has_pos_x();
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_x() {
  pos_x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_TutorialPingMinimap::_internal_pos_x() const {
  return pos_x_;
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_x() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialPingMinimap.pos_x)
  return _internal_pos_x();
}
inline void CDOTAUserMsg_TutorialPingMinimap::_internal_set_pos_x(float value) {
  _has_bits_[0] |= 0x00000002u;
  pos_x_ = value;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_x(float value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialPingMinimap.pos_x)
}

// optional float pos_y = 3;
inline bool CDOTAUserMsg_TutorialPingMinimap::_internal_has_pos_y() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_y() const {
  return _internal_has_pos_y();
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_y() {
  pos_y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_TutorialPingMinimap::_internal_pos_y() const {
  return pos_y_;
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_y() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialPingMinimap.pos_y)
  return _internal_pos_y();
}
inline void CDOTAUserMsg_TutorialPingMinimap::_internal_set_pos_y(float value) {
  _has_bits_[0] |= 0x00000004u;
  pos_y_ = value;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_y(float value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialPingMinimap.pos_y)
}

// optional float pos_z = 4;
inline bool CDOTAUserMsg_TutorialPingMinimap::_internal_has_pos_z() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_z() const {
  return _internal_has_pos_z();
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_z() {
  pos_z_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_TutorialPingMinimap::_internal_pos_z() const {
  return pos_z_;
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_z() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialPingMinimap.pos_z)
  return _internal_pos_z();
}
inline void CDOTAUserMsg_TutorialPingMinimap::_internal_set_pos_z(float value) {
  _has_bits_[0] |= 0x00000008u;
  pos_z_ = value;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_z(float value) {
  _internal_set_pos_z(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialPingMinimap.pos_z)
}

// optional int32 entity_index = 5;
inline bool CDOTAUserMsg_TutorialPingMinimap::_internal_has_entity_index() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TutorialPingMinimap::has_entity_index() const {
  return _internal_has_entity_index();
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_entity_index() {
  entity_index_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialPingMinimap::_internal_entity_index() const {
  return entity_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TutorialPingMinimap::entity_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TutorialPingMinimap.entity_index)
  return _internal_entity_index();
}
inline void CDOTAUserMsg_TutorialPingMinimap::_internal_set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  entity_index_ = value;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_entity_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TutorialPingMinimap.entity_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GamerulesStateChanged

// optional uint32 state = 1;
inline bool CDOTAUserMsg_GamerulesStateChanged::_internal_has_state() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GamerulesStateChanged::has_state() const {
  return _internal_has_state();
}
inline void CDOTAUserMsg_GamerulesStateChanged::clear_state() {
  state_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GamerulesStateChanged::_internal_state() const {
  return state_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GamerulesStateChanged::state() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GamerulesStateChanged.state)
  return _internal_state();
}
inline void CDOTAUserMsg_GamerulesStateChanged::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  state_ = value;
}
inline void CDOTAUserMsg_GamerulesStateChanged::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GamerulesStateChanged.state)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AddQuestLogEntry

// optional string npc_name = 1;
inline bool CDOTAUserMsg_AddQuestLogEntry::_internal_has_npc_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AddQuestLogEntry::has_npc_name() const {
  return _internal_has_npc_name();
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_npc_name() {
  npc_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_AddQuestLogEntry::npc_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AddQuestLogEntry.npc_name)
  return _internal_npc_name();
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const std::string& value) {
  _internal_set_npc_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::mutable_npc_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_AddQuestLogEntry.npc_name)
  return _internal_mutable_npc_name();
}
inline const std::string& CDOTAUserMsg_AddQuestLogEntry::_internal_npc_name() const {
  return npc_name_.Get();
}
inline void CDOTAUserMsg_AddQuestLogEntry::_internal_set_npc_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  npc_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  npc_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  npc_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  npc_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::_internal_mutable_npc_name() {
  _has_bits_[0] |= 0x00000001u;
  return npc_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::release_npc_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_AddQuestLogEntry.npc_name)
  if (!_internal_has_npc_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return npc_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_allocated_npc_name(std::string* npc_name) {
  if (npc_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  npc_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), npc_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_AddQuestLogEntry.npc_name)
}

// optional string npc_dialog = 2;
inline bool CDOTAUserMsg_AddQuestLogEntry::_internal_has_npc_dialog() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AddQuestLogEntry::has_npc_dialog() const {
  return _internal_has_npc_dialog();
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_npc_dialog() {
  npc_dialog_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_AddQuestLogEntry::npc_dialog() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  return _internal_npc_dialog();
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const std::string& value) {
  _internal_set_npc_dialog(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::mutable_npc_dialog() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  return _internal_mutable_npc_dialog();
}
inline const std::string& CDOTAUserMsg_AddQuestLogEntry::_internal_npc_dialog() const {
  return npc_dialog_.Get();
}
inline void CDOTAUserMsg_AddQuestLogEntry::_internal_set_npc_dialog(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  npc_dialog_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  npc_dialog_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  npc_dialog_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  npc_dialog_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::_internal_mutable_npc_dialog() {
  _has_bits_[0] |= 0x00000002u;
  return npc_dialog_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_AddQuestLogEntry::release_npc_dialog() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  if (!_internal_has_npc_dialog()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return npc_dialog_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_allocated_npc_dialog(std::string* npc_dialog) {
  if (npc_dialog != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  npc_dialog_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), npc_dialog,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendStatPopup

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_SendStatPopup::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendStatPopup::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_SendStatPopup::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendStatPopup::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendStatPopup::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendStatPopup.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_SendStatPopup::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_SendStatPopup::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendStatPopup.player_id)
}

// optional .CDOTAMsg_SendStatPopup statpopup = 2;
inline bool CDOTAUserMsg_SendStatPopup::_internal_has_statpopup() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || statpopup_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_SendStatPopup::has_statpopup() const {
  return _internal_has_statpopup();
}
inline const ::CDOTAMsg_SendStatPopup& CDOTAUserMsg_SendStatPopup::_internal_statpopup() const {
  const ::CDOTAMsg_SendStatPopup* p = statpopup_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_SendStatPopup&>(
      ::_CDOTAMsg_SendStatPopup_default_instance_);
}
inline const ::CDOTAMsg_SendStatPopup& CDOTAUserMsg_SendStatPopup::statpopup() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendStatPopup.statpopup)
  return _internal_statpopup();
}
inline void CDOTAUserMsg_SendStatPopup::unsafe_arena_set_allocated_statpopup(
    ::CDOTAMsg_SendStatPopup* statpopup) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statpopup_);
  }
  statpopup_ = statpopup;
  if (statpopup) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_SendStatPopup.statpopup)
}
inline ::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::release_statpopup() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_SendStatPopup* temp = statpopup_;
  statpopup_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::unsafe_arena_release_statpopup() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SendStatPopup.statpopup)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_SendStatPopup* temp = statpopup_;
  statpopup_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::_internal_mutable_statpopup() {
  _has_bits_[0] |= 0x00000001u;
  if (statpopup_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_SendStatPopup>(GetArena());
    statpopup_ = p;
  }
  return statpopup_;
}
inline ::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::mutable_statpopup() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SendStatPopup.statpopup)
  return _internal_mutable_statpopup();
}
inline void CDOTAUserMsg_SendStatPopup::set_allocated_statpopup(::CDOTAMsg_SendStatPopup* statpopup) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(statpopup_);
  }
  if (statpopup) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(statpopup)->GetArena();
    if (message_arena != submessage_arena) {
      statpopup = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, statpopup, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  statpopup_ = statpopup;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SendStatPopup.statpopup)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DismissAllStatPopups

// optional .CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
inline bool CDOTAUserMsg_DismissAllStatPopups::_internal_has_dismissallmsg() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || dismissallmsg_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_DismissAllStatPopups::has_dismissallmsg() const {
  return _internal_has_dismissallmsg();
}
inline const ::CDOTAMsg_DismissAllStatPopups& CDOTAUserMsg_DismissAllStatPopups::_internal_dismissallmsg() const {
  const ::CDOTAMsg_DismissAllStatPopups* p = dismissallmsg_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_DismissAllStatPopups&>(
      ::_CDOTAMsg_DismissAllStatPopups_default_instance_);
}
inline const ::CDOTAMsg_DismissAllStatPopups& CDOTAUserMsg_DismissAllStatPopups::dismissallmsg() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  return _internal_dismissallmsg();
}
inline void CDOTAUserMsg_DismissAllStatPopups::unsafe_arena_set_allocated_dismissallmsg(
    ::CDOTAMsg_DismissAllStatPopups* dismissallmsg) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dismissallmsg_);
  }
  dismissallmsg_ = dismissallmsg;
  if (dismissallmsg) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
}
inline ::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::release_dismissallmsg() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_DismissAllStatPopups* temp = dismissallmsg_;
  dismissallmsg_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::unsafe_arena_release_dismissallmsg() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_DismissAllStatPopups* temp = dismissallmsg_;
  dismissallmsg_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::_internal_mutable_dismissallmsg() {
  _has_bits_[0] |= 0x00000001u;
  if (dismissallmsg_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_DismissAllStatPopups>(GetArena());
    dismissallmsg_ = p;
  }
  return dismissallmsg_;
}
inline ::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::mutable_dismissallmsg() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  return _internal_mutable_dismissallmsg();
}
inline void CDOTAUserMsg_DismissAllStatPopups::set_allocated_dismissallmsg(::CDOTAMsg_DismissAllStatPopups* dismissallmsg) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(dismissallmsg_);
  }
  if (dismissallmsg) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dismissallmsg)->GetArena();
    if (message_arena != submessage_arena) {
      dismissallmsg = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dismissallmsg, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  dismissallmsg_ = dismissallmsg;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendRoshanSpectatorPhase

// optional .DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_has_phase() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase() const {
  return _internal_has_phase();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase() {
  phase_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::DOTA_ROSHAN_PHASE CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_phase() const {
  return static_cast< ::DOTA_ROSHAN_PHASE >(phase_);
}
inline ::DOTA_ROSHAN_PHASE CDOTAUserMsg_SendRoshanSpectatorPhase::phase() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendRoshanSpectatorPhase.phase)
  return _internal_phase();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_set_phase(::DOTA_ROSHAN_PHASE value) {
  assert(::DOTA_ROSHAN_PHASE_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  phase_ = value;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase(::DOTA_ROSHAN_PHASE value) {
  _internal_set_phase(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendRoshanSpectatorPhase.phase)
}

// optional int32 phase_start_time = 2;
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_has_phase_start_time() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase_start_time() const {
  return _internal_has_phase_start_time();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase_start_time() {
  phase_start_time_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_phase_start_time() const {
  return phase_start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::phase_start_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendRoshanSpectatorPhase.phase_start_time)
  return _internal_phase_start_time();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_set_phase_start_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  phase_start_time_ = value;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase_start_time(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_phase_start_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendRoshanSpectatorPhase.phase_start_time)
}

// optional int32 phase_length = 3;
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_has_phase_length() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase_length() const {
  return _internal_has_phase_length();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase_length() {
  phase_length_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_phase_length() const {
  return phase_length_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::phase_length() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendRoshanSpectatorPhase.phase_length)
  return _internal_phase_length();
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::_internal_set_phase_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  phase_length_ = value;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase_length(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_phase_length(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendRoshanSpectatorPhase.phase_length)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendRoshanPopup

// optional bool reclaimed = 1;
inline bool CDOTAUserMsg_SendRoshanPopup::_internal_has_reclaimed() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendRoshanPopup::has_reclaimed() const {
  return _internal_has_reclaimed();
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_reclaimed() {
  reclaimed_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CDOTAUserMsg_SendRoshanPopup::_internal_reclaimed() const {
  return reclaimed_;
}
inline bool CDOTAUserMsg_SendRoshanPopup::reclaimed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendRoshanPopup.reclaimed)
  return _internal_reclaimed();
}
inline void CDOTAUserMsg_SendRoshanPopup::_internal_set_reclaimed(bool value) {
  _has_bits_[0] |= 0x00000001u;
  reclaimed_ = value;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_reclaimed(bool value) {
  _internal_set_reclaimed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendRoshanPopup.reclaimed)
}

// optional int32 gametime = 2;
inline bool CDOTAUserMsg_SendRoshanPopup::_internal_has_gametime() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SendRoshanPopup::has_gametime() const {
  return _internal_has_gametime();
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_gametime() {
  gametime_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanPopup::_internal_gametime() const {
  return gametime_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SendRoshanPopup::gametime() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendRoshanPopup.gametime)
  return _internal_gametime();
}
inline void CDOTAUserMsg_SendRoshanPopup::_internal_set_gametime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  gametime_ = value;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_gametime(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_gametime(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendRoshanPopup.gametime)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendFinalGold

// repeated uint32 reliable_gold = 1;
inline int CDOTAUserMsg_SendFinalGold::_internal_reliable_gold_size() const {
  return reliable_gold_.size();
}
inline int CDOTAUserMsg_SendFinalGold::reliable_gold_size() const {
  return _internal_reliable_gold_size();
}
inline void CDOTAUserMsg_SendFinalGold::clear_reliable_gold() {
  reliable_gold_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SendFinalGold::_internal_reliable_gold(int index) const {
  return reliable_gold_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SendFinalGold::reliable_gold(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendFinalGold.reliable_gold)
  return _internal_reliable_gold(index);
}
inline void CDOTAUserMsg_SendFinalGold::set_reliable_gold(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  reliable_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendFinalGold.reliable_gold)
}
inline void CDOTAUserMsg_SendFinalGold::_internal_add_reliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  reliable_gold_.Add(value);
}
inline void CDOTAUserMsg_SendFinalGold::add_reliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_reliable_gold(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_SendFinalGold.reliable_gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_SendFinalGold::_internal_reliable_gold() const {
  return reliable_gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_SendFinalGold::reliable_gold() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_SendFinalGold.reliable_gold)
  return _internal_reliable_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_SendFinalGold::_internal_mutable_reliable_gold() {
  return &reliable_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_SendFinalGold::mutable_reliable_gold() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_SendFinalGold.reliable_gold)
  return _internal_mutable_reliable_gold();
}

// repeated uint32 unreliable_gold = 2;
inline int CDOTAUserMsg_SendFinalGold::_internal_unreliable_gold_size() const {
  return unreliable_gold_.size();
}
inline int CDOTAUserMsg_SendFinalGold::unreliable_gold_size() const {
  return _internal_unreliable_gold_size();
}
inline void CDOTAUserMsg_SendFinalGold::clear_unreliable_gold() {
  unreliable_gold_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SendFinalGold::_internal_unreliable_gold(int index) const {
  return unreliable_gold_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SendFinalGold::unreliable_gold(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return _internal_unreliable_gold(index);
}
inline void CDOTAUserMsg_SendFinalGold::set_unreliable_gold(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  unreliable_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SendFinalGold.unreliable_gold)
}
inline void CDOTAUserMsg_SendFinalGold::_internal_add_unreliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  unreliable_gold_.Add(value);
}
inline void CDOTAUserMsg_SendFinalGold::add_unreliable_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_unreliable_gold(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_SendFinalGold.unreliable_gold)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_SendFinalGold::_internal_unreliable_gold() const {
  return unreliable_gold_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_SendFinalGold::unreliable_gold() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return _internal_unreliable_gold();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_SendFinalGold::_internal_mutable_unreliable_gold() {
  return &unreliable_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_SendFinalGold::mutable_unreliable_gold() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return _internal_mutable_unreliable_gold();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomMsg

// optional string message = 1;
inline bool CDOTAUserMsg_CustomMsg::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomMsg::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_CustomMsg::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_CustomMsg::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomMsg.message)
  return _internal_message();
}
inline void CDOTAUserMsg_CustomMsg::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomMsg.message)
}
inline std::string* CDOTAUserMsg_CustomMsg::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomMsg.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_CustomMsg::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_CustomMsg::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomMsg::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomMsg.message)
}
inline void CDOTAUserMsg_CustomMsg::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomMsg.message)
}
inline void CDOTAUserMsg_CustomMsg::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomMsg.message)
}
inline std::string* CDOTAUserMsg_CustomMsg::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomMsg::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomMsg.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomMsg::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomMsg.message)
}

// optional int32 player_id = 2;
inline bool CDOTAUserMsg_CustomMsg::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomMsg::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_CustomMsg::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomMsg::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomMsg::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomMsg.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_CustomMsg::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_CustomMsg::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomMsg.player_id)
}

// optional int32 value = 3;
inline bool CDOTAUserMsg_CustomMsg::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomMsg::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_CustomMsg::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomMsg::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomMsg::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomMsg.value)
  return _internal_value();
}
inline void CDOTAUserMsg_CustomMsg::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  value_ = value;
}
inline void CDOTAUserMsg_CustomMsg::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomMsg.value)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CoachHUDPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CoachHUDPing::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CoachHUDPing::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_CoachHUDPing::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CoachHUDPing::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CoachHUDPing::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CoachHUDPing.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_CoachHUDPing::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_CoachHUDPing::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CoachHUDPing.player_id)
}

// optional .CDOTAMsg_CoachHUDPing hud_ping = 2;
inline bool CDOTAUserMsg_CoachHUDPing::_internal_has_hud_ping() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || hud_ping_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_CoachHUDPing::has_hud_ping() const {
  return _internal_has_hud_ping();
}
inline const ::CDOTAMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::_internal_hud_ping() const {
  const ::CDOTAMsg_CoachHUDPing* p = hud_ping_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAMsg_CoachHUDPing&>(
      ::_CDOTAMsg_CoachHUDPing_default_instance_);
}
inline const ::CDOTAMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::hud_ping() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CoachHUDPing.hud_ping)
  return _internal_hud_ping();
}
inline void CDOTAUserMsg_CoachHUDPing::unsafe_arena_set_allocated_hud_ping(
    ::CDOTAMsg_CoachHUDPing* hud_ping) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hud_ping_);
  }
  hud_ping_ = hud_ping;
  if (hud_ping) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_CoachHUDPing.hud_ping)
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::release_hud_ping() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_CoachHUDPing* temp = hud_ping_;
  hud_ping_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::unsafe_arena_release_hud_ping() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CoachHUDPing.hud_ping)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAMsg_CoachHUDPing* temp = hud_ping_;
  hud_ping_ = nullptr;
  return temp;
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::_internal_mutable_hud_ping() {
  _has_bits_[0] |= 0x00000001u;
  if (hud_ping_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAMsg_CoachHUDPing>(GetArena());
    hud_ping_ = p;
  }
  return hud_ping_;
}
inline ::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::mutable_hud_ping() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CoachHUDPing.hud_ping)
  return _internal_mutable_hud_ping();
}
inline void CDOTAUserMsg_CoachHUDPing::set_allocated_hud_ping(::CDOTAMsg_CoachHUDPing* hud_ping) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(hud_ping_);
  }
  if (hud_ping) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(hud_ping)->GetArena();
    if (message_arena != submessage_arena) {
      hud_ping = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hud_ping, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hud_ping_ = hud_ping;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CoachHUDPing.hud_ping)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ClientLoadGridNav

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_Projectile

// optional int32 hSource = 1;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_hsource() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_hsource() const {
  return _internal_has_hsource();
}
inline void CDOTAUserMsg_TE_Projectile::clear_hsource() {
  hsource_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_hsource() const {
  return hsource_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::hsource() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.hSource)
  return _internal_hsource();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  hsource_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hsource(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.hSource)
}

// optional int32 hTarget = 2;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_htarget() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_htarget() const {
  return _internal_has_htarget();
}
inline void CDOTAUserMsg_TE_Projectile::clear_htarget() {
  htarget_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_htarget() const {
  return htarget_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::htarget() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.hTarget)
  return _internal_htarget();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  htarget_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_htarget(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.hTarget)
}

// optional int32 moveSpeed = 3;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_movespeed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_movespeed() const {
  return _internal_has_movespeed();
}
inline void CDOTAUserMsg_TE_Projectile::clear_movespeed() {
  movespeed_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_movespeed() const {
  return movespeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::movespeed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.moveSpeed)
  return _internal_movespeed();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  movespeed_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_movespeed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.moveSpeed)
}

// optional int32 sourceAttachment = 4;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_sourceattachment() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_sourceattachment() const {
  return _internal_has_sourceattachment();
}
inline void CDOTAUserMsg_TE_Projectile::clear_sourceattachment() {
  sourceattachment_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_sourceattachment() const {
  return sourceattachment_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::sourceattachment() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.sourceAttachment)
  return _internal_sourceattachment();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  sourceattachment_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sourceattachment(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.sourceAttachment)
}

// optional int64 particleSystemHandle = 5;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_particlesystemhandle() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_particlesystemhandle() const {
  return _internal_has_particlesystemhandle();
}
inline void CDOTAUserMsg_TE_Projectile::clear_particlesystemhandle() {
  particlesystemhandle_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_TE_Projectile::_internal_particlesystemhandle() const {
  return particlesystemhandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_TE_Projectile::particlesystemhandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.particleSystemHandle)
  return _internal_particlesystemhandle();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000020u;
  particlesystemhandle_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_particlesystemhandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.particleSystemHandle)
}

// optional bool dodgeable = 6;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_dodgeable() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_dodgeable() const {
  return _internal_has_dodgeable();
}
inline void CDOTAUserMsg_TE_Projectile::clear_dodgeable() {
  dodgeable_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CDOTAUserMsg_TE_Projectile::_internal_dodgeable() const {
  return dodgeable_;
}
inline bool CDOTAUserMsg_TE_Projectile::dodgeable() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.dodgeable)
  return _internal_dodgeable();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_dodgeable(bool value) {
  _has_bits_[0] |= 0x00000040u;
  dodgeable_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_dodgeable(bool value) {
  _internal_set_dodgeable(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.dodgeable)
}

// optional bool isAttack = 7;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_isattack() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_isattack() const {
  return _internal_has_isattack();
}
inline void CDOTAUserMsg_TE_Projectile::clear_isattack() {
  isattack_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CDOTAUserMsg_TE_Projectile::_internal_isattack() const {
  return isattack_;
}
inline bool CDOTAUserMsg_TE_Projectile::isattack() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.isAttack)
  return _internal_isattack();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_isattack(bool value) {
  _has_bits_[0] |= 0x00000080u;
  isattack_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_isattack(bool value) {
  _internal_set_isattack(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.isAttack)
}

// optional float expireTime = 9;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_expiretime() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_expiretime() const {
  return _internal_has_expiretime();
}
inline void CDOTAUserMsg_TE_Projectile::clear_expiretime() {
  expiretime_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline float CDOTAUserMsg_TE_Projectile::_internal_expiretime() const {
  return expiretime_;
}
inline float CDOTAUserMsg_TE_Projectile::expiretime() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.expireTime)
  return _internal_expiretime();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_expiretime(float value) {
  _has_bits_[0] |= 0x00000100u;
  expiretime_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_expiretime(float value) {
  _internal_set_expiretime(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.expireTime)
}

// optional float maximpacttime = 10;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_maximpacttime() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_maximpacttime() const {
  return _internal_has_maximpacttime();
}
inline void CDOTAUserMsg_TE_Projectile::clear_maximpacttime() {
  maximpacttime_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline float CDOTAUserMsg_TE_Projectile::_internal_maximpacttime() const {
  return maximpacttime_;
}
inline float CDOTAUserMsg_TE_Projectile::maximpacttime() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.maximpacttime)
  return _internal_maximpacttime();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_maximpacttime(float value) {
  _has_bits_[0] |= 0x00000200u;
  maximpacttime_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_maximpacttime(float value) {
  _internal_set_maximpacttime(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.maximpacttime)
}

// optional fixed32 colorgemcolor = 11;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_colorgemcolor() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_colorgemcolor() const {
  return _internal_has_colorgemcolor();
}
inline void CDOTAUserMsg_TE_Projectile::clear_colorgemcolor() {
  colorgemcolor_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TE_Projectile::_internal_colorgemcolor() const {
  return colorgemcolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TE_Projectile::colorgemcolor() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.colorgemcolor)
  return _internal_colorgemcolor();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  colorgemcolor_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_colorgemcolor(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.colorgemcolor)
}

// optional int32 launch_tick = 12;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_launch_tick() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_launch_tick() const {
  return _internal_has_launch_tick();
}
inline void CDOTAUserMsg_TE_Projectile::clear_launch_tick() {
  launch_tick_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_launch_tick() const {
  return launch_tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::launch_tick() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.launch_tick)
  return _internal_launch_tick();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  launch_tick_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_launch_tick(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.launch_tick)
}

// optional int32 handle = 13;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_handle() const {
  return _internal_has_handle();
}
inline void CDOTAUserMsg_TE_Projectile::clear_handle() {
  handle_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_Projectile::handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.handle)
  return _internal_handle();
}
inline void CDOTAUserMsg_TE_Projectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  handle_ = value;
}
inline void CDOTAUserMsg_TE_Projectile::set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_Projectile.handle)
}

// optional .CMsgVector vTargetLoc = 14;
inline bool CDOTAUserMsg_TE_Projectile::_internal_has_vtargetloc() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vtargetloc_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_TE_Projectile::has_vtargetloc() const {
  return _internal_has_vtargetloc();
}
inline const ::CMsgVector& CDOTAUserMsg_TE_Projectile::_internal_vtargetloc() const {
  const ::CMsgVector* p = vtargetloc_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_TE_Projectile::vtargetloc() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_Projectile.vTargetLoc)
  return _internal_vtargetloc();
}
inline void CDOTAUserMsg_TE_Projectile::unsafe_arena_set_allocated_vtargetloc(
    ::CMsgVector* vtargetloc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc_);
  }
  vtargetloc_ = vtargetloc;
  if (vtargetloc) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_TE_Projectile.vTargetLoc)
}
inline ::CMsgVector* CDOTAUserMsg_TE_Projectile::release_vtargetloc() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = vtargetloc_;
  vtargetloc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_Projectile::unsafe_arena_release_vtargetloc() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TE_Projectile.vTargetLoc)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = vtargetloc_;
  vtargetloc_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_Projectile::_internal_mutable_vtargetloc() {
  _has_bits_[0] |= 0x00000001u;
  if (vtargetloc_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    vtargetloc_ = p;
  }
  return vtargetloc_;
}
inline ::CMsgVector* CDOTAUserMsg_TE_Projectile::mutable_vtargetloc() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TE_Projectile.vTargetLoc)
  return _internal_mutable_vtargetloc();
}
inline void CDOTAUserMsg_TE_Projectile::set_allocated_vtargetloc(::CMsgVector* vtargetloc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc_);
  }
  if (vtargetloc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc)->GetArena();
    if (message_arena != submessage_arena) {
      vtargetloc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vtargetloc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vtargetloc_ = vtargetloc;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TE_Projectile.vTargetLoc)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_ProjectileLoc

// optional .CMsgVector vSourceLoc = 1;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_vsourceloc() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vsourceloc_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_vsourceloc() const {
  return _internal_has_vsourceloc();
}
inline const ::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::_internal_vsourceloc() const {
  const ::CMsgVector* p = vsourceloc_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::vsourceloc() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  return _internal_vsourceloc();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::unsafe_arena_set_allocated_vsourceloc(
    ::CMsgVector* vsourceloc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vsourceloc_);
  }
  vsourceloc_ = vsourceloc;
  if (vsourceloc) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::release_vsourceloc() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = vsourceloc_;
  vsourceloc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::unsafe_arena_release_vsourceloc() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = vsourceloc_;
  vsourceloc_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::_internal_mutable_vsourceloc() {
  _has_bits_[0] |= 0x00000001u;
  if (vsourceloc_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    vsourceloc_ = p;
  }
  return vsourceloc_;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::mutable_vsourceloc() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  return _internal_mutable_vsourceloc();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_allocated_vsourceloc(::CMsgVector* vsourceloc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vsourceloc_);
  }
  if (vsourceloc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vsourceloc)->GetArena();
    if (message_arena != submessage_arena) {
      vsourceloc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vsourceloc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vsourceloc_ = vsourceloc;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
}

// optional int32 hTarget = 2;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_htarget() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_htarget() const {
  return _internal_has_htarget();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_htarget() {
  htarget_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_htarget() const {
  return htarget_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::htarget() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.hTarget)
  return _internal_htarget();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  htarget_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_htarget(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_htarget(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.hTarget)
}

// optional int32 moveSpeed = 3;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_movespeed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_movespeed() const {
  return _internal_has_movespeed();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_movespeed() {
  movespeed_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_movespeed() const {
  return movespeed_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::movespeed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.moveSpeed)
  return _internal_movespeed();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  movespeed_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_movespeed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_movespeed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.moveSpeed)
}

// optional int64 particleSystemHandle = 4;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_particlesystemhandle() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_particlesystemhandle() const {
  return _internal_has_particlesystemhandle();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_particlesystemhandle() {
  particlesystemhandle_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_TE_ProjectileLoc::_internal_particlesystemhandle() const {
  return particlesystemhandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_TE_ProjectileLoc::particlesystemhandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.particleSystemHandle)
  return _internal_particlesystemhandle();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000010u;
  particlesystemhandle_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_particlesystemhandle(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_particlesystemhandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.particleSystemHandle)
}

// optional bool dodgeable = 5;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_dodgeable() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_dodgeable() const {
  return _internal_has_dodgeable();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_dodgeable() {
  dodgeable_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_dodgeable() const {
  return dodgeable_;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::dodgeable() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.dodgeable)
  return _internal_dodgeable();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_dodgeable(bool value) {
  _has_bits_[0] |= 0x00000020u;
  dodgeable_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_dodgeable(bool value) {
  _internal_set_dodgeable(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.dodgeable)
}

// optional bool isAttack = 6;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_isattack() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_isattack() const {
  return _internal_has_isattack();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_isattack() {
  isattack_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_isattack() const {
  return isattack_;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::isattack() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.isAttack)
  return _internal_isattack();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_isattack(bool value) {
  _has_bits_[0] |= 0x00000040u;
  isattack_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_isattack(bool value) {
  _internal_set_isattack(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.isAttack)
}

// optional float expireTime = 9;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_expiretime() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_expiretime() const {
  return _internal_has_expiretime();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_expiretime() {
  expiretime_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline float CDOTAUserMsg_TE_ProjectileLoc::_internal_expiretime() const {
  return expiretime_;
}
inline float CDOTAUserMsg_TE_ProjectileLoc::expiretime() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.expireTime)
  return _internal_expiretime();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_expiretime(float value) {
  _has_bits_[0] |= 0x00000080u;
  expiretime_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_expiretime(float value) {
  _internal_set_expiretime(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.expireTime)
}

// optional .CMsgVector vTargetLoc = 10;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_vtargetloc() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || vtargetloc_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_vtargetloc() const {
  return _internal_has_vtargetloc();
}
inline const ::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::_internal_vtargetloc() const {
  const ::CMsgVector* p = vtargetloc_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::vtargetloc() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  return _internal_vtargetloc();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::unsafe_arena_set_allocated_vtargetloc(
    ::CMsgVector* vtargetloc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc_);
  }
  vtargetloc_ = vtargetloc;
  if (vtargetloc) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::release_vtargetloc() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = vtargetloc_;
  vtargetloc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::unsafe_arena_release_vtargetloc() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgVector* temp = vtargetloc_;
  vtargetloc_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::_internal_mutable_vtargetloc() {
  _has_bits_[0] |= 0x00000002u;
  if (vtargetloc_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    vtargetloc_ = p;
  }
  return vtargetloc_;
}
inline ::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::mutable_vtargetloc() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  return _internal_mutable_vtargetloc();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_allocated_vtargetloc(::CMsgVector* vtargetloc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc_);
  }
  if (vtargetloc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(vtargetloc)->GetArena();
    if (message_arena != submessage_arena) {
      vtargetloc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vtargetloc, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  vtargetloc_ = vtargetloc;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
}

// optional fixed32 colorgemcolor = 11;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_colorgemcolor() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_colorgemcolor() const {
  return _internal_has_colorgemcolor();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_colorgemcolor() {
  colorgemcolor_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TE_ProjectileLoc::_internal_colorgemcolor() const {
  return colorgemcolor_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TE_ProjectileLoc::colorgemcolor() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.colorgemcolor)
  return _internal_colorgemcolor();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  colorgemcolor_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_colorgemcolor(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_colorgemcolor(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.colorgemcolor)
}

// optional int32 launch_tick = 12;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_launch_tick() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_launch_tick() const {
  return _internal_has_launch_tick();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_launch_tick() {
  launch_tick_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_launch_tick() const {
  return launch_tick_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::launch_tick() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.launch_tick)
  return _internal_launch_tick();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  launch_tick_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_launch_tick(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_launch_tick(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.launch_tick)
}

// optional int32 handle = 13;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_handle() const {
  return _internal_has_handle();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_handle() {
  handle_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.handle)
  return _internal_handle();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000400u;
  handle_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.handle)
}

// optional int32 hSource = 14;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_hsource() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_hsource() const {
  return _internal_has_hsource();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_hsource() {
  hsource_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_hsource() const {
  return hsource_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::hsource() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.hSource)
  return _internal_hsource();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000800u;
  hsource_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_hsource(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hsource(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.hSource)
}

// optional int32 sourceAttachment = 15;
inline bool CDOTAUserMsg_TE_ProjectileLoc::_internal_has_sourceattachment() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_sourceattachment() const {
  return _internal_has_sourceattachment();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_sourceattachment() {
  sourceattachment_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::_internal_sourceattachment() const {
  return sourceattachment_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_ProjectileLoc::sourceattachment() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_ProjectileLoc.sourceAttachment)
  return _internal_sourceattachment();
}
inline void CDOTAUserMsg_TE_ProjectileLoc::_internal_set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00001000u;
  sourceattachment_ = value;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_sourceattachment(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sourceattachment(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_ProjectileLoc.sourceAttachment)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_DestroyProjectile

// optional int32 handle = 1;
inline bool CDOTAUserMsg_TE_DestroyProjectile::_internal_has_handle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_DestroyProjectile::has_handle() const {
  return _internal_has_handle();
}
inline void CDOTAUserMsg_TE_DestroyProjectile::clear_handle() {
  handle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_DestroyProjectile::_internal_handle() const {
  return handle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_DestroyProjectile::handle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_DestroyProjectile.handle)
  return _internal_handle();
}
inline void CDOTAUserMsg_TE_DestroyProjectile::_internal_set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  handle_ = value;
}
inline void CDOTAUserMsg_TE_DestroyProjectile::set_handle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_handle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_DestroyProjectile.handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_DotaBloodImpact

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::_internal_has_entity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_entity() const {
  return _internal_has_entity();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_entity() {
  entity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_DotaBloodImpact::_internal_entity() const {
  return entity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_DotaBloodImpact::entity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_DotaBloodImpact.entity)
  return _internal_entity();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::_internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entity_ = value;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_DotaBloodImpact.entity)
}

// optional float scale = 2;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::_internal_has_scale() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_scale() const {
  return _internal_has_scale();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_scale() {
  scale_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::_internal_scale() const {
  return scale_;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::scale() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_DotaBloodImpact.scale)
  return _internal_scale();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::_internal_set_scale(float value) {
  _has_bits_[0] |= 0x00000002u;
  scale_ = value;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_scale(float value) {
  _internal_set_scale(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_DotaBloodImpact.scale)
}

// optional float xnormal = 3;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::_internal_has_xnormal() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_xnormal() const {
  return _internal_has_xnormal();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_xnormal() {
  xnormal_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::_internal_xnormal() const {
  return xnormal_;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::xnormal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_DotaBloodImpact.xnormal)
  return _internal_xnormal();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::_internal_set_xnormal(float value) {
  _has_bits_[0] |= 0x00000004u;
  xnormal_ = value;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_xnormal(float value) {
  _internal_set_xnormal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_DotaBloodImpact.xnormal)
}

// optional float ynormal = 4;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::_internal_has_ynormal() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_ynormal() const {
  return _internal_has_ynormal();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_ynormal() {
  ynormal_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::_internal_ynormal() const {
  return ynormal_;
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::ynormal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_DotaBloodImpact.ynormal)
  return _internal_ynormal();
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::_internal_set_ynormal(float value) {
  _has_bits_[0] |= 0x00000008u;
  ynormal_ = value;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_ynormal(float value) {
  _internal_set_ynormal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_DotaBloodImpact.ynormal)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AbilityPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_AbilityPing::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.player_id)
}

// optional uint32 ability_id = 2;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_AbilityPing::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.ability_id)
}

// optional .DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
inline bool CDOTAUserMsg_AbilityPing::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_type() const {
  return _internal_has_type();
}
inline void CDOTAUserMsg_AbilityPing::clear_type() {
  type_ = 1;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::DOTA_ABILITY_PING_TYPE CDOTAUserMsg_AbilityPing::_internal_type() const {
  return static_cast< ::DOTA_ABILITY_PING_TYPE >(type_);
}
inline ::DOTA_ABILITY_PING_TYPE CDOTAUserMsg_AbilityPing::type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.type)
  return _internal_type();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_type(::DOTA_ABILITY_PING_TYPE value) {
  assert(::DOTA_ABILITY_PING_TYPE_IsValid(value));
  _has_bits_[0] |= 0x00001000u;
  type_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_type(::DOTA_ABILITY_PING_TYPE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.type)
}

// optional uint32 cooldown_seconds = 4;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_cooldown_seconds() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_cooldown_seconds() const {
  return _internal_has_cooldown_seconds();
}
inline void CDOTAUserMsg_AbilityPing::clear_cooldown_seconds() {
  cooldown_seconds_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_cooldown_seconds() const {
  return cooldown_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::cooldown_seconds() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.cooldown_seconds)
  return _internal_cooldown_seconds();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  cooldown_seconds_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_cooldown_seconds(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.cooldown_seconds)
}

// optional uint32 level = 5;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_level() const {
  return _internal_has_level();
}
inline void CDOTAUserMsg_AbilityPing::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.level)
  return _internal_level();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  level_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.level)
}

// optional bool passive = 6;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_passive() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_passive() const {
  return _internal_has_passive();
}
inline void CDOTAUserMsg_AbilityPing::clear_passive() {
  passive_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CDOTAUserMsg_AbilityPing::_internal_passive() const {
  return passive_;
}
inline bool CDOTAUserMsg_AbilityPing::passive() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.passive)
  return _internal_passive();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_passive(bool value) {
  _has_bits_[0] |= 0x00000080u;
  passive_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_passive(bool value) {
  _internal_set_passive(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.passive)
}

// optional uint32 mana_needed = 7;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_mana_needed() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_mana_needed() const {
  return _internal_has_mana_needed();
}
inline void CDOTAUserMsg_AbilityPing::clear_mana_needed() {
  mana_needed_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_mana_needed() const {
  return mana_needed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::mana_needed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.mana_needed)
  return _internal_mana_needed();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_mana_needed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  mana_needed_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_mana_needed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mana_needed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.mana_needed)
}

// optional uint32 entity_id = 8;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_entity_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_entity_id() const {
  return _internal_has_entity_id();
}
inline void CDOTAUserMsg_AbilityPing::clear_entity_id() {
  entity_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_entity_id() const {
  return entity_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::entity_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.entity_id)
  return _internal_entity_id();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  entity_id_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_entity_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.entity_id)
}

// optional int32 primary_charges = 9;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_primary_charges() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_primary_charges() const {
  return _internal_has_primary_charges();
}
inline void CDOTAUserMsg_AbilityPing::clear_primary_charges() {
  primary_charges_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AbilityPing::_internal_primary_charges() const {
  return primary_charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AbilityPing::primary_charges() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.primary_charges)
  return _internal_primary_charges();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  primary_charges_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_primary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_primary_charges(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.primary_charges)
}

// optional int32 secondary_charges = 10;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_secondary_charges() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_secondary_charges() const {
  return _internal_has_secondary_charges();
}
inline void CDOTAUserMsg_AbilityPing::clear_secondary_charges() {
  secondary_charges_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AbilityPing::_internal_secondary_charges() const {
  return secondary_charges_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AbilityPing::secondary_charges() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.secondary_charges)
  return _internal_secondary_charges();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  secondary_charges_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_secondary_charges(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_secondary_charges(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.secondary_charges)
}

// optional uint32 caster_id = 11;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_caster_id() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_caster_id() const {
  return _internal_has_caster_id();
}
inline void CDOTAUserMsg_AbilityPing::clear_caster_id() {
  caster_id_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::_internal_caster_id() const {
  return caster_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityPing::caster_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.caster_id)
  return _internal_caster_id();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_caster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  caster_id_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_caster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_caster_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.caster_id)
}

// optional bool ctrl_held = 12;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_ctrl_held() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_ctrl_held() const {
  return _internal_has_ctrl_held();
}
inline void CDOTAUserMsg_AbilityPing::clear_ctrl_held() {
  ctrl_held_ = false;
  _has_bits_[0] &= ~0x00000100u;
}
inline bool CDOTAUserMsg_AbilityPing::_internal_ctrl_held() const {
  return ctrl_held_;
}
inline bool CDOTAUserMsg_AbilityPing::ctrl_held() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.ctrl_held)
  return _internal_ctrl_held();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_ctrl_held(bool value) {
  _has_bits_[0] |= 0x00000100u;
  ctrl_held_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_ctrl_held(bool value) {
  _internal_set_ctrl_held(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.ctrl_held)
}

// optional float reclaim_time = 13;
inline bool CDOTAUserMsg_AbilityPing::_internal_has_reclaim_time() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityPing::has_reclaim_time() const {
  return _internal_has_reclaim_time();
}
inline void CDOTAUserMsg_AbilityPing::clear_reclaim_time() {
  reclaim_time_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float CDOTAUserMsg_AbilityPing::_internal_reclaim_time() const {
  return reclaim_time_;
}
inline float CDOTAUserMsg_AbilityPing::reclaim_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityPing.reclaim_time)
  return _internal_reclaim_time();
}
inline void CDOTAUserMsg_AbilityPing::_internal_set_reclaim_time(float value) {
  _has_bits_[0] |= 0x00000800u;
  reclaim_time_ = value;
}
inline void CDOTAUserMsg_AbilityPing::set_reclaim_time(float value) {
  _internal_set_reclaim_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityPing.reclaim_time)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_UnitAnimation

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_entity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_entity() const {
  return _internal_has_entity();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_entity() {
  entity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::_internal_entity() const {
  return entity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::entity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.entity)
  return _internal_entity();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entity_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.entity)
}

// optional int32 sequenceVariant = 2;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_sequencevariant() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_sequencevariant() const {
  return _internal_has_sequencevariant();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_sequencevariant() {
  sequencevariant_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::_internal_sequencevariant() const {
  return sequencevariant_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::sequencevariant() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.sequenceVariant)
  return _internal_sequencevariant();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_sequencevariant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  sequencevariant_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_sequencevariant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sequencevariant(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.sequenceVariant)
}

// optional float playbackrate = 3;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_playbackrate() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_playbackrate() const {
  return _internal_has_playbackrate();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_playbackrate() {
  playbackrate_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_TE_UnitAnimation::_internal_playbackrate() const {
  return playbackrate_;
}
inline float CDOTAUserMsg_TE_UnitAnimation::playbackrate() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.playbackrate)
  return _internal_playbackrate();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_playbackrate(float value) {
  _has_bits_[0] |= 0x00000004u;
  playbackrate_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_playbackrate(float value) {
  _internal_set_playbackrate(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.playbackrate)
}

// optional float castpoint = 4;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_castpoint() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_castpoint() const {
  return _internal_has_castpoint();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_castpoint() {
  castpoint_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_TE_UnitAnimation::_internal_castpoint() const {
  return castpoint_;
}
inline float CDOTAUserMsg_TE_UnitAnimation::castpoint() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.castpoint)
  return _internal_castpoint();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_castpoint(float value) {
  _has_bits_[0] |= 0x00000008u;
  castpoint_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_castpoint(float value) {
  _internal_set_castpoint(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.castpoint)
}

// optional int32 type = 5;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_type() const {
  return _internal_has_type();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.type)
  return _internal_type();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  type_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.type)
}

// optional int32 activity = 6;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_activity() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_activity() const {
  return _internal_has_activity();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_activity() {
  activity_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::_internal_activity() const {
  return activity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimation::activity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.activity)
  return _internal_activity();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  activity_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_activity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_activity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.activity)
}

// optional float lag_compensation_time = 7;
inline bool CDOTAUserMsg_TE_UnitAnimation::_internal_has_lag_compensation_time() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimation::has_lag_compensation_time() const {
  return _internal_has_lag_compensation_time();
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_lag_compensation_time() {
  lag_compensation_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CDOTAUserMsg_TE_UnitAnimation::_internal_lag_compensation_time() const {
  return lag_compensation_time_;
}
inline float CDOTAUserMsg_TE_UnitAnimation::lag_compensation_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimation.lag_compensation_time)
  return _internal_lag_compensation_time();
}
inline void CDOTAUserMsg_TE_UnitAnimation::_internal_set_lag_compensation_time(float value) {
  _has_bits_[0] |= 0x00000040u;
  lag_compensation_time_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_lag_compensation_time(float value) {
  _internal_set_lag_compensation_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimation.lag_compensation_time)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_UnitAnimationEnd

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::_internal_has_entity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::has_entity() const {
  return _internal_has_entity();
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_entity() {
  entity_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimationEnd::_internal_entity() const {
  return entity_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TE_UnitAnimationEnd::entity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimationEnd.entity)
  return _internal_entity();
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::_internal_set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  entity_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_entity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_entity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimationEnd.entity)
}

// optional bool snap = 2;
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::_internal_has_snap() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::has_snap() const {
  return _internal_has_snap();
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_snap() {
  snap_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::_internal_snap() const {
  return snap_;
}
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::snap() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TE_UnitAnimationEnd.snap)
  return _internal_snap();
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::_internal_set_snap(bool value) {
  _has_bits_[0] |= 0x00000002u;
  snap_ = value;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_snap(bool value) {
  _internal_set_snap(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TE_UnitAnimationEnd.snap)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ShowGenericPopup

// required string header = 1;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_header() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_header() const {
  return _internal_has_header();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_header() {
  header_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::header() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.header)
  return _internal_header();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const std::string& value) {
  _internal_set_header(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.header)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::mutable_header() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowGenericPopup.header)
  return _internal_mutable_header();
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::_internal_header() const {
  return header_.Get();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_header(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  header_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  header_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowGenericPopup.header)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  header_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowGenericPopup.header)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  header_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowGenericPopup.header)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::_internal_mutable_header() {
  _has_bits_[0] |= 0x00000001u;
  return header_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::release_header() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowGenericPopup.header)
  if (!_internal_has_header()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return header_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_header(std::string* header) {
  if (header != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  header_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), header,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowGenericPopup.header)
}

// required string body = 2;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_body() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_body() const {
  return _internal_has_body();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_body() {
  body_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::body() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.body)
  return _internal_body();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const std::string& value) {
  _internal_set_body(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.body)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::mutable_body() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowGenericPopup.body)
  return _internal_mutable_body();
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::_internal_body() const {
  return body_.Get();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_body(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  body_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowGenericPopup.body)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowGenericPopup.body)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  body_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowGenericPopup.body)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::_internal_mutable_body() {
  _has_bits_[0] |= 0x00000002u;
  return body_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::release_body() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowGenericPopup.body)
  if (!_internal_has_body()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return body_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_body(std::string* body) {
  if (body != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  body_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), body,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowGenericPopup.body)
}

// optional string param1 = 3;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_param1() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_param1() const {
  return _internal_has_param1();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_param1() {
  param1_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::param1() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.param1)
  return _internal_param1();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const std::string& value) {
  _internal_set_param1(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.param1)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::mutable_param1() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowGenericPopup.param1)
  return _internal_mutable_param1();
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::_internal_param1() const {
  return param1_.Get();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_param1(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  param1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  param1_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowGenericPopup.param1)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  param1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowGenericPopup.param1)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  param1_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowGenericPopup.param1)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::_internal_mutable_param1() {
  _has_bits_[0] |= 0x00000004u;
  return param1_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::release_param1() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowGenericPopup.param1)
  if (!_internal_has_param1()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return param1_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_param1(std::string* param1) {
  if (param1 != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  param1_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), param1,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowGenericPopup.param1)
}

// optional string param2 = 4;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_param2() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_param2() const {
  return _internal_has_param2();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_param2() {
  param2_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::param2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.param2)
  return _internal_param2();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const std::string& value) {
  _internal_set_param2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.param2)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::mutable_param2() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShowGenericPopup.param2)
  return _internal_mutable_param2();
}
inline const std::string& CDOTAUserMsg_ShowGenericPopup::_internal_param2() const {
  return param2_.Get();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_param2(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  param2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShowGenericPopup.param2)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShowGenericPopup.param2)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShowGenericPopup.param2)
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::_internal_mutable_param2() {
  _has_bits_[0] |= 0x00000008u;
  return param2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShowGenericPopup::release_param2() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShowGenericPopup.param2)
  if (!_internal_has_param2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return param2_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_param2(std::string* param2) {
  if (param2 != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  param2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), param2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShowGenericPopup.param2)
}

// optional bool tint_screen = 5;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_tint_screen() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_tint_screen() const {
  return _internal_has_tint_screen();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_tint_screen() {
  tint_screen_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_tint_screen() const {
  return tint_screen_;
}
inline bool CDOTAUserMsg_ShowGenericPopup::tint_screen() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.tint_screen)
  return _internal_tint_screen();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_tint_screen(bool value) {
  _has_bits_[0] |= 0x00000010u;
  tint_screen_ = value;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_tint_screen(bool value) {
  _internal_set_tint_screen(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.tint_screen)
}

// optional bool show_no_other_dialogs = 6;
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_has_show_no_other_dialogs() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShowGenericPopup::has_show_no_other_dialogs() const {
  return _internal_has_show_no_other_dialogs();
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_show_no_other_dialogs() {
  show_no_other_dialogs_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_ShowGenericPopup::_internal_show_no_other_dialogs() const {
  return show_no_other_dialogs_;
}
inline bool CDOTAUserMsg_ShowGenericPopup::show_no_other_dialogs() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShowGenericPopup.show_no_other_dialogs)
  return _internal_show_no_other_dialogs();
}
inline void CDOTAUserMsg_ShowGenericPopup::_internal_set_show_no_other_dialogs(bool value) {
  _has_bits_[0] |= 0x00000020u;
  show_no_other_dialogs_ = value;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_show_no_other_dialogs(bool value) {
  _internal_set_show_no_other_dialogs(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShowGenericPopup.show_no_other_dialogs)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteStart

// optional string title = 1;
inline bool CDOTAUserMsg_VoteStart::_internal_has_title() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VoteStart::has_title() const {
  return _internal_has_title();
}
inline void CDOTAUserMsg_VoteStart::clear_title() {
  title_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_VoteStart::title() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteStart.title)
  return _internal_title();
}
inline void CDOTAUserMsg_VoteStart::set_title(const std::string& value) {
  _internal_set_title(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteStart.title)
}
inline std::string* CDOTAUserMsg_VoteStart::mutable_title() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_VoteStart.title)
  return _internal_mutable_title();
}
inline const std::string& CDOTAUserMsg_VoteStart::_internal_title() const {
  return title_.Get();
}
inline void CDOTAUserMsg_VoteStart::_internal_set_title(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_VoteStart::set_title(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_VoteStart.title)
}
inline void CDOTAUserMsg_VoteStart::set_title(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_VoteStart.title)
}
inline void CDOTAUserMsg_VoteStart::set_title(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  title_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_VoteStart.title)
}
inline std::string* CDOTAUserMsg_VoteStart::_internal_mutable_title() {
  _has_bits_[0] |= 0x00000001u;
  return title_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_VoteStart::release_title() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_VoteStart.title)
  if (!_internal_has_title()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return title_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_VoteStart::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  title_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), title,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_VoteStart.title)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_VoteStart::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VoteStart::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_VoteStart::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_VoteStart::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_VoteStart::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteStart.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_VoteStart::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000002u;
  duration_ = value;
}
inline void CDOTAUserMsg_VoteStart::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteStart.duration)
}

// optional int32 choice_count = 3;
inline bool CDOTAUserMsg_VoteStart::_internal_has_choice_count() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VoteStart::has_choice_count() const {
  return _internal_has_choice_count();
}
inline void CDOTAUserMsg_VoteStart::clear_choice_count() {
  choice_count_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteStart::_internal_choice_count() const {
  return choice_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteStart::choice_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteStart.choice_count)
  return _internal_choice_count();
}
inline void CDOTAUserMsg_VoteStart::_internal_set_choice_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  choice_count_ = value;
}
inline void CDOTAUserMsg_VoteStart::set_choice_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_choice_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteStart.choice_count)
}

// repeated string choices = 4;
inline int CDOTAUserMsg_VoteStart::_internal_choices_size() const {
  return choices_.size();
}
inline int CDOTAUserMsg_VoteStart::choices_size() const {
  return _internal_choices_size();
}
inline void CDOTAUserMsg_VoteStart::clear_choices() {
  choices_.Clear();
}
inline std::string* CDOTAUserMsg_VoteStart::add_choices() {
  // @@protoc_insertion_point(field_add_mutable:CDOTAUserMsg_VoteStart.choices)
  return _internal_add_choices();
}
inline const std::string& CDOTAUserMsg_VoteStart::_internal_choices(int index) const {
  return choices_.Get(index);
}
inline const std::string& CDOTAUserMsg_VoteStart::choices(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteStart.choices)
  return _internal_choices(index);
}
inline std::string* CDOTAUserMsg_VoteStart::mutable_choices(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_VoteStart.choices)
  return choices_.Mutable(index);
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteStart.choices)
  choices_.Mutable(index)->assign(value);
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteStart.choices)
  choices_.Mutable(index)->assign(std::move(value));
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  choices_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const char* value, size_t size) {
  choices_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_VoteStart.choices)
}
inline std::string* CDOTAUserMsg_VoteStart::_internal_add_choices() {
  return choices_.Add();
}
inline void CDOTAUserMsg_VoteStart::add_choices(const std::string& value) {
  choices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::add_choices(std::string&& value) {
  choices_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::add_choices(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  choices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::add_choices(const char* value, size_t size) {
  choices_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CDOTAUserMsg_VoteStart.choices)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CDOTAUserMsg_VoteStart::choices() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_VoteStart.choices)
  return choices_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CDOTAUserMsg_VoteStart::mutable_choices() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_VoteStart.choices)
  return &choices_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteUpdate

// repeated int32 choice_counts = 1;
inline int CDOTAUserMsg_VoteUpdate::_internal_choice_counts_size() const {
  return choice_counts_.size();
}
inline int CDOTAUserMsg_VoteUpdate::choice_counts_size() const {
  return _internal_choice_counts_size();
}
inline void CDOTAUserMsg_VoteUpdate::clear_choice_counts() {
  choice_counts_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteUpdate::_internal_choice_counts(int index) const {
  return choice_counts_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteUpdate::choice_counts(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteUpdate.choice_counts)
  return _internal_choice_counts(index);
}
inline void CDOTAUserMsg_VoteUpdate::set_choice_counts(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  choice_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteUpdate.choice_counts)
}
inline void CDOTAUserMsg_VoteUpdate::_internal_add_choice_counts(::PROTOBUF_NAMESPACE_ID::int32 value) {
  choice_counts_.Add(value);
}
inline void CDOTAUserMsg_VoteUpdate::add_choice_counts(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_choice_counts(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_VoteUpdate.choice_counts)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_VoteUpdate::_internal_choice_counts() const {
  return choice_counts_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_VoteUpdate::choice_counts() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_VoteUpdate.choice_counts)
  return _internal_choice_counts();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_VoteUpdate::_internal_mutable_choice_counts() {
  return &choice_counts_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_VoteUpdate::mutable_choice_counts() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_VoteUpdate.choice_counts)
  return _internal_mutable_choice_counts();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteEnd

// optional int32 selected_choice = 1;
inline bool CDOTAUserMsg_VoteEnd::_internal_has_selected_choice() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VoteEnd::has_selected_choice() const {
  return _internal_has_selected_choice();
}
inline void CDOTAUserMsg_VoteEnd::clear_selected_choice() {
  selected_choice_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteEnd::_internal_selected_choice() const {
  return selected_choice_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_VoteEnd::selected_choice() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VoteEnd.selected_choice)
  return _internal_selected_choice();
}
inline void CDOTAUserMsg_VoteEnd::_internal_set_selected_choice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  selected_choice_ = value;
}
inline void CDOTAUserMsg_VoteEnd::set_selected_choice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_selected_choice(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VoteEnd.selected_choice)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BoosterStatePlayer

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_BoosterStatePlayer::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BoosterStatePlayer::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterStatePlayer.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BoosterStatePlayer.player_id)
}

// optional float bonus = 2;
inline bool CDOTAUserMsg_BoosterStatePlayer::_internal_has_bonus() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BoosterStatePlayer::has_bonus() const {
  return _internal_has_bonus();
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_bonus() {
  bonus_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_BoosterStatePlayer::_internal_bonus() const {
  return bonus_;
}
inline float CDOTAUserMsg_BoosterStatePlayer::bonus() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterStatePlayer.bonus)
  return _internal_bonus();
}
inline void CDOTAUserMsg_BoosterStatePlayer::_internal_set_bonus(float value) {
  _has_bits_[0] |= 0x00000002u;
  bonus_ = value;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_bonus(float value) {
  _internal_set_bonus(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BoosterStatePlayer.bonus)
}

// optional float event_bonus = 3;
inline bool CDOTAUserMsg_BoosterStatePlayer::_internal_has_event_bonus() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BoosterStatePlayer::has_event_bonus() const {
  return _internal_has_event_bonus();
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_event_bonus() {
  event_bonus_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_BoosterStatePlayer::_internal_event_bonus() const {
  return event_bonus_;
}
inline float CDOTAUserMsg_BoosterStatePlayer::event_bonus() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterStatePlayer.event_bonus)
  return _internal_event_bonus();
}
inline void CDOTAUserMsg_BoosterStatePlayer::_internal_set_event_bonus(float value) {
  _has_bits_[0] |= 0x00000004u;
  event_bonus_ = value;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_event_bonus(float value) {
  _internal_set_event_bonus(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BoosterStatePlayer.event_bonus)
}

// optional uint32 bonus_item_id = 4;
inline bool CDOTAUserMsg_BoosterStatePlayer::_internal_has_bonus_item_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BoosterStatePlayer::has_bonus_item_id() const {
  return _internal_has_bonus_item_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_bonus_item_id() {
  bonus_item_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::_internal_bonus_item_id() const {
  return bonus_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::bonus_item_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterStatePlayer.bonus_item_id)
  return _internal_bonus_item_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::_internal_set_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  bonus_item_id_ = value;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_bonus_item_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BoosterStatePlayer.bonus_item_id)
}

// optional uint32 event_bonus_item_id = 5;
inline bool CDOTAUserMsg_BoosterStatePlayer::_internal_has_event_bonus_item_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BoosterStatePlayer::has_event_bonus_item_id() const {
  return _internal_has_event_bonus_item_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_event_bonus_item_id() {
  event_bonus_item_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::_internal_event_bonus_item_id() const {
  return event_bonus_item_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BoosterStatePlayer::event_bonus_item_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterStatePlayer.event_bonus_item_id)
  return _internal_event_bonus_item_id();
}
inline void CDOTAUserMsg_BoosterStatePlayer::_internal_set_event_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  event_bonus_item_id_ = value;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_event_bonus_item_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_bonus_item_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BoosterStatePlayer.event_bonus_item_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BoosterState

// repeated .CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
inline int CDOTAUserMsg_BoosterState::_internal_boosted_players_size() const {
  return boosted_players_.size();
}
inline int CDOTAUserMsg_BoosterState::boosted_players_size() const {
  return _internal_boosted_players_size();
}
inline void CDOTAUserMsg_BoosterState::clear_boosted_players() {
  boosted_players_.Clear();
}
inline ::CDOTAUserMsg_BoosterStatePlayer* CDOTAUserMsg_BoosterState::mutable_boosted_players(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_BoosterStatePlayer >*
CDOTAUserMsg_BoosterState::mutable_boosted_players() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_BoosterState.boosted_players)
  return &boosted_players_;
}
inline const ::CDOTAUserMsg_BoosterStatePlayer& CDOTAUserMsg_BoosterState::_internal_boosted_players(int index) const {
  return boosted_players_.Get(index);
}
inline const ::CDOTAUserMsg_BoosterStatePlayer& CDOTAUserMsg_BoosterState::boosted_players(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BoosterState.boosted_players)
  return _internal_boosted_players(index);
}
inline ::CDOTAUserMsg_BoosterStatePlayer* CDOTAUserMsg_BoosterState::_internal_add_boosted_players() {
  return boosted_players_.Add();
}
inline ::CDOTAUserMsg_BoosterStatePlayer* CDOTAUserMsg_BoosterState::add_boosted_players() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_BoosterState.boosted_players)
  return _internal_add_boosted_players();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_BoosterStatePlayer >&
CDOTAUserMsg_BoosterState::boosted_players() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PlayerMMR

// repeated sint32 mmr = 1 [packed = true];
inline int CDOTAUserMsg_PlayerMMR::_internal_mmr_size() const {
  return mmr_.size();
}
inline int CDOTAUserMsg_PlayerMMR::mmr_size() const {
  return _internal_mmr_size();
}
inline void CDOTAUserMsg_PlayerMMR::clear_mmr() {
  mmr_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_PlayerMMR::_internal_mmr(int index) const {
  return mmr_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_PlayerMMR::mmr(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PlayerMMR.mmr)
  return _internal_mmr(index);
}
inline void CDOTAUserMsg_PlayerMMR::set_mmr(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  mmr_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PlayerMMR.mmr)
}
inline void CDOTAUserMsg_PlayerMMR::_internal_add_mmr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  mmr_.Add(value);
}
inline void CDOTAUserMsg_PlayerMMR::add_mmr(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_mmr(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_PlayerMMR.mmr)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_PlayerMMR::_internal_mmr() const {
  return mmr_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_PlayerMMR::mmr() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_PlayerMMR.mmr)
  return _internal_mmr();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_PlayerMMR::_internal_mutable_mmr() {
  return &mmr_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_PlayerMMR::mutable_mmr() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_PlayerMMR.mmr)
  return _internal_mutable_mmr();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AbilitySteal

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_AbilitySteal::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilitySteal::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_AbilitySteal::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilitySteal.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_AbilitySteal::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_AbilitySteal::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilitySteal.player_id)
}

// optional uint32 ability_id = 2;
inline bool CDOTAUserMsg_AbilitySteal::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilitySteal::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_AbilitySteal::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilitySteal.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_AbilitySteal::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_AbilitySteal::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilitySteal.ability_id)
}

// optional uint32 ability_level = 3;
inline bool CDOTAUserMsg_AbilitySteal::_internal_has_ability_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilitySteal::has_ability_level() const {
  return _internal_has_ability_level();
}
inline void CDOTAUserMsg_AbilitySteal::clear_ability_level() {
  ability_level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::_internal_ability_level() const {
  return ability_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilitySteal::ability_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilitySteal.ability_level)
  return _internal_ability_level();
}
inline void CDOTAUserMsg_AbilitySteal::_internal_set_ability_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ability_level_ = value;
}
inline void CDOTAUserMsg_AbilitySteal::set_ability_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilitySteal.ability_level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroLookup

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_StatsHeroLookup::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroLookup::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsHeroLookup::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsHeroLookup::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroLookup.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_StatsHeroLookup::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroLookup.player_id)
}

// optional int32 hero_id = 2;
inline bool CDOTAUserMsg_StatsHeroLookup::_internal_has_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroLookup::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_hero_id() {
  hero_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsHeroLookup::_internal_hero_id() const {
  return hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsHeroLookup::hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroLookup.hero_id)
  return _internal_hero_id();
}
inline void CDOTAUserMsg_StatsHeroLookup::_internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_id_ = value;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroLookup.hero_id)
}

// optional string hero_name = 3;
inline bool CDOTAUserMsg_StatsHeroLookup::_internal_has_hero_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroLookup::has_hero_name() const {
  return _internal_has_hero_name();
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_hero_name() {
  hero_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_StatsHeroLookup::hero_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroLookup.hero_name)
  return _internal_hero_name();
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const std::string& value) {
  _internal_set_hero_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::mutable_hero_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsHeroLookup.hero_name)
  return _internal_mutable_hero_name();
}
inline const std::string& CDOTAUserMsg_StatsHeroLookup::_internal_hero_name() const {
  return hero_name_.Get();
}
inline void CDOTAUserMsg_StatsHeroLookup::_internal_set_hero_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::_internal_mutable_hero_name() {
  _has_bits_[0] |= 0x00000001u;
  return hero_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::release_hero_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_StatsHeroLookup.hero_name)
  if (!_internal_has_hero_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hero_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_allocated_hero_name(std::string* hero_name) {
  if (hero_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hero_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hero_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_StatsHeroLookup.hero_name)
}

// optional string persona = 4;
inline bool CDOTAUserMsg_StatsHeroLookup::_internal_has_persona() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroLookup::has_persona() const {
  return _internal_has_persona();
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_persona() {
  persona_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_StatsHeroLookup::persona() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroLookup.persona)
  return _internal_persona();
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const std::string& value) {
  _internal_set_persona(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroLookup.persona)
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::mutable_persona() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsHeroLookup.persona)
  return _internal_mutable_persona();
}
inline const std::string& CDOTAUserMsg_StatsHeroLookup::_internal_persona() const {
  return persona_.Get();
}
inline void CDOTAUserMsg_StatsHeroLookup::_internal_set_persona(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  persona_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  persona_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_StatsHeroLookup.persona)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  persona_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_StatsHeroLookup.persona)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  persona_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_StatsHeroLookup.persona)
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::_internal_mutable_persona() {
  _has_bits_[0] |= 0x00000002u;
  return persona_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_StatsHeroLookup::release_persona() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_StatsHeroLookup.persona)
  if (!_internal_has_persona()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return persona_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_allocated_persona(std::string* persona) {
  if (persona != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  persona_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), persona,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_StatsHeroLookup.persona)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroPositionInfo_PositionPair

// optional .DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_has_position_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::has_position_category() const {
  return _internal_has_position_category();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_position_category() {
  position_category_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::DOTA_POSITION_CATEGORY CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_position_category() const {
  return static_cast< ::DOTA_POSITION_CATEGORY >(position_category_);
}
inline ::DOTA_POSITION_CATEGORY CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::position_category() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_category)
  return _internal_position_category();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_set_position_category(::DOTA_POSITION_CATEGORY value) {
  assert(::DOTA_POSITION_CATEGORY_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  position_category_ = value;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_position_category(::DOTA_POSITION_CATEGORY value) {
  _internal_set_position_category(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_category)
}

// optional uint32 position_count = 2;
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_has_position_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::has_position_count() const {
  return _internal_has_position_count();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_position_count() {
  position_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_position_count() const {
  return position_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::position_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_count)
  return _internal_position_count();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::_internal_set_position_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  position_count_ = value;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_position_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_position_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_count)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroPositionInfo

// optional float average_position = 1;
inline bool CDOTAUserMsg_StatsHeroPositionInfo::_internal_has_average_position() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroPositionInfo::has_average_position() const {
  return _internal_has_average_position();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::clear_average_position() {
  average_position_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float CDOTAUserMsg_StatsHeroPositionInfo::_internal_average_position() const {
  return average_position_;
}
inline float CDOTAUserMsg_StatsHeroPositionInfo::average_position() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroPositionInfo.average_position)
  return _internal_average_position();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::_internal_set_average_position(float value) {
  _has_bits_[0] |= 0x00000001u;
  average_position_ = value;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::set_average_position(float value) {
  _internal_set_average_position(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroPositionInfo.average_position)
}

// repeated .CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
inline int CDOTAUserMsg_StatsHeroPositionInfo::_internal_position_details_size() const {
  return position_details_.size();
}
inline int CDOTAUserMsg_StatsHeroPositionInfo::position_details_size() const {
  return _internal_position_details_size();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::clear_position_details() {
  position_details_.Clear();
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* CDOTAUserMsg_StatsHeroPositionInfo::mutable_position_details(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >*
CDOTAUserMsg_StatsHeroPositionInfo::mutable_position_details() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return &position_details_;
}
inline const ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& CDOTAUserMsg_StatsHeroPositionInfo::_internal_position_details(int index) const {
  return position_details_.Get(index);
}
inline const ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& CDOTAUserMsg_StatsHeroPositionInfo::position_details(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return _internal_position_details(index);
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* CDOTAUserMsg_StatsHeroPositionInfo::_internal_add_position_details() {
  return position_details_.Add();
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* CDOTAUserMsg_StatsHeroPositionInfo::add_position_details() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return _internal_add_position_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >&
CDOTAUserMsg_StatsHeroPositionInfo::position_details() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroMinuteDetails

// optional uint32 last_hits = 1;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_last_hits() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_last_hits() const {
  return _internal_has_last_hits();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_last_hits() {
  last_hits_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_last_hits() const {
  return last_hits_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::last_hits() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.last_hits)
  return _internal_last_hits();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  last_hits_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_last_hits(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_last_hits(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.last_hits)
}

// optional uint32 hero_kills = 2;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_hero_kills() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_hero_kills() const {
  return _internal_has_hero_kills();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_hero_kills() {
  hero_kills_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_hero_kills() const {
  return hero_kills_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::hero_kills() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.hero_kills)
  return _internal_hero_kills();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_hero_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_kills_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_hero_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_kills(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.hero_kills)
}

// optional uint32 hero_damage = 3;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_hero_damage() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_hero_damage() const {
  return _internal_has_hero_damage();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_hero_damage() {
  hero_damage_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_hero_damage() const {
  return hero_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::hero_damage() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.hero_damage)
  return _internal_hero_damage();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_hero_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  hero_damage_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_hero_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_damage(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.hero_damage)
}

// optional uint32 tower_damage = 4;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_tower_damage() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_tower_damage() const {
  return _internal_has_tower_damage();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_tower_damage() {
  tower_damage_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_tower_damage() const {
  return tower_damage_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::tower_damage() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.tower_damage)
  return _internal_tower_damage();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_tower_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  tower_damage_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_tower_damage(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tower_damage(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.tower_damage)
}

// optional .CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_position_info() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || position_info_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_position_info() const {
  return _internal_has_position_info();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_position_info() {
  if (position_info_ != nullptr) position_info_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CDOTAUserMsg_StatsHeroPositionInfo& CDOTAUserMsg_StatsHeroMinuteDetails::_internal_position_info() const {
  const ::CDOTAUserMsg_StatsHeroPositionInfo* p = position_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_StatsHeroPositionInfo&>(
      ::_CDOTAUserMsg_StatsHeroPositionInfo_default_instance_);
}
inline const ::CDOTAUserMsg_StatsHeroPositionInfo& CDOTAUserMsg_StatsHeroMinuteDetails::position_info() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  return _internal_position_info();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::unsafe_arena_set_allocated_position_info(
    ::CDOTAUserMsg_StatsHeroPositionInfo* position_info) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_info_);
  }
  position_info_ = position_info;
  if (position_info) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::release_position_info() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_StatsHeroPositionInfo* temp = position_info_;
  position_info_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::unsafe_arena_release_position_info() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_StatsHeroPositionInfo* temp = position_info_;
  position_info_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mutable_position_info() {
  _has_bits_[0] |= 0x00000001u;
  if (position_info_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_StatsHeroPositionInfo>(GetArena());
    position_info_ = p;
  }
  return position_info_;
}
inline ::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::mutable_position_info() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  return _internal_mutable_position_info();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_allocated_position_info(::CDOTAUserMsg_StatsHeroPositionInfo* position_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete position_info_;
  }
  if (position_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(position_info);
    if (message_arena != submessage_arena) {
      position_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position_info, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  position_info_ = position_info;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
}

// optional uint32 total_xp = 6;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_total_xp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_total_xp() const {
  return _internal_has_total_xp();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_total_xp() {
  total_xp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_total_xp() const {
  return total_xp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::total_xp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.total_xp)
  return _internal_total_xp();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_total_xp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  total_xp_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_total_xp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_xp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.total_xp)
}

// optional uint32 net_worth = 7;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_net_worth() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_net_worth() const {
  return _internal_has_net_worth();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_net_worth() {
  net_worth_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_net_worth() const {
  return net_worth_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::net_worth() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.net_worth)
  return _internal_net_worth();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  net_worth_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_net_worth(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_net_worth(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.net_worth)
}

// optional uint32 harvested_creep_gold = 8;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_harvested_creep_gold() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_harvested_creep_gold() const {
  return _internal_has_harvested_creep_gold();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_harvested_creep_gold() {
  harvested_creep_gold_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_harvested_creep_gold() const {
  return harvested_creep_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::harvested_creep_gold() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.harvested_creep_gold)
  return _internal_harvested_creep_gold();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_harvested_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  harvested_creep_gold_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_harvested_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_harvested_creep_gold(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.harvested_creep_gold)
}

// optional uint32 claimed_farm = 9;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_claimed_farm() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_claimed_farm() const {
  return _internal_has_claimed_farm();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_claimed_farm() {
  claimed_farm_ = 0u;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_claimed_farm() const {
  return claimed_farm_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::claimed_farm() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.claimed_farm)
  return _internal_claimed_farm();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_claimed_farm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000100u;
  claimed_farm_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_claimed_farm(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_claimed_farm(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.claimed_farm)
}

// optional uint32 wards_placed = 10;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_wards_placed() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_wards_placed() const {
  return _internal_has_wards_placed();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_wards_placed() {
  wards_placed_ = 0u;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_wards_placed() const {
  return wards_placed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::wards_placed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.wards_placed)
  return _internal_wards_placed();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_wards_placed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000200u;
  wards_placed_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_wards_placed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_wards_placed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.wards_placed)
}

// optional uint32 runes_collected = 11;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_runes_collected() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_runes_collected() const {
  return _internal_has_runes_collected();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_runes_collected() {
  runes_collected_ = 0u;
  _has_bits_[0] &= ~0x00000400u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_runes_collected() const {
  return runes_collected_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::runes_collected() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.runes_collected)
  return _internal_runes_collected();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_runes_collected(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000400u;
  runes_collected_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_runes_collected(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_runes_collected(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.runes_collected)
}

// optional uint32 tps_used = 12;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::_internal_has_tps_used() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_tps_used() const {
  return _internal_has_tps_used();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_tps_used() {
  tps_used_ = 0u;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_tps_used() const {
  return tps_used_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::tps_used() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.tps_used)
  return _internal_tps_used();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_set_tps_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000800u;
  tps_used_ = value;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_tps_used(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tps_used(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.tps_used)
}

// repeated uint32 mana_spent = 13;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mana_spent_size() const {
  return mana_spent_.size();
}
inline int CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent_size() const {
  return _internal_mana_spent_size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_mana_spent() {
  mana_spent_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mana_spent(int index) const {
  return mana_spent_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return _internal_mana_spent(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_mana_spent(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  mana_spent_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_add_mana_spent(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  mana_spent_.Add(value);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_mana_spent(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_mana_spent(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mana_spent() const {
  return mana_spent_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return _internal_mana_spent();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mutable_mana_spent() {
  return &mana_spent_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_mana_spent() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return _internal_mutable_mana_spent();
}

// repeated uint32 damage_absorbed = 14;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_absorbed_size() const {
  return damage_absorbed_.size();
}
inline int CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed_size() const {
  return _internal_damage_absorbed_size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_damage_absorbed() {
  damage_absorbed_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_absorbed(int index) const {
  return damage_absorbed_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return _internal_damage_absorbed(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_damage_absorbed(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  damage_absorbed_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_add_damage_absorbed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  damage_absorbed_.Add(value);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_damage_absorbed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_damage_absorbed(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_absorbed() const {
  return damage_absorbed_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return _internal_damage_absorbed();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mutable_damage_absorbed() {
  return &damage_absorbed_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_damage_absorbed() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return _internal_mutable_damage_absorbed();
}

// repeated uint32 damage_done = 15;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_done_size() const {
  return damage_done_.size();
}
inline int CDOTAUserMsg_StatsHeroMinuteDetails::damage_done_size() const {
  return _internal_damage_done_size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_damage_done() {
  damage_done_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_done(int index) const {
  return damage_done_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::damage_done(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return _internal_damage_done(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_damage_done(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  damage_done_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::_internal_add_damage_done(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  damage_done_.Add(value);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_damage_done(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_damage_done(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_damage_done() const {
  return damage_done_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::damage_done() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return _internal_damage_done();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::_internal_mutable_damage_done() {
  return &damage_done_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_damage_done() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return _internal_mutable_damage_done();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance

// optional uint32 location_category = 1;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_has_location_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_location_category() const {
  return _internal_has_location_category();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_location_category() {
  location_category_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_location_category() const {
  return location_category_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::location_category() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.location_category)
  return _internal_location_category();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_set_location_category(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  location_category_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_location_category(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_location_category(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.location_category)
}

// optional uint32 stat_type = 2;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_has_stat_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_stat_type() const {
  return _internal_has_stat_type();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_stat_type() {
  stat_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_stat_type() const {
  return stat_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::stat_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.stat_type)
  return _internal_stat_type();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_set_stat_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  stat_type_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_stat_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_stat_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.stat_type)
}

// optional uint32 value = 3;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.value)
  return _internal_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.value)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsTeamMinuteDetails

// repeated .CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
inline int CDOTAUserMsg_StatsTeamMinuteDetails::_internal_player_stats_size() const {
  return player_stats_.size();
}
inline int CDOTAUserMsg_StatsTeamMinuteDetails::player_stats_size() const {
  return _internal_player_stats_size();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_player_stats() {
  player_stats_.Clear();
}
inline ::CDOTAUserMsg_StatsHeroMinuteDetails* CDOTAUserMsg_StatsTeamMinuteDetails::mutable_player_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroMinuteDetails >*
CDOTAUserMsg_StatsTeamMinuteDetails::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return &player_stats_;
}
inline const ::CDOTAUserMsg_StatsHeroMinuteDetails& CDOTAUserMsg_StatsTeamMinuteDetails::_internal_player_stats(int index) const {
  return player_stats_.Get(index);
}
inline const ::CDOTAUserMsg_StatsHeroMinuteDetails& CDOTAUserMsg_StatsTeamMinuteDetails::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return _internal_player_stats(index);
}
inline ::CDOTAUserMsg_StatsHeroMinuteDetails* CDOTAUserMsg_StatsTeamMinuteDetails::_internal_add_player_stats() {
  return player_stats_.Add();
}
inline ::CDOTAUserMsg_StatsHeroMinuteDetails* CDOTAUserMsg_StatsTeamMinuteDetails::add_player_stats() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return _internal_add_player_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroMinuteDetails >&
CDOTAUserMsg_StatsTeamMinuteDetails::player_stats() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_;
}

// optional uint32 tower_kills = 2;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_tower_kills() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_tower_kills() const {
  return _internal_has_tower_kills();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_tower_kills() {
  tower_kills_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_tower_kills() const {
  return tower_kills_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::tower_kills() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.tower_kills)
  return _internal_tower_kills();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_tower_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  tower_kills_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_tower_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tower_kills(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.tower_kills)
}

// optional uint32 barrack_kills = 3;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_barrack_kills() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_barrack_kills() const {
  return _internal_has_barrack_kills();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_barrack_kills() {
  barrack_kills_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_barrack_kills() const {
  return barrack_kills_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::barrack_kills() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.barrack_kills)
  return _internal_barrack_kills();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_barrack_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  barrack_kills_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_barrack_kills(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_barrack_kills(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.barrack_kills)
}

// optional uint32 available_lane_creep_gold = 4;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_available_lane_creep_gold() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_available_lane_creep_gold() const {
  return _internal_has_available_lane_creep_gold();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_available_lane_creep_gold() {
  available_lane_creep_gold_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_available_lane_creep_gold() const {
  return available_lane_creep_gold_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::available_lane_creep_gold() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.available_lane_creep_gold)
  return _internal_available_lane_creep_gold();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_available_lane_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  available_lane_creep_gold_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_available_lane_creep_gold(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_available_lane_creep_gold(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.available_lane_creep_gold)
}

// optional uint32 balance_kill_value = 5;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_balance_kill_value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_kill_value() const {
  return _internal_has_balance_kill_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_kill_value() {
  balance_kill_value_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_balance_kill_value() const {
  return balance_kill_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_kill_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.balance_kill_value)
  return _internal_balance_kill_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_balance_kill_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  balance_kill_value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_kill_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance_kill_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.balance_kill_value)
}

// optional uint32 balance_tower_value = 6;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_balance_tower_value() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_tower_value() const {
  return _internal_has_balance_tower_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_tower_value() {
  balance_tower_value_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_balance_tower_value() const {
  return balance_tower_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_tower_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.balance_tower_value)
  return _internal_balance_tower_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_balance_tower_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  balance_tower_value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_tower_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance_tower_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.balance_tower_value)
}

// optional uint32 balance_barracks_value = 7;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_balance_barracks_value() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_barracks_value() const {
  return _internal_has_balance_barracks_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_barracks_value() {
  balance_barracks_value_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_balance_barracks_value() const {
  return balance_barracks_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_barracks_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.balance_barracks_value)
  return _internal_balance_barracks_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_balance_barracks_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  balance_barracks_value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_barracks_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance_barracks_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.balance_barracks_value)
}

// optional uint32 balance_gold_value = 8;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_balance_gold_value() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_gold_value() const {
  return _internal_has_balance_gold_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_gold_value() {
  balance_gold_value_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_balance_gold_value() const {
  return balance_gold_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_gold_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.balance_gold_value)
  return _internal_balance_gold_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_balance_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  balance_gold_value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_gold_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance_gold_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.balance_gold_value)
}

// optional uint32 balance_xp_value = 9;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::_internal_has_balance_xp_value() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_xp_value() const {
  return _internal_has_balance_xp_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_xp_value() {
  balance_xp_value_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::_internal_balance_xp_value() const {
  return balance_xp_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_xp_value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.balance_xp_value)
  return _internal_balance_xp_value();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::_internal_set_balance_xp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  balance_xp_value_ = value;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_xp_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_balance_xp_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsTeamMinuteDetails.balance_xp_value)
}

// repeated .CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
inline int CDOTAUserMsg_StatsTeamMinuteDetails::_internal_lane_performance_size() const {
  return lane_performance_.size();
}
inline int CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance_size() const {
  return _internal_lane_performance_size();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_lane_performance() {
  lane_performance_.Clear();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* CDOTAUserMsg_StatsTeamMinuteDetails::mutable_lane_performance(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >*
CDOTAUserMsg_StatsTeamMinuteDetails::mutable_lane_performance() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return &lane_performance_;
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& CDOTAUserMsg_StatsTeamMinuteDetails::_internal_lane_performance(int index) const {
  return lane_performance_.Get(index);
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return _internal_lane_performance(index);
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* CDOTAUserMsg_StatsTeamMinuteDetails::_internal_add_lane_performance() {
  return lane_performance_.Add();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* CDOTAUserMsg_StatsTeamMinuteDetails::add_lane_performance() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return _internal_add_lane_performance();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >&
CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsPlayerKillShare

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsPlayerKillShare::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_StatsPlayerKillShare::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.player_id)
}

// optional float kill_share_percent = 2;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_kill_share_percent() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_kill_share_percent() const {
  return _internal_has_kill_share_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_kill_share_percent() {
  kill_share_percent_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::_internal_kill_share_percent() const {
  return kill_share_percent_;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::kill_share_percent() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.kill_share_percent)
  return _internal_kill_share_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_kill_share_percent(float value) {
  _has_bits_[0] |= 0x00000002u;
  kill_share_percent_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_kill_share_percent(float value) {
  _internal_set_kill_share_percent(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.kill_share_percent)
}

// optional float player_loc_x = 3;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_player_loc_x() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_loc_x() const {
  return _internal_has_player_loc_x();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_loc_x() {
  player_loc_x_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::_internal_player_loc_x() const {
  return player_loc_x_;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::player_loc_x() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.player_loc_x)
  return _internal_player_loc_x();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_player_loc_x(float value) {
  _has_bits_[0] |= 0x00000004u;
  player_loc_x_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_loc_x(float value) {
  _internal_set_player_loc_x(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.player_loc_x)
}

// optional float player_loc_y = 4;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_player_loc_y() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_loc_y() const {
  return _internal_has_player_loc_y();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_loc_y() {
  player_loc_y_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::_internal_player_loc_y() const {
  return player_loc_y_;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::player_loc_y() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.player_loc_y)
  return _internal_player_loc_y();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_player_loc_y(float value) {
  _has_bits_[0] |= 0x00000008u;
  player_loc_y_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_loc_y(float value) {
  _internal_set_player_loc_y(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.player_loc_y)
}

// optional float health_percent = 5;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_health_percent() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_health_percent() const {
  return _internal_has_health_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_health_percent() {
  health_percent_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::_internal_health_percent() const {
  return health_percent_;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::health_percent() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.health_percent)
  return _internal_health_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_health_percent(float value) {
  _has_bits_[0] |= 0x00000010u;
  health_percent_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_health_percent(float value) {
  _internal_set_health_percent(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.health_percent)
}

// optional float mana_percent = 6;
inline bool CDOTAUserMsg_StatsPlayerKillShare::_internal_has_mana_percent() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_mana_percent() const {
  return _internal_has_mana_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_mana_percent() {
  mana_percent_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::_internal_mana_percent() const {
  return mana_percent_;
}
inline float CDOTAUserMsg_StatsPlayerKillShare::mana_percent() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsPlayerKillShare.mana_percent)
  return _internal_mana_percent();
}
inline void CDOTAUserMsg_StatsPlayerKillShare::_internal_set_mana_percent(float value) {
  _has_bits_[0] |= 0x00000020u;
  mana_percent_ = value;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_mana_percent(float value) {
  _internal_set_mana_percent(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsPlayerKillShare.mana_percent)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsKillDetails

// optional uint32 victim_id = 1;
inline bool CDOTAUserMsg_StatsKillDetails::_internal_has_victim_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsKillDetails::has_victim_id() const {
  return _internal_has_victim_id();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_victim_id() {
  victim_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::_internal_victim_id() const {
  return victim_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::victim_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.victim_id)
  return _internal_victim_id();
}
inline void CDOTAUserMsg_StatsKillDetails::_internal_set_victim_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  victim_id_ = value;
}
inline void CDOTAUserMsg_StatsKillDetails::set_victim_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_victim_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsKillDetails.victim_id)
}

// repeated .CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
inline int CDOTAUserMsg_StatsKillDetails::_internal_kill_shares_size() const {
  return kill_shares_.size();
}
inline int CDOTAUserMsg_StatsKillDetails::kill_shares_size() const {
  return _internal_kill_shares_size();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_kill_shares() {
  kill_shares_.Clear();
}
inline ::CDOTAUserMsg_StatsPlayerKillShare* CDOTAUserMsg_StatsKillDetails::mutable_kill_shares(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsPlayerKillShare >*
CDOTAUserMsg_StatsKillDetails::mutable_kill_shares() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsKillDetails.kill_shares)
  return &kill_shares_;
}
inline const ::CDOTAUserMsg_StatsPlayerKillShare& CDOTAUserMsg_StatsKillDetails::_internal_kill_shares(int index) const {
  return kill_shares_.Get(index);
}
inline const ::CDOTAUserMsg_StatsPlayerKillShare& CDOTAUserMsg_StatsKillDetails::kill_shares(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.kill_shares)
  return _internal_kill_shares(index);
}
inline ::CDOTAUserMsg_StatsPlayerKillShare* CDOTAUserMsg_StatsKillDetails::_internal_add_kill_shares() {
  return kill_shares_.Add();
}
inline ::CDOTAUserMsg_StatsPlayerKillShare* CDOTAUserMsg_StatsKillDetails::add_kill_shares() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsKillDetails.kill_shares)
  return _internal_add_kill_shares();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsPlayerKillShare >&
CDOTAUserMsg_StatsKillDetails::kill_shares() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_;
}

// optional uint32 damage_to_kill = 3;
inline bool CDOTAUserMsg_StatsKillDetails::_internal_has_damage_to_kill() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsKillDetails::has_damage_to_kill() const {
  return _internal_has_damage_to_kill();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_damage_to_kill() {
  damage_to_kill_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::_internal_damage_to_kill() const {
  return damage_to_kill_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::damage_to_kill() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.damage_to_kill)
  return _internal_damage_to_kill();
}
inline void CDOTAUserMsg_StatsKillDetails::_internal_set_damage_to_kill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  damage_to_kill_ = value;
}
inline void CDOTAUserMsg_StatsKillDetails::set_damage_to_kill(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage_to_kill(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsKillDetails.damage_to_kill)
}

// optional uint32 effective_health = 4;
inline bool CDOTAUserMsg_StatsKillDetails::_internal_has_effective_health() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsKillDetails::has_effective_health() const {
  return _internal_has_effective_health();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_effective_health() {
  effective_health_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::_internal_effective_health() const {
  return effective_health_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::effective_health() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.effective_health)
  return _internal_effective_health();
}
inline void CDOTAUserMsg_StatsKillDetails::_internal_set_effective_health(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  effective_health_ = value;
}
inline void CDOTAUserMsg_StatsKillDetails::set_effective_health(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_effective_health(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsKillDetails.effective_health)
}

// optional float death_time = 5;
inline bool CDOTAUserMsg_StatsKillDetails::_internal_has_death_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsKillDetails::has_death_time() const {
  return _internal_has_death_time();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_death_time() {
  death_time_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_StatsKillDetails::_internal_death_time() const {
  return death_time_;
}
inline float CDOTAUserMsg_StatsKillDetails::death_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.death_time)
  return _internal_death_time();
}
inline void CDOTAUserMsg_StatsKillDetails::_internal_set_death_time(float value) {
  _has_bits_[0] |= 0x00000008u;
  death_time_ = value;
}
inline void CDOTAUserMsg_StatsKillDetails::set_death_time(float value) {
  _internal_set_death_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsKillDetails.death_time)
}

// optional uint32 killer_id = 6;
inline bool CDOTAUserMsg_StatsKillDetails::_internal_has_killer_id() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsKillDetails::has_killer_id() const {
  return _internal_has_killer_id();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_killer_id() {
  killer_id_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::_internal_killer_id() const {
  return killer_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsKillDetails::killer_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsKillDetails.killer_id)
  return _internal_killer_id();
}
inline void CDOTAUserMsg_StatsKillDetails::_internal_set_killer_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  killer_id_ = value;
}
inline void CDOTAUserMsg_StatsKillDetails::set_killer_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_killer_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsKillDetails.killer_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails

// repeated uint32 participants = 1;
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_participants_size() const {
  return participants_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants_size() const {
  return _internal_participants_size();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_participants() {
  participants_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_participants(int index) const {
  return participants_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return _internal_participants(index);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_participants(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  participants_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_add_participants(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  participants_.Add(value);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::add_participants(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_participants(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_participants() const {
  return participants_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return _internal_participants();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_mutable_participants() {
  return &participants_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::mutable_participants() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return _internal_mutable_participants();
}

// repeated uint32 deaths = 2;
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_deaths_size() const {
  return deaths_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths_size() const {
  return _internal_deaths_size();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_deaths() {
  deaths_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_deaths(int index) const {
  return deaths_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return _internal_deaths(index);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_deaths(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  deaths_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_add_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  deaths_.Add(value);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::add_deaths(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_deaths(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_deaths() const {
  return deaths_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return _internal_deaths();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_mutable_deaths() {
  return &deaths_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::mutable_deaths() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return _internal_mutable_deaths();
}

// optional uint32 gold_delta = 3;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_has_gold_delta() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::has_gold_delta() const {
  return _internal_has_gold_delta();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_gold_delta() {
  gold_delta_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_gold_delta() const {
  return gold_delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::gold_delta() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.gold_delta)
  return _internal_gold_delta();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_set_gold_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  gold_delta_ = value;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_gold_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gold_delta(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.gold_delta)
}

// optional uint32 xp_delta = 4;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_has_xp_delta() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::has_xp_delta() const {
  return _internal_has_xp_delta();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_xp_delta() {
  xp_delta_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_xp_delta() const {
  return xp_delta_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::xp_delta() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.xp_delta)
  return _internal_xp_delta();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::_internal_set_xp_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  xp_delta_ = value;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_xp_delta(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_xp_delta(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.xp_delta)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails

// optional float start_time = 1;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_start_time() const {
  return _internal_has_start_time();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_start_time() {
  start_time_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_start_time() const {
  return start_time_;
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::start_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.start_time)
  return _internal_start_time();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_set_start_time(float value) {
  _has_bits_[0] |= 0x00000004u;
  start_time_ = value;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_start_time(float value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.start_time)
}

// optional float end_time = 2;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_has_end_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_end_time() const {
  return _internal_has_end_time();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_end_time() {
  end_time_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_end_time() const {
  return end_time_;
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::end_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.end_time)
  return _internal_end_time();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_set_end_time(float value) {
  _has_bits_[0] |= 0x00000008u;
  end_time_ = value;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_end_time(float value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.end_time)
}

// optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_has_radiant_fight_details() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || radiant_fight_details_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_radiant_fight_details() const {
  return _internal_has_radiant_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_radiant_fight_details() {
  if (radiant_fight_details_ != nullptr) radiant_fight_details_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_radiant_fight_details() const {
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* p = radiant_fight_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails&>(
      ::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_);
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::radiant_fight_details() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  return _internal_radiant_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::unsafe_arena_set_allocated_radiant_fight_details(
    ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(radiant_fight_details_);
  }
  radiant_fight_details_ = radiant_fight_details;
  if (radiant_fight_details) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::release_radiant_fight_details() {
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = radiant_fight_details_;
  radiant_fight_details_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::unsafe_arena_release_radiant_fight_details() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  _has_bits_[0] &= ~0x00000001u;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = radiant_fight_details_;
  radiant_fight_details_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_mutable_radiant_fight_details() {
  _has_bits_[0] |= 0x00000001u;
  if (radiant_fight_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(GetArena());
    radiant_fight_details_ = p;
  }
  return radiant_fight_details_;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::mutable_radiant_fight_details() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  return _internal_mutable_radiant_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_allocated_radiant_fight_details(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete radiant_fight_details_;
  }
  if (radiant_fight_details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(radiant_fight_details);
    if (message_arena != submessage_arena) {
      radiant_fight_details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, radiant_fight_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  radiant_fight_details_ = radiant_fight_details;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
}

// optional .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_has_dire_fight_details() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || dire_fight_details_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_dire_fight_details() const {
  return _internal_has_dire_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_dire_fight_details() {
  if (dire_fight_details_ != nullptr) dire_fight_details_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_dire_fight_details() const {
  const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* p = dire_fight_details_;
  return p != nullptr ? *p : reinterpret_cast<const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails&>(
      ::_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_);
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::dire_fight_details() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  return _internal_dire_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::unsafe_arena_set_allocated_dire_fight_details(
    ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(dire_fight_details_);
  }
  dire_fight_details_ = dire_fight_details;
  if (dire_fight_details) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::release_dire_fight_details() {
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = dire_fight_details_;
  dire_fight_details_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::unsafe_arena_release_dire_fight_details() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  _has_bits_[0] &= ~0x00000002u;
  ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = dire_fight_details_;
  dire_fight_details_ = nullptr;
  return temp;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::_internal_mutable_dire_fight_details() {
  _has_bits_[0] |= 0x00000002u;
  if (dire_fight_details_ == nullptr) {
    auto* p = CreateMaybeMessage<::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails>(GetArena());
    dire_fight_details_ = p;
  }
  return dire_fight_details_;
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::mutable_dire_fight_details() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  return _internal_mutable_dire_fight_details();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_allocated_dire_fight_details(::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete dire_fight_details_;
  }
  if (dire_fight_details) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(dire_fight_details);
    if (message_arena != submessage_arena) {
      dire_fight_details = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dire_fight_details, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  dire_fight_details_ = dire_fight_details;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails

// repeated .CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_hero_lookup_size() const {
  return hero_lookup_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::hero_lookup_size() const {
  return _internal_hero_lookup_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_hero_lookup() {
  hero_lookup_.Clear();
}
inline ::CDOTAUserMsg_StatsHeroLookup* CDOTAUserMsg_StatsMatchDetails::mutable_hero_lookup(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroLookup >*
CDOTAUserMsg_StatsMatchDetails::mutable_hero_lookup() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return &hero_lookup_;
}
inline const ::CDOTAUserMsg_StatsHeroLookup& CDOTAUserMsg_StatsMatchDetails::_internal_hero_lookup(int index) const {
  return hero_lookup_.Get(index);
}
inline const ::CDOTAUserMsg_StatsHeroLookup& CDOTAUserMsg_StatsMatchDetails::hero_lookup(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return _internal_hero_lookup(index);
}
inline ::CDOTAUserMsg_StatsHeroLookup* CDOTAUserMsg_StatsMatchDetails::_internal_add_hero_lookup() {
  return hero_lookup_.Add();
}
inline ::CDOTAUserMsg_StatsHeroLookup* CDOTAUserMsg_StatsMatchDetails::add_hero_lookup() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return _internal_add_hero_lookup();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsHeroLookup >&
CDOTAUserMsg_StatsMatchDetails::hero_lookup() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_;
}

// repeated .CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_radiant_stats_size() const {
  return radiant_stats_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::radiant_stats_size() const {
  return _internal_radiant_stats_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_radiant_stats() {
  radiant_stats_.Clear();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::mutable_radiant_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_radiant_stats() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return &radiant_stats_;
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::_internal_radiant_stats(int index) const {
  return radiant_stats_.Get(index);
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::radiant_stats(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return _internal_radiant_stats(index);
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::_internal_add_radiant_stats() {
  return radiant_stats_.Add();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::add_radiant_stats() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return _internal_add_radiant_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >&
CDOTAUserMsg_StatsMatchDetails::radiant_stats() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_;
}

// repeated .CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_dire_stats_size() const {
  return dire_stats_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::dire_stats_size() const {
  return _internal_dire_stats_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_dire_stats() {
  dire_stats_.Clear();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::mutable_dire_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_dire_stats() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return &dire_stats_;
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::_internal_dire_stats(int index) const {
  return dire_stats_.Get(index);
}
inline const ::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::dire_stats(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return _internal_dire_stats(index);
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::_internal_add_dire_stats() {
  return dire_stats_.Add();
}
inline ::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::add_dire_stats() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return _internal_add_dire_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsTeamMinuteDetails >&
CDOTAUserMsg_StatsMatchDetails::dire_stats() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_;
}

// repeated .CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_radiant_kills_size() const {
  return radiant_kills_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::radiant_kills_size() const {
  return _internal_radiant_kills_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_radiant_kills() {
  radiant_kills_.Clear();
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::mutable_radiant_kills(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_radiant_kills() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return &radiant_kills_;
}
inline const ::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::_internal_radiant_kills(int index) const {
  return radiant_kills_.Get(index);
}
inline const ::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::radiant_kills(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return _internal_radiant_kills(index);
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::_internal_add_radiant_kills() {
  return radiant_kills_.Add();
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::add_radiant_kills() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return _internal_add_radiant_kills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >&
CDOTAUserMsg_StatsMatchDetails::radiant_kills() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_;
}

// repeated .CDOTAUserMsg_StatsKillDetails dire_kills = 5;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_dire_kills_size() const {
  return dire_kills_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::dire_kills_size() const {
  return _internal_dire_kills_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_dire_kills() {
  dire_kills_.Clear();
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::mutable_dire_kills(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_dire_kills() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return &dire_kills_;
}
inline const ::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::_internal_dire_kills(int index) const {
  return dire_kills_.Get(index);
}
inline const ::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::dire_kills(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return _internal_dire_kills(index);
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::_internal_add_dire_kills() {
  return dire_kills_.Add();
}
inline ::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::add_dire_kills() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return _internal_add_dire_kills();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsKillDetails >&
CDOTAUserMsg_StatsMatchDetails::dire_kills() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_;
}

// repeated .CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
inline int CDOTAUserMsg_StatsMatchDetails::_internal_fight_details_size() const {
  return fight_details_.size();
}
inline int CDOTAUserMsg_StatsMatchDetails::fight_details_size() const {
  return _internal_fight_details_size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_fight_details() {
  fight_details_.Clear();
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* CDOTAUserMsg_StatsMatchDetails::mutable_fight_details(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_fight_details() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_StatsMatchDetails.fight_details)
  return &fight_details_;
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& CDOTAUserMsg_StatsMatchDetails::_internal_fight_details(int index) const {
  return fight_details_.Get(index);
}
inline const ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& CDOTAUserMsg_StatsMatchDetails::fight_details(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_StatsMatchDetails.fight_details)
  return _internal_fight_details(index);
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* CDOTAUserMsg_StatsMatchDetails::_internal_add_fight_details() {
  return fight_details_.Add();
}
inline ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* CDOTAUserMsg_StatsMatchDetails::add_fight_details() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_StatsMatchDetails.fight_details)
  return _internal_add_fight_details();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >&
CDOTAUserMsg_StatsMatchDetails::fight_details() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniTaunt

// optional uint32 taunting_player_id = 1;
inline bool CDOTAUserMsg_MiniTaunt::_internal_has_taunting_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MiniTaunt::has_taunting_player_id() const {
  return _internal_has_taunting_player_id();
}
inline void CDOTAUserMsg_MiniTaunt::clear_taunting_player_id() {
  taunting_player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniTaunt::_internal_taunting_player_id() const {
  return taunting_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_MiniTaunt::taunting_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MiniTaunt.taunting_player_id)
  return _internal_taunting_player_id();
}
inline void CDOTAUserMsg_MiniTaunt::_internal_set_taunting_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  taunting_player_id_ = value;
}
inline void CDOTAUserMsg_MiniTaunt::set_taunting_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_taunting_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MiniTaunt.taunting_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpeechBubble

// optional bool destroy_all = 1;
inline bool CDOTAUserMsg_SpeechBubble::_internal_has_destroy_all() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SpeechBubble::has_destroy_all() const {
  return _internal_has_destroy_all();
}
inline void CDOTAUserMsg_SpeechBubble::clear_destroy_all() {
  destroy_all_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool CDOTAUserMsg_SpeechBubble::_internal_destroy_all() const {
  return destroy_all_;
}
inline bool CDOTAUserMsg_SpeechBubble::destroy_all() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SpeechBubble.destroy_all)
  return _internal_destroy_all();
}
inline void CDOTAUserMsg_SpeechBubble::_internal_set_destroy_all(bool value) {
  _has_bits_[0] |= 0x00000001u;
  destroy_all_ = value;
}
inline void CDOTAUserMsg_SpeechBubble::set_destroy_all(bool value) {
  _internal_set_destroy_all(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SpeechBubble.destroy_all)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHeaderMessage

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CustomHeaderMessage::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHeaderMessage::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CustomHeaderMessage::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CustomHeaderMessage::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHeaderMessage.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_CustomHeaderMessage::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHeaderMessage.player_id)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_CustomHeaderMessage::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHeaderMessage::has_duration() const {
  return _internal_has_duration();
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_duration() {
  duration_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CDOTAUserMsg_CustomHeaderMessage::_internal_duration() const {
  return duration_;
}
inline float CDOTAUserMsg_CustomHeaderMessage::duration() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHeaderMessage.duration)
  return _internal_duration();
}
inline void CDOTAUserMsg_CustomHeaderMessage::_internal_set_duration(float value) {
  _has_bits_[0] |= 0x00000004u;
  duration_ = value;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_duration(float value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHeaderMessage.duration)
}

// optional string message = 3;
inline bool CDOTAUserMsg_CustomHeaderMessage::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHeaderMessage::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_CustomHeaderMessage::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHeaderMessage.message)
  return _internal_message();
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHeaderMessage.message)
}
inline std::string* CDOTAUserMsg_CustomHeaderMessage::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHeaderMessage.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_CustomHeaderMessage::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_CustomHeaderMessage::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHeaderMessage.message)
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHeaderMessage.message)
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHeaderMessage.message)
}
inline std::string* CDOTAUserMsg_CustomHeaderMessage::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000001u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHeaderMessage::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHeaderMessage.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHeaderMessage.message)
}

// optional int32 value = 4;
inline bool CDOTAUserMsg_CustomHeaderMessage::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHeaderMessage::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomHeaderMessage::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_CustomHeaderMessage::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHeaderMessage.value)
  return _internal_value();
}
inline void CDOTAUserMsg_CustomHeaderMessage::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  value_ = value;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHeaderMessage.value)
}

// -------------------------------------------------------------------

// CMsgHeroAbilityStat

// optional .EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
inline bool CMsgHeroAbilityStat::_internal_has_stat_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgHeroAbilityStat::has_stat_type() const {
  return _internal_has_stat_type();
}
inline void CMsgHeroAbilityStat::clear_stat_type() {
  stat_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::EHeroStatType CMsgHeroAbilityStat::_internal_stat_type() const {
  return static_cast< ::EHeroStatType >(stat_type_);
}
inline ::EHeroStatType CMsgHeroAbilityStat::stat_type() const {
  // @@protoc_insertion_point(field_get:CMsgHeroAbilityStat.stat_type)
  return _internal_stat_type();
}
inline void CMsgHeroAbilityStat::_internal_set_stat_type(::EHeroStatType value) {
  assert(::EHeroStatType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stat_type_ = value;
}
inline void CMsgHeroAbilityStat::set_stat_type(::EHeroStatType value) {
  _internal_set_stat_type(value);
  // @@protoc_insertion_point(field_set:CMsgHeroAbilityStat.stat_type)
}

// optional int32 int_value = 2;
inline bool CMsgHeroAbilityStat::_internal_has_int_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgHeroAbilityStat::has_int_value() const {
  return _internal_has_int_value();
}
inline void CMsgHeroAbilityStat::clear_int_value() {
  int_value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgHeroAbilityStat::_internal_int_value() const {
  return int_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CMsgHeroAbilityStat::int_value() const {
  // @@protoc_insertion_point(field_get:CMsgHeroAbilityStat.int_value)
  return _internal_int_value();
}
inline void CMsgHeroAbilityStat::_internal_set_int_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  int_value_ = value;
}
inline void CMsgHeroAbilityStat::set_int_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_value(value);
  // @@protoc_insertion_point(field_set:CMsgHeroAbilityStat.int_value)
}

// optional float float_value = 3;
inline bool CMsgHeroAbilityStat::_internal_has_float_value() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgHeroAbilityStat::has_float_value() const {
  return _internal_has_float_value();
}
inline void CMsgHeroAbilityStat::clear_float_value() {
  float_value_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float CMsgHeroAbilityStat::_internal_float_value() const {
  return float_value_;
}
inline float CMsgHeroAbilityStat::float_value() const {
  // @@protoc_insertion_point(field_get:CMsgHeroAbilityStat.float_value)
  return _internal_float_value();
}
inline void CMsgHeroAbilityStat::_internal_set_float_value(float value) {
  _has_bits_[0] |= 0x00000004u;
  float_value_ = value;
}
inline void CMsgHeroAbilityStat::set_float_value(float value) {
  _internal_set_float_value(value);
  // @@protoc_insertion_point(field_set:CMsgHeroAbilityStat.float_value)
}

// -------------------------------------------------------------------

// CMsgCombatAnalyzerPlayerStat

// optional uint32 account_id = 1;
inline bool CMsgCombatAnalyzerPlayerStat::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCombatAnalyzerPlayerStat::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgCombatAnalyzerPlayerStat::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgCombatAnalyzerPlayerStat::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgCombatAnalyzerPlayerStat::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgCombatAnalyzerPlayerStat.account_id)
  return _internal_account_id();
}
inline void CMsgCombatAnalyzerPlayerStat::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CMsgCombatAnalyzerPlayerStat::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgCombatAnalyzerPlayerStat.account_id)
}

// repeated .CMsgHeroAbilityStat hero_ability_stats = 2;
inline int CMsgCombatAnalyzerPlayerStat::_internal_hero_ability_stats_size() const {
  return hero_ability_stats_.size();
}
inline int CMsgCombatAnalyzerPlayerStat::hero_ability_stats_size() const {
  return _internal_hero_ability_stats_size();
}
inline void CMsgCombatAnalyzerPlayerStat::clear_hero_ability_stats() {
  hero_ability_stats_.Clear();
}
inline ::CMsgHeroAbilityStat* CMsgCombatAnalyzerPlayerStat::mutable_hero_ability_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroAbilityStat >*
CMsgCombatAnalyzerPlayerStat::mutable_hero_ability_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return &hero_ability_stats_;
}
inline const ::CMsgHeroAbilityStat& CMsgCombatAnalyzerPlayerStat::_internal_hero_ability_stats(int index) const {
  return hero_ability_stats_.Get(index);
}
inline const ::CMsgHeroAbilityStat& CMsgCombatAnalyzerPlayerStat::hero_ability_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return _internal_hero_ability_stats(index);
}
inline ::CMsgHeroAbilityStat* CMsgCombatAnalyzerPlayerStat::_internal_add_hero_ability_stats() {
  return hero_ability_stats_.Add();
}
inline ::CMsgHeroAbilityStat* CMsgCombatAnalyzerPlayerStat::add_hero_ability_stats() {
  // @@protoc_insertion_point(field_add:CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return _internal_add_hero_ability_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgHeroAbilityStat >&
CMsgCombatAnalyzerPlayerStat::hero_ability_stats() const {
  // @@protoc_insertion_point(field_list:CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_;
}

// -------------------------------------------------------------------

// CMsgCombatAnalyzerStats

// optional uint64 match_id = 1;
inline bool CMsgCombatAnalyzerStats::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgCombatAnalyzerStats::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgCombatAnalyzerStats::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCombatAnalyzerStats::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgCombatAnalyzerStats::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgCombatAnalyzerStats.match_id)
  return _internal_match_id();
}
inline void CMsgCombatAnalyzerStats::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
}
inline void CMsgCombatAnalyzerStats::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgCombatAnalyzerStats.match_id)
}

// repeated .CMsgCombatAnalyzerPlayerStat player_stats = 2;
inline int CMsgCombatAnalyzerStats::_internal_player_stats_size() const {
  return player_stats_.size();
}
inline int CMsgCombatAnalyzerStats::player_stats_size() const {
  return _internal_player_stats_size();
}
inline void CMsgCombatAnalyzerStats::clear_player_stats() {
  player_stats_.Clear();
}
inline ::CMsgCombatAnalyzerPlayerStat* CMsgCombatAnalyzerStats::mutable_player_stats(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgCombatAnalyzerStats.player_stats)
  return player_stats_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCombatAnalyzerPlayerStat >*
CMsgCombatAnalyzerStats::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:CMsgCombatAnalyzerStats.player_stats)
  return &player_stats_;
}
inline const ::CMsgCombatAnalyzerPlayerStat& CMsgCombatAnalyzerStats::_internal_player_stats(int index) const {
  return player_stats_.Get(index);
}
inline const ::CMsgCombatAnalyzerPlayerStat& CMsgCombatAnalyzerStats::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:CMsgCombatAnalyzerStats.player_stats)
  return _internal_player_stats(index);
}
inline ::CMsgCombatAnalyzerPlayerStat* CMsgCombatAnalyzerStats::_internal_add_player_stats() {
  return player_stats_.Add();
}
inline ::CMsgCombatAnalyzerPlayerStat* CMsgCombatAnalyzerStats::add_player_stats() {
  // @@protoc_insertion_point(field_add:CMsgCombatAnalyzerStats.player_stats)
  return _internal_add_player_stats();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgCombatAnalyzerPlayerStat >&
CMsgCombatAnalyzerStats::player_stats() const {
  // @@protoc_insertion_point(field_list:CMsgCombatAnalyzerStats.player_stats)
  return player_stats_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BeastChat

// optional uint32 team = 1;
inline bool CDOTAUserMsg_BeastChat::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BeastChat::has_team() const {
  return _internal_has_team();
}
inline void CDOTAUserMsg_BeastChat::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BeastChat::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_BeastChat::team() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BeastChat.team)
  return _internal_team();
}
inline void CDOTAUserMsg_BeastChat::_internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  team_ = value;
}
inline void CDOTAUserMsg_BeastChat::set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BeastChat.team)
}

// optional string format = 2;
inline bool CDOTAUserMsg_BeastChat::_internal_has_format() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BeastChat::has_format() const {
  return _internal_has_format();
}
inline void CDOTAUserMsg_BeastChat::clear_format() {
  format_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_BeastChat::format() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BeastChat.format)
  return _internal_format();
}
inline void CDOTAUserMsg_BeastChat::set_format(const std::string& value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BeastChat.format)
}
inline std::string* CDOTAUserMsg_BeastChat::mutable_format() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BeastChat.format)
  return _internal_mutable_format();
}
inline const std::string& CDOTAUserMsg_BeastChat::_internal_format() const {
  return format_.Get();
}
inline void CDOTAUserMsg_BeastChat::_internal_set_format(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  format_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_format(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  format_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_BeastChat.format)
}
inline void CDOTAUserMsg_BeastChat::set_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  format_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_BeastChat.format)
}
inline void CDOTAUserMsg_BeastChat::set_format(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  format_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_BeastChat.format)
}
inline std::string* CDOTAUserMsg_BeastChat::_internal_mutable_format() {
  _has_bits_[0] |= 0x00000001u;
  return format_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_BeastChat::release_format() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_BeastChat.format)
  if (!_internal_has_format()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return format_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_format(std::string* format) {
  if (format != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  format_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), format,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_BeastChat.format)
}

// optional string message = 3;
inline bool CDOTAUserMsg_BeastChat::_internal_has_message() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BeastChat::has_message() const {
  return _internal_has_message();
}
inline void CDOTAUserMsg_BeastChat::clear_message() {
  message_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_BeastChat::message() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BeastChat.message)
  return _internal_message();
}
inline void CDOTAUserMsg_BeastChat::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BeastChat.message)
}
inline std::string* CDOTAUserMsg_BeastChat::mutable_message() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BeastChat.message)
  return _internal_mutable_message();
}
inline const std::string& CDOTAUserMsg_BeastChat::_internal_message() const {
  return message_.Get();
}
inline void CDOTAUserMsg_BeastChat::_internal_set_message(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_message(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  message_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_BeastChat.message)
}
inline void CDOTAUserMsg_BeastChat::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_BeastChat.message)
}
inline void CDOTAUserMsg_BeastChat::set_message(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_BeastChat.message)
}
inline std::string* CDOTAUserMsg_BeastChat::_internal_mutable_message() {
  _has_bits_[0] |= 0x00000002u;
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_BeastChat::release_message() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_BeastChat.message)
  if (!_internal_has_message()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return message_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_BeastChat.message)
}

// optional string target = 4;
inline bool CDOTAUserMsg_BeastChat::_internal_has_target() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_BeastChat::has_target() const {
  return _internal_has_target();
}
inline void CDOTAUserMsg_BeastChat::clear_target() {
  target_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDOTAUserMsg_BeastChat::target() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_BeastChat.target)
  return _internal_target();
}
inline void CDOTAUserMsg_BeastChat::set_target(const std::string& value) {
  _internal_set_target(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_BeastChat.target)
}
inline std::string* CDOTAUserMsg_BeastChat::mutable_target() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_BeastChat.target)
  return _internal_mutable_target();
}
inline const std::string& CDOTAUserMsg_BeastChat::_internal_target() const {
  return target_.Get();
}
inline void CDOTAUserMsg_BeastChat::_internal_set_target(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_target(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  target_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_BeastChat.target)
}
inline void CDOTAUserMsg_BeastChat::set_target(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_BeastChat.target)
}
inline void CDOTAUserMsg_BeastChat::set_target(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  target_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_BeastChat.target)
}
inline std::string* CDOTAUserMsg_BeastChat::_internal_mutable_target() {
  _has_bits_[0] |= 0x00000004u;
  return target_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_BeastChat::release_target() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_BeastChat.target)
  if (!_internal_has_target()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return target_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_target(std::string* target) {
  if (target != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  target_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), target,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_BeastChat.target)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Create

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Create::_internal_has_element_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Create::has_element_id() const {
  return _internal_has_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_element_id() {
  element_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::element_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Create.element_id)
  return _internal_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const std::string& value) {
  _internal_set_element_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_element_id() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Create.element_id)
  return _internal_mutable_element_id();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::_internal_element_id() const {
  return element_id_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Create::_internal_set_element_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::_internal_mutable_element_id() {
  _has_bits_[0] |= 0x00000001u;
  return element_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::release_element_id() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Create.element_id)
  if (!_internal_has_element_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return element_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_element_id(std::string* element_id) {
  if (element_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  element_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), element_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Create.element_id)
}

// optional string layout_filename = 2;
inline bool CDOTAUserMsg_CustomHudElement_Create::_internal_has_layout_filename() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Create::has_layout_filename() const {
  return _internal_has_layout_filename();
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_layout_filename() {
  layout_filename_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::layout_filename() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  return _internal_layout_filename();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const std::string& value) {
  _internal_set_layout_filename(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_layout_filename() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  return _internal_mutable_layout_filename();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::_internal_layout_filename() const {
  return layout_filename_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Create::_internal_set_layout_filename(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  layout_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  layout_filename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  layout_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  layout_filename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::_internal_mutable_layout_filename() {
  _has_bits_[0] |= 0x00000002u;
  return layout_filename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::release_layout_filename() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  if (!_internal_has_layout_filename()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return layout_filename_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_layout_filename(std::string* layout_filename) {
  if (layout_filename != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  layout_filename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), layout_filename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}

// optional bytes data = 3;
inline bool CDOTAUserMsg_CustomHudElement_Create::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Create::has_data() const {
  return _internal_has_data();
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_data() {
  data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::data() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Create.data)
  return _internal_data();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Create.data)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_data() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Create.data)
  return _internal_mutable_data();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Create::_internal_data() const {
  return data_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Create::_internal_set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Create.data)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Create.data)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Create.data)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000004u;
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Create::release_data() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Create.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Create.data)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Modify

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Modify::_internal_has_element_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_element_id() const {
  return _internal_has_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_element_id() {
  element_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Modify::element_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Modify.element_id)
  return _internal_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const std::string& value) {
  _internal_set_element_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::mutable_element_id() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Modify.element_id)
  return _internal_mutable_element_id();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Modify::_internal_element_id() const {
  return element_id_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::_internal_set_element_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::_internal_mutable_element_id() {
  _has_bits_[0] |= 0x00000001u;
  return element_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::release_element_id() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Modify.element_id)
  if (!_internal_has_element_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return element_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_allocated_element_id(std::string* element_id) {
  if (element_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  element_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), element_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Modify.element_id)
}

// optional bool modify_visible = 2;
inline bool CDOTAUserMsg_CustomHudElement_Modify::_internal_has_modify_visible() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_modify_visible() const {
  return _internal_has_modify_visible();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_modify_visible() {
  modify_visible_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::_internal_modify_visible() const {
  return modify_visible_;
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::modify_visible() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Modify.modify_visible)
  return _internal_modify_visible();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::_internal_set_modify_visible(bool value) {
  _has_bits_[0] |= 0x00000004u;
  modify_visible_ = value;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_modify_visible(bool value) {
  _internal_set_modify_visible(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Modify.modify_visible)
}

// optional bytes data = 3;
inline bool CDOTAUserMsg_CustomHudElement_Modify::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_data() const {
  return _internal_has_data();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_data() {
  data_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Modify::data() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Modify.data)
  return _internal_data();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const std::string& value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::mutable_data() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Modify.data)
  return _internal_mutable_data();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Modify::_internal_data() const {
  return data_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::_internal_set_data(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  data_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const void* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::_internal_mutable_data() {
  _has_bits_[0] |= 0x00000002u;
  return data_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Modify::release_data() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Modify.data)
  if (!_internal_has_data()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return data_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_allocated_data(std::string* data) {
  if (data != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  data_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Modify.data)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Destroy

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Destroy::_internal_has_element_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CustomHudElement_Destroy::has_element_id() const {
  return _internal_has_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::clear_element_id() {
  element_id_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Destroy::element_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  return _internal_element_id();
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const std::string& value) {
  _internal_set_element_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Destroy::mutable_element_id() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  return _internal_mutable_element_id();
}
inline const std::string& CDOTAUserMsg_CustomHudElement_Destroy::_internal_element_id() const {
  return element_id_.Get();
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::_internal_set_element_id(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  element_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline std::string* CDOTAUserMsg_CustomHudElement_Destroy::_internal_mutable_element_id() {
  _has_bits_[0] |= 0x00000001u;
  return element_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_CustomHudElement_Destroy::release_element_id() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  if (!_internal_has_element_id()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return element_id_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_allocated_element_id(std::string* element_id) {
  if (element_id != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  element_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), element_id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CompendiumStatePlayer

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CompendiumStatePlayer::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CompendiumStatePlayer::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CompendiumStatePlayer::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CompendiumStatePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CompendiumStatePlayer.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_CompendiumStatePlayer::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CompendiumStatePlayer.player_id)
}

// optional uint32 level = 2;
inline bool CDOTAUserMsg_CompendiumStatePlayer::_internal_has_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_CompendiumStatePlayer::has_level() const {
  return _internal_has_level();
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_level() {
  level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CompendiumStatePlayer::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_CompendiumStatePlayer::level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CompendiumStatePlayer.level)
  return _internal_level();
}
inline void CDOTAUserMsg_CompendiumStatePlayer::_internal_set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  level_ = value;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_CompendiumStatePlayer.level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CompendiumState

// repeated .CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
inline int CDOTAUserMsg_CompendiumState::_internal_compendium_players_size() const {
  return compendium_players_.size();
}
inline int CDOTAUserMsg_CompendiumState::compendium_players_size() const {
  return _internal_compendium_players_size();
}
inline void CDOTAUserMsg_CompendiumState::clear_compendium_players() {
  compendium_players_.Clear();
}
inline ::CDOTAUserMsg_CompendiumStatePlayer* CDOTAUserMsg_CompendiumState::mutable_compendium_players(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CompendiumStatePlayer >*
CDOTAUserMsg_CompendiumState::mutable_compendium_players() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_CompendiumState.compendium_players)
  return &compendium_players_;
}
inline const ::CDOTAUserMsg_CompendiumStatePlayer& CDOTAUserMsg_CompendiumState::_internal_compendium_players(int index) const {
  return compendium_players_.Get(index);
}
inline const ::CDOTAUserMsg_CompendiumStatePlayer& CDOTAUserMsg_CompendiumState::compendium_players(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_CompendiumState.compendium_players)
  return _internal_compendium_players(index);
}
inline ::CDOTAUserMsg_CompendiumStatePlayer* CDOTAUserMsg_CompendiumState::_internal_add_compendium_players() {
  return compendium_players_.Add();
}
inline ::CDOTAUserMsg_CompendiumStatePlayer* CDOTAUserMsg_CompendiumState::add_compendium_players() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_CompendiumState.compendium_players)
  return _internal_add_compendium_players();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_CompendiumStatePlayer >&
CDOTAUserMsg_CompendiumState::compendium_players() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ProjectionAbility

// optional uint32 ability_id = 1;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_ability_id() {
  ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ProjectionAbility::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ProjectionAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.ability_id)
}

// optional int32 caster_ent_index = 2;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_caster_ent_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_caster_ent_index() const {
  return _internal_has_caster_ent_index();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_caster_ent_index() {
  caster_ent_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::_internal_caster_ent_index() const {
  return caster_ent_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::caster_ent_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.caster_ent_index)
  return _internal_caster_ent_index();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_caster_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  caster_ent_index_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_caster_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caster_ent_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.caster_ent_index)
}

// optional int32 caster_team = 3;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_caster_team() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_caster_team() const {
  return _internal_has_caster_team();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_caster_team() {
  caster_team_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::_internal_caster_team() const {
  return caster_team_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::caster_team() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.caster_team)
  return _internal_caster_team();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_caster_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  caster_team_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_caster_team(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_caster_team(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.caster_team)
}

// optional bool channel_end = 4;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_channel_end() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_channel_end() const {
  return _internal_has_channel_end();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_channel_end() {
  channel_end_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_ProjectionAbility::_internal_channel_end() const {
  return channel_end_;
}
inline bool CDOTAUserMsg_ProjectionAbility::channel_end() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.channel_end)
  return _internal_channel_end();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_channel_end(bool value) {
  _has_bits_[0] |= 0x00000010u;
  channel_end_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_channel_end(bool value) {
  _internal_set_channel_end(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.channel_end)
}

// optional .CMsgVector origin = 5;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_origin() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || origin_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_origin() const {
  return _internal_has_origin();
}
inline const ::CMsgVector& CDOTAUserMsg_ProjectionAbility::_internal_origin() const {
  const ::CMsgVector* p = origin_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgVector&>(
      ::_CMsgVector_default_instance_);
}
inline const ::CMsgVector& CDOTAUserMsg_ProjectionAbility::origin() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.origin)
  return _internal_origin();
}
inline void CDOTAUserMsg_ProjectionAbility::unsafe_arena_set_allocated_origin(
    ::CMsgVector* origin) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  origin_ = origin;
  if (origin) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_ProjectionAbility.origin)
}
inline ::CMsgVector* CDOTAUserMsg_ProjectionAbility::release_origin() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_ProjectionAbility::unsafe_arena_release_origin() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ProjectionAbility.origin)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgVector* temp = origin_;
  origin_ = nullptr;
  return temp;
}
inline ::CMsgVector* CDOTAUserMsg_ProjectionAbility::_internal_mutable_origin() {
  _has_bits_[0] |= 0x00000001u;
  if (origin_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgVector>(GetArena());
    origin_ = p;
  }
  return origin_;
}
inline ::CMsgVector* CDOTAUserMsg_ProjectionAbility::mutable_origin() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ProjectionAbility.origin)
  return _internal_mutable_origin();
}
inline void CDOTAUserMsg_ProjectionAbility::set_allocated_origin(::CMsgVector* origin) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin_);
  }
  if (origin) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(origin)->GetArena();
    if (message_arena != submessage_arena) {
      origin = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ProjectionAbility.origin)
}

// optional bool track_caster_only = 6;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_track_caster_only() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_track_caster_only() const {
  return _internal_has_track_caster_only();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_track_caster_only() {
  track_caster_only_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_ProjectionAbility::_internal_track_caster_only() const {
  return track_caster_only_;
}
inline bool CDOTAUserMsg_ProjectionAbility::track_caster_only() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.track_caster_only)
  return _internal_track_caster_only();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_track_caster_only(bool value) {
  _has_bits_[0] |= 0x00000020u;
  track_caster_only_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_track_caster_only(bool value) {
  _internal_set_track_caster_only(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.track_caster_only)
}

// optional float end_time = 7;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_end_time() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_end_time() const {
  return _internal_has_end_time();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_end_time() {
  end_time_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CDOTAUserMsg_ProjectionAbility::_internal_end_time() const {
  return end_time_;
}
inline float CDOTAUserMsg_ProjectionAbility::end_time() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.end_time)
  return _internal_end_time();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_end_time(float value) {
  _has_bits_[0] |= 0x00000040u;
  end_time_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_end_time(float value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.end_time)
}

// optional int32 victim_ent_index = 8;
inline bool CDOTAUserMsg_ProjectionAbility::_internal_has_victim_ent_index() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionAbility::has_victim_ent_index() const {
  return _internal_has_victim_ent_index();
}
inline void CDOTAUserMsg_ProjectionAbility::clear_victim_ent_index() {
  victim_ent_index_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::_internal_victim_ent_index() const {
  return victim_ent_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ProjectionAbility::victim_ent_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionAbility.victim_ent_index)
  return _internal_victim_ent_index();
}
inline void CDOTAUserMsg_ProjectionAbility::_internal_set_victim_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  victim_ent_index_ = value;
}
inline void CDOTAUserMsg_ProjectionAbility::set_victim_ent_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_victim_ent_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionAbility.victim_ent_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ProjectionEvent

// optional .EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
inline bool CDOTAUserMsg_ProjectionEvent::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionEvent::has_event_id() const {
  return _internal_has_event_id();
}
inline void CDOTAUserMsg_ProjectionEvent::clear_event_id() {
  event_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::EProjectionEvent CDOTAUserMsg_ProjectionEvent::_internal_event_id() const {
  return static_cast< ::EProjectionEvent >(event_id_);
}
inline ::EProjectionEvent CDOTAUserMsg_ProjectionEvent::event_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionEvent.event_id)
  return _internal_event_id();
}
inline void CDOTAUserMsg_ProjectionEvent::_internal_set_event_id(::EProjectionEvent value) {
  assert(::EProjectionEvent_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  event_id_ = value;
}
inline void CDOTAUserMsg_ProjectionEvent::set_event_id(::EProjectionEvent value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionEvent.event_id)
}

// optional uint32 team = 2;
inline bool CDOTAUserMsg_ProjectionEvent::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ProjectionEvent::has_team() const {
  return _internal_has_team();
}
inline void CDOTAUserMsg_ProjectionEvent::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ProjectionEvent::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ProjectionEvent::team() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ProjectionEvent.team)
  return _internal_team();
}
inline void CDOTAUserMsg_ProjectionEvent::_internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  team_ = value;
}
inline void CDOTAUserMsg_ProjectionEvent::set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ProjectionEvent.team)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_XPAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_XPAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_XPAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_XPAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_XPAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_XPAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_XPAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_XPAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_XPAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_XPAlert.player_id)
}

// optional uint32 target_entindex = 2;
inline bool CDOTAUserMsg_XPAlert::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_XPAlert::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_XPAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_XPAlert::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_XPAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_XPAlert.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_XPAlert::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_XPAlert::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_XPAlert.target_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TalentTreeAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TalentTreeAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_TalentTreeAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TalentTreeAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TalentTreeAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TalentTreeAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_TalentTreeAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_TalentTreeAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TalentTreeAlert.player_id)
}

// optional uint32 target_entindex = 2;
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TalentTreeAlert::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_TalentTreeAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TalentTreeAlert::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TalentTreeAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TalentTreeAlert.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_TalentTreeAlert::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_TalentTreeAlert::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TalentTreeAlert.target_entindex)
}

// optional int32 ability_id = 3;
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_has_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TalentTreeAlert::has_ability_id() const {
  return _internal_has_ability_id();
}
inline void CDOTAUserMsg_TalentTreeAlert::clear_ability_id() {
  ability_id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TalentTreeAlert::_internal_ability_id() const {
  return ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TalentTreeAlert::ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TalentTreeAlert.ability_id)
  return _internal_ability_id();
}
inline void CDOTAUserMsg_TalentTreeAlert::_internal_set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  ability_id_ = value;
}
inline void CDOTAUserMsg_TalentTreeAlert::set_ability_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TalentTreeAlert.ability_id)
}

// optional int32 slot = 4;
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_has_slot() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TalentTreeAlert::has_slot() const {
  return _internal_has_slot();
}
inline void CDOTAUserMsg_TalentTreeAlert::clear_slot() {
  slot_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TalentTreeAlert::_internal_slot() const {
  return slot_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_TalentTreeAlert::slot() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TalentTreeAlert.slot)
  return _internal_slot();
}
inline void CDOTAUserMsg_TalentTreeAlert::_internal_set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  slot_ = value;
}
inline void CDOTAUserMsg_TalentTreeAlert::set_slot(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TalentTreeAlert.slot)
}

// optional bool learned = 5;
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_has_learned() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TalentTreeAlert::has_learned() const {
  return _internal_has_learned();
}
inline void CDOTAUserMsg_TalentTreeAlert::clear_learned() {
  learned_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_TalentTreeAlert::_internal_learned() const {
  return learned_;
}
inline bool CDOTAUserMsg_TalentTreeAlert::learned() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TalentTreeAlert.learned)
  return _internal_learned();
}
inline void CDOTAUserMsg_TalentTreeAlert::_internal_set_learned(bool value) {
  _has_bits_[0] |= 0x00000010u;
  learned_ = value;
}
inline void CDOTAUserMsg_TalentTreeAlert::set_learned(bool value) {
  _internal_set_learned(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TalentTreeAlert.learned)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UpdateQuestProgress

// -------------------------------------------------------------------

// CDOTAUserMsg_QuestStatus

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_QuestStatus::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.player_id)
}

// optional uint32 quest_id = 2;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_quest_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_quest_id() const {
  return _internal_has_quest_id();
}
inline void CDOTAUserMsg_QuestStatus::clear_quest_id() {
  quest_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_quest_id() const {
  return quest_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::quest_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.quest_id)
  return _internal_quest_id();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  quest_id_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_quest_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quest_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.quest_id)
}

// optional uint32 challenge_id = 3;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_challenge_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_challenge_id() const {
  return _internal_has_challenge_id();
}
inline void CDOTAUserMsg_QuestStatus::clear_challenge_id() {
  challenge_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_challenge_id() const {
  return challenge_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::challenge_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.challenge_id)
  return _internal_challenge_id();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_challenge_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  challenge_id_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_challenge_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.challenge_id)
}

// optional uint32 progress = 4;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_progress() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_progress() const {
  return _internal_has_progress();
}
inline void CDOTAUserMsg_QuestStatus::clear_progress() {
  progress_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_progress() const {
  return progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::progress() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.progress)
  return _internal_progress();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  progress_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.progress)
}

// optional uint32 goal = 5;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_goal() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_goal() const {
  return _internal_has_goal();
}
inline void CDOTAUserMsg_QuestStatus::clear_goal() {
  goal_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_goal() const {
  return goal_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::goal() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.goal)
  return _internal_goal();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_goal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  goal_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_goal(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_goal(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.goal)
}

// optional uint32 query = 6;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_query() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_query() const {
  return _internal_has_query();
}
inline void CDOTAUserMsg_QuestStatus::clear_query() {
  query_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_query() const {
  return query_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::query() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.query)
  return _internal_query();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_query(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  query_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_query(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_query(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.query)
}

// optional float fail_gametime = 7;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_fail_gametime() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_fail_gametime() const {
  return _internal_has_fail_gametime();
}
inline void CDOTAUserMsg_QuestStatus::clear_fail_gametime() {
  fail_gametime_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline float CDOTAUserMsg_QuestStatus::_internal_fail_gametime() const {
  return fail_gametime_;
}
inline float CDOTAUserMsg_QuestStatus::fail_gametime() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.fail_gametime)
  return _internal_fail_gametime();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_fail_gametime(float value) {
  _has_bits_[0] |= 0x00000040u;
  fail_gametime_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_fail_gametime(float value) {
  _internal_set_fail_gametime(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.fail_gametime)
}

// optional uint32 item_ability_id = 8;
inline bool CDOTAUserMsg_QuestStatus::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QuestStatus::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_QuestStatus::clear_item_ability_id() {
  item_ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QuestStatus::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QuestStatus.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_QuestStatus::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_QuestStatus::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QuestStatus.item_ability_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SuggestHeroPick

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SuggestHeroPick::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SuggestHeroPick::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroPick::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroPick::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SuggestHeroPick.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_SuggestHeroPick::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SuggestHeroPick.player_id)
}

// optional uint32 hero_id = 2;
inline bool CDOTAUserMsg_SuggestHeroPick::_internal_has_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SuggestHeroPick::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroPick::_internal_hero_id() const {
  return hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroPick::hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SuggestHeroPick.hero_id)
  return _internal_hero_id();
}
inline void CDOTAUserMsg_SuggestHeroPick::_internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  hero_id_ = value;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SuggestHeroPick.hero_id)
}

// optional bool ban = 3;
inline bool CDOTAUserMsg_SuggestHeroPick::_internal_has_ban() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SuggestHeroPick::has_ban() const {
  return _internal_has_ban();
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_ban() {
  ban_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_SuggestHeroPick::_internal_ban() const {
  return ban_;
}
inline bool CDOTAUserMsg_SuggestHeroPick::ban() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SuggestHeroPick.ban)
  return _internal_ban();
}
inline void CDOTAUserMsg_SuggestHeroPick::_internal_set_ban(bool value) {
  _has_bits_[0] |= 0x00000004u;
  ban_ = value;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_ban(bool value) {
  _internal_set_ban(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SuggestHeroPick.ban)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SuggestHeroRole

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SuggestHeroRole::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SuggestHeroRole::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroRole::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SuggestHeroRole::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SuggestHeroRole.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_SuggestHeroRole::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_SuggestHeroRole::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SuggestHeroRole.player_id)
}

// optional string hero_role = 2;
inline bool CDOTAUserMsg_SuggestHeroRole::_internal_has_hero_role() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SuggestHeroRole::has_hero_role() const {
  return _internal_has_hero_role();
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_hero_role() {
  hero_role_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_SuggestHeroRole::hero_role() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SuggestHeroRole.hero_role)
  return _internal_hero_role();
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const std::string& value) {
  _internal_set_hero_role(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline std::string* CDOTAUserMsg_SuggestHeroRole::mutable_hero_role() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_SuggestHeroRole.hero_role)
  return _internal_mutable_hero_role();
}
inline const std::string& CDOTAUserMsg_SuggestHeroRole::_internal_hero_role() const {
  return hero_role_.Get();
}
inline void CDOTAUserMsg_SuggestHeroRole::_internal_set_hero_role(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_role_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hero_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hero_role_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline std::string* CDOTAUserMsg_SuggestHeroRole::_internal_mutable_hero_role() {
  _has_bits_[0] |= 0x00000001u;
  return hero_role_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_SuggestHeroRole::release_hero_role() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_SuggestHeroRole.hero_role)
  if (!_internal_has_hero_role()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hero_role_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_SuggestHeroRole::set_allocated_hero_role(std::string* hero_role) {
  if (hero_role != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hero_role_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hero_role,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_SuggestHeroRole.hero_role)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_KillcamDamageTaken

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  player_id_ = value;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.player_id)
}

// optional uint32 damage_taken = 2;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_damage_taken() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_damage_taken() const {
  return _internal_has_damage_taken();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_damage_taken() {
  damage_taken_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::_internal_damage_taken() const {
  return damage_taken_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::damage_taken() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.damage_taken)
  return _internal_damage_taken();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_damage_taken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  damage_taken_ = value;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_taken(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage_taken(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.damage_taken)
}

// optional uint32 item_type = 3;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_item_type() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_item_type() const {
  return _internal_has_item_type();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_item_type() {
  item_type_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::_internal_item_type() const {
  return item_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::item_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.item_type)
  return _internal_item_type();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_item_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  item_type_ = value;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_item_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.item_type)
}

// optional uint32 item_ability_id = 4;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_item_ability_id() {
  item_ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_KillcamDamageTaken::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.item_ability_id)
}

// optional string hero_name = 5;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_hero_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_hero_name() const {
  return _internal_has_hero_name();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_hero_name() {
  hero_name_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_KillcamDamageTaken::hero_name() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.hero_name)
  return _internal_hero_name();
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const std::string& value) {
  _internal_set_hero_name(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::mutable_hero_name() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_KillcamDamageTaken.hero_name)
  return _internal_mutable_hero_name();
}
inline const std::string& CDOTAUserMsg_KillcamDamageTaken::_internal_hero_name() const {
  return hero_name_.Get();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_hero_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  hero_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::_internal_mutable_hero_name() {
  _has_bits_[0] |= 0x00000001u;
  return hero_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::release_hero_name() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_KillcamDamageTaken.hero_name)
  if (!_internal_has_hero_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return hero_name_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_allocated_hero_name(std::string* hero_name) {
  if (hero_name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  hero_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), hero_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_KillcamDamageTaken.hero_name)
}

// optional string damage_color = 6;
inline bool CDOTAUserMsg_KillcamDamageTaken::_internal_has_damage_color() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_KillcamDamageTaken::has_damage_color() const {
  return _internal_has_damage_color();
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_damage_color() {
  damage_color_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_KillcamDamageTaken::damage_color() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_KillcamDamageTaken.damage_color)
  return _internal_damage_color();
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const std::string& value) {
  _internal_set_damage_color(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::mutable_damage_color() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_KillcamDamageTaken.damage_color)
  return _internal_mutable_damage_color();
}
inline const std::string& CDOTAUserMsg_KillcamDamageTaken::_internal_damage_color() const {
  return damage_color_.Get();
}
inline void CDOTAUserMsg_KillcamDamageTaken::_internal_set_damage_color(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  damage_color_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  damage_color_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  damage_color_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  damage_color_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::_internal_mutable_damage_color() {
  _has_bits_[0] |= 0x00000002u;
  return damage_color_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_KillcamDamageTaken::release_damage_color() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_KillcamDamageTaken.damage_color)
  if (!_internal_has_damage_color()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return damage_color_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_allocated_damage_color(std::string* damage_color) {
  if (damage_color != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  damage_color_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), damage_color,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_KillcamDamageTaken.damage_color)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SelectPenaltyGold

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SelectPenaltyGold::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SelectPenaltyGold::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SelectPenaltyGold::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SelectPenaltyGold::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SelectPenaltyGold.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_SelectPenaltyGold::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SelectPenaltyGold.player_id)
}

// optional sint32 cost = 2;
inline bool CDOTAUserMsg_SelectPenaltyGold::_internal_has_cost() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SelectPenaltyGold::has_cost() const {
  return _internal_has_cost();
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_cost() {
  cost_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SelectPenaltyGold::_internal_cost() const {
  return cost_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SelectPenaltyGold::cost() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SelectPenaltyGold.cost)
  return _internal_cost();
}
inline void CDOTAUserMsg_SelectPenaltyGold::_internal_set_cost(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  cost_ = value;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_cost(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cost(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SelectPenaltyGold.cost)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_RollDiceResult

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_RollDiceResult::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RollDiceResult::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_RollDiceResult::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RollDiceResult.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_RollDiceResult::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_RollDiceResult::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RollDiceResult.player_id)
}

// optional uint32 channel_type = 2;
inline bool CDOTAUserMsg_RollDiceResult::_internal_has_channel_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RollDiceResult::has_channel_type() const {
  return _internal_has_channel_type();
}
inline void CDOTAUserMsg_RollDiceResult::clear_channel_type() {
  channel_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::_internal_channel_type() const {
  return channel_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::channel_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RollDiceResult.channel_type)
  return _internal_channel_type();
}
inline void CDOTAUserMsg_RollDiceResult::_internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  channel_type_ = value;
}
inline void CDOTAUserMsg_RollDiceResult::set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RollDiceResult.channel_type)
}

// optional uint32 roll_min = 3;
inline bool CDOTAUserMsg_RollDiceResult::_internal_has_roll_min() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RollDiceResult::has_roll_min() const {
  return _internal_has_roll_min();
}
inline void CDOTAUserMsg_RollDiceResult::clear_roll_min() {
  roll_min_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::_internal_roll_min() const {
  return roll_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::roll_min() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RollDiceResult.roll_min)
  return _internal_roll_min();
}
inline void CDOTAUserMsg_RollDiceResult::_internal_set_roll_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  roll_min_ = value;
}
inline void CDOTAUserMsg_RollDiceResult::set_roll_min(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_roll_min(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RollDiceResult.roll_min)
}

// optional uint32 roll_max = 4;
inline bool CDOTAUserMsg_RollDiceResult::_internal_has_roll_max() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RollDiceResult::has_roll_max() const {
  return _internal_has_roll_max();
}
inline void CDOTAUserMsg_RollDiceResult::clear_roll_max() {
  roll_max_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::_internal_roll_max() const {
  return roll_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::roll_max() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RollDiceResult.roll_max)
  return _internal_roll_max();
}
inline void CDOTAUserMsg_RollDiceResult::_internal_set_roll_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  roll_max_ = value;
}
inline void CDOTAUserMsg_RollDiceResult::set_roll_max(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_roll_max(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RollDiceResult.roll_max)
}

// optional uint32 result = 5;
inline bool CDOTAUserMsg_RollDiceResult::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_RollDiceResult::has_result() const {
  return _internal_has_result();
}
inline void CDOTAUserMsg_RollDiceResult::clear_result() {
  result_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::_internal_result() const {
  return result_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_RollDiceResult::result() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_RollDiceResult.result)
  return _internal_result();
}
inline void CDOTAUserMsg_RollDiceResult::_internal_set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  result_ = value;
}
inline void CDOTAUserMsg_RollDiceResult::set_result(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_RollDiceResult.result)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_FlipCoinResult

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_FlipCoinResult::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FlipCoinResult::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_FlipCoinResult::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FlipCoinResult::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FlipCoinResult::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FlipCoinResult.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_FlipCoinResult::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_FlipCoinResult::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FlipCoinResult.player_id)
}

// optional uint32 channel_type = 2;
inline bool CDOTAUserMsg_FlipCoinResult::_internal_has_channel_type() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FlipCoinResult::has_channel_type() const {
  return _internal_has_channel_type();
}
inline void CDOTAUserMsg_FlipCoinResult::clear_channel_type() {
  channel_type_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FlipCoinResult::_internal_channel_type() const {
  return channel_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FlipCoinResult::channel_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FlipCoinResult.channel_type)
  return _internal_channel_type();
}
inline void CDOTAUserMsg_FlipCoinResult::_internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  channel_type_ = value;
}
inline void CDOTAUserMsg_FlipCoinResult::set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FlipCoinResult.channel_type)
}

// optional bool result = 3;
inline bool CDOTAUserMsg_FlipCoinResult::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FlipCoinResult::has_result() const {
  return _internal_has_result();
}
inline void CDOTAUserMsg_FlipCoinResult::clear_result() {
  result_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_FlipCoinResult::_internal_result() const {
  return result_;
}
inline bool CDOTAUserMsg_FlipCoinResult::result() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FlipCoinResult.result)
  return _internal_result();
}
inline void CDOTAUserMsg_FlipCoinResult::_internal_set_result(bool value) {
  _has_bits_[0] |= 0x00000004u;
  result_ = value;
}
inline void CDOTAUserMsg_FlipCoinResult::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FlipCoinResult.result)
}

// -------------------------------------------------------------------

// CDOTAUserMessage_RequestItemSuggestions

// optional uint32 player_id = 1;
inline bool CDOTAUserMessage_RequestItemSuggestions::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMessage_RequestItemSuggestions::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMessage_RequestItemSuggestions::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_RequestItemSuggestions::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_RequestItemSuggestions::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMessage_RequestItemSuggestions.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMessage_RequestItemSuggestions::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMessage_RequestItemSuggestions::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMessage_RequestItemSuggestions.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMessage_TeamCaptainChanged

// optional uint32 team = 1;
inline bool CDOTAUserMessage_TeamCaptainChanged::_internal_has_team() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMessage_TeamCaptainChanged::has_team() const {
  return _internal_has_team();
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_team() {
  team_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_TeamCaptainChanged::_internal_team() const {
  return team_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_TeamCaptainChanged::team() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMessage_TeamCaptainChanged.team)
  return _internal_team();
}
inline void CDOTAUserMessage_TeamCaptainChanged::_internal_set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_ = value;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMessage_TeamCaptainChanged.team)
}

// optional uint32 captain_player_id = 2;
inline bool CDOTAUserMessage_TeamCaptainChanged::_internal_has_captain_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMessage_TeamCaptainChanged::has_captain_player_id() const {
  return _internal_has_captain_player_id();
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_captain_player_id() {
  captain_player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_TeamCaptainChanged::_internal_captain_player_id() const {
  return captain_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMessage_TeamCaptainChanged::captain_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMessage_TeamCaptainChanged.captain_player_id)
  return _internal_captain_player_id();
}
inline void CDOTAUserMessage_TeamCaptainChanged::_internal_set_captain_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  captain_player_id_ = value;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_captain_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_captain_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMessage_TeamCaptainChanged.captain_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatWheelCooldown

// optional uint32 message_id = 1;
inline bool CDOTAUserMsg_ChatWheelCooldown::_internal_has_message_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheelCooldown::has_message_id() const {
  return _internal_has_message_id();
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_message_id() {
  message_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheelCooldown::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatWheelCooldown::message_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheelCooldown.message_id)
  return _internal_message_id();
}
inline void CDOTAUserMsg_ChatWheelCooldown::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  message_id_ = value;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_message_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheelCooldown.message_id)
}

// optional float cooldown_remaining = 2;
inline bool CDOTAUserMsg_ChatWheelCooldown::_internal_has_cooldown_remaining() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatWheelCooldown::has_cooldown_remaining() const {
  return _internal_has_cooldown_remaining();
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_cooldown_remaining() {
  cooldown_remaining_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float CDOTAUserMsg_ChatWheelCooldown::_internal_cooldown_remaining() const {
  return cooldown_remaining_;
}
inline float CDOTAUserMsg_ChatWheelCooldown::cooldown_remaining() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatWheelCooldown.cooldown_remaining)
  return _internal_cooldown_remaining();
}
inline void CDOTAUserMsg_ChatWheelCooldown::_internal_set_cooldown_remaining(float value) {
  _has_bits_[0] |= 0x00000002u;
  cooldown_remaining_ = value;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_cooldown_remaining(float value) {
  _internal_set_cooldown_remaining(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatWheelCooldown.cooldown_remaining)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HeroRelicProgress

// optional uint32 hero_relic_type = 1;
inline bool CDOTAUserMsg_HeroRelicProgress::_internal_has_hero_relic_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HeroRelicProgress::has_hero_relic_type() const {
  return _internal_has_hero_relic_type();
}
inline void CDOTAUserMsg_HeroRelicProgress::clear_hero_relic_type() {
  hero_relic_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::_internal_hero_relic_type() const {
  return hero_relic_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::hero_relic_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HeroRelicProgress.hero_relic_type)
  return _internal_hero_relic_type();
}
inline void CDOTAUserMsg_HeroRelicProgress::_internal_set_hero_relic_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  hero_relic_type_ = value;
}
inline void CDOTAUserMsg_HeroRelicProgress::set_hero_relic_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_relic_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HeroRelicProgress.hero_relic_type)
}

// optional uint32 value = 2;
inline bool CDOTAUserMsg_HeroRelicProgress::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HeroRelicProgress::has_value() const {
  return _internal_has_value();
}
inline void CDOTAUserMsg_HeroRelicProgress::clear_value() {
  value_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::value() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HeroRelicProgress.value)
  return _internal_value();
}
inline void CDOTAUserMsg_HeroRelicProgress::_internal_set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void CDOTAUserMsg_HeroRelicProgress::set_value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HeroRelicProgress.value)
}

// optional uint32 ehandle = 3;
inline bool CDOTAUserMsg_HeroRelicProgress::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HeroRelicProgress::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_HeroRelicProgress::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HeroRelicProgress.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_HeroRelicProgress::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_HeroRelicProgress::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HeroRelicProgress.ehandle)
}

// optional uint32 event_id = 4;
inline bool CDOTAUserMsg_HeroRelicProgress::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HeroRelicProgress::has_event_id() const {
  return _internal_has_event_id();
}
inline void CDOTAUserMsg_HeroRelicProgress::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::_internal_event_id() const {
  return event_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HeroRelicProgress::event_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HeroRelicProgress.event_id)
  return _internal_event_id();
}
inline void CDOTAUserMsg_HeroRelicProgress::_internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_id_ = value;
}
inline void CDOTAUserMsg_HeroRelicProgress::set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HeroRelicProgress.event_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AbilityDraftRequestAbility

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityDraftRequestAbility::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityDraftRequestAbility::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityDraftRequestAbility.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityDraftRequestAbility.player_id)
}

// optional uint32 requested_ability_id = 2;
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::_internal_has_requested_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::has_requested_ability_id() const {
  return _internal_has_requested_ability_id();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::clear_requested_ability_id() {
  requested_ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityDraftRequestAbility::_internal_requested_ability_id() const {
  return requested_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AbilityDraftRequestAbility::requested_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityDraftRequestAbility.requested_ability_id)
  return _internal_requested_ability_id();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::_internal_set_requested_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  requested_ability_id_ = value;
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::set_requested_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requested_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityDraftRequestAbility.requested_ability_id)
}

// optional bool ctrl_is_down = 3;
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::_internal_has_ctrl_is_down() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::has_ctrl_is_down() const {
  return _internal_has_ctrl_is_down();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::clear_ctrl_is_down() {
  ctrl_is_down_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::_internal_ctrl_is_down() const {
  return ctrl_is_down_;
}
inline bool CDOTAUserMsg_AbilityDraftRequestAbility::ctrl_is_down() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AbilityDraftRequestAbility.ctrl_is_down)
  return _internal_ctrl_is_down();
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::_internal_set_ctrl_is_down(bool value) {
  _has_bits_[0] |= 0x00000004u;
  ctrl_is_down_ = value;
}
inline void CDOTAUserMsg_AbilityDraftRequestAbility::set_ctrl_is_down(bool value) {
  _internal_set_ctrl_is_down(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AbilityDraftRequestAbility.ctrl_is_down)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DamageReport

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_DamageReport::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DamageReport::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_DamageReport::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DamageReport.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_DamageReport::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_DamageReport::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DamageReport.player_id)
}

// optional uint32 target_hero_id = 2;
inline bool CDOTAUserMsg_DamageReport::_internal_has_target_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DamageReport::has_target_hero_id() const {
  return _internal_has_target_hero_id();
}
inline void CDOTAUserMsg_DamageReport::clear_target_hero_id() {
  target_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::_internal_target_hero_id() const {
  return target_hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::target_hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DamageReport.target_hero_id)
  return _internal_target_hero_id();
}
inline void CDOTAUserMsg_DamageReport::_internal_set_target_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_hero_id_ = value;
}
inline void CDOTAUserMsg_DamageReport::set_target_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DamageReport.target_hero_id)
}

// optional uint32 source_hero_id = 3;
inline bool CDOTAUserMsg_DamageReport::_internal_has_source_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DamageReport::has_source_hero_id() const {
  return _internal_has_source_hero_id();
}
inline void CDOTAUserMsg_DamageReport::clear_source_hero_id() {
  source_hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::_internal_source_hero_id() const {
  return source_hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DamageReport::source_hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DamageReport.source_hero_id)
  return _internal_source_hero_id();
}
inline void CDOTAUserMsg_DamageReport::_internal_set_source_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  source_hero_id_ = value;
}
inline void CDOTAUserMsg_DamageReport::set_source_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DamageReport.source_hero_id)
}

// optional int32 damage_amount = 4;
inline bool CDOTAUserMsg_DamageReport::_internal_has_damage_amount() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DamageReport::has_damage_amount() const {
  return _internal_has_damage_amount();
}
inline void CDOTAUserMsg_DamageReport::clear_damage_amount() {
  damage_amount_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DamageReport::_internal_damage_amount() const {
  return damage_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_DamageReport::damage_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DamageReport.damage_amount)
  return _internal_damage_amount();
}
inline void CDOTAUserMsg_DamageReport::_internal_set_damage_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  damage_amount_ = value;
}
inline void CDOTAUserMsg_DamageReport::set_damage_amount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_damage_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DamageReport.damage_amount)
}

// optional bool broadcast = 5;
inline bool CDOTAUserMsg_DamageReport::_internal_has_broadcast() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DamageReport::has_broadcast() const {
  return _internal_has_broadcast();
}
inline void CDOTAUserMsg_DamageReport::clear_broadcast() {
  broadcast_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_DamageReport::_internal_broadcast() const {
  return broadcast_;
}
inline bool CDOTAUserMsg_DamageReport::broadcast() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DamageReport.broadcast)
  return _internal_broadcast();
}
inline void CDOTAUserMsg_DamageReport::_internal_set_broadcast(bool value) {
  _has_bits_[0] |= 0x00000010u;
  broadcast_ = value;
}
inline void CDOTAUserMsg_DamageReport::set_broadcast(bool value) {
  _internal_set_broadcast(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DamageReport.broadcast)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SalutePlayer

// optional int32 source_player_id = 1;
inline bool CDOTAUserMsg_SalutePlayer::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SalutePlayer::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_SalutePlayer::clear_source_player_id() {
  source_player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SalutePlayer::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SalutePlayer::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SalutePlayer.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_SalutePlayer::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_SalutePlayer::set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SalutePlayer.source_player_id)
}

// optional int32 target_player_id = 2;
inline bool CDOTAUserMsg_SalutePlayer::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SalutePlayer::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_SalutePlayer::clear_target_player_id() {
  target_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SalutePlayer::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_SalutePlayer::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SalutePlayer.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_SalutePlayer::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_SalutePlayer::set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SalutePlayer.target_player_id)
}

// optional uint32 tip_amount = 3;
inline bool CDOTAUserMsg_SalutePlayer::_internal_has_tip_amount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SalutePlayer::has_tip_amount() const {
  return _internal_has_tip_amount();
}
inline void CDOTAUserMsg_SalutePlayer::clear_tip_amount() {
  tip_amount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SalutePlayer::_internal_tip_amount() const {
  return tip_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SalutePlayer::tip_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SalutePlayer.tip_amount)
  return _internal_tip_amount();
}
inline void CDOTAUserMsg_SalutePlayer::_internal_set_tip_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  tip_amount_ = value;
}
inline void CDOTAUserMsg_SalutePlayer::set_tip_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tip_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SalutePlayer.tip_amount)
}

// optional uint32 event_id = 4;
inline bool CDOTAUserMsg_SalutePlayer::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_SalutePlayer::has_event_id() const {
  return _internal_has_event_id();
}
inline void CDOTAUserMsg_SalutePlayer::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SalutePlayer::_internal_event_id() const {
  return event_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_SalutePlayer::event_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_SalutePlayer.event_id)
  return _internal_event_id();
}
inline void CDOTAUserMsg_SalutePlayer::_internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_id_ = value;
}
inline void CDOTAUserMsg_SalutePlayer::set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_SalutePlayer.event_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TipAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_TipAlert::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TipAlert::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_TipAlert::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TipAlert::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_TipAlert::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TipAlert.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_TipAlert::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_TipAlert::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TipAlert.player_id)
}

// optional string tip_text = 2;
inline bool CDOTAUserMsg_TipAlert::_internal_has_tip_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_TipAlert::has_tip_text() const {
  return _internal_has_tip_text();
}
inline void CDOTAUserMsg_TipAlert::clear_tip_text() {
  tip_text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_TipAlert::tip_text() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_TipAlert.tip_text)
  return _internal_tip_text();
}
inline void CDOTAUserMsg_TipAlert::set_tip_text(const std::string& value) {
  _internal_set_tip_text(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_TipAlert.tip_text)
}
inline std::string* CDOTAUserMsg_TipAlert::mutable_tip_text() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_TipAlert.tip_text)
  return _internal_mutable_tip_text();
}
inline const std::string& CDOTAUserMsg_TipAlert::_internal_tip_text() const {
  return tip_text_.Get();
}
inline void CDOTAUserMsg_TipAlert::_internal_set_tip_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  tip_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_TipAlert::set_tip_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  tip_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_TipAlert.tip_text)
}
inline void CDOTAUserMsg_TipAlert::set_tip_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  tip_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_TipAlert.tip_text)
}
inline void CDOTAUserMsg_TipAlert::set_tip_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  tip_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_TipAlert.tip_text)
}
inline std::string* CDOTAUserMsg_TipAlert::_internal_mutable_tip_text() {
  _has_bits_[0] |= 0x00000001u;
  return tip_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_TipAlert::release_tip_text() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_TipAlert.tip_text)
  if (!_internal_has_tip_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return tip_text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_TipAlert::set_allocated_tip_text(std::string* tip_text) {
  if (tip_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tip_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tip_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_TipAlert.tip_text)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ReplaceQueryUnit

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_ReplaceQueryUnit::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReplaceQueryUnit::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReplaceQueryUnit.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ReplaceQueryUnit::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReplaceQueryUnit.player_id)
}

// optional uint32 source_entindex = 2;
inline bool CDOTAUserMsg_ReplaceQueryUnit::_internal_has_source_entindex() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReplaceQueryUnit::has_source_entindex() const {
  return _internal_has_source_entindex();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::clear_source_entindex() {
  source_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::_internal_source_entindex() const {
  return source_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::source_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReplaceQueryUnit.source_entindex)
  return _internal_source_entindex();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::_internal_set_source_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_entindex_ = value;
}
inline void CDOTAUserMsg_ReplaceQueryUnit::set_source_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReplaceQueryUnit.source_entindex)
}

// optional uint32 target_entindex = 3;
inline bool CDOTAUserMsg_ReplaceQueryUnit::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ReplaceQueryUnit::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ReplaceQueryUnit::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ReplaceQueryUnit.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_ReplaceQueryUnit::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_ReplaceQueryUnit::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ReplaceQueryUnit.target_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ESArcanaCombo

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_ESArcanaCombo::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaCombo::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_ESArcanaCombo::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaCombo.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_ESArcanaCombo::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_ESArcanaCombo::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaCombo.ehandle)
}

// optional uint32 combo_count = 2;
inline bool CDOTAUserMsg_ESArcanaCombo::_internal_has_combo_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaCombo::has_combo_count() const {
  return _internal_has_combo_count();
}
inline void CDOTAUserMsg_ESArcanaCombo::clear_combo_count() {
  combo_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::_internal_combo_count() const {
  return combo_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::combo_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaCombo.combo_count)
  return _internal_combo_count();
}
inline void CDOTAUserMsg_ESArcanaCombo::_internal_set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  combo_count_ = value;
}
inline void CDOTAUserMsg_ESArcanaCombo::set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_combo_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaCombo.combo_count)
}

// optional uint32 arcana_level = 3;
inline bool CDOTAUserMsg_ESArcanaCombo::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaCombo::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_ESArcanaCombo::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaCombo::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaCombo.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_ESArcanaCombo::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_ESArcanaCombo::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaCombo.arcana_level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ESArcanaComboSummary

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_ESArcanaComboSummary::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaComboSummary::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaComboSummary.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_ESArcanaComboSummary::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaComboSummary.ehandle)
}

// optional uint32 combo_count = 2;
inline bool CDOTAUserMsg_ESArcanaComboSummary::_internal_has_combo_count() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaComboSummary::has_combo_count() const {
  return _internal_has_combo_count();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::clear_combo_count() {
  combo_count_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::_internal_combo_count() const {
  return combo_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::combo_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaComboSummary.combo_count)
  return _internal_combo_count();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::_internal_set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  combo_count_ = value;
}
inline void CDOTAUserMsg_ESArcanaComboSummary::set_combo_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_combo_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaComboSummary.combo_count)
}

// optional uint32 damage_amount = 3;
inline bool CDOTAUserMsg_ESArcanaComboSummary::_internal_has_damage_amount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ESArcanaComboSummary::has_damage_amount() const {
  return _internal_has_damage_amount();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::clear_damage_amount() {
  damage_amount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::_internal_damage_amount() const {
  return damage_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ESArcanaComboSummary::damage_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ESArcanaComboSummary.damage_amount)
  return _internal_damage_amount();
}
inline void CDOTAUserMsg_ESArcanaComboSummary::_internal_set_damage_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  damage_amount_ = value;
}
inline void CDOTAUserMsg_ESArcanaComboSummary::set_damage_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ESArcanaComboSummary.damage_amount)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_OMArcanaCombo

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_OMArcanaCombo::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OMArcanaCombo::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_OMArcanaCombo::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OMArcanaCombo.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_OMArcanaCombo::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_OMArcanaCombo::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OMArcanaCombo.ehandle)
}

// optional uint32 multicast_amount = 2;
inline bool CDOTAUserMsg_OMArcanaCombo::_internal_has_multicast_amount() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OMArcanaCombo::has_multicast_amount() const {
  return _internal_has_multicast_amount();
}
inline void CDOTAUserMsg_OMArcanaCombo::clear_multicast_amount() {
  multicast_amount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::_internal_multicast_amount() const {
  return multicast_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::multicast_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OMArcanaCombo.multicast_amount)
  return _internal_multicast_amount();
}
inline void CDOTAUserMsg_OMArcanaCombo::_internal_set_multicast_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  multicast_amount_ = value;
}
inline void CDOTAUserMsg_OMArcanaCombo::set_multicast_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_multicast_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OMArcanaCombo.multicast_amount)
}

// optional uint32 arcana_level = 3;
inline bool CDOTAUserMsg_OMArcanaCombo::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OMArcanaCombo::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_OMArcanaCombo::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OMArcanaCombo.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_OMArcanaCombo::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_OMArcanaCombo::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OMArcanaCombo.arcana_level)
}

// optional uint32 multicast_chance = 4;
inline bool CDOTAUserMsg_OMArcanaCombo::_internal_has_multicast_chance() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OMArcanaCombo::has_multicast_chance() const {
  return _internal_has_multicast_chance();
}
inline void CDOTAUserMsg_OMArcanaCombo::clear_multicast_chance() {
  multicast_chance_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::_internal_multicast_chance() const {
  return multicast_chance_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OMArcanaCombo::multicast_chance() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OMArcanaCombo.multicast_chance)
  return _internal_multicast_chance();
}
inline void CDOTAUserMsg_OMArcanaCombo::_internal_set_multicast_chance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  multicast_chance_ = value;
}
inline void CDOTAUserMsg_OMArcanaCombo::set_multicast_chance(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_multicast_chance(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OMArcanaCombo.multicast_chance)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HighFiveCompleted

// optional uint32 player_id_1 = 1;
inline bool CDOTAUserMsg_HighFiveCompleted::_internal_has_player_id_1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HighFiveCompleted::has_player_id_1() const {
  return _internal_has_player_id_1();
}
inline void CDOTAUserMsg_HighFiveCompleted::clear_player_id_1() {
  player_id_1_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveCompleted::_internal_player_id_1() const {
  return player_id_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveCompleted::player_id_1() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HighFiveCompleted.player_id_1)
  return _internal_player_id_1();
}
inline void CDOTAUserMsg_HighFiveCompleted::_internal_set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_1_ = value;
}
inline void CDOTAUserMsg_HighFiveCompleted::set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id_1(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HighFiveCompleted.player_id_1)
}

// optional uint32 player_id_2 = 2;
inline bool CDOTAUserMsg_HighFiveCompleted::_internal_has_player_id_2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HighFiveCompleted::has_player_id_2() const {
  return _internal_has_player_id_2();
}
inline void CDOTAUserMsg_HighFiveCompleted::clear_player_id_2() {
  player_id_2_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveCompleted::_internal_player_id_2() const {
  return player_id_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveCompleted::player_id_2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HighFiveCompleted.player_id_2)
  return _internal_player_id_2();
}
inline void CDOTAUserMsg_HighFiveCompleted::_internal_set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_2_ = value;
}
inline void CDOTAUserMsg_HighFiveCompleted::set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id_2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HighFiveCompleted.player_id_2)
}

// optional bool special_high_five = 3;
inline bool CDOTAUserMsg_HighFiveCompleted::_internal_has_special_high_five() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HighFiveCompleted::has_special_high_five() const {
  return _internal_has_special_high_five();
}
inline void CDOTAUserMsg_HighFiveCompleted::clear_special_high_five() {
  special_high_five_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_HighFiveCompleted::_internal_special_high_five() const {
  return special_high_five_;
}
inline bool CDOTAUserMsg_HighFiveCompleted::special_high_five() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HighFiveCompleted.special_high_five)
  return _internal_special_high_five();
}
inline void CDOTAUserMsg_HighFiveCompleted::_internal_set_special_high_five(bool value) {
  _has_bits_[0] |= 0x00000004u;
  special_high_five_ = value;
}
inline void CDOTAUserMsg_HighFiveCompleted::set_special_high_five(bool value) {
  _internal_set_special_high_five(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HighFiveCompleted.special_high_five)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HighFiveLeftHanging

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_HighFiveLeftHanging::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HighFiveLeftHanging::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_HighFiveLeftHanging::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveLeftHanging::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HighFiveLeftHanging::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HighFiveLeftHanging.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_HighFiveLeftHanging::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_HighFiveLeftHanging::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HighFiveLeftHanging.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ShovelUnearth

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_ShovelUnearth::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShovelUnearth::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_ShovelUnearth::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShovelUnearth::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShovelUnearth::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShovelUnearth.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_ShovelUnearth::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_ = value;
}
inline void CDOTAUserMsg_ShovelUnearth::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShovelUnearth.player_id)
}

// optional bool all_chat = 2;
inline bool CDOTAUserMsg_ShovelUnearth::_internal_has_all_chat() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShovelUnearth::has_all_chat() const {
  return _internal_has_all_chat();
}
inline void CDOTAUserMsg_ShovelUnearth::clear_all_chat() {
  all_chat_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CDOTAUserMsg_ShovelUnearth::_internal_all_chat() const {
  return all_chat_;
}
inline bool CDOTAUserMsg_ShovelUnearth::all_chat() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShovelUnearth.all_chat)
  return _internal_all_chat();
}
inline void CDOTAUserMsg_ShovelUnearth::_internal_set_all_chat(bool value) {
  _has_bits_[0] |= 0x00000004u;
  all_chat_ = value;
}
inline void CDOTAUserMsg_ShovelUnearth::set_all_chat(bool value) {
  _internal_set_all_chat(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShovelUnearth.all_chat)
}

// optional string locstring = 3;
inline bool CDOTAUserMsg_ShovelUnearth::_internal_has_locstring() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShovelUnearth::has_locstring() const {
  return _internal_has_locstring();
}
inline void CDOTAUserMsg_ShovelUnearth::clear_locstring() {
  locstring_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ShovelUnearth::locstring() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShovelUnearth.locstring)
  return _internal_locstring();
}
inline void CDOTAUserMsg_ShovelUnearth::set_locstring(const std::string& value) {
  _internal_set_locstring(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShovelUnearth.locstring)
}
inline std::string* CDOTAUserMsg_ShovelUnearth::mutable_locstring() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ShovelUnearth.locstring)
  return _internal_mutable_locstring();
}
inline const std::string& CDOTAUserMsg_ShovelUnearth::_internal_locstring() const {
  return locstring_.Get();
}
inline void CDOTAUserMsg_ShovelUnearth::_internal_set_locstring(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  locstring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ShovelUnearth::set_locstring(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  locstring_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ShovelUnearth.locstring)
}
inline void CDOTAUserMsg_ShovelUnearth::set_locstring(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  locstring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ShovelUnearth.locstring)
}
inline void CDOTAUserMsg_ShovelUnearth::set_locstring(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  locstring_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ShovelUnearth.locstring)
}
inline std::string* CDOTAUserMsg_ShovelUnearth::_internal_mutable_locstring() {
  _has_bits_[0] |= 0x00000001u;
  return locstring_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ShovelUnearth::release_locstring() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ShovelUnearth.locstring)
  if (!_internal_has_locstring()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return locstring_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ShovelUnearth::set_allocated_locstring(std::string* locstring) {
  if (locstring != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  locstring_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), locstring,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ShovelUnearth.locstring)
}

// optional uint32 quantity = 4;
inline bool CDOTAUserMsg_ShovelUnearth::_internal_has_quantity() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ShovelUnearth::has_quantity() const {
  return _internal_has_quantity();
}
inline void CDOTAUserMsg_ShovelUnearth::clear_quantity() {
  quantity_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShovelUnearth::_internal_quantity() const {
  return quantity_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ShovelUnearth::quantity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ShovelUnearth.quantity)
  return _internal_quantity();
}
inline void CDOTAUserMsg_ShovelUnearth::_internal_set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  quantity_ = value;
}
inline void CDOTAUserMsg_ShovelUnearth::set_quantity(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_quantity(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ShovelUnearth.quantity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AllStarEvent_PlayerScore

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent_PlayerScore::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::clear_player_id() {
  player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent_PlayerScore::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.PlayerScore.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::set_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.PlayerScore.player_id)
}

// optional uint32 score_sans_kda = 2;
inline bool CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_has_score_sans_kda() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent_PlayerScore::has_score_sans_kda() const {
  return _internal_has_score_sans_kda();
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::clear_score_sans_kda() {
  score_sans_kda_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_score_sans_kda() const {
  return score_sans_kda_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent_PlayerScore::score_sans_kda() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.PlayerScore.score_sans_kda)
  return _internal_score_sans_kda();
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::_internal_set_score_sans_kda(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  score_sans_kda_ = value;
}
inline void CDOTAUserMsg_AllStarEvent_PlayerScore::set_score_sans_kda(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_score_sans_kda(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.PlayerScore.score_sans_kda)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AllStarEvent

// optional int32 source_player_id = 1;
inline bool CDOTAUserMsg_AllStarEvent::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_AllStarEvent::clear_source_player_id() {
  source_player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_AllStarEvent::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_AllStarEvent::set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.source_player_id)
}

// optional int32 target_player_id = 2;
inline bool CDOTAUserMsg_AllStarEvent::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_AllStarEvent::clear_target_player_id() {
  target_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_AllStarEvent::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_AllStarEvent::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_AllStarEvent::set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.target_player_id)
}

// optional uint32 point_amount = 3;
inline bool CDOTAUserMsg_AllStarEvent::_internal_has_point_amount() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent::has_point_amount() const {
  return _internal_has_point_amount();
}
inline void CDOTAUserMsg_AllStarEvent::clear_point_amount() {
  point_amount_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent::_internal_point_amount() const {
  return point_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent::point_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.point_amount)
  return _internal_point_amount();
}
inline void CDOTAUserMsg_AllStarEvent::_internal_set_point_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  point_amount_ = value;
}
inline void CDOTAUserMsg_AllStarEvent::set_point_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_point_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.point_amount)
}

// optional uint32 event_id = 4;
inline bool CDOTAUserMsg_AllStarEvent::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AllStarEvent::has_event_id() const {
  return _internal_has_event_id();
}
inline void CDOTAUserMsg_AllStarEvent::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent::_internal_event_id() const {
  return event_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AllStarEvent::event_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.event_id)
  return _internal_event_id();
}
inline void CDOTAUserMsg_AllStarEvent::_internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  event_id_ = value;
}
inline void CDOTAUserMsg_AllStarEvent::set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AllStarEvent.event_id)
}

// repeated .CDOTAUserMsg_AllStarEvent.PlayerScore player_scores = 5;
inline int CDOTAUserMsg_AllStarEvent::_internal_player_scores_size() const {
  return player_scores_.size();
}
inline int CDOTAUserMsg_AllStarEvent::player_scores_size() const {
  return _internal_player_scores_size();
}
inline void CDOTAUserMsg_AllStarEvent::clear_player_scores() {
  player_scores_.Clear();
}
inline ::CDOTAUserMsg_AllStarEvent_PlayerScore* CDOTAUserMsg_AllStarEvent::mutable_player_scores(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_AllStarEvent.player_scores)
  return player_scores_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_AllStarEvent_PlayerScore >*
CDOTAUserMsg_AllStarEvent::mutable_player_scores() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_AllStarEvent.player_scores)
  return &player_scores_;
}
inline const ::CDOTAUserMsg_AllStarEvent_PlayerScore& CDOTAUserMsg_AllStarEvent::_internal_player_scores(int index) const {
  return player_scores_.Get(index);
}
inline const ::CDOTAUserMsg_AllStarEvent_PlayerScore& CDOTAUserMsg_AllStarEvent::player_scores(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AllStarEvent.player_scores)
  return _internal_player_scores(index);
}
inline ::CDOTAUserMsg_AllStarEvent_PlayerScore* CDOTAUserMsg_AllStarEvent::_internal_add_player_scores() {
  return player_scores_.Add();
}
inline ::CDOTAUserMsg_AllStarEvent_PlayerScore* CDOTAUserMsg_AllStarEvent::add_player_scores() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_AllStarEvent.player_scores)
  return _internal_add_player_scores();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_AllStarEvent_PlayerScore >&
CDOTAUserMsg_AllStarEvent::player_scores() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_AllStarEvent.player_scores)
  return player_scores_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_QueuedOrderRemoved

// repeated uint32 unit_order_sequence = 1;
inline int CDOTAUserMsg_QueuedOrderRemoved::_internal_unit_order_sequence_size() const {
  return unit_order_sequence_.size();
}
inline int CDOTAUserMsg_QueuedOrderRemoved::unit_order_sequence_size() const {
  return _internal_unit_order_sequence_size();
}
inline void CDOTAUserMsg_QueuedOrderRemoved::clear_unit_order_sequence() {
  unit_order_sequence_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QueuedOrderRemoved::_internal_unit_order_sequence(int index) const {
  return unit_order_sequence_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QueuedOrderRemoved::unit_order_sequence(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QueuedOrderRemoved.unit_order_sequence)
  return _internal_unit_order_sequence(index);
}
inline void CDOTAUserMsg_QueuedOrderRemoved::set_unit_order_sequence(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  unit_order_sequence_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QueuedOrderRemoved.unit_order_sequence)
}
inline void CDOTAUserMsg_QueuedOrderRemoved::_internal_add_unit_order_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  unit_order_sequence_.Add(value);
}
inline void CDOTAUserMsg_QueuedOrderRemoved::add_unit_order_sequence(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_unit_order_sequence(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_QueuedOrderRemoved.unit_order_sequence)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_QueuedOrderRemoved::_internal_unit_order_sequence() const {
  return unit_order_sequence_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
CDOTAUserMsg_QueuedOrderRemoved::unit_order_sequence() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_QueuedOrderRemoved.unit_order_sequence)
  return _internal_unit_order_sequence();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_QueuedOrderRemoved::_internal_mutable_unit_order_sequence() {
  return &unit_order_sequence_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
CDOTAUserMsg_QueuedOrderRemoved::mutable_unit_order_sequence() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_QueuedOrderRemoved.unit_order_sequence)
  return _internal_mutable_unit_order_sequence();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DebugChallenge

// required uint32 challenge_type = 1;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_challenge_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_challenge_type() const {
  return _internal_has_challenge_type();
}
inline void CDOTAUserMsg_DebugChallenge::clear_challenge_type() {
  challenge_type_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_challenge_type() const {
  return challenge_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::challenge_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.challenge_type)
  return _internal_challenge_type();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_challenge_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  challenge_type_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_challenge_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.challenge_type)
}

// required uint32 challenge_query_id = 2;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_challenge_query_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_challenge_query_id() const {
  return _internal_has_challenge_query_id();
}
inline void CDOTAUserMsg_DebugChallenge::clear_challenge_query_id() {
  challenge_query_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_challenge_query_id() const {
  return challenge_query_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::challenge_query_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.challenge_query_id)
  return _internal_challenge_query_id();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_challenge_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  challenge_query_id_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_challenge_query_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_query_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.challenge_query_id)
}

// required uint32 event_id = 3;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_event_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_event_id() const {
  return _internal_has_event_id();
}
inline void CDOTAUserMsg_DebugChallenge::clear_event_id() {
  event_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_event_id() const {
  return event_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::event_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.event_id)
  return _internal_event_id();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  event_id_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_event_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_event_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.event_id)
}

// optional uint32 instance_id = 4;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_instance_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_instance_id() const {
  return _internal_has_instance_id();
}
inline void CDOTAUserMsg_DebugChallenge::clear_instance_id() {
  instance_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_instance_id() const {
  return instance_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::instance_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.instance_id)
  return _internal_instance_id();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  instance_id_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_instance_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.instance_id)
}

// optional uint32 challenge_var_0 = 5;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_challenge_var_0() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_challenge_var_0() const {
  return _internal_has_challenge_var_0();
}
inline void CDOTAUserMsg_DebugChallenge::clear_challenge_var_0() {
  challenge_var_0_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_challenge_var_0() const {
  return challenge_var_0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::challenge_var_0() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.challenge_var_0)
  return _internal_challenge_var_0();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_challenge_var_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  challenge_var_0_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_challenge_var_0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_var_0(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.challenge_var_0)
}

// optional uint32 challenge_var_1 = 6;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_challenge_var_1() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_challenge_var_1() const {
  return _internal_has_challenge_var_1();
}
inline void CDOTAUserMsg_DebugChallenge::clear_challenge_var_1() {
  challenge_var_1_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_challenge_var_1() const {
  return challenge_var_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::challenge_var_1() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.challenge_var_1)
  return _internal_challenge_var_1();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_challenge_var_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  challenge_var_1_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_challenge_var_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_var_1(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.challenge_var_1)
}

// optional uint32 challenge_max_rank = 7;
inline bool CDOTAUserMsg_DebugChallenge::_internal_has_challenge_max_rank() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_DebugChallenge::has_challenge_max_rank() const {
  return _internal_has_challenge_max_rank();
}
inline void CDOTAUserMsg_DebugChallenge::clear_challenge_max_rank() {
  challenge_max_rank_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::_internal_challenge_max_rank() const {
  return challenge_max_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_DebugChallenge::challenge_max_rank() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_DebugChallenge.challenge_max_rank)
  return _internal_challenge_max_rank();
}
inline void CDOTAUserMsg_DebugChallenge::_internal_set_challenge_max_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  challenge_max_rank_ = value;
}
inline void CDOTAUserMsg_DebugChallenge::set_challenge_max_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_max_rank(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_DebugChallenge.challenge_max_rank)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_FoundNeutralItem

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_FoundNeutralItem::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FoundNeutralItem::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_FoundNeutralItem::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FoundNeutralItem.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_FoundNeutralItem::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_FoundNeutralItem::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FoundNeutralItem.player_id)
}

// optional uint32 item_ability_id = 2;
inline bool CDOTAUserMsg_FoundNeutralItem::_internal_has_item_ability_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FoundNeutralItem::has_item_ability_id() const {
  return _internal_has_item_ability_id();
}
inline void CDOTAUserMsg_FoundNeutralItem::clear_item_ability_id() {
  item_ability_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::_internal_item_ability_id() const {
  return item_ability_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::item_ability_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FoundNeutralItem.item_ability_id)
  return _internal_item_ability_id();
}
inline void CDOTAUserMsg_FoundNeutralItem::_internal_set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  item_ability_id_ = value;
}
inline void CDOTAUserMsg_FoundNeutralItem::set_item_ability_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_ability_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FoundNeutralItem.item_ability_id)
}

// optional uint32 item_tier = 3;
inline bool CDOTAUserMsg_FoundNeutralItem::_internal_has_item_tier() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FoundNeutralItem::has_item_tier() const {
  return _internal_has_item_tier();
}
inline void CDOTAUserMsg_FoundNeutralItem::clear_item_tier() {
  item_tier_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::_internal_item_tier() const {
  return item_tier_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::item_tier() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FoundNeutralItem.item_tier)
  return _internal_item_tier();
}
inline void CDOTAUserMsg_FoundNeutralItem::_internal_set_item_tier(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  item_tier_ = value;
}
inline void CDOTAUserMsg_FoundNeutralItem::set_item_tier(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_item_tier(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FoundNeutralItem.item_tier)
}

// optional uint32 tier_item_count = 4;
inline bool CDOTAUserMsg_FoundNeutralItem::_internal_has_tier_item_count() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_FoundNeutralItem::has_tier_item_count() const {
  return _internal_has_tier_item_count();
}
inline void CDOTAUserMsg_FoundNeutralItem::clear_tier_item_count() {
  tier_item_count_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::_internal_tier_item_count() const {
  return tier_item_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_FoundNeutralItem::tier_item_count() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_FoundNeutralItem.tier_item_count)
  return _internal_tier_item_count();
}
inline void CDOTAUserMsg_FoundNeutralItem::_internal_set_tier_item_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  tier_item_count_ = value;
}
inline void CDOTAUserMsg_FoundNeutralItem::set_tier_item_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_tier_item_count(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_FoundNeutralItem.tier_item_count)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_OutpostCaptured

// optional uint32 outpost_entindex = 1;
inline bool CDOTAUserMsg_OutpostCaptured::_internal_has_outpost_entindex() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OutpostCaptured::has_outpost_entindex() const {
  return _internal_has_outpost_entindex();
}
inline void CDOTAUserMsg_OutpostCaptured::clear_outpost_entindex() {
  outpost_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostCaptured::_internal_outpost_entindex() const {
  return outpost_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostCaptured::outpost_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OutpostCaptured.outpost_entindex)
  return _internal_outpost_entindex();
}
inline void CDOTAUserMsg_OutpostCaptured::_internal_set_outpost_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  outpost_entindex_ = value;
}
inline void CDOTAUserMsg_OutpostCaptured::set_outpost_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_outpost_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OutpostCaptured.outpost_entindex)
}

// optional uint32 team_id = 2;
inline bool CDOTAUserMsg_OutpostCaptured::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OutpostCaptured::has_team_id() const {
  return _internal_has_team_id();
}
inline void CDOTAUserMsg_OutpostCaptured::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostCaptured::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostCaptured::team_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OutpostCaptured.team_id)
  return _internal_team_id();
}
inline void CDOTAUserMsg_OutpostCaptured::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  team_id_ = value;
}
inline void CDOTAUserMsg_OutpostCaptured::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OutpostCaptured.team_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_OutpostGrantedXP

// optional uint32 team_id = 1;
inline bool CDOTAUserMsg_OutpostGrantedXP::_internal_has_team_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OutpostGrantedXP::has_team_id() const {
  return _internal_has_team_id();
}
inline void CDOTAUserMsg_OutpostGrantedXP::clear_team_id() {
  team_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostGrantedXP::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostGrantedXP::team_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OutpostGrantedXP.team_id)
  return _internal_team_id();
}
inline void CDOTAUserMsg_OutpostGrantedXP::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  team_id_ = value;
}
inline void CDOTAUserMsg_OutpostGrantedXP::set_team_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OutpostGrantedXP.team_id)
}

// optional uint32 xp_amount = 2;
inline bool CDOTAUserMsg_OutpostGrantedXP::_internal_has_xp_amount() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_OutpostGrantedXP::has_xp_amount() const {
  return _internal_has_xp_amount();
}
inline void CDOTAUserMsg_OutpostGrantedXP::clear_xp_amount() {
  xp_amount_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostGrantedXP::_internal_xp_amount() const {
  return xp_amount_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_OutpostGrantedXP::xp_amount() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_OutpostGrantedXP.xp_amount)
  return _internal_xp_amount();
}
inline void CDOTAUserMsg_OutpostGrantedXP::_internal_set_xp_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  xp_amount_ = value;
}
inline void CDOTAUserMsg_OutpostGrantedXP::set_xp_amount(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_xp_amount(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_OutpostGrantedXP.xp_amount)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MoveCameraToUnit

// optional int32 unit_ehandle = 1;
inline bool CDOTAUserMsg_MoveCameraToUnit::_internal_has_unit_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_MoveCameraToUnit::has_unit_ehandle() const {
  return _internal_has_unit_ehandle();
}
inline void CDOTAUserMsg_MoveCameraToUnit::clear_unit_ehandle() {
  unit_ehandle_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MoveCameraToUnit::_internal_unit_ehandle() const {
  return unit_ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MoveCameraToUnit::unit_ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MoveCameraToUnit.unit_ehandle)
  return _internal_unit_ehandle();
}
inline void CDOTAUserMsg_MoveCameraToUnit::_internal_set_unit_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  unit_ehandle_ = value;
}
inline void CDOTAUserMsg_MoveCameraToUnit::set_unit_ehandle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_unit_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MoveCameraToUnit.unit_ehandle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PauseMinigameData_DataBit

// optional uint32 index = 1;
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::_internal_has_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::has_index() const {
  return _internal_has_index();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::clear_index() {
  index_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PauseMinigameData_DataBit::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_PauseMinigameData_DataBit::index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PauseMinigameData.DataBit.index)
  return _internal_index();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::_internal_set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  index_ = value;
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::set_index(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PauseMinigameData.DataBit.index)
}

// optional int32 data = 2;
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::_internal_has_data() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::has_data() const {
  return _internal_has_data();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::clear_data() {
  data_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_PauseMinigameData_DataBit::_internal_data() const {
  return data_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_PauseMinigameData_DataBit::data() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PauseMinigameData.DataBit.data)
  return _internal_data();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::_internal_set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  data_ = value;
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::set_data(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_data(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PauseMinigameData.DataBit.data)
}

// optional int64 data_extra = 3;
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::_internal_has_data_extra() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_PauseMinigameData_DataBit::has_data_extra() const {
  return _internal_has_data_extra();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::clear_data_extra() {
  data_extra_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_PauseMinigameData_DataBit::_internal_data_extra() const {
  return data_extra_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 CDOTAUserMsg_PauseMinigameData_DataBit::data_extra() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PauseMinigameData.DataBit.data_extra)
  return _internal_data_extra();
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::_internal_set_data_extra(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  data_extra_ = value;
}
inline void CDOTAUserMsg_PauseMinigameData_DataBit::set_data_extra(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_data_extra(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_PauseMinigameData.DataBit.data_extra)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PauseMinigameData

// repeated .CDOTAUserMsg_PauseMinigameData.DataBit data_bits = 1;
inline int CDOTAUserMsg_PauseMinigameData::_internal_data_bits_size() const {
  return data_bits_.size();
}
inline int CDOTAUserMsg_PauseMinigameData::data_bits_size() const {
  return _internal_data_bits_size();
}
inline void CDOTAUserMsg_PauseMinigameData::clear_data_bits() {
  data_bits_.Clear();
}
inline ::CDOTAUserMsg_PauseMinigameData_DataBit* CDOTAUserMsg_PauseMinigameData::mutable_data_bits(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_PauseMinigameData.data_bits)
  return data_bits_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PauseMinigameData_DataBit >*
CDOTAUserMsg_PauseMinigameData::mutable_data_bits() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_PauseMinigameData.data_bits)
  return &data_bits_;
}
inline const ::CDOTAUserMsg_PauseMinigameData_DataBit& CDOTAUserMsg_PauseMinigameData::_internal_data_bits(int index) const {
  return data_bits_.Get(index);
}
inline const ::CDOTAUserMsg_PauseMinigameData_DataBit& CDOTAUserMsg_PauseMinigameData::data_bits(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_PauseMinigameData.data_bits)
  return _internal_data_bits(index);
}
inline ::CDOTAUserMsg_PauseMinigameData_DataBit* CDOTAUserMsg_PauseMinigameData::_internal_add_data_bits() {
  return data_bits_.Add();
}
inline ::CDOTAUserMsg_PauseMinigameData_DataBit* CDOTAUserMsg_PauseMinigameData::add_data_bits() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_PauseMinigameData.data_bits)
  return _internal_add_data_bits();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_PauseMinigameData_DataBit >&
CDOTAUserMsg_PauseMinigameData::data_bits() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_PauseMinigameData.data_bits)
  return data_bits_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VersusScene_PlayerBehavior

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_VersusScene_PlayerBehavior::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VersusScene_PlayerBehavior.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  player_id_ = value;
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VersusScene_PlayerBehavior.player_id)
}

// optional .EDOTAVersusScenePlayerBehavior behavior = 2 [default = VS_PLAYER_BEHAVIOR_PLAY_ACTIVITY];
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_has_behavior() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::has_behavior() const {
  return _internal_has_behavior();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::clear_behavior() {
  behavior_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::EDOTAVersusScenePlayerBehavior CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_behavior() const {
  return static_cast< ::EDOTAVersusScenePlayerBehavior >(behavior_);
}
inline ::EDOTAVersusScenePlayerBehavior CDOTAUserMsg_VersusScene_PlayerBehavior::behavior() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VersusScene_PlayerBehavior.behavior)
  return _internal_behavior();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_set_behavior(::EDOTAVersusScenePlayerBehavior value) {
  assert(::EDOTAVersusScenePlayerBehavior_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  behavior_ = value;
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::set_behavior(::EDOTAVersusScenePlayerBehavior value) {
  _internal_set_behavior(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_VersusScene_PlayerBehavior.behavior)
}

// optional .VersusScene_PlayActivity play_activity = 3;
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_has_play_activity() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || play_activity_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::has_play_activity() const {
  return _internal_has_play_activity();
}
inline const ::VersusScene_PlayActivity& CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_play_activity() const {
  const ::VersusScene_PlayActivity* p = play_activity_;
  return p != nullptr ? *p : reinterpret_cast<const ::VersusScene_PlayActivity&>(
      ::_VersusScene_PlayActivity_default_instance_);
}
inline const ::VersusScene_PlayActivity& CDOTAUserMsg_VersusScene_PlayerBehavior::play_activity() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VersusScene_PlayerBehavior.play_activity)
  return _internal_play_activity();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_set_allocated_play_activity(
    ::VersusScene_PlayActivity* play_activity) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(play_activity_);
  }
  play_activity_ = play_activity;
  if (play_activity) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.play_activity)
}
inline ::VersusScene_PlayActivity* CDOTAUserMsg_VersusScene_PlayerBehavior::release_play_activity() {
  _has_bits_[0] &= ~0x00000001u;
  ::VersusScene_PlayActivity* temp = play_activity_;
  play_activity_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::VersusScene_PlayActivity* CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_release_play_activity() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_VersusScene_PlayerBehavior.play_activity)
  _has_bits_[0] &= ~0x00000001u;
  ::VersusScene_PlayActivity* temp = play_activity_;
  play_activity_ = nullptr;
  return temp;
}
inline ::VersusScene_PlayActivity* CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_mutable_play_activity() {
  _has_bits_[0] |= 0x00000001u;
  if (play_activity_ == nullptr) {
    auto* p = CreateMaybeMessage<::VersusScene_PlayActivity>(GetArena());
    play_activity_ = p;
  }
  return play_activity_;
}
inline ::VersusScene_PlayActivity* CDOTAUserMsg_VersusScene_PlayerBehavior::mutable_play_activity() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_VersusScene_PlayerBehavior.play_activity)
  return _internal_mutable_play_activity();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::set_allocated_play_activity(::VersusScene_PlayActivity* play_activity) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(play_activity_);
  }
  if (play_activity) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(play_activity)->GetArena();
    if (message_arena != submessage_arena) {
      play_activity = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, play_activity, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  play_activity_ = play_activity;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.play_activity)
}

// optional .VersusScene_ChatWheel chat_wheel = 4;
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_has_chat_wheel() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || chat_wheel_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::has_chat_wheel() const {
  return _internal_has_chat_wheel();
}
inline const ::VersusScene_ChatWheel& CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_chat_wheel() const {
  const ::VersusScene_ChatWheel* p = chat_wheel_;
  return p != nullptr ? *p : reinterpret_cast<const ::VersusScene_ChatWheel&>(
      ::_VersusScene_ChatWheel_default_instance_);
}
inline const ::VersusScene_ChatWheel& CDOTAUserMsg_VersusScene_PlayerBehavior::chat_wheel() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VersusScene_PlayerBehavior.chat_wheel)
  return _internal_chat_wheel();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_set_allocated_chat_wheel(
    ::VersusScene_ChatWheel* chat_wheel) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_wheel_);
  }
  chat_wheel_ = chat_wheel;
  if (chat_wheel) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.chat_wheel)
}
inline ::VersusScene_ChatWheel* CDOTAUserMsg_VersusScene_PlayerBehavior::release_chat_wheel() {
  _has_bits_[0] &= ~0x00000002u;
  ::VersusScene_ChatWheel* temp = chat_wheel_;
  chat_wheel_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::VersusScene_ChatWheel* CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_release_chat_wheel() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_VersusScene_PlayerBehavior.chat_wheel)
  _has_bits_[0] &= ~0x00000002u;
  ::VersusScene_ChatWheel* temp = chat_wheel_;
  chat_wheel_ = nullptr;
  return temp;
}
inline ::VersusScene_ChatWheel* CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_mutable_chat_wheel() {
  _has_bits_[0] |= 0x00000002u;
  if (chat_wheel_ == nullptr) {
    auto* p = CreateMaybeMessage<::VersusScene_ChatWheel>(GetArena());
    chat_wheel_ = p;
  }
  return chat_wheel_;
}
inline ::VersusScene_ChatWheel* CDOTAUserMsg_VersusScene_PlayerBehavior::mutable_chat_wheel() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_VersusScene_PlayerBehavior.chat_wheel)
  return _internal_mutable_chat_wheel();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::set_allocated_chat_wheel(::VersusScene_ChatWheel* chat_wheel) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_wheel_);
  }
  if (chat_wheel) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(chat_wheel)->GetArena();
    if (message_arena != submessage_arena) {
      chat_wheel = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, chat_wheel, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  chat_wheel_ = chat_wheel;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.chat_wheel)
}

// optional .VersusScene_PlaybackRate playback_rate = 5;
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_has_playback_rate() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || playback_rate_ != nullptr);
  return value;
}
inline bool CDOTAUserMsg_VersusScene_PlayerBehavior::has_playback_rate() const {
  return _internal_has_playback_rate();
}
inline const ::VersusScene_PlaybackRate& CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_playback_rate() const {
  const ::VersusScene_PlaybackRate* p = playback_rate_;
  return p != nullptr ? *p : reinterpret_cast<const ::VersusScene_PlaybackRate&>(
      ::_VersusScene_PlaybackRate_default_instance_);
}
inline const ::VersusScene_PlaybackRate& CDOTAUserMsg_VersusScene_PlayerBehavior::playback_rate() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_VersusScene_PlayerBehavior.playback_rate)
  return _internal_playback_rate();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_set_allocated_playback_rate(
    ::VersusScene_PlaybackRate* playback_rate) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(playback_rate_);
  }
  playback_rate_ = playback_rate;
  if (playback_rate) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.playback_rate)
}
inline ::VersusScene_PlaybackRate* CDOTAUserMsg_VersusScene_PlayerBehavior::release_playback_rate() {
  _has_bits_[0] &= ~0x00000004u;
  ::VersusScene_PlaybackRate* temp = playback_rate_;
  playback_rate_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::VersusScene_PlaybackRate* CDOTAUserMsg_VersusScene_PlayerBehavior::unsafe_arena_release_playback_rate() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_VersusScene_PlayerBehavior.playback_rate)
  _has_bits_[0] &= ~0x00000004u;
  ::VersusScene_PlaybackRate* temp = playback_rate_;
  playback_rate_ = nullptr;
  return temp;
}
inline ::VersusScene_PlaybackRate* CDOTAUserMsg_VersusScene_PlayerBehavior::_internal_mutable_playback_rate() {
  _has_bits_[0] |= 0x00000004u;
  if (playback_rate_ == nullptr) {
    auto* p = CreateMaybeMessage<::VersusScene_PlaybackRate>(GetArena());
    playback_rate_ = p;
  }
  return playback_rate_;
}
inline ::VersusScene_PlaybackRate* CDOTAUserMsg_VersusScene_PlayerBehavior::mutable_playback_rate() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_VersusScene_PlayerBehavior.playback_rate)
  return _internal_mutable_playback_rate();
}
inline void CDOTAUserMsg_VersusScene_PlayerBehavior::set_allocated_playback_rate(::VersusScene_PlaybackRate* playback_rate) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(playback_rate_);
  }
  if (playback_rate) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(playback_rate)->GetArena();
    if (message_arena != submessage_arena) {
      playback_rate = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, playback_rate, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  playback_rate_ = playback_rate;
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_VersusScene_PlayerBehavior.playback_rate)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_QoP_ArcanaSummary

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_QoP_ArcanaSummary::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QoP_ArcanaSummary::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QoP_ArcanaSummary.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QoP_ArcanaSummary.ehandle)
}

// optional uint32 arcana_level = 2;
inline bool CDOTAUserMsg_QoP_ArcanaSummary::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QoP_ArcanaSummary::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QoP_ArcanaSummary.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QoP_ArcanaSummary.arcana_level)
}

// optional uint32 players_hit = 3;
inline bool CDOTAUserMsg_QoP_ArcanaSummary::_internal_has_players_hit() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QoP_ArcanaSummary::has_players_hit() const {
  return _internal_has_players_hit();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::clear_players_hit() {
  players_hit_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::_internal_players_hit() const {
  return players_hit_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::players_hit() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QoP_ArcanaSummary.players_hit)
  return _internal_players_hit();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::_internal_set_players_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  players_hit_ = value;
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::set_players_hit(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_players_hit(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QoP_ArcanaSummary.players_hit)
}

// optional uint32 players_killed = 4;
inline bool CDOTAUserMsg_QoP_ArcanaSummary::_internal_has_players_killed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_QoP_ArcanaSummary::has_players_killed() const {
  return _internal_has_players_killed();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::clear_players_killed() {
  players_killed_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::_internal_players_killed() const {
  return players_killed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_QoP_ArcanaSummary::players_killed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_QoP_ArcanaSummary.players_killed)
  return _internal_players_killed();
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::_internal_set_players_killed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  players_killed_ = value;
}
inline void CDOTAUserMsg_QoP_ArcanaSummary::set_players_killed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_players_killed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_QoP_ArcanaSummary.players_killed)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HotPotato_Created

// optional uint32 player_id_1 = 1;
inline bool CDOTAUserMsg_HotPotato_Created::_internal_has_player_id_1() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HotPotato_Created::has_player_id_1() const {
  return _internal_has_player_id_1();
}
inline void CDOTAUserMsg_HotPotato_Created::clear_player_id_1() {
  player_id_1_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Created::_internal_player_id_1() const {
  return player_id_1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Created::player_id_1() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HotPotato_Created.player_id_1)
  return _internal_player_id_1();
}
inline void CDOTAUserMsg_HotPotato_Created::_internal_set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_1_ = value;
}
inline void CDOTAUserMsg_HotPotato_Created::set_player_id_1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id_1(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HotPotato_Created.player_id_1)
}

// optional uint32 player_id_2 = 2;
inline bool CDOTAUserMsg_HotPotato_Created::_internal_has_player_id_2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HotPotato_Created::has_player_id_2() const {
  return _internal_has_player_id_2();
}
inline void CDOTAUserMsg_HotPotato_Created::clear_player_id_2() {
  player_id_2_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Created::_internal_player_id_2() const {
  return player_id_2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Created::player_id_2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HotPotato_Created.player_id_2)
  return _internal_player_id_2();
}
inline void CDOTAUserMsg_HotPotato_Created::_internal_set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  player_id_2_ = value;
}
inline void CDOTAUserMsg_HotPotato_Created::set_player_id_2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id_2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HotPotato_Created.player_id_2)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HotPotato_Exploded

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_HotPotato_Exploded::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_HotPotato_Exploded::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_HotPotato_Exploded::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Exploded::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_HotPotato_Exploded::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_HotPotato_Exploded.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_HotPotato_Exploded::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_HotPotato_Exploded::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_HotPotato_Exploded.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WK_Arcana_Progress

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_WK_Arcana_Progress::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WK_Arcana_Progress::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WK_Arcana_Progress.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_WK_Arcana_Progress::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WK_Arcana_Progress.ehandle)
}

// optional uint32 arcana_level = 2;
inline bool CDOTAUserMsg_WK_Arcana_Progress::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WK_Arcana_Progress::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WK_Arcana_Progress.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_WK_Arcana_Progress::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WK_Arcana_Progress.arcana_level)
}

// optional uint32 hero_id = 3;
inline bool CDOTAUserMsg_WK_Arcana_Progress::_internal_has_hero_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WK_Arcana_Progress::has_hero_id() const {
  return _internal_has_hero_id();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::clear_hero_id() {
  hero_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::_internal_hero_id() const {
  return hero_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WK_Arcana_Progress::hero_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WK_Arcana_Progress.hero_id)
  return _internal_hero_id();
}
inline void CDOTAUserMsg_WK_Arcana_Progress::_internal_set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  hero_id_ = value;
}
inline void CDOTAUserMsg_WK_Arcana_Progress::set_hero_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hero_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WK_Arcana_Progress.hero_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_has_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::has_player_id() const {
  return _internal_has_player_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::clear_player_id() {
  player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress.player_id)
  return _internal_player_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  player_id_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::set_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress.player_id)
}

// optional uint32 progress = 6;
inline bool CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_has_progress() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::has_progress() const {
  return _internal_has_progress();
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::clear_progress() {
  progress_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_progress() const {
  return progress_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::progress() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress.progress)
  return _internal_progress();
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::_internal_set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  progress_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress::set_progress(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress.progress)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GuildChallenge_Progress

// repeated .CDOTAUserMsg_GuildChallenge_Progress.PlayerProgress player_progress = 1;
inline int CDOTAUserMsg_GuildChallenge_Progress::_internal_player_progress_size() const {
  return player_progress_.size();
}
inline int CDOTAUserMsg_GuildChallenge_Progress::player_progress_size() const {
  return _internal_player_progress_size();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_player_progress() {
  player_progress_.Clear();
}
inline ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* CDOTAUserMsg_GuildChallenge_Progress::mutable_player_progress(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_GuildChallenge_Progress.player_progress)
  return player_progress_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress >*
CDOTAUserMsg_GuildChallenge_Progress::mutable_player_progress() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_GuildChallenge_Progress.player_progress)
  return &player_progress_;
}
inline const ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& CDOTAUserMsg_GuildChallenge_Progress::_internal_player_progress(int index) const {
  return player_progress_.Get(index);
}
inline const ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress& CDOTAUserMsg_GuildChallenge_Progress::player_progress(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.player_progress)
  return _internal_player_progress(index);
}
inline ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* CDOTAUserMsg_GuildChallenge_Progress::_internal_add_player_progress() {
  return player_progress_.Add();
}
inline ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress* CDOTAUserMsg_GuildChallenge_Progress::add_player_progress() {
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_GuildChallenge_Progress.player_progress)
  return _internal_add_player_progress();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CDOTAUserMsg_GuildChallenge_Progress_PlayerProgress >&
CDOTAUserMsg_GuildChallenge_Progress::player_progress() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_GuildChallenge_Progress.player_progress)
  return player_progress_;
}

// optional uint32 guild_id = 2;
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_guild_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_guild_id() const {
  return _internal_has_guild_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_guild_id() {
  guild_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::guild_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.guild_id)
  return _internal_guild_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  guild_id_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.guild_id)
}

// optional uint32 challenge_instance_id = 3;
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_challenge_instance_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_challenge_instance_id() const {
  return _internal_has_challenge_instance_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_challenge_instance_id() {
  challenge_instance_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::_internal_challenge_instance_id() const {
  return challenge_instance_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::challenge_instance_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.challenge_instance_id)
  return _internal_challenge_instance_id();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  challenge_instance_id_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_challenge_instance_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_instance_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.challenge_instance_id)
}

// optional uint32 challenge_parameter = 4;
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_challenge_parameter() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_challenge_parameter() const {
  return _internal_has_challenge_parameter();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_challenge_parameter() {
  challenge_parameter_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::_internal_challenge_parameter() const {
  return challenge_parameter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::challenge_parameter() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.challenge_parameter)
  return _internal_challenge_parameter();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  challenge_parameter_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_challenge_parameter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_parameter(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.challenge_parameter)
}

// optional .CDOTAUserMsg_GuildChallenge_Progress.EChallengeType challenge_type = 5 [default = k_EChallengeType_Invalid];
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_challenge_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_challenge_type() const {
  return _internal_has_challenge_type();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_challenge_type() {
  challenge_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType CDOTAUserMsg_GuildChallenge_Progress::_internal_challenge_type() const {
  return static_cast< ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType >(challenge_type_);
}
inline ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType CDOTAUserMsg_GuildChallenge_Progress::challenge_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.challenge_type)
  return _internal_challenge_type();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_challenge_type(::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType value) {
  assert(::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  challenge_type_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_challenge_type(::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType value) {
  _internal_set_challenge_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.challenge_type)
}

// optional uint32 challenge_progress_at_start = 7;
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_challenge_progress_at_start() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_challenge_progress_at_start() const {
  return _internal_has_challenge_progress_at_start();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_challenge_progress_at_start() {
  challenge_progress_at_start_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::_internal_challenge_progress_at_start() const {
  return challenge_progress_at_start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_GuildChallenge_Progress::challenge_progress_at_start() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.challenge_progress_at_start)
  return _internal_challenge_progress_at_start();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_challenge_progress_at_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  challenge_progress_at_start_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_challenge_progress_at_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_challenge_progress_at_start(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.challenge_progress_at_start)
}

// optional bool complete = 8;
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_has_complete() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::has_complete() const {
  return _internal_has_complete();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::clear_complete() {
  complete_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::_internal_complete() const {
  return complete_;
}
inline bool CDOTAUserMsg_GuildChallenge_Progress::complete() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_GuildChallenge_Progress.complete)
  return _internal_complete();
}
inline void CDOTAUserMsg_GuildChallenge_Progress::_internal_set_complete(bool value) {
  _has_bits_[0] |= 0x00000020u;
  complete_ = value;
}
inline void CDOTAUserMsg_GuildChallenge_Progress::set_complete(bool value) {
  _internal_set_complete(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_GuildChallenge_Progress.complete)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WRArcanaProgress

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.ehandle)
}

// optional uint32 target_ehandle = 2;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_target_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_target_ehandle() const {
  return _internal_has_target_ehandle();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_target_ehandle() {
  target_ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_target_ehandle() const {
  return target_ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::target_ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.target_ehandle)
  return _internal_target_ehandle();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_ehandle_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.target_ehandle)
}

// optional uint32 arrows_landed = 3;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_arrows_landed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_arrows_landed() const {
  return _internal_has_arrows_landed();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_arrows_landed() {
  arrows_landed_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_arrows_landed() const {
  return arrows_landed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::arrows_landed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.arrows_landed)
  return _internal_arrows_landed();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  arrows_landed_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arrows_landed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.arrows_landed)
}

// optional uint32 damage_dealt = 4;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_damage_dealt() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_damage_dealt() const {
  return _internal_has_damage_dealt();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_damage_dealt() {
  damage_dealt_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_damage_dealt() const {
  return damage_dealt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::damage_dealt() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.damage_dealt)
  return _internal_damage_dealt();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  damage_dealt_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage_dealt(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.damage_dealt)
}

// optional uint32 target_hp = 5;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_target_hp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_target_hp() const {
  return _internal_has_target_hp();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_target_hp() {
  target_hp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_target_hp() const {
  return target_hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::target_hp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.target_hp)
  return _internal_target_hp();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  target_hp_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_hp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.target_hp)
}

// optional uint32 target_max_hp = 6;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_target_max_hp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_target_max_hp() const {
  return _internal_has_target_max_hp();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_target_max_hp() {
  target_max_hp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_target_max_hp() const {
  return target_max_hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::target_max_hp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.target_max_hp)
  return _internal_target_max_hp();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  target_max_hp_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_max_hp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.target_max_hp)
}

// optional uint32 arcana_level = 7;
inline bool CDOTAUserMsg_WRArcanaProgress::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaProgress::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_WRArcanaProgress::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaProgress::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaProgress.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_WRArcanaProgress::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_WRArcanaProgress::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaProgress.arcana_level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WRArcanaSummary

// optional uint32 ehandle = 1;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_ehandle() const {
  return _internal_has_ehandle();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_ehandle() {
  ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_ehandle() const {
  return ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.ehandle)
  return _internal_ehandle();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  ehandle_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.ehandle)
}

// optional uint32 target_ehandle = 2;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_target_ehandle() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_target_ehandle() const {
  return _internal_has_target_ehandle();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_target_ehandle() {
  target_ehandle_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_target_ehandle() const {
  return target_ehandle_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::target_ehandle() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.target_ehandle)
  return _internal_target_ehandle();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_ehandle_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_target_ehandle(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_ehandle(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.target_ehandle)
}

// optional uint32 arrows_landed = 3;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_arrows_landed() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_arrows_landed() const {
  return _internal_has_arrows_landed();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_arrows_landed() {
  arrows_landed_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_arrows_landed() const {
  return arrows_landed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::arrows_landed() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.arrows_landed)
  return _internal_arrows_landed();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  arrows_landed_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_arrows_landed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arrows_landed(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.arrows_landed)
}

// optional uint32 damage_dealt = 4;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_damage_dealt() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_damage_dealt() const {
  return _internal_has_damage_dealt();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_damage_dealt() {
  damage_dealt_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_damage_dealt() const {
  return damage_dealt_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::damage_dealt() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.damage_dealt)
  return _internal_damage_dealt();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  damage_dealt_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_damage_dealt(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_damage_dealt(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.damage_dealt)
}

// optional uint32 target_hp = 5;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_target_hp() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_target_hp() const {
  return _internal_has_target_hp();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_target_hp() {
  target_hp_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_target_hp() const {
  return target_hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::target_hp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.target_hp)
  return _internal_target_hp();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  target_hp_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_target_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_hp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.target_hp)
}

// optional uint32 target_max_hp = 6;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_target_max_hp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_target_max_hp() const {
  return _internal_has_target_max_hp();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_target_max_hp() {
  target_max_hp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_target_max_hp() const {
  return target_max_hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::target_max_hp() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.target_max_hp)
  return _internal_target_max_hp();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  target_max_hp_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_target_max_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_max_hp(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.target_max_hp)
}

// optional uint32 arcana_level = 7;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_arcana_level() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_arcana_level() const {
  return _internal_has_arcana_level();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_arcana_level() {
  arcana_level_ = 0u;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::_internal_arcana_level() const {
  return arcana_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_WRArcanaSummary::arcana_level() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.arcana_level)
  return _internal_arcana_level();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000040u;
  arcana_level_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_arcana_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_arcana_level(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.arcana_level)
}

// optional bool success = 8;
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_has_success() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_WRArcanaSummary::has_success() const {
  return _internal_has_success();
}
inline void CDOTAUserMsg_WRArcanaSummary::clear_success() {
  success_ = false;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool CDOTAUserMsg_WRArcanaSummary::_internal_success() const {
  return success_;
}
inline bool CDOTAUserMsg_WRArcanaSummary::success() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_WRArcanaSummary.success)
  return _internal_success();
}
inline void CDOTAUserMsg_WRArcanaSummary::_internal_set_success(bool value) {
  _has_bits_[0] |= 0x00000080u;
  success_ = value;
}
inline void CDOTAUserMsg_WRArcanaSummary::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_WRArcanaSummary.success)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_EmptyItemSlotAlert

// optional int32 source_player_id = 1;
inline bool CDOTAUserMsg_EmptyItemSlotAlert::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyItemSlotAlert::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::clear_source_player_id() {
  source_player_id_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyItemSlotAlert.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyItemSlotAlert.source_player_id)
}

// optional int32 target_player_id = 2;
inline bool CDOTAUserMsg_EmptyItemSlotAlert::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyItemSlotAlert::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::clear_target_player_id() {
  target_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyItemSlotAlert.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::set_target_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyItemSlotAlert.target_player_id)
}

// optional int32 slot_index = 3;
inline bool CDOTAUserMsg_EmptyItemSlotAlert::_internal_has_slot_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyItemSlotAlert::has_slot_index() const {
  return _internal_has_slot_index();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::clear_slot_index() {
  slot_index_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::_internal_slot_index() const {
  return slot_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::slot_index() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyItemSlotAlert.slot_index)
  return _internal_slot_index();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::_internal_set_slot_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  slot_index_ = value;
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::set_slot_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_slot_index(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyItemSlotAlert.slot_index)
}

// optional int32 cooldown_seconds = 4;
inline bool CDOTAUserMsg_EmptyItemSlotAlert::_internal_has_cooldown_seconds() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_EmptyItemSlotAlert::has_cooldown_seconds() const {
  return _internal_has_cooldown_seconds();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::clear_cooldown_seconds() {
  cooldown_seconds_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::_internal_cooldown_seconds() const {
  return cooldown_seconds_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_EmptyItemSlotAlert::cooldown_seconds() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_EmptyItemSlotAlert.cooldown_seconds)
  return _internal_cooldown_seconds();
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::_internal_set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  cooldown_seconds_ = value;
}
inline void CDOTAUserMsg_EmptyItemSlotAlert::set_cooldown_seconds(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cooldown_seconds(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_EmptyItemSlotAlert.cooldown_seconds)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AghsStatusAlert

// optional uint32 source_player_id = 1;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_source_player_id() {
  source_player_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_source_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.source_player_id)
}

// optional uint32 target_player_id = 2;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_target_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_target_player_id() const {
  return _internal_has_target_player_id();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_target_player_id() {
  target_player_id_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::_internal_target_player_id() const {
  return target_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::target_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.target_player_id)
  return _internal_target_player_id();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  target_player_id_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_target_player_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.target_player_id)
}

// optional uint32 target_entindex = 3;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_target_entindex() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_target_entindex() const {
  return _internal_has_target_entindex();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::_internal_target_entindex() const {
  return target_entindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.target_entindex)
  return _internal_target_entindex();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  target_entindex_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_target_entindex(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_entindex(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.target_entindex)
}

// optional uint32 alert_type = 4;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_alert_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_alert_type() const {
  return _internal_has_alert_type();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_alert_type() {
  alert_type_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::_internal_alert_type() const {
  return alert_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_AghsStatusAlert::alert_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.alert_type)
  return _internal_alert_type();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_alert_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  alert_type_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_alert_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_alert_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.alert_type)
}

// optional bool has_scepter = 5;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_has_scepter() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_has_scepter() const {
  return _internal_has_has_scepter();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_has_scepter() {
  has_scepter_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_scepter() const {
  return has_scepter_;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_scepter() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.has_scepter)
  return _internal_has_scepter();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_has_scepter(bool value) {
  _has_bits_[0] |= 0x00000010u;
  has_scepter_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_has_scepter(bool value) {
  _internal_set_has_scepter(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.has_scepter)
}

// optional bool has_shard = 6;
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_has_shard() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_has_shard() const {
  return _internal_has_has_shard();
}
inline void CDOTAUserMsg_AghsStatusAlert::clear_has_shard() {
  has_shard_ = false;
  _has_bits_[0] &= ~0x00000020u;
}
inline bool CDOTAUserMsg_AghsStatusAlert::_internal_has_shard() const {
  return has_shard_;
}
inline bool CDOTAUserMsg_AghsStatusAlert::has_shard() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_AghsStatusAlert.has_shard)
  return _internal_has_shard();
}
inline void CDOTAUserMsg_AghsStatusAlert::_internal_set_has_shard(bool value) {
  _has_bits_[0] |= 0x00000020u;
  has_shard_ = value;
}
inline void CDOTAUserMsg_AghsStatusAlert::set_has_shard(bool value) {
  _internal_set_has_shard(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_AghsStatusAlert.has_shard)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MutedPlayers

// repeated int32 text_muted_player_ids = 1;
inline int CDOTAUserMsg_MutedPlayers::_internal_text_muted_player_ids_size() const {
  return text_muted_player_ids_.size();
}
inline int CDOTAUserMsg_MutedPlayers::text_muted_player_ids_size() const {
  return _internal_text_muted_player_ids_size();
}
inline void CDOTAUserMsg_MutedPlayers::clear_text_muted_player_ids() {
  text_muted_player_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MutedPlayers::_internal_text_muted_player_ids(int index) const {
  return text_muted_player_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MutedPlayers::text_muted_player_ids(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MutedPlayers.text_muted_player_ids)
  return _internal_text_muted_player_ids(index);
}
inline void CDOTAUserMsg_MutedPlayers::set_text_muted_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  text_muted_player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MutedPlayers.text_muted_player_ids)
}
inline void CDOTAUserMsg_MutedPlayers::_internal_add_text_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  text_muted_player_ids_.Add(value);
}
inline void CDOTAUserMsg_MutedPlayers::add_text_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_text_muted_player_ids(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_MutedPlayers.text_muted_player_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_MutedPlayers::_internal_text_muted_player_ids() const {
  return text_muted_player_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_MutedPlayers::text_muted_player_ids() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_MutedPlayers.text_muted_player_ids)
  return _internal_text_muted_player_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_MutedPlayers::_internal_mutable_text_muted_player_ids() {
  return &text_muted_player_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_MutedPlayers::mutable_text_muted_player_ids() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_MutedPlayers.text_muted_player_ids)
  return _internal_mutable_text_muted_player_ids();
}

// repeated int32 voice_muted_player_ids = 2;
inline int CDOTAUserMsg_MutedPlayers::_internal_voice_muted_player_ids_size() const {
  return voice_muted_player_ids_.size();
}
inline int CDOTAUserMsg_MutedPlayers::voice_muted_player_ids_size() const {
  return _internal_voice_muted_player_ids_size();
}
inline void CDOTAUserMsg_MutedPlayers::clear_voice_muted_player_ids() {
  voice_muted_player_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MutedPlayers::_internal_voice_muted_player_ids(int index) const {
  return voice_muted_player_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_MutedPlayers::voice_muted_player_ids(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_MutedPlayers.voice_muted_player_ids)
  return _internal_voice_muted_player_ids(index);
}
inline void CDOTAUserMsg_MutedPlayers::set_voice_muted_player_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  voice_muted_player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_MutedPlayers.voice_muted_player_ids)
}
inline void CDOTAUserMsg_MutedPlayers::_internal_add_voice_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  voice_muted_player_ids_.Add(value);
}
inline void CDOTAUserMsg_MutedPlayers::add_voice_muted_player_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_voice_muted_player_ids(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_MutedPlayers.voice_muted_player_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_MutedPlayers::_internal_voice_muted_player_ids() const {
  return voice_muted_player_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
CDOTAUserMsg_MutedPlayers::voice_muted_player_ids() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_MutedPlayers.voice_muted_player_ids)
  return _internal_voice_muted_player_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_MutedPlayers::_internal_mutable_voice_muted_player_ids() {
  return &voice_muted_player_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
CDOTAUserMsg_MutedPlayers::mutable_voice_muted_player_ids() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_MutedPlayers.voice_muted_player_ids)
  return _internal_mutable_voice_muted_player_ids();
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ContextualTip

// optional int32 tip_id = 1;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_tip_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_tip_id() const {
  return _internal_has_tip_id();
}
inline void CDOTAUserMsg_ContextualTip::clear_tip_id() {
  tip_id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::_internal_tip_id() const {
  return tip_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::tip_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.tip_id)
  return _internal_tip_id();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_tip_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  tip_id_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_tip_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tip_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.tip_id)
}

// repeated string referenced_abilities = 2;
inline int CDOTAUserMsg_ContextualTip::_internal_referenced_abilities_size() const {
  return referenced_abilities_.size();
}
inline int CDOTAUserMsg_ContextualTip::referenced_abilities_size() const {
  return _internal_referenced_abilities_size();
}
inline void CDOTAUserMsg_ContextualTip::clear_referenced_abilities() {
  referenced_abilities_.Clear();
}
inline std::string* CDOTAUserMsg_ContextualTip::add_referenced_abilities() {
  // @@protoc_insertion_point(field_add_mutable:CDOTAUserMsg_ContextualTip.referenced_abilities)
  return _internal_add_referenced_abilities();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_referenced_abilities(int index) const {
  return referenced_abilities_.Get(index);
}
inline const std::string& CDOTAUserMsg_ContextualTip::referenced_abilities(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.referenced_abilities)
  return _internal_referenced_abilities(index);
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_referenced_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.referenced_abilities)
  return referenced_abilities_.Mutable(index);
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_abilities(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.referenced_abilities)
  referenced_abilities_.Mutable(index)->assign(value);
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_abilities(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.referenced_abilities)
  referenced_abilities_.Mutable(index)->assign(std::move(value));
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_abilities(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  referenced_abilities_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_abilities(int index, const char* value, size_t size) {
  referenced_abilities_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_add_referenced_abilities() {
  return referenced_abilities_.Add();
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_abilities(const std::string& value) {
  referenced_abilities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_abilities(std::string&& value) {
  referenced_abilities_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_abilities(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  referenced_abilities_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_abilities(const char* value, size_t size) {
  referenced_abilities_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CDOTAUserMsg_ContextualTip.referenced_abilities)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CDOTAUserMsg_ContextualTip::referenced_abilities() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_ContextualTip.referenced_abilities)
  return referenced_abilities_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CDOTAUserMsg_ContextualTip::mutable_referenced_abilities() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_ContextualTip.referenced_abilities)
  return &referenced_abilities_;
}

// repeated string referenced_units = 3;
inline int CDOTAUserMsg_ContextualTip::_internal_referenced_units_size() const {
  return referenced_units_.size();
}
inline int CDOTAUserMsg_ContextualTip::referenced_units_size() const {
  return _internal_referenced_units_size();
}
inline void CDOTAUserMsg_ContextualTip::clear_referenced_units() {
  referenced_units_.Clear();
}
inline std::string* CDOTAUserMsg_ContextualTip::add_referenced_units() {
  // @@protoc_insertion_point(field_add_mutable:CDOTAUserMsg_ContextualTip.referenced_units)
  return _internal_add_referenced_units();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_referenced_units(int index) const {
  return referenced_units_.Get(index);
}
inline const std::string& CDOTAUserMsg_ContextualTip::referenced_units(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.referenced_units)
  return _internal_referenced_units(index);
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_referenced_units(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.referenced_units)
  return referenced_units_.Mutable(index);
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_units(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.referenced_units)
  referenced_units_.Mutable(index)->assign(value);
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_units(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.referenced_units)
  referenced_units_.Mutable(index)->assign(std::move(value));
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_units(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  referenced_units_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline void CDOTAUserMsg_ContextualTip::set_referenced_units(int index, const char* value, size_t size) {
  referenced_units_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_add_referenced_units() {
  return referenced_units_.Add();
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_units(const std::string& value) {
  referenced_units_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_units(std::string&& value) {
  referenced_units_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_units(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  referenced_units_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline void CDOTAUserMsg_ContextualTip::add_referenced_units(const char* value, size_t size) {
  referenced_units_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CDOTAUserMsg_ContextualTip.referenced_units)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CDOTAUserMsg_ContextualTip::referenced_units() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_ContextualTip.referenced_units)
  return referenced_units_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CDOTAUserMsg_ContextualTip::mutable_referenced_units() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_ContextualTip.referenced_units)
  return &referenced_units_;
}

// repeated string panorama_classes = 4;
inline int CDOTAUserMsg_ContextualTip::_internal_panorama_classes_size() const {
  return panorama_classes_.size();
}
inline int CDOTAUserMsg_ContextualTip::panorama_classes_size() const {
  return _internal_panorama_classes_size();
}
inline void CDOTAUserMsg_ContextualTip::clear_panorama_classes() {
  panorama_classes_.Clear();
}
inline std::string* CDOTAUserMsg_ContextualTip::add_panorama_classes() {
  // @@protoc_insertion_point(field_add_mutable:CDOTAUserMsg_ContextualTip.panorama_classes)
  return _internal_add_panorama_classes();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_panorama_classes(int index) const {
  return panorama_classes_.Get(index);
}
inline const std::string& CDOTAUserMsg_ContextualTip::panorama_classes(int index) const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.panorama_classes)
  return _internal_panorama_classes(index);
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_panorama_classes(int index) {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.panorama_classes)
  return panorama_classes_.Mutable(index);
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_classes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.panorama_classes)
  panorama_classes_.Mutable(index)->assign(value);
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_classes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.panorama_classes)
  panorama_classes_.Mutable(index)->assign(std::move(value));
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_classes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  panorama_classes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_classes(int index, const char* value, size_t size) {
  panorama_classes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_add_panorama_classes() {
  return panorama_classes_.Add();
}
inline void CDOTAUserMsg_ContextualTip::add_panorama_classes(const std::string& value) {
  panorama_classes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline void CDOTAUserMsg_ContextualTip::add_panorama_classes(std::string&& value) {
  panorama_classes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline void CDOTAUserMsg_ContextualTip::add_panorama_classes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  panorama_classes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline void CDOTAUserMsg_ContextualTip::add_panorama_classes(const char* value, size_t size) {
  panorama_classes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:CDOTAUserMsg_ContextualTip.panorama_classes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CDOTAUserMsg_ContextualTip::panorama_classes() const {
  // @@protoc_insertion_point(field_list:CDOTAUserMsg_ContextualTip.panorama_classes)
  return panorama_classes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CDOTAUserMsg_ContextualTip::mutable_panorama_classes() {
  // @@protoc_insertion_point(field_mutable_list:CDOTAUserMsg_ContextualTip.panorama_classes)
  return &panorama_classes_;
}

// optional bool force_annotation = 5;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_force_annotation() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_force_annotation() const {
  return _internal_has_force_annotation();
}
inline void CDOTAUserMsg_ContextualTip::clear_force_annotation() {
  force_annotation_ = false;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool CDOTAUserMsg_ContextualTip::_internal_force_annotation() const {
  return force_annotation_;
}
inline bool CDOTAUserMsg_ContextualTip::force_annotation() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.force_annotation)
  return _internal_force_annotation();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_force_annotation(bool value) {
  _has_bits_[0] |= 0x00000040u;
  force_annotation_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_force_annotation(bool value) {
  _internal_set_force_annotation(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.force_annotation)
}

// optional int32 variant = 6;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_variant() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_variant() const {
  return _internal_has_variant();
}
inline void CDOTAUserMsg_ContextualTip::clear_variant() {
  variant_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::_internal_variant() const {
  return variant_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::variant() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.variant)
  return _internal_variant();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_variant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  variant_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_variant(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_variant(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.variant)
}

// optional int32 int_param = 7;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_int_param() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_int_param() const {
  return _internal_has_int_param();
}
inline void CDOTAUserMsg_ContextualTip::clear_int_param() {
  int_param_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::_internal_int_param() const {
  return int_param_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::int_param() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.int_param)
  return _internal_int_param();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_int_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  int_param_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_int_param(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_param(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.int_param)
}

// optional int32 int_param2 = 8;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_int_param2() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_int_param2() const {
  return _internal_has_int_param2();
}
inline void CDOTAUserMsg_ContextualTip::clear_int_param2() {
  int_param2_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::_internal_int_param2() const {
  return int_param2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ContextualTip::int_param2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.int_param2)
  return _internal_int_param2();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_int_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  int_param2_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_int_param2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int_param2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.int_param2)
}

// optional float float_param = 9;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_float_param() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_float_param() const {
  return _internal_has_float_param();
}
inline void CDOTAUserMsg_ContextualTip::clear_float_param() {
  float_param_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline float CDOTAUserMsg_ContextualTip::_internal_float_param() const {
  return float_param_;
}
inline float CDOTAUserMsg_ContextualTip::float_param() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.float_param)
  return _internal_float_param();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_float_param(float value) {
  _has_bits_[0] |= 0x00000400u;
  float_param_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_float_param(float value) {
  _internal_set_float_param(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.float_param)
}

// optional float float_param2 = 10;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_float_param2() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_float_param2() const {
  return _internal_has_float_param2();
}
inline void CDOTAUserMsg_ContextualTip::clear_float_param2() {
  float_param2_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline float CDOTAUserMsg_ContextualTip::_internal_float_param2() const {
  return float_param2_;
}
inline float CDOTAUserMsg_ContextualTip::float_param2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.float_param2)
  return _internal_float_param2();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_float_param2(float value) {
  _has_bits_[0] |= 0x00000800u;
  float_param2_ = value;
}
inline void CDOTAUserMsg_ContextualTip::set_float_param2(float value) {
  _internal_set_float_param2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.float_param2)
}

// optional string string_param = 11;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_string_param() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_string_param() const {
  return _internal_has_string_param();
}
inline void CDOTAUserMsg_ContextualTip::clear_string_param() {
  string_param_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ContextualTip::string_param() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.string_param)
  return _internal_string_param();
}
inline void CDOTAUserMsg_ContextualTip::set_string_param(const std::string& value) {
  _internal_set_string_param(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.string_param)
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_string_param() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.string_param)
  return _internal_mutable_string_param();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_string_param() const {
  return string_param_.Get();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_string_param(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  string_param_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_string_param(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  string_param_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ContextualTip.string_param)
}
inline void CDOTAUserMsg_ContextualTip::set_string_param(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  string_param_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.string_param)
}
inline void CDOTAUserMsg_ContextualTip::set_string_param(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  string_param_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.string_param)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_mutable_string_param() {
  _has_bits_[0] |= 0x00000001u;
  return string_param_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ContextualTip::release_string_param() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ContextualTip.string_param)
  if (!_internal_has_string_param()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return string_param_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_allocated_string_param(std::string* string_param) {
  if (string_param != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  string_param_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_param,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ContextualTip.string_param)
}

// optional string string_param2 = 12;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_string_param2() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_string_param2() const {
  return _internal_has_string_param2();
}
inline void CDOTAUserMsg_ContextualTip::clear_string_param2() {
  string_param2_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& CDOTAUserMsg_ContextualTip::string_param2() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.string_param2)
  return _internal_string_param2();
}
inline void CDOTAUserMsg_ContextualTip::set_string_param2(const std::string& value) {
  _internal_set_string_param2(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.string_param2)
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_string_param2() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.string_param2)
  return _internal_mutable_string_param2();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_string_param2() const {
  return string_param2_.Get();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_string_param2(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  string_param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_string_param2(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  string_param2_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ContextualTip.string_param2)
}
inline void CDOTAUserMsg_ContextualTip::set_string_param2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  string_param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.string_param2)
}
inline void CDOTAUserMsg_ContextualTip::set_string_param2(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  string_param2_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.string_param2)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_mutable_string_param2() {
  _has_bits_[0] |= 0x00000002u;
  return string_param2_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ContextualTip::release_string_param2() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ContextualTip.string_param2)
  if (!_internal_has_string_param2()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return string_param2_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_allocated_string_param2(std::string* string_param2) {
  if (string_param2 != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  string_param2_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), string_param2,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ContextualTip.string_param2)
}

// optional string tip_text_override = 13;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_tip_text_override() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_tip_text_override() const {
  return _internal_has_tip_text_override();
}
inline void CDOTAUserMsg_ContextualTip::clear_tip_text_override() {
  tip_text_override_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& CDOTAUserMsg_ContextualTip::tip_text_override() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.tip_text_override)
  return _internal_tip_text_override();
}
inline void CDOTAUserMsg_ContextualTip::set_tip_text_override(const std::string& value) {
  _internal_set_tip_text_override(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.tip_text_override)
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_tip_text_override() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.tip_text_override)
  return _internal_mutable_tip_text_override();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_tip_text_override() const {
  return tip_text_override_.Get();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_tip_text_override(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  tip_text_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_tip_text_override(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  tip_text_override_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ContextualTip.tip_text_override)
}
inline void CDOTAUserMsg_ContextualTip::set_tip_text_override(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  tip_text_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.tip_text_override)
}
inline void CDOTAUserMsg_ContextualTip::set_tip_text_override(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  tip_text_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.tip_text_override)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_mutable_tip_text_override() {
  _has_bits_[0] |= 0x00000004u;
  return tip_text_override_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ContextualTip::release_tip_text_override() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ContextualTip.tip_text_override)
  if (!_internal_has_tip_text_override()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return tip_text_override_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_allocated_tip_text_override(std::string* tip_text_override) {
  if (tip_text_override != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  tip_text_override_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tip_text_override,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ContextualTip.tip_text_override)
}

// optional string tip_annotation_override = 14;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_tip_annotation_override() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_tip_annotation_override() const {
  return _internal_has_tip_annotation_override();
}
inline void CDOTAUserMsg_ContextualTip::clear_tip_annotation_override() {
  tip_annotation_override_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000008u;
}
inline const std::string& CDOTAUserMsg_ContextualTip::tip_annotation_override() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.tip_annotation_override)
  return _internal_tip_annotation_override();
}
inline void CDOTAUserMsg_ContextualTip::set_tip_annotation_override(const std::string& value) {
  _internal_set_tip_annotation_override(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.tip_annotation_override)
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_tip_annotation_override() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.tip_annotation_override)
  return _internal_mutable_tip_annotation_override();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_tip_annotation_override() const {
  return tip_annotation_override_.Get();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_tip_annotation_override(const std::string& value) {
  _has_bits_[0] |= 0x00000008u;
  tip_annotation_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_tip_annotation_override(std::string&& value) {
  _has_bits_[0] |= 0x00000008u;
  tip_annotation_override_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ContextualTip.tip_annotation_override)
}
inline void CDOTAUserMsg_ContextualTip::set_tip_annotation_override(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000008u;
  tip_annotation_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.tip_annotation_override)
}
inline void CDOTAUserMsg_ContextualTip::set_tip_annotation_override(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000008u;
  tip_annotation_override_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.tip_annotation_override)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_mutable_tip_annotation_override() {
  _has_bits_[0] |= 0x00000008u;
  return tip_annotation_override_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ContextualTip::release_tip_annotation_override() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ContextualTip.tip_annotation_override)
  if (!_internal_has_tip_annotation_override()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000008u;
  return tip_annotation_override_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_allocated_tip_annotation_override(std::string* tip_annotation_override) {
  if (tip_annotation_override != nullptr) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  tip_annotation_override_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tip_annotation_override,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ContextualTip.tip_annotation_override)
}

// optional string panorama_snippet = 15;
inline bool CDOTAUserMsg_ContextualTip::_internal_has_panorama_snippet() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ContextualTip::has_panorama_snippet() const {
  return _internal_has_panorama_snippet();
}
inline void CDOTAUserMsg_ContextualTip::clear_panorama_snippet() {
  panorama_snippet_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000010u;
}
inline const std::string& CDOTAUserMsg_ContextualTip::panorama_snippet() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ContextualTip.panorama_snippet)
  return _internal_panorama_snippet();
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_snippet(const std::string& value) {
  _internal_set_panorama_snippet(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ContextualTip.panorama_snippet)
}
inline std::string* CDOTAUserMsg_ContextualTip::mutable_panorama_snippet() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ContextualTip.panorama_snippet)
  return _internal_mutable_panorama_snippet();
}
inline const std::string& CDOTAUserMsg_ContextualTip::_internal_panorama_snippet() const {
  return panorama_snippet_.Get();
}
inline void CDOTAUserMsg_ContextualTip::_internal_set_panorama_snippet(const std::string& value) {
  _has_bits_[0] |= 0x00000010u;
  panorama_snippet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_snippet(std::string&& value) {
  _has_bits_[0] |= 0x00000010u;
  panorama_snippet_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ContextualTip.panorama_snippet)
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_snippet(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000010u;
  panorama_snippet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ContextualTip.panorama_snippet)
}
inline void CDOTAUserMsg_ContextualTip::set_panorama_snippet(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000010u;
  panorama_snippet_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ContextualTip.panorama_snippet)
}
inline std::string* CDOTAUserMsg_ContextualTip::_internal_mutable_panorama_snippet() {
  _has_bits_[0] |= 0x00000010u;
  return panorama_snippet_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ContextualTip::release_panorama_snippet() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ContextualTip.panorama_snippet)
  if (!_internal_has_panorama_snippet()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000010u;
  return panorama_snippet_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ContextualTip::set_allocated_panorama_snippet(std::string* panorama_snippet) {
  if (panorama_snippet != nullptr) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  panorama_snippet_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), panorama_snippet,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ContextualTip.panorama_snippet)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatMessage

// optional int32 source_player_id = 1;
inline bool CDOTAUserMsg_ChatMessage::_internal_has_source_player_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatMessage::has_source_player_id() const {
  return _internal_has_source_player_id();
}
inline void CDOTAUserMsg_ChatMessage::clear_source_player_id() {
  source_player_id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatMessage::_internal_source_player_id() const {
  return source_player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CDOTAUserMsg_ChatMessage::source_player_id() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatMessage.source_player_id)
  return _internal_source_player_id();
}
inline void CDOTAUserMsg_ChatMessage::_internal_set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  source_player_id_ = value;
}
inline void CDOTAUserMsg_ChatMessage::set_source_player_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_source_player_id(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatMessage.source_player_id)
}

// optional uint32 channel_type = 2;
inline bool CDOTAUserMsg_ChatMessage::_internal_has_channel_type() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatMessage::has_channel_type() const {
  return _internal_has_channel_type();
}
inline void CDOTAUserMsg_ChatMessage::clear_channel_type() {
  channel_type_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatMessage::_internal_channel_type() const {
  return channel_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CDOTAUserMsg_ChatMessage::channel_type() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatMessage.channel_type)
  return _internal_channel_type();
}
inline void CDOTAUserMsg_ChatMessage::_internal_set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  channel_type_ = value;
}
inline void CDOTAUserMsg_ChatMessage::set_channel_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_channel_type(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatMessage.channel_type)
}

// optional string message_text = 3;
inline bool CDOTAUserMsg_ChatMessage::_internal_has_message_text() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CDOTAUserMsg_ChatMessage::has_message_text() const {
  return _internal_has_message_text();
}
inline void CDOTAUserMsg_ChatMessage::clear_message_text() {
  message_text_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CDOTAUserMsg_ChatMessage::message_text() const {
  // @@protoc_insertion_point(field_get:CDOTAUserMsg_ChatMessage.message_text)
  return _internal_message_text();
}
inline void CDOTAUserMsg_ChatMessage::set_message_text(const std::string& value) {
  _internal_set_message_text(value);
  // @@protoc_insertion_point(field_set:CDOTAUserMsg_ChatMessage.message_text)
}
inline std::string* CDOTAUserMsg_ChatMessage::mutable_message_text() {
  // @@protoc_insertion_point(field_mutable:CDOTAUserMsg_ChatMessage.message_text)
  return _internal_mutable_message_text();
}
inline const std::string& CDOTAUserMsg_ChatMessage::_internal_message_text() const {
  return message_text_.Get();
}
inline void CDOTAUserMsg_ChatMessage::_internal_set_message_text(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  message_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CDOTAUserMsg_ChatMessage::set_message_text(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  message_text_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CDOTAUserMsg_ChatMessage.message_text)
}
inline void CDOTAUserMsg_ChatMessage::set_message_text(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  message_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CDOTAUserMsg_ChatMessage.message_text)
}
inline void CDOTAUserMsg_ChatMessage::set_message_text(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  message_text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CDOTAUserMsg_ChatMessage.message_text)
}
inline std::string* CDOTAUserMsg_ChatMessage::_internal_mutable_message_text() {
  _has_bits_[0] |= 0x00000001u;
  return message_text_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CDOTAUserMsg_ChatMessage::release_message_text() {
  // @@protoc_insertion_point(field_release:CDOTAUserMsg_ChatMessage.message_text)
  if (!_internal_has_message_text()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return message_text_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CDOTAUserMsg_ChatMessage::set_allocated_message_text(std::string* message_text) {
  if (message_text != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  message_text_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message_text,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CDOTAUserMsg_ChatMessage.message_text)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CDOTAUserMsg_PredictionResult_Prediction_EResult> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CDOTAUserMsg_PredictionResult_Prediction_EResult>() {
  return ::CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
}
template <> struct is_proto_enum< ::CDOTAResponseQuerySerialized_Fact_ValueType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CDOTAResponseQuerySerialized_Fact_ValueType>() {
  return ::CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
}
template <> struct is_proto_enum< ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType>() {
  return ::CDOTAUserMsg_GuildChallenge_Progress_EChallengeType_descriptor();
}
template <> struct is_proto_enum< ::EDotaUserMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EDotaUserMessages>() {
  return ::EDotaUserMessages_descriptor();
}
template <> struct is_proto_enum< ::DOTA_CHAT_MESSAGE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_CHAT_MESSAGE>() {
  return ::DOTA_CHAT_MESSAGE_descriptor();
}
template <> struct is_proto_enum< ::DOTA_NO_BATTLE_POINTS_REASONS> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_NO_BATTLE_POINTS_REASONS>() {
  return ::DOTA_NO_BATTLE_POINTS_REASONS_descriptor();
}
template <> struct is_proto_enum< ::DOTA_CHAT_INFORMATIONAL> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_CHAT_INFORMATIONAL>() {
  return ::DOTA_CHAT_INFORMATIONAL_descriptor();
}
template <> struct is_proto_enum< ::DOTA_ABILITY_PING_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_ABILITY_PING_TYPE>() {
  return ::DOTA_ABILITY_PING_TYPE_descriptor();
}
template <> struct is_proto_enum< ::DOTA_REPLAY_STATE_EVENT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_REPLAY_STATE_EVENT>() {
  return ::DOTA_REPLAY_STATE_EVENT_descriptor();
}
template <> struct is_proto_enum< ::EDotaEntityMessages> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EDotaEntityMessages>() {
  return ::EDotaEntityMessages_descriptor();
}
template <> struct is_proto_enum< ::DOTA_OVERHEAD_ALERT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_OVERHEAD_ALERT>() {
  return ::DOTA_OVERHEAD_ALERT_descriptor();
}
template <> struct is_proto_enum< ::DOTA_ROSHAN_PHASE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_ROSHAN_PHASE>() {
  return ::DOTA_ROSHAN_PHASE_descriptor();
}
template <> struct is_proto_enum< ::DOTA_POSITION_CATEGORY> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_POSITION_CATEGORY>() {
  return ::DOTA_POSITION_CATEGORY_descriptor();
}
template <> struct is_proto_enum< ::DOTA_ABILITY_TARGET_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DOTA_ABILITY_TARGET_TYPE>() {
  return ::DOTA_ABILITY_TARGET_TYPE_descriptor();
}
template <> struct is_proto_enum< ::EHeroStatType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EHeroStatType>() {
  return ::EHeroStatType_descriptor();
}
template <> struct is_proto_enum< ::EPlayerVoiceListenState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPlayerVoiceListenState>() {
  return ::EPlayerVoiceListenState_descriptor();
}
template <> struct is_proto_enum< ::EProjectionEvent> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EProjectionEvent>() {
  return ::EProjectionEvent_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fusermessages_2eproto
