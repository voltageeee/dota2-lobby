// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_coaching.proto

#include "dota_gcmessages_client_coaching.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : teammate_ratings_()
  , match_id_(PROTOBUF_ULONGLONG(0))
  , match_outcome_(0)

  , coached_team_(0u)
  , start_time_(0u)
  , duration_(0u)
  , coach_flags_(0u){}
struct CMsgPlayerCoachMatchDefaultTypeInternal {
  constexpr CMsgPlayerCoachMatchDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgPlayerCoachMatchDefaultTypeInternal() {}
  union {
    CMsgPlayerCoachMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgPlayerCoachMatchDefaultTypeInternal _CMsgPlayerCoachMatch_default_instance_;
constexpr CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_id_(0u)
  , member_flags_(0u)
  , member_session_rating_(0)
{}
struct CMsgPrivateCoachingSessionMemberDefaultTypeInternal {
  constexpr CMsgPrivateCoachingSessionMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionMemberDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSessionMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgPrivateCoachingSessionMemberDefaultTypeInternal _CMsgPrivateCoachingSessionMember_default_instance_;
constexpr CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : session_members_()
  , private_coaching_session_id_(PROTOBUF_ULONGLONG(0))
  , requested_timestamp_(0u)
  , requested_language_(0u)
  , current_lobby_id_(PROTOBUF_ULONGLONG(0))
  , coaching_session_state_(0)

  , accepted_timestamp_(0u)
  , current_server_steam_id_(PROTOBUF_ULONGLONG(0))
  , completed_timestamp_(0u){}
struct CMsgPrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgPrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgPrivateCoachingSessionDefaultTypeInternal _CMsgPrivateCoachingSession_default_instance_;
constexpr CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requester_competitive_rank_tier_(0u)
  , requester_games_played_(0u){}
struct CMsgPrivateCoachingSessionStatusDefaultTypeInternal {
  constexpr CMsgPrivateCoachingSessionStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgPrivateCoachingSessionStatusDefaultTypeInternal() {}
  union {
    CMsgPrivateCoachingSessionStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgPrivateCoachingSessionStatusDefaultTypeInternal _CMsgPrivateCoachingSessionStatus_default_instance_;
constexpr CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_(nullptr)
  , coaching_session_status_(nullptr){}
struct CMsgAvailablePrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgAvailablePrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAvailablePrivateCoachingSessionDefaultTypeInternal _CMsgAvailablePrivateCoachingSession_default_instance_;
constexpr CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : available_coaching_sessions_(){}
struct CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal {
  constexpr CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSessionList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionList_default_instance_;
constexpr CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_count_(0u){}
struct CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal {
  constexpr CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal() {}
  union {
    CMsgAvailablePrivateCoachingSessionSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionSummary_default_instance_;
constexpr CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatches _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatches_default_instance_;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coach_matches_()
  , result_(0)
{}
struct CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatchesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_;
constexpr CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : match_id_(PROTOBUF_ULONGLONG(0)){}
struct CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatch_default_instance_;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coach_match_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPlayerCoachMatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_;
constexpr CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reason_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , match_id_(PROTOBUF_ULONGLONG(0))
  , coach_account_id_(0u)
  , rating_(0)
{}
struct CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal {
  constexpr CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitCoachTeammateRating _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRating_default_instance_;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal {
  constexpr CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitCoachTeammateRatingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_;
constexpr CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coach_match_(nullptr){}
struct CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal {
  constexpr CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal() {}
  union {
    CMsgGCToClientCoachTeammateRatingsChanged _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal _CMsgGCToClientCoachTeammateRatingsChanged_default_instance_;
constexpr CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : language_(0u){}
struct CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSession_default_instance_;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_;
constexpr CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_id_(PROTOBUF_ULONGLONG(0)){}
struct CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSession_default_instance_;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal {
  constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_;
constexpr CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeavePrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSession_default_instance_;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal {
  constexpr CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeavePrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal {
  constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetCurrentPrivateCoachingSession _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : current_session_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal {
  constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_;
constexpr CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_(nullptr){}
struct CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal {
  constexpr CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientPrivateCoachingSessionUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal _CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_id_(PROTOBUF_ULONGLONG(0))
  , session_rating_(0)
{}
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal {
  constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPrivateCoachingSessionRating _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal {
  constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : language_(0u){}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal {
  constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : available_sessions_list_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal {
  constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal {
  constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coaching_session_summary_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal {
  constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal {
  constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinPrivateCoachingSessionLobby _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal {
  constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_;
constexpr CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : target_account_id_(0u){}
struct CMsgClientToGCCoachFriendDefaultTypeInternal {
  constexpr CMsgClientToGCCoachFriendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCoachFriendDefaultTypeInternal() {}
  union {
    CMsgClientToGCCoachFriend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCoachFriendDefaultTypeInternal _CMsgClientToGCCoachFriend_default_instance_;
constexpr CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCCoachFriendResponseDefaultTypeInternal {
  constexpr CMsgClientToGCCoachFriendResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCoachFriendResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCoachFriendResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCoachFriendResponseDefaultTypeInternal _CMsgClientToGCCoachFriendResponse_default_instance_;
constexpr CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coach_account_id_(0u)
  , response_(0)
{}
struct CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal {
  constexpr CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal() {}
  union {
    CMsgClientToGCRespondToCoachFriendRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequest_default_instance_;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRespondToCoachFriendRequestResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto[35];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[17];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, match_outcome_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, coached_team_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, start_time_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, duration_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, teammate_ratings_),
  PROTOBUF_FIELD_OFFSET(::CMsgPlayerCoachMatch, coach_flags_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, member_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionMember, member_session_rating_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, private_coaching_session_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, requested_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, requested_language_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, coaching_session_state_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, session_members_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, current_lobby_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, current_server_steam_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, accepted_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSession, completed_timestamp_),
  0,
  1,
  2,
  4,
  ~0u,
  3,
  6,
  5,
  7,
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, requester_competitive_rank_tier_),
  PROTOBUF_FIELD_OFFSET(::CMsgPrivateCoachingSessionStatus, requester_games_played_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, coaching_session_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSession, coaching_session_status_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionList, available_coaching_sessions_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAvailablePrivateCoachingSessionSummary, coaching_session_count_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatches, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchesResponse, coach_matches_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatch, match_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPlayerCoachMatchResponse, coach_match_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, match_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, coach_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, rating_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRating, reason_),
  1,
  2,
  3,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitCoachTeammateRatingResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientCoachTeammateRatingsChanged, coach_match_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSession, language_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestPrivateCoachingSessionResponse, coaching_session_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSession, coaching_session_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptPrivateCoachingSessionResponse, coaching_session_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeavePrivateCoachingSessionResponse, result_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, current_session_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientPrivateCoachingSessionUpdated, coaching_session_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, coaching_session_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRating, session_rating_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessions, language_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, available_sessions_list_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, coaching_session_summary_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobby, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriend, target_account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCoachFriendResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, coach_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequest, response_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRespondToCoachFriendRequestResponse, result_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::CMsgPlayerCoachMatch)},
  { 19, 27, sizeof(::CMsgPrivateCoachingSessionMember)},
  { 30, 44, sizeof(::CMsgPrivateCoachingSession)},
  { 53, 60, sizeof(::CMsgPrivateCoachingSessionStatus)},
  { 62, 69, sizeof(::CMsgAvailablePrivateCoachingSession)},
  { 71, -1, sizeof(::CMsgAvailablePrivateCoachingSessionList)},
  { 77, 83, sizeof(::CMsgAvailablePrivateCoachingSessionSummary)},
  { 84, -1, sizeof(::CMsgClientToGCRequestPlayerCoachMatches)},
  { 89, 96, sizeof(::CMsgClientToGCRequestPlayerCoachMatchesResponse)},
  { 98, 104, sizeof(::CMsgClientToGCRequestPlayerCoachMatch)},
  { 105, 112, sizeof(::CMsgClientToGCRequestPlayerCoachMatchResponse)},
  { 114, 123, sizeof(::CMsgClientToGCSubmitCoachTeammateRating)},
  { 127, 133, sizeof(::CMsgClientToGCSubmitCoachTeammateRatingResponse)},
  { 134, 140, sizeof(::CMsgGCToClientCoachTeammateRatingsChanged)},
  { 141, 147, sizeof(::CMsgClientToGCRequestPrivateCoachingSession)},
  { 148, 155, sizeof(::CMsgClientToGCRequestPrivateCoachingSessionResponse)},
  { 157, 163, sizeof(::CMsgClientToGCAcceptPrivateCoachingSession)},
  { 164, 171, sizeof(::CMsgClientToGCAcceptPrivateCoachingSessionResponse)},
  { 173, -1, sizeof(::CMsgClientToGCLeavePrivateCoachingSession)},
  { 178, 184, sizeof(::CMsgClientToGCLeavePrivateCoachingSessionResponse)},
  { 185, -1, sizeof(::CMsgClientToGCGetCurrentPrivateCoachingSession)},
  { 190, 197, sizeof(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)},
  { 199, 205, sizeof(::CMsgGCToClientPrivateCoachingSessionUpdated)},
  { 206, 213, sizeof(::CMsgClientToGCSubmitPrivateCoachingSessionRating)},
  { 215, 221, sizeof(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)},
  { 222, 228, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessions)},
  { 229, 236, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)},
  { 238, -1, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)},
  { 243, 250, sizeof(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)},
  { 252, -1, sizeof(::CMsgClientToGCJoinPrivateCoachingSessionLobby)},
  { 257, 263, sizeof(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)},
  { 264, 270, sizeof(::CMsgClientToGCCoachFriend)},
  { 271, 277, sizeof(::CMsgClientToGCCoachFriendResponse)},
  { 278, 285, sizeof(::CMsgClientToGCRespondToCoachFriendRequest)},
  { 287, 293, sizeof(::CMsgClientToGCRespondToCoachFriendRequestResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgPlayerCoachMatch_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgPrivateCoachingSessionMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgPrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgPrivateCoachingSessionStatus_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAvailablePrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAvailablePrivateCoachingSessionList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAvailablePrivateCoachingSessionSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPlayerCoachMatches_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPlayerCoachMatch_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSubmitCoachTeammateRating_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientCoachTeammateRatingsChanged_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAcceptPrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCLeavePrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCoachFriend_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCoachFriendResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRespondToCoachFriendRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_),
};

const char descriptor_table_protodef_dota_5fgcmessages_5fclient_5fcoaching_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%dota_gcmessages_client_coaching.proto\032"
  "\027dota_shared_enums.proto\032-dota_gcmessage"
  "s_common_match_management.proto\"\352\001\n\024CMsg"
  "PlayerCoachMatch\022\020\n\010match_id\030\001 \001(\004\022>\n\rma"
  "tch_outcome\030\002 \001(\0162\016.EMatchOutcome:\027k_EMa"
  "tchOutcome_Unknown\022\024\n\014coached_team\030\003 \001(\r"
  "\022\022\n\nstart_time\030\004 \001(\007\022\020\n\010duration\030\005 \001(\r\022/"
  "\n\020teammate_ratings\030\006 \003(\0162\025.ECoachTeammat"
  "eRating\022\023\n\013coach_flags\030\007 \001(\r\"\237\001\n CMsgPri"
  "vateCoachingSessionMember\022\022\n\naccount_id\030"
  "\001 \001(\r\022\024\n\014member_flags\030\002 \001(\r\022Q\n\025member_se"
  "ssion_rating\030\003 \001(\0162\025.ECoachTeammateRatin"
  "g:\033k_ECoachTeammateRating_None\"\221\003\n\032CMsgP"
  "rivateCoachingSession\022#\n\033private_coachin"
  "g_session_id\030\001 \001(\004\022\033\n\023requested_timestam"
  "p\030\002 \001(\007\022\032\n\022requested_language\030\003 \001(\r\022e\n\026c"
  "oaching_session_state\030\004 \001(\0162\035.EPrivateCo"
  "achingSessionState:&k_ePrivateCoachingSe"
  "ssionState_Invalid\022:\n\017session_members\030\005 "
  "\003(\0132!.CMsgPrivateCoachingSessionMember\022\030"
  "\n\020current_lobby_id\030\006 \001(\004\022\037\n\027current_serv"
  "er_steam_id\030\007 \001(\004\022\032\n\022accepted_timestamp\030"
  "\010 \001(\007\022\033\n\023completed_timestamp\030\t \001(\007\"k\n CM"
  "sgPrivateCoachingSessionStatus\022\'\n\037reques"
  "ter_competitive_rank_tier\030\001 \001(\r\022\036\n\026reque"
  "ster_games_played\030\002 \001(\r\"\240\001\n#CMsgAvailabl"
  "ePrivateCoachingSession\0225\n\020coaching_sess"
  "ion\030\001 \001(\0132\033.CMsgPrivateCoachingSession\022B"
  "\n\027coaching_session_status\030\002 \001(\0132!.CMsgPr"
  "ivateCoachingSessionStatus\"t\n\'CMsgAvaila"
  "blePrivateCoachingSessionList\022I\n\033availab"
  "le_coaching_sessions\030\001 \003(\0132$.CMsgAvailab"
  "lePrivateCoachingSession\"L\n*CMsgAvailabl"
  "ePrivateCoachingSessionSummary\022\036\n\026coachi"
  "ng_session_count\030\001 \001(\r\")\n\'CMsgClientToGC"
  "RequestPlayerCoachMatches\"\221\002\n/CMsgClient"
  "ToGCRequestPlayerCoachMatchesResponse\022\\\n"
  "\006result\030\001 \001(\0162:.CMsgClientToGCRequestPla"
  "yerCoachMatchesResponse.EResponse:\020k_eIn"
  "ternalError\022,\n\rcoach_matches\030\002 \003(\0132\025.CMs"
  "gPlayerCoachMatch\"R\n\tEResponse\022\024\n\020k_eInt"
  "ernalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBu"
  "sy\020\002\022\017\n\013k_eDisabled\020\003\"9\n%CMsgClientToGCR"
  "equestPlayerCoachMatch\022\020\n\010match_id\030\001 \001(\004"
  "\"\213\002\n-CMsgClientToGCRequestPlayerCoachMat"
  "chResponse\022Z\n\006result\030\001 \001(\01628.CMsgClientT"
  "oGCRequestPlayerCoachMatchResponse.EResp"
  "onse:\020k_eInternalError\022*\n\013coach_match\030\002 "
  "\001(\0132\025.CMsgPlayerCoachMatch\"R\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\"\251\001\n\'CMsgC"
  "lientToGCSubmitCoachTeammateRating\022\020\n\010ma"
  "tch_id\030\001 \001(\004\022\030\n\020coach_account_id\030\002 \001(\r\022B"
  "\n\006rating\030\003 \001(\0162\025.ECoachTeammateRating:\033k"
  "_ECoachTeammateRating_None\022\016\n\006reason\030\004 \001"
  "(\t\"\261\003\n/CMsgClientToGCSubmitCoachTeammate"
  "RatingResponse\022\\\n\006result\030\001 \001(\0162:.CMsgCli"
  "entToGCSubmitCoachTeammateRatingResponse"
  ".EResponse:\020k_eInternalError\"\237\002\n\tERespon"
  "se\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001"
  "\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\023\n\017k_e"
  "InvalidInput\020\004\022\027\n\023k_eAlreadySubmitted\020\005\022"
  "\025\n\021k_eVotingFinished\020\006\022\027\n\023k_ePlayerNotIn"
  "Match\020\007\022\026\n\022k_eCoachNotInMatch\020\010\022\033\n\027k_ePl"
  "ayerNotOnCoachTeam\020\t\022\037\n\033k_ePlayerInSameP"
  "artyAsCoach\020\n\022\027\n\023k_eMatchNotEligible\020\013\"W"
  "\n)CMsgGCToClientCoachTeammateRatingsChan"
  "ged\022*\n\013coach_match\030\001 \001(\0132\025.CMsgPlayerCoa"
  "chMatch\"\?\n+CMsgClientToGCRequestPrivateC"
  "oachingSession\022\020\n\010language\030\001 \001(\r\"\207\004\n3CMs"
  "gClientToGCRequestPrivateCoachingSession"
  "Response\022`\n\006result\030\001 \001(\0162>.CMsgClientToG"
  "CRequestPrivateCoachingSessionResponse.E"
  "Response:\020k_eInternalError\0225\n\020coaching_s"
  "ession\030\002 \001(\0132\033.CMsgPrivateCoachingSessio"
  "n\"\266\002\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n"
  "\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisa"
  "bled\020\003\022\016\n\nk_eTimeout\020\004\022\027\n\023k_eAlreadyInSe"
  "ssion\020\005\022\032\n\026k_eBehaviorScoreTooLow\020\006\022\027\n\023k"
  "_eInvalidLobbyType\020\007\022\030\n\024k_eLowPriorityPl"
  "ayer\020\010\022\027\n\023k_eLowPriorityLobby\020\t\022\027\n\023k_eLo"
  "wPriorityParty\020\n\022\022\n\016k_eTextChatBan\020\013\022\023\n\017"
  "k_eVoiceChatBan\020\014\022\017\n\013k_eMatchBan\020\r\"I\n*CM"
  "sgClientToGCAcceptPrivateCoachingSession"
  "\022\033\n\023coaching_session_id\030\001 \001(\004\"\331\005\n2CMsgCl"
  "ientToGCAcceptPrivateCoachingSessionResp"
  "onse\022_\n\006result\030\001 \001(\0162=.CMsgClientToGCAcc"
  "eptPrivateCoachingSessionResponse.ERespo"
  "nse:\020k_eInternalError\0225\n\020coaching_sessio"
  "n\030\002 \001(\0132\033.CMsgPrivateCoachingSession\"\212\004\n"
  "\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eS"
  "uccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020"
  "\003\022\016\n\nk_eTimeout\020\004\022\025\n\021k_eUnknownSession\020\005"
  "\022\026\n\022k_eAlreadyHasCoach\020\006\022\030\n\024k_eAlreadyHa"
  "sSession\020\007\022\022\n\016k_eInvalidUser\020\010\022\026\n\022k_eAlr"
  "eadyFinished\020\t\022\027\n\023k_eInvalidLobbyType\020\n\022"
  "\025\n\021k_eAlreadyInLobby\020\013\022\021\n\rk_eLobbyIsLan\020"
  "\014\022\024\n\020k_eLobbyIsLeague\020\r\022\030\n\024k_eInvalidLob"
  "byState\020\016\022\033\n\027k_eRequesterIsNotPlayer\020\017\022\025"
  "\n\021k_eTooManyCoaches\020\020\022\025\n\021k_eCoachWasPlay"
  "er\020\021\022\037\n\033k_eCoachBehaviorScoreTooLow\020\022\022\035\n"
  "\031k_eCoachRankNotCalibrated\020\023\022\033\n\027k_eCoach"
  "RankNotEligible\020\024\022\026\n\022k_eCoachRankTooLow\020"
  "\025\"+\n)CMsgClientToGCLeavePrivateCoachingS"
  "ession\"\236\002\n1CMsgClientToGCLeavePrivateCoa"
  "chingSessionResponse\022^\n\006result\030\001 \001(\0162<.C"
  "MsgClientToGCLeavePrivateCoachingSession"
  "Response.EResponse:\020k_eInternalError\"\210\001\n"
  "\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eS"
  "uccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020"
  "\003\022\016\n\nk_eTimeout\020\004\022\020\n\014k_eNoSession\020\005\022\022\n\016k"
  "_eAlreadyLeft\020\006\"0\n.CMsgClientToGCGetCurr"
  "entPrivateCoachingSession\"\267\002\n6CMsgClient"
  "ToGCGetCurrentPrivateCoachingSessionResp"
  "onse\022c\n\006result\030\001 \001(\0162A.CMsgClientToGCGet"
  "CurrentPrivateCoachingSessionResponse.ER"
  "esponse:\020k_eInternalError\0224\n\017current_ses"
  "sion\030\002 \001(\0132\033.CMsgPrivateCoachingSession\""
  "b\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_"
  "eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisable"
  "d\020\003\022\016\n\nk_eTimeout\020\004\"d\n+CMsgGCToClientPri"
  "vateCoachingSessionUpdated\0225\n\020coaching_s"
  "ession\030\001 \001(\0132\033.CMsgPrivateCoachingSessio"
  "n\"\233\001\n0CMsgClientToGCSubmitPrivateCoachin"
  "gSessionRating\022\033\n\023coaching_session_id\030\001 "
  "\001(\004\022J\n\016session_rating\030\002 \001(\0162\025.ECoachTeam"
  "mateRating:\033k_ECoachTeammateRating_None\""
  "\234\003\n8CMsgClientToGCSubmitPrivateCoachingS"
  "essionRatingResponse\022e\n\006result\030\001 \001(\0162C.C"
  "MsgClientToGCSubmitPrivateCoachingSessio"
  "nRatingResponse.EResponse:\020k_eInternalEr"
  "ror\"\370\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022"
  "\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDi"
  "sabled\020\003\022\016\n\nk_eTimeout\020\004\022\025\n\021k_eUnknownSe"
  "ssion\020\005\022\020\n\014k_eNotMember\020\006\022\027\n\023k_eAlreadyS"
  "ubmitted\020\007\022\024\n\020k_eSessionActive\020\010\022\026\n\022k_eS"
  "essionTooShort\020\t\022\016\n\nk_eNoCoach\020\n\022\024\n\020k_eI"
  "nvalidRating\020\013\"E\n1CMsgClientToGCGetAvail"
  "ablePrivateCoachingSessions\022\020\n\010language\030"
  "\001 \001(\r\"\322\002\n9CMsgClientToGCGetAvailablePriv"
  "ateCoachingSessionsResponse\022f\n\006result\030\001 "
  "\001(\0162D.CMsgClientToGCGetAvailablePrivateC"
  "oachingSessionsResponse.EResponse:\020k_eIn"
  "ternalError\022I\n\027available_sessions_list\030\002"
  " \001(\0132(.CMsgAvailablePrivateCoachingSessi"
  "onList\"b\n\tEResponse\022\024\n\020k_eInternalError\020"
  "\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_e"
  "Disabled\020\003\022\016\n\nk_eTimeout\020\004\":\n8CMsgClient"
  "ToGCGetAvailablePrivateCoachingSessionsS"
  "ummary\"\344\002\n@CMsgClientToGCGetAvailablePri"
  "vateCoachingSessionsSummaryResponse\022m\n\006r"
  "esult\030\001 \001(\0162K.CMsgClientToGCGetAvailable"
  "PrivateCoachingSessionsSummaryResponse.E"
  "Response:\020k_eInternalError\022M\n\030coaching_s"
  "ession_summary\030\002 \001(\0132+.CMsgAvailablePriv"
  "ateCoachingSessionSummary\"b\n\tEResponse\022\024"
  "\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\n"
  "k_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTime"
  "out\020\004\"/\n-CMsgClientToGCJoinPrivateCoachi"
  "ngSessionLobby\"\311\004\n5CMsgClientToGCJoinPri"
  "vateCoachingSessionLobbyResponse\022b\n\006resu"
  "lt\030\001 \001(\0162@.CMsgClientToGCJoinPrivateCoac"
  "hingSessionLobbyResponse.EResponse:\020k_eI"
  "nternalError\"\253\003\n\tEResponse\022\024\n\020k_eInterna"
  "lError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002"
  "\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\020\n\014k_e"
  "NoSession\020\005\022\026\n\022k_eSessionFinished\020\006\022\022\n\016k"
  "_eAlreadyLeft\020\007\022\020\n\014k_eNotACoach\020\010\022\016\n\nk_e"
  "NoLobby\020\t\022\027\n\023k_eCoachInThisLobby\020\n\022\024\n\020k_"
  "eCoachInALobby\020\013\022\021\n\rk_eLobbyIsLan\020\014\022\024\n\020k"
  "_eLobbyIsLeague\020\r\022\027\n\023k_eInvalidLobbyType"
  "\020\016\022\030\n\024k_eInvalidLobbyState\020\017\022\033\n\027k_eReque"
  "sterIsNotPlayer\020\020\022\025\n\021k_eTooManyCoaches\020\021"
  "\022\025\n\021k_eCoachWasPlayer\020\022\022\021\n\rk_eJoinFailed"
  "\020\023\"6\n\031CMsgClientToGCCoachFriend\022\031\n\021targe"
  "t_account_id\030\001 \001(\r\"\276\004\n!CMsgClientToGCCoa"
  "chFriendResponse\022N\n\006result\030\001 \001(\0162,.CMsgC"
  "lientToGCCoachFriendResponse.EResponse:\020"
  "k_eInternalError\"\310\003\n\tEResponse\022\024\n\020k_eInt"
  "ernalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBu"
  "sy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\031\n"
  "\025k_eCoachNotSubscriber\020\005\022\024\n\020k_eLobbyNotF"
  "ound\020\006\022\031\n\025k_eFriendsOnBothSides\020\007\022\021\n\rk_e"
  "NotFriends\020\010\022\027\n\023k_eCoachInThisLobby\020\t\022\024\n"
  "\020k_eCoachInALobby\020\n\022\021\n\rk_eLobbyIsLan\020\013\022\027"
  "\n\023k_eInvalidLobbyType\020\014\022\030\n\024k_eInvalidLob"
  "byState\020\r\022\031\n\025k_eFriendIsNotAPlayer\020\016\022\025\n\021"
  "k_eTooManyCoaches\020\017\022\031\n\025k_eCoachSwitchedT"
  "eams\020\020\022\024\n\020k_eLobbyIsLeague\020\021\022\025\n\021k_eCoach"
  "WasPlayer\020\022\022\026\n\022k_eRequestRejected\020\023\"\235\001\n)"
  "CMsgClientToGCRespondToCoachFriendReques"
  "t\022\030\n\020coach_account_id\030\001 \001(\r\022V\n\010response\030"
  "\002 \001(\0162\036.ELobbyMemberCoachRequestState:$k"
  "_eLobbyMemberCoachRequestState_None\"\266\003\n1"
  "CMsgClientToGCRespondToCoachFriendReques"
  "tResponse\022^\n\006result\030\001 \001(\0162<.CMsgClientTo"
  "GCRespondToCoachFriendRequestResponse.ER"
  "esponse:\020k_eInternalError\"\240\002\n\tEResponse\022"
  "\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n"
  "\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTim"
  "eout\020\004\022\024\n\020k_eLobbyNotFound\020\005\022\030\n\024k_eInval"
  "idLobbyState\020\006\022\026\n\022k_eCoachNotInLobby\020\007\022\030"
  "\n\024k_ePlayerInvalidTeam\020\010\022\027\n\023k_eCoachInva"
  "lidTeam\020\t\022\020\n\014k_eNoRequest\020\n\022\026\n\022k_eInvali"
  "dResponse\020\013\022\027\n\023k_eAlreadyResponded\020\014*\245\001\n"
  "\024ECoachTeammateRating\022\037\n\033k_ECoachTeammat"
  "eRating_None\020\000\022#\n\037k_ECoachTeammateRating"
  "_Positive\020\001\022#\n\037k_ECoachTeammateRating_Ne"
  "gative\020\002\022\"\n\036k_ECoachTeammateRating_Abusi"
  "ve\020\003*\271\002\n\034EPrivateCoachingSessionState\022*\n"
  "&k_ePrivateCoachingSessionState_Invalid\020"
  "\000\0224\n0k_ePrivateCoachingSessionState_Sear"
  "chingForCoach\020\001\0220\n,k_ePrivateCoachingSes"
  "sionState_CoachAssigned\020\002\022+\n\'k_ePrivateC"
  "oachingSessionState_Finished\020\003\022*\n&k_ePri"
  "vateCoachingSessionState_Expired\020\004\022,\n(k_"
  "ePrivateCoachingSessionState_Abandoned\020\005"
  "*\272\001\n!EPrivateCoachingSessionMemberFlag\0221"
  "\n-k_EPrivateCoachingSessionMemberFlag_Re"
  "quester\020\001\022-\n)k_EPrivateCoachingSessionMe"
  "mberFlag_Coach\020\002\0223\n/k_EPrivateCoachingSe"
  "ssionMemberFlag_LeftSession\020\004*q\n\025EPlayer"
  "CoachMatchFlag\022.\n*k_EPlayerCoachMatchFla"
  "g_EligibleForRewards\020\001\022(\n$k_EPlayerCoach"
  "MatchFlag_PrivateCoach\020\002B\005H\001\200\001\000"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_deps[2] = {
  &::descriptor_table_dota_5fgcmessages_5fcommon_5fmatch_5fmanagement_2eproto,
  &::descriptor_table_dota_5fshared_5fenums_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto = {
  false, false, 8991, descriptor_table_protodef_dota_5fgcmessages_5fclient_5fcoaching_2eproto, "dota_gcmessages_client_coaching.proto", 
  &descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_once, descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_deps, 2, 35,
  schemas, file_default_instances, TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto::offsets,
  file_level_metadata_dota_5fgcmessages_5fclient_5fcoaching_2eproto, file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto, file_level_service_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_dota_5fgcmessages_5fclient_5fcoaching_2eproto(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[0];
}
bool CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPlayerCoachMatchesResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[1];
}
bool CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPlayerCoachMatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[2];
}
bool CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eInternalError;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eSuccess;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eTooBusy;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eDisabled;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eInvalidInput;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eAlreadySubmitted;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eVotingFinished;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerNotInMatch;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eCoachNotInMatch;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerNotOnCoachTeam;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_ePlayerInSamePartyAsCoach;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::k_eMatchNotEligible;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_MIN;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_MAX;
constexpr int CMsgClientToGCSubmitCoachTeammateRatingResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[3];
}
bool CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eAlreadyInSession;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eBehaviorScoreTooLow;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityPlayer;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityLobby;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eLowPriorityParty;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eTextChatBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eVoiceChatBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::k_eMatchBan;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[4];
}
bool CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eUnknownSession;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyHasCoach;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyHasSession;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidUser;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyFinished;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eAlreadyInLobby;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eRequesterIsNotPlayer;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachBehaviorScoreTooLow;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankNotCalibrated;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankNotEligible;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::k_eCoachRankTooLow;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCAcceptPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[5];
}
bool CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eNoSession;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::k_eAlreadyLeft;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCLeavePrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[6];
}
bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eInternalError;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eSuccess;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eTooBusy;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eDisabled;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::k_eTimeout;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_MIN;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[7];
}
bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eInternalError;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSuccess;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eTooBusy;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eDisabled;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eTimeout;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eUnknownSession;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eNotMember;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eAlreadySubmitted;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSessionActive;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eSessionTooShort;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eNoCoach;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::k_eInvalidRating;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_MIN;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_MAX;
constexpr int CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[8];
}
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eSuccess;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eDisabled;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::k_eTimeout;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_MIN;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[9];
}
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eSuccess;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eTooBusy;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eDisabled;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::k_eTimeout;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_MIN;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_MAX;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[10];
}
bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInternalError;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eSuccess;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTooBusy;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eDisabled;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTimeout;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNoSession;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eSessionFinished;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eAlreadyLeft;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNotACoach;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eNoLobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachInThisLobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachInALobby;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eRequesterIsNotPlayer;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::k_eJoinFailed;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_MIN;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_MAX;
constexpr int CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCoachFriendResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[11];
}
bool CMsgClientToGCCoachFriendResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInternalError;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eSuccess;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTooBusy;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eDisabled;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTimeout;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachNotSubscriber;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyNotFound;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eFriendsOnBothSides;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eNotFriends;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachInThisLobby;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachInALobby;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyIsLan;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInvalidLobbyType;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eFriendIsNotAPlayer;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eTooManyCoaches;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachSwitchedTeams;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eLobbyIsLeague;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eCoachWasPlayer;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::k_eRequestRejected;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::EResponse_MIN;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::EResponse_MAX;
constexpr int CMsgClientToGCCoachFriendResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[12];
}
bool CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInternalError;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eSuccess;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eTooBusy;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eDisabled;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eTimeout;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eLobbyNotFound;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInvalidLobbyState;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eCoachNotInLobby;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_ePlayerInvalidTeam;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eCoachInvalidTeam;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eNoRequest;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eInvalidResponse;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::k_eAlreadyResponded;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_MIN;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_MAX;
constexpr int CMsgClientToGCRespondToCoachFriendRequestResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECoachTeammateRating_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[13];
}
bool ECoachTeammateRating_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[14];
}
bool EPrivateCoachingSessionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionMemberFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[15];
}
bool EPrivateCoachingSessionMemberFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPlayerCoachMatchFlag_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fcoaching_2eproto[16];
}
bool EPlayerCoachMatchFlag_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CMsgPlayerCoachMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPlayerCoachMatch>()._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_match_outcome(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_coached_team(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_duration(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_coach_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  teammate_ratings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPlayerCoachMatch)
}
CMsgPlayerCoachMatch::CMsgPlayerCoachMatch(const CMsgPlayerCoachMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      teammate_ratings_(from.teammate_ratings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&coach_flags_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(coach_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgPlayerCoachMatch)
}

void CMsgPlayerCoachMatch::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&match_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coach_flags_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(coach_flags_));
}

CMsgPlayerCoachMatch::~CMsgPlayerCoachMatch() {
  // @@protoc_insertion_point(destructor:CMsgPlayerCoachMatch)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgPlayerCoachMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgPlayerCoachMatch::ArenaDtor(void* object) {
  CMsgPlayerCoachMatch* _this = reinterpret_cast< CMsgPlayerCoachMatch* >(object);
  (void)_this;
}
void CMsgPlayerCoachMatch::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgPlayerCoachMatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgPlayerCoachMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPlayerCoachMatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  teammate_ratings_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&coach_flags_) -
        reinterpret_cast<char*>(&match_id_)) + sizeof(coach_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPlayerCoachMatch::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EMatchOutcome_IsValid(val))) {
            _internal_set_match_outcome(static_cast<::EMatchOutcome>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 coached_team = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_coached_team(&has_bits);
          coached_team_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 start_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          _Internal::set_has_start_time(&has_bits);
          start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional uint32 duration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_duration(&has_bits);
          duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ECoachTeammateRating teammate_ratings = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ptr -= 1;
          do {
            ptr += 1;
            ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
            CHK_(ptr);
            if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
              _internal_add_teammate_ratings(static_cast<::ECoachTeammateRating>(val));
            } else {
              ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
            }
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<48>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(_internal_mutable_teammate_ratings(), ptr, ctx, ::ECoachTeammateRating_IsValid, &_internal_metadata_, 6);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 coach_flags = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_coach_flags(&has_bits);
          coach_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgPlayerCoachMatch::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPlayerCoachMatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_match_outcome(), target);
  }

  // optional uint32 coached_team = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_coached_team(), target);
  }

  // optional fixed32 start_time = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(4, this->_internal_start_time(), target);
  }

  // optional uint32 duration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_duration(), target);
  }

  // repeated .ECoachTeammateRating teammate_ratings = 6;
  for (int i = 0, n = this->_internal_teammate_ratings_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
        6, this->_internal_teammate_ratings(i), target);
  }

  // optional uint32 coach_flags = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_coach_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPlayerCoachMatch)
  return target;
}

size_t CMsgPlayerCoachMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPlayerCoachMatch)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ECoachTeammateRating teammate_ratings = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal_teammate_ratings_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal_teammate_ratings(static_cast<int>(i)));
    }
    total_size += (1UL * count) + data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_match_id());
    }

    // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_match_outcome());
    }

    // optional uint32 coached_team = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_coached_team());
    }

    // optional fixed32 start_time = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional uint32 duration = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_duration());
    }

    // optional uint32 coach_flags = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_coach_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPlayerCoachMatch::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPlayerCoachMatch* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgPlayerCoachMatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPlayerCoachMatch)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPlayerCoachMatch)
    MergeFrom(*source);
  }
}

void CMsgPlayerCoachMatch::MergeFrom(const CMsgPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  teammate_ratings_.MergeFrom(from.teammate_ratings_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      match_id_ = from.match_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      match_outcome_ = from.match_outcome_;
    }
    if (cached_has_bits & 0x00000004u) {
      coached_team_ = from.coached_team_;
    }
    if (cached_has_bits & 0x00000008u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00000010u) {
      duration_ = from.duration_;
    }
    if (cached_has_bits & 0x00000020u) {
      coach_flags_ = from.coach_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPlayerCoachMatch::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPlayerCoachMatch::CopyFrom(const CMsgPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPlayerCoachMatch::IsInitialized() const {
  return true;
}

void CMsgPlayerCoachMatch::InternalSwap(CMsgPlayerCoachMatch* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  teammate_ratings_.InternalSwap(&other->teammate_ratings_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPlayerCoachMatch, coach_flags_)
      + sizeof(CMsgPlayerCoachMatch::coach_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgPlayerCoachMatch, match_id_)>(
          reinterpret_cast<char*>(&match_id_),
          reinterpret_cast<char*>(&other->match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPlayerCoachMatch::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgPrivateCoachingSessionMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSessionMember>()._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_member_session_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSessionMember)
}
CMsgPrivateCoachingSessionMember::CMsgPrivateCoachingSessionMember(const CMsgPrivateCoachingSessionMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_session_rating_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(member_session_rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSessionMember)
}

void CMsgPrivateCoachingSessionMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&account_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&member_session_rating_) -
    reinterpret_cast<char*>(&account_id_)) + sizeof(member_session_rating_));
}

CMsgPrivateCoachingSessionMember::~CMsgPrivateCoachingSessionMember() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSessionMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgPrivateCoachingSessionMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgPrivateCoachingSessionMember::ArenaDtor(void* object) {
  CMsgPrivateCoachingSessionMember* _this = reinterpret_cast< CMsgPrivateCoachingSessionMember* >(object);
  (void)_this;
}
void CMsgPrivateCoachingSessionMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgPrivateCoachingSessionMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgPrivateCoachingSessionMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSessionMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_session_rating_) -
        reinterpret_cast<char*>(&account_id_)) + sizeof(member_session_rating_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSessionMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 member_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_member_flags(&has_bits);
          member_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_member_session_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgPrivateCoachingSessionMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSessionMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  // optional uint32 member_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_flags(), target);
  }

  // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_member_session_rating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSessionMember)
  return target;
}

size_t CMsgPrivateCoachingSessionMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSessionMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_account_id());
    }

    // optional uint32 member_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_flags());
    }

    // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_member_session_rating());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPrivateCoachingSessionMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPrivateCoachingSessionMember)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPrivateCoachingSessionMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgPrivateCoachingSessionMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPrivateCoachingSessionMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPrivateCoachingSessionMember)
    MergeFrom(*source);
  }
}

void CMsgPrivateCoachingSessionMember::MergeFrom(const CMsgPrivateCoachingSessionMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSessionMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      member_flags_ = from.member_flags_;
    }
    if (cached_has_bits & 0x00000004u) {
      member_session_rating_ = from.member_session_rating_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPrivateCoachingSessionMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPrivateCoachingSessionMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPrivateCoachingSessionMember::CopyFrom(const CMsgPrivateCoachingSessionMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSessionMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSessionMember::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSessionMember::InternalSwap(CMsgPrivateCoachingSessionMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionMember, member_session_rating_)
      + sizeof(CMsgPrivateCoachingSessionMember::member_session_rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionMember, account_id_)>(
          reinterpret_cast<char*>(&account_id_),
          reinterpret_cast<char*>(&other->account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSessionMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSession>()._has_bits_);
  static void set_has_private_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requested_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_requested_language(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_coaching_session_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_current_lobby_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_current_server_steam_id(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_accepted_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_completed_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  session_members_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSession)
}
CMsgPrivateCoachingSession::CMsgPrivateCoachingSession(const CMsgPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      session_members_(from.session_members_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&private_coaching_session_id_, &from.private_coaching_session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&completed_timestamp_) -
    reinterpret_cast<char*>(&private_coaching_session_id_)) + sizeof(completed_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSession)
}

void CMsgPrivateCoachingSession::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&private_coaching_session_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&completed_timestamp_) -
    reinterpret_cast<char*>(&private_coaching_session_id_)) + sizeof(completed_timestamp_));
}

CMsgPrivateCoachingSession::~CMsgPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgPrivateCoachingSession::ArenaDtor(void* object) {
  CMsgPrivateCoachingSession* _this = reinterpret_cast< CMsgPrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgPrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgPrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_members_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&private_coaching_session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&completed_timestamp_) -
        reinterpret_cast<char*>(&private_coaching_session_id_)) + sizeof(completed_timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 private_coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_private_coaching_session_id(&has_bits);
          private_coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 requested_timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_requested_timestamp(&has_bits);
          requested_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional uint32 requested_language = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_requested_language(&has_bits);
          requested_language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EPrivateCoachingSessionState_IsValid(val))) {
            _internal_set_coaching_session_state(static_cast<::EPrivateCoachingSessionState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_session_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // optional uint64 current_lobby_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_current_lobby_id(&has_bits);
          current_lobby_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 current_server_steam_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_current_server_steam_id(&has_bits);
          current_server_steam_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional fixed32 accepted_timestamp = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_accepted_timestamp(&has_bits);
          accepted_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      // optional fixed32 completed_timestamp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 77)) {
          _Internal::set_has_completed_timestamp(&has_bits);
          completed_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint32>(ptr);
          ptr += sizeof(::PROTOBUF_NAMESPACE_ID::uint32);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgPrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 private_coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_private_coaching_session_id(), target);
  }

  // optional fixed32 requested_timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(2, this->_internal_requested_timestamp(), target);
  }

  // optional uint32 requested_language = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_requested_language(), target);
  }

  // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_coaching_session_state(), target);
  }

  // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_session_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_session_members(i), target, stream);
  }

  // optional uint64 current_lobby_id = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_current_lobby_id(), target);
  }

  // optional uint64 current_server_steam_id = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_current_server_steam_id(), target);
  }

  // optional fixed32 accepted_timestamp = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(8, this->_internal_accepted_timestamp(), target);
  }

  // optional fixed32 completed_timestamp = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFixed32ToArray(9, this->_internal_completed_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSession)
  return target;
}

size_t CMsgPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
  total_size += 1UL * this->_internal_session_members_size();
  for (const auto& msg : this->session_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint64 private_coaching_session_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_private_coaching_session_id());
    }

    // optional fixed32 requested_timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional uint32 requested_language = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_requested_language());
    }

    // optional uint64 current_lobby_id = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_current_lobby_id());
    }

    // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_coaching_session_state());
    }

    // optional fixed32 accepted_timestamp = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional uint64 current_server_steam_id = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_current_server_steam_id());
    }

    // optional fixed32 completed_timestamp = 9;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgPrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgPrivateCoachingSession::MergeFrom(const CMsgPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  session_members_.MergeFrom(from.session_members_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      private_coaching_session_id_ = from.private_coaching_session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      requested_timestamp_ = from.requested_timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      requested_language_ = from.requested_language_;
    }
    if (cached_has_bits & 0x00000008u) {
      current_lobby_id_ = from.current_lobby_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      coaching_session_state_ = from.coaching_session_state_;
    }
    if (cached_has_bits & 0x00000020u) {
      accepted_timestamp_ = from.accepted_timestamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      current_server_steam_id_ = from.current_server_steam_id_;
    }
    if (cached_has_bits & 0x00000080u) {
      completed_timestamp_ = from.completed_timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPrivateCoachingSession::CopyFrom(const CMsgPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSession::InternalSwap(CMsgPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  session_members_.InternalSwap(&other->session_members_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSession, completed_timestamp_)
      + sizeof(CMsgPrivateCoachingSession::completed_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSession, private_coaching_session_id_)>(
          reinterpret_cast<char*>(&private_coaching_session_id_),
          reinterpret_cast<char*>(&other->private_coaching_session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgPrivateCoachingSessionStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgPrivateCoachingSessionStatus>()._has_bits_);
  static void set_has_requester_competitive_rank_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requester_games_played(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgPrivateCoachingSessionStatus)
}
CMsgPrivateCoachingSessionStatus::CMsgPrivateCoachingSessionStatus(const CMsgPrivateCoachingSessionStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&requester_competitive_rank_tier_, &from.requester_competitive_rank_tier_,
    static_cast<size_t>(reinterpret_cast<char*>(&requester_games_played_) -
    reinterpret_cast<char*>(&requester_competitive_rank_tier_)) + sizeof(requester_games_played_));
  // @@protoc_insertion_point(copy_constructor:CMsgPrivateCoachingSessionStatus)
}

void CMsgPrivateCoachingSessionStatus::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requester_competitive_rank_tier_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&requester_games_played_) -
    reinterpret_cast<char*>(&requester_competitive_rank_tier_)) + sizeof(requester_games_played_));
}

CMsgPrivateCoachingSessionStatus::~CMsgPrivateCoachingSessionStatus() {
  // @@protoc_insertion_point(destructor:CMsgPrivateCoachingSessionStatus)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgPrivateCoachingSessionStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgPrivateCoachingSessionStatus::ArenaDtor(void* object) {
  CMsgPrivateCoachingSessionStatus* _this = reinterpret_cast< CMsgPrivateCoachingSessionStatus* >(object);
  (void)_this;
}
void CMsgPrivateCoachingSessionStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgPrivateCoachingSessionStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgPrivateCoachingSessionStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgPrivateCoachingSessionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&requester_competitive_rank_tier_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&requester_games_played_) -
        reinterpret_cast<char*>(&requester_competitive_rank_tier_)) + sizeof(requester_games_played_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgPrivateCoachingSessionStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 requester_competitive_rank_tier = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_requester_competitive_rank_tier(&has_bits);
          requester_competitive_rank_tier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 requester_games_played = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_requester_games_played(&has_bits);
          requester_games_played_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgPrivateCoachingSessionStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgPrivateCoachingSessionStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 requester_competitive_rank_tier = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requester_competitive_rank_tier(), target);
  }

  // optional uint32 requester_games_played = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requester_games_played(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgPrivateCoachingSessionStatus)
  return target;
}

size_t CMsgPrivateCoachingSessionStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgPrivateCoachingSessionStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 requester_competitive_rank_tier = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_requester_competitive_rank_tier());
    }

    // optional uint32 requester_games_played = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_requester_games_played());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgPrivateCoachingSessionStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgPrivateCoachingSessionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgPrivateCoachingSessionStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgPrivateCoachingSessionStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgPrivateCoachingSessionStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgPrivateCoachingSessionStatus)
    MergeFrom(*source);
  }
}

void CMsgPrivateCoachingSessionStatus::MergeFrom(const CMsgPrivateCoachingSessionStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgPrivateCoachingSessionStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      requester_competitive_rank_tier_ = from.requester_competitive_rank_tier_;
    }
    if (cached_has_bits & 0x00000002u) {
      requester_games_played_ = from.requester_games_played_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgPrivateCoachingSessionStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgPrivateCoachingSessionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgPrivateCoachingSessionStatus::CopyFrom(const CMsgPrivateCoachingSessionStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgPrivateCoachingSessionStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgPrivateCoachingSessionStatus::IsInitialized() const {
  return true;
}

void CMsgPrivateCoachingSessionStatus::InternalSwap(CMsgPrivateCoachingSessionStatus* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionStatus, requester_games_played_)
      + sizeof(CMsgPrivateCoachingSessionStatus::requester_games_played_)
      - PROTOBUF_FIELD_OFFSET(CMsgPrivateCoachingSessionStatus, requester_competitive_rank_tier_)>(
          reinterpret_cast<char*>(&requester_competitive_rank_tier_),
          reinterpret_cast<char*>(&other->requester_competitive_rank_tier_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgPrivateCoachingSessionStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAvailablePrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAvailablePrivateCoachingSession>()._has_bits_);
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgAvailablePrivateCoachingSession* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::CMsgPrivateCoachingSessionStatus& coaching_session_status(const CMsgAvailablePrivateCoachingSession* msg);
  static void set_has_coaching_session_status(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgAvailablePrivateCoachingSession::_Internal::coaching_session(const CMsgAvailablePrivateCoachingSession* msg) {
  return *msg->coaching_session_;
}
const ::CMsgPrivateCoachingSessionStatus&
CMsgAvailablePrivateCoachingSession::_Internal::coaching_session_status(const CMsgAvailablePrivateCoachingSession* msg) {
  return *msg->coaching_session_status_;
}
CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSession)
}
CMsgAvailablePrivateCoachingSession::CMsgAvailablePrivateCoachingSession(const CMsgAvailablePrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    coaching_session_ = new ::CMsgPrivateCoachingSession(*from.coaching_session_);
  } else {
    coaching_session_ = nullptr;
  }
  if (from._internal_has_coaching_session_status()) {
    coaching_session_status_ = new ::CMsgPrivateCoachingSessionStatus(*from.coaching_session_status_);
  } else {
    coaching_session_status_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSession)
}

void CMsgAvailablePrivateCoachingSession::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coaching_session_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&coaching_session_status_) -
    reinterpret_cast<char*>(&coaching_session_)) + sizeof(coaching_session_status_));
}

CMsgAvailablePrivateCoachingSession::~CMsgAvailablePrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAvailablePrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coaching_session_;
  if (this != internal_default_instance()) delete coaching_session_status_;
}

void CMsgAvailablePrivateCoachingSession::ArenaDtor(void* object) {
  CMsgAvailablePrivateCoachingSession* _this = reinterpret_cast< CMsgAvailablePrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgAvailablePrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAvailablePrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(coaching_session_ != nullptr);
      coaching_session_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(coaching_session_status_ != nullptr);
      coaching_session_status_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgPrivateCoachingSession coaching_session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session_status(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAvailablePrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::coaching_session(this), target, stream);
  }

  // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::coaching_session_status(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSession)
  return target;
}

size_t CMsgAvailablePrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coaching_session_);
    }

    // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coaching_session_status_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAvailablePrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAvailablePrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAvailablePrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAvailablePrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAvailablePrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAvailablePrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgAvailablePrivateCoachingSession::MergeFrom(const CMsgAvailablePrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_coaching_session_status()->::CMsgPrivateCoachingSessionStatus::MergeFrom(from._internal_coaching_session_status());
    }
  }
}

void CMsgAvailablePrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAvailablePrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAvailablePrivateCoachingSession::CopyFrom(const CMsgAvailablePrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSession::InternalSwap(CMsgAvailablePrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAvailablePrivateCoachingSession, coaching_session_status_)
      + sizeof(CMsgAvailablePrivateCoachingSession::coaching_session_status_)
      - PROTOBUF_FIELD_OFFSET(CMsgAvailablePrivateCoachingSession, coaching_session_)>(
          reinterpret_cast<char*>(&coaching_session_),
          reinterpret_cast<char*>(&other->coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAvailablePrivateCoachingSessionList::_Internal {
 public:
};

CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  available_coaching_sessions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSessionList)
}
CMsgAvailablePrivateCoachingSessionList::CMsgAvailablePrivateCoachingSessionList(const CMsgAvailablePrivateCoachingSessionList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      available_coaching_sessions_(from.available_coaching_sessions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSessionList)
}

void CMsgAvailablePrivateCoachingSessionList::SharedCtor() {
}

CMsgAvailablePrivateCoachingSessionList::~CMsgAvailablePrivateCoachingSessionList() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSessionList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAvailablePrivateCoachingSessionList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgAvailablePrivateCoachingSessionList::ArenaDtor(void* object) {
  CMsgAvailablePrivateCoachingSessionList* _this = reinterpret_cast< CMsgAvailablePrivateCoachingSessionList* >(object);
  (void)_this;
}
void CMsgAvailablePrivateCoachingSessionList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAvailablePrivateCoachingSessionList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSessionList::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSessionList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  available_coaching_sessions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSessionList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_available_coaching_sessions(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAvailablePrivateCoachingSessionList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSessionList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_available_coaching_sessions_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_available_coaching_sessions(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSessionList)
  return target;
}

size_t CMsgAvailablePrivateCoachingSessionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSessionList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
  total_size += 1UL * this->_internal_available_coaching_sessions_size();
  for (const auto& msg : this->available_coaching_sessions_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAvailablePrivateCoachingSessionList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAvailablePrivateCoachingSessionList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAvailablePrivateCoachingSessionList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAvailablePrivateCoachingSessionList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAvailablePrivateCoachingSessionList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAvailablePrivateCoachingSessionList)
    MergeFrom(*source);
  }
}

void CMsgAvailablePrivateCoachingSessionList::MergeFrom(const CMsgAvailablePrivateCoachingSessionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSessionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  available_coaching_sessions_.MergeFrom(from.available_coaching_sessions_);
}

void CMsgAvailablePrivateCoachingSessionList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAvailablePrivateCoachingSessionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAvailablePrivateCoachingSessionList::CopyFrom(const CMsgAvailablePrivateCoachingSessionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSessionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSessionList::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSessionList::InternalSwap(CMsgAvailablePrivateCoachingSessionList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  available_coaching_sessions_.InternalSwap(&other->available_coaching_sessions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSessionList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAvailablePrivateCoachingSessionSummary::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAvailablePrivateCoachingSessionSummary>()._has_bits_);
  static void set_has_coaching_session_count(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAvailablePrivateCoachingSessionSummary)
}
CMsgAvailablePrivateCoachingSessionSummary::CMsgAvailablePrivateCoachingSessionSummary(const CMsgAvailablePrivateCoachingSessionSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coaching_session_count_ = from.coaching_session_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgAvailablePrivateCoachingSessionSummary)
}

void CMsgAvailablePrivateCoachingSessionSummary::SharedCtor() {
coaching_session_count_ = 0u;
}

CMsgAvailablePrivateCoachingSessionSummary::~CMsgAvailablePrivateCoachingSessionSummary() {
  // @@protoc_insertion_point(destructor:CMsgAvailablePrivateCoachingSessionSummary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAvailablePrivateCoachingSessionSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgAvailablePrivateCoachingSessionSummary::ArenaDtor(void* object) {
  CMsgAvailablePrivateCoachingSessionSummary* _this = reinterpret_cast< CMsgAvailablePrivateCoachingSessionSummary* >(object);
  (void)_this;
}
void CMsgAvailablePrivateCoachingSessionSummary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAvailablePrivateCoachingSessionSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAvailablePrivateCoachingSessionSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAvailablePrivateCoachingSessionSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coaching_session_count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAvailablePrivateCoachingSessionSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 coaching_session_count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_coaching_session_count(&has_bits);
          coaching_session_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAvailablePrivateCoachingSessionSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAvailablePrivateCoachingSessionSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 coaching_session_count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coaching_session_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAvailablePrivateCoachingSessionSummary)
  return target;
}

size_t CMsgAvailablePrivateCoachingSessionSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAvailablePrivateCoachingSessionSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 coaching_session_count = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_coaching_session_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAvailablePrivateCoachingSessionSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAvailablePrivateCoachingSessionSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAvailablePrivateCoachingSessionSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAvailablePrivateCoachingSessionSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAvailablePrivateCoachingSessionSummary)
    MergeFrom(*source);
  }
}

void CMsgAvailablePrivateCoachingSessionSummary::MergeFrom(const CMsgAvailablePrivateCoachingSessionSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session_count()) {
    _internal_set_coaching_session_count(from._internal_coaching_session_count());
  }
}

void CMsgAvailablePrivateCoachingSessionSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAvailablePrivateCoachingSessionSummary::CopyFrom(const CMsgAvailablePrivateCoachingSessionSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAvailablePrivateCoachingSessionSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAvailablePrivateCoachingSessionSummary::IsInitialized() const {
  return true;
}

void CMsgAvailablePrivateCoachingSessionSummary::InternalSwap(CMsgAvailablePrivateCoachingSessionSummary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(coaching_session_count_, other->coaching_session_count_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAvailablePrivateCoachingSessionSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatches::_Internal {
 public:
};

CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatches)
}
CMsgClientToGCRequestPlayerCoachMatches::CMsgClientToGCRequestPlayerCoachMatches(const CMsgClientToGCRequestPlayerCoachMatches& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatches)
}

void CMsgClientToGCRequestPlayerCoachMatches::SharedCtor() {
}

CMsgClientToGCRequestPlayerCoachMatches::~CMsgClientToGCRequestPlayerCoachMatches() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatches)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPlayerCoachMatches::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestPlayerCoachMatches::ArenaDtor(void* object) {
  CMsgClientToGCRequestPlayerCoachMatches* _this = reinterpret_cast< CMsgClientToGCRequestPlayerCoachMatches* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPlayerCoachMatches::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPlayerCoachMatches::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatches::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatches)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatches::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPlayerCoachMatches::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatches)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatches)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatches::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatches)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPlayerCoachMatches::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPlayerCoachMatches)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPlayerCoachMatches* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPlayerCoachMatches>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPlayerCoachMatches)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPlayerCoachMatches)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPlayerCoachMatches::MergeFrom(const CMsgClientToGCRequestPlayerCoachMatches& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatches)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCRequestPlayerCoachMatches::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPlayerCoachMatches)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPlayerCoachMatches::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatches& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatches)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatches::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatches::InternalSwap(CMsgClientToGCRequestPlayerCoachMatches* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatches::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatchesResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatchesResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  coach_matches_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
}
CMsgClientToGCRequestPlayerCoachMatchesResponse::CMsgClientToGCRequestPlayerCoachMatchesResponse(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      coach_matches_(from.coach_matches_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCRequestPlayerCoachMatchesResponse::~CMsgClientToGCRequestPlayerCoachMatchesResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestPlayerCoachMatchesResponse* _this = reinterpret_cast< CMsgClientToGCRequestPlayerCoachMatchesResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPlayerCoachMatchesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPlayerCoachMatchesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coach_matches_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatchesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .CMsgPlayerCoachMatch coach_matches = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coach_matches(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPlayerCoachMatchesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgPlayerCoachMatch coach_matches = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coach_matches_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_coach_matches(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatchesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgPlayerCoachMatch coach_matches = 2;
  total_size += 1UL * this->_internal_coach_matches_size();
  for (const auto& msg : this->coach_matches_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPlayerCoachMatchesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPlayerCoachMatchesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPlayerCoachMatchesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPlayerCoachMatchesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::MergeFrom(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  coach_matches_.MergeFrom(from.coach_matches_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatchesResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatchesResponse::InternalSwap(CMsgClientToGCRequestPlayerCoachMatchesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  coach_matches_.InternalSwap(&other->coach_matches_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatchesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatch::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatch>()._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatch)
}
CMsgClientToGCRequestPlayerCoachMatch::CMsgClientToGCRequestPlayerCoachMatch(const CMsgClientToGCRequestPlayerCoachMatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  match_id_ = from.match_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatch)
}

void CMsgClientToGCRequestPlayerCoachMatch::SharedCtor() {
match_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCRequestPlayerCoachMatch::~CMsgClientToGCRequestPlayerCoachMatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatch)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPlayerCoachMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestPlayerCoachMatch::ArenaDtor(void* object) {
  CMsgClientToGCRequestPlayerCoachMatch* _this = reinterpret_cast< CMsgClientToGCRequestPlayerCoachMatch* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPlayerCoachMatch::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPlayerCoachMatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatch::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPlayerCoachMatch::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatch)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatch)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 match_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_match_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPlayerCoachMatch::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPlayerCoachMatch* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPlayerCoachMatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPlayerCoachMatch)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPlayerCoachMatch)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPlayerCoachMatch::MergeFrom(const CMsgClientToGCRequestPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_match_id()) {
    _internal_set_match_id(from._internal_match_id());
  }
}

void CMsgClientToGCRequestPlayerCoachMatch::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPlayerCoachMatch::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatch::InternalSwap(CMsgClientToGCRequestPlayerCoachMatch* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(match_id_, other->match_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatch::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPlayerCoachMatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPlayerCoachMatchResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPlayerCoachMatch& coach_match(const CMsgClientToGCRequestPlayerCoachMatchResponse* msg);
  static void set_has_coach_match(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPlayerCoachMatch&
CMsgClientToGCRequestPlayerCoachMatchResponse::_Internal::coach_match(const CMsgClientToGCRequestPlayerCoachMatchResponse* msg) {
  return *msg->coach_match_;
}
CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
}
CMsgClientToGCRequestPlayerCoachMatchResponse::CMsgClientToGCRequestPlayerCoachMatchResponse(const CMsgClientToGCRequestPlayerCoachMatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coach_match()) {
    coach_match_ = new ::CMsgPlayerCoachMatch(*from.coach_match_);
  } else {
    coach_match_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coach_match_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&coach_match_)) + sizeof(result_));
}

CMsgClientToGCRequestPlayerCoachMatchResponse::~CMsgClientToGCRequestPlayerCoachMatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPlayerCoachMatchResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coach_match_;
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestPlayerCoachMatchResponse* _this = reinterpret_cast< CMsgClientToGCRequestPlayerCoachMatchResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPlayerCoachMatchResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPlayerCoachMatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coach_match_ != nullptr);
    coach_match_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPlayerCoachMatchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgPlayerCoachMatch coach_match = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coach_match(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPlayerCoachMatchResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPlayerCoachMatch coach_match = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::coach_match(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPlayerCoachMatchResponse)
  return target;
}

size_t CMsgClientToGCRequestPlayerCoachMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPlayerCoachMatch coach_match = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coach_match_);
    }

    // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPlayerCoachMatchResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPlayerCoachMatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPlayerCoachMatchResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPlayerCoachMatchResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::MergeFrom(const CMsgClientToGCRequestPlayerCoachMatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_coach_match()->::CMsgPlayerCoachMatch::MergeFrom(from._internal_coach_match());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPlayerCoachMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPlayerCoachMatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPlayerCoachMatchResponse::InternalSwap(CMsgClientToGCRequestPlayerCoachMatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPlayerCoachMatchResponse, result_)
      + sizeof(CMsgClientToGCRequestPlayerCoachMatchResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPlayerCoachMatchResponse, coach_match_)>(
          reinterpret_cast<char*>(&coach_match_),
          reinterpret_cast<char*>(&other->coach_match_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPlayerCoachMatchResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSubmitCoachTeammateRating::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitCoachTeammateRating>()._has_bits_);
  static void set_has_match_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_coach_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitCoachTeammateRating)
}
CMsgClientToGCSubmitCoachTeammateRating::CMsgClientToGCSubmitCoachTeammateRating(const CMsgClientToGCSubmitCoachTeammateRating& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_reason()) {
    reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reason(), 
      GetArena());
  }
  ::memcpy(&match_id_, &from.match_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rating_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitCoachTeammateRating)
}

void CMsgClientToGCSubmitCoachTeammateRating::SharedCtor() {
reason_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&match_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rating_) -
    reinterpret_cast<char*>(&match_id_)) + sizeof(rating_));
}

CMsgClientToGCSubmitCoachTeammateRating::~CMsgClientToGCSubmitCoachTeammateRating() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitCoachTeammateRating)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSubmitCoachTeammateRating::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  reason_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCSubmitCoachTeammateRating::ArenaDtor(void* object) {
  CMsgClientToGCSubmitCoachTeammateRating* _this = reinterpret_cast< CMsgClientToGCSubmitCoachTeammateRating* >(object);
  (void)_this;
}
void CMsgClientToGCSubmitCoachTeammateRating::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSubmitCoachTeammateRating::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSubmitCoachTeammateRating::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitCoachTeammateRating)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    reason_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&match_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rating_) -
        reinterpret_cast<char*>(&match_id_)) + sizeof(rating_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitCoachTeammateRating::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 match_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_match_id(&has_bits);
          match_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 coach_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_coach_account_id(&has_bits);
          coach_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string reason = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_reason();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientToGCSubmitCoachTeammateRating.reason");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSubmitCoachTeammateRating::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitCoachTeammateRating)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 match_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_match_id(), target);
  }

  // optional uint32 coach_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_coach_account_id(), target);
  }

  // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_rating(), target);
  }

  // optional string reason = 4;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_reason().data(), static_cast<int>(this->_internal_reason().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCSubmitCoachTeammateRating.reason");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reason(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitCoachTeammateRating)
  return target;
}

size_t CMsgClientToGCSubmitCoachTeammateRating::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitCoachTeammateRating)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string reason = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_reason());
    }

    // optional uint64 match_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_match_id());
    }

    // optional uint32 coach_account_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_coach_account_id());
    }

    // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rating());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSubmitCoachTeammateRating::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSubmitCoachTeammateRating* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSubmitCoachTeammateRating>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSubmitCoachTeammateRating)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSubmitCoachTeammateRating)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSubmitCoachTeammateRating::MergeFrom(const CMsgClientToGCSubmitCoachTeammateRating& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_reason(from._internal_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      match_id_ = from.match_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      coach_account_id_ = from.coach_account_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      rating_ = from.rating_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSubmitCoachTeammateRating::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSubmitCoachTeammateRating::CopyFrom(const CMsgClientToGCSubmitCoachTeammateRating& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitCoachTeammateRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitCoachTeammateRating::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitCoachTeammateRating::InternalSwap(CMsgClientToGCSubmitCoachTeammateRating* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  reason_.Swap(&other->reason_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitCoachTeammateRating, rating_)
      + sizeof(CMsgClientToGCSubmitCoachTeammateRating::rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitCoachTeammateRating, match_id_)>(
          reinterpret_cast<char*>(&match_id_),
          reinterpret_cast<char*>(&other->match_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitCoachTeammateRating::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSubmitCoachTeammateRatingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitCoachTeammateRatingResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
}
CMsgClientToGCSubmitCoachTeammateRatingResponse::CMsgClientToGCSubmitCoachTeammateRatingResponse(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCSubmitCoachTeammateRatingResponse::~CMsgClientToGCSubmitCoachTeammateRatingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::ArenaDtor(void* object) {
  CMsgClientToGCSubmitCoachTeammateRatingResponse* _this = reinterpret_cast< CMsgClientToGCSubmitCoachTeammateRatingResponse* >(object);
  (void)_this;
}
void CMsgClientToGCSubmitCoachTeammateRatingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSubmitCoachTeammateRatingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitCoachTeammateRatingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSubmitCoachTeammateRatingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  return target;
}

size_t CMsgClientToGCSubmitCoachTeammateRatingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSubmitCoachTeammateRatingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSubmitCoachTeammateRatingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSubmitCoachTeammateRatingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSubmitCoachTeammateRatingResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::MergeFrom(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::CopyFrom(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitCoachTeammateRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitCoachTeammateRatingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitCoachTeammateRatingResponse::InternalSwap(CMsgClientToGCSubmitCoachTeammateRatingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitCoachTeammateRatingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientCoachTeammateRatingsChanged::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientCoachTeammateRatingsChanged>()._has_bits_);
  static const ::CMsgPlayerCoachMatch& coach_match(const CMsgGCToClientCoachTeammateRatingsChanged* msg);
  static void set_has_coach_match(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPlayerCoachMatch&
CMsgGCToClientCoachTeammateRatingsChanged::_Internal::coach_match(const CMsgGCToClientCoachTeammateRatingsChanged* msg) {
  return *msg->coach_match_;
}
CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientCoachTeammateRatingsChanged)
}
CMsgGCToClientCoachTeammateRatingsChanged::CMsgGCToClientCoachTeammateRatingsChanged(const CMsgGCToClientCoachTeammateRatingsChanged& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coach_match()) {
    coach_match_ = new ::CMsgPlayerCoachMatch(*from.coach_match_);
  } else {
    coach_match_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientCoachTeammateRatingsChanged)
}

void CMsgGCToClientCoachTeammateRatingsChanged::SharedCtor() {
coach_match_ = nullptr;
}

CMsgGCToClientCoachTeammateRatingsChanged::~CMsgGCToClientCoachTeammateRatingsChanged() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientCoachTeammateRatingsChanged)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientCoachTeammateRatingsChanged::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coach_match_;
}

void CMsgGCToClientCoachTeammateRatingsChanged::ArenaDtor(void* object) {
  CMsgGCToClientCoachTeammateRatingsChanged* _this = reinterpret_cast< CMsgGCToClientCoachTeammateRatingsChanged* >(object);
  (void)_this;
}
void CMsgGCToClientCoachTeammateRatingsChanged::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientCoachTeammateRatingsChanged::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientCoachTeammateRatingsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientCoachTeammateRatingsChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coach_match_ != nullptr);
    coach_match_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientCoachTeammateRatingsChanged::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgPlayerCoachMatch coach_match = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coach_match(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientCoachTeammateRatingsChanged::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientCoachTeammateRatingsChanged)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgPlayerCoachMatch coach_match = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::coach_match(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientCoachTeammateRatingsChanged)
  return target;
}

size_t CMsgGCToClientCoachTeammateRatingsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientCoachTeammateRatingsChanged)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgPlayerCoachMatch coach_match = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *coach_match_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientCoachTeammateRatingsChanged::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientCoachTeammateRatingsChanged* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientCoachTeammateRatingsChanged>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientCoachTeammateRatingsChanged)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientCoachTeammateRatingsChanged)
    MergeFrom(*source);
  }
}

void CMsgGCToClientCoachTeammateRatingsChanged::MergeFrom(const CMsgGCToClientCoachTeammateRatingsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coach_match()) {
    _internal_mutable_coach_match()->::CMsgPlayerCoachMatch::MergeFrom(from._internal_coach_match());
  }
}

void CMsgGCToClientCoachTeammateRatingsChanged::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientCoachTeammateRatingsChanged::CopyFrom(const CMsgGCToClientCoachTeammateRatingsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientCoachTeammateRatingsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientCoachTeammateRatingsChanged::IsInitialized() const {
  return true;
}

void CMsgGCToClientCoachTeammateRatingsChanged::InternalSwap(CMsgGCToClientCoachTeammateRatingsChanged* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(coach_match_, other->coach_match_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientCoachTeammateRatingsChanged::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPrivateCoachingSession>()._has_bits_);
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPrivateCoachingSession)
}
CMsgClientToGCRequestPrivateCoachingSession::CMsgClientToGCRequestPrivateCoachingSession(const CMsgClientToGCRequestPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPrivateCoachingSession)
}

void CMsgClientToGCRequestPrivateCoachingSession::SharedCtor() {
language_ = 0u;
}

CMsgClientToGCRequestPrivateCoachingSession::~CMsgClientToGCRequestPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestPrivateCoachingSession::ArenaDtor(void* object) {
  CMsgClientToGCRequestPrivateCoachingSession* _this = reinterpret_cast< CMsgClientToGCRequestPrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_language(&has_bits);
          language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 language = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCRequestPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 language = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_language());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPrivateCoachingSession::MergeFrom(const CMsgClientToGCRequestPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_language()) {
    _internal_set_language(from._internal_language());
  }
}

void CMsgClientToGCRequestPrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPrivateCoachingSession::CopyFrom(const CMsgClientToGCRequestPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPrivateCoachingSession::InternalSwap(CMsgClientToGCRequestPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestPrivateCoachingSessionResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgClientToGCRequestPrivateCoachingSessionResponse* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCRequestPrivateCoachingSessionResponse::_Internal::coaching_session(const CMsgClientToGCRequestPrivateCoachingSessionResponse* msg) {
  return *msg->coaching_session_;
}
CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
}
CMsgClientToGCRequestPrivateCoachingSessionResponse::CMsgClientToGCRequestPrivateCoachingSessionResponse(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    coaching_session_ = new ::CMsgPrivateCoachingSession(*from.coaching_session_);
  } else {
    coaching_session_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coaching_session_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&coaching_session_)) + sizeof(result_));
}

CMsgClientToGCRequestPrivateCoachingSessionResponse::~CMsgClientToGCRequestPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coaching_session_;
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestPrivateCoachingSessionResponse* _this = reinterpret_cast< CMsgClientToGCRequestPrivateCoachingSessionResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestPrivateCoachingSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coaching_session_ != nullptr);
    coaching_session_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession coaching_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestPrivateCoachingSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::coaching_session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCRequestPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coaching_session_);
    }

    // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestPrivateCoachingSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestPrivateCoachingSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestPrivateCoachingSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestPrivateCoachingSessionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::MergeFrom(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCRequestPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPrivateCoachingSessionResponse, result_)
      + sizeof(CMsgClientToGCRequestPrivateCoachingSessionResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestPrivateCoachingSessionResponse, coaching_session_)>(
          reinterpret_cast<char*>(&coaching_session_),
          reinterpret_cast<char*>(&other->coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestPrivateCoachingSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAcceptPrivateCoachingSession::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptPrivateCoachingSession>()._has_bits_);
  static void set_has_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptPrivateCoachingSession)
}
CMsgClientToGCAcceptPrivateCoachingSession::CMsgClientToGCAcceptPrivateCoachingSession(const CMsgClientToGCAcceptPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  coaching_session_id_ = from.coaching_session_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptPrivateCoachingSession)
}

void CMsgClientToGCAcceptPrivateCoachingSession::SharedCtor() {
coaching_session_id_ = PROTOBUF_ULONGLONG(0);
}

CMsgClientToGCAcceptPrivateCoachingSession::~CMsgClientToGCAcceptPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptPrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAcceptPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAcceptPrivateCoachingSession::ArenaDtor(void* object) {
  CMsgClientToGCAcceptPrivateCoachingSession* _this = reinterpret_cast< CMsgClientToGCAcceptPrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgClientToGCAcceptPrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAcceptPrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAcceptPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coaching_session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptPrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_coaching_session_id(&has_bits);
          coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAcceptPrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_coaching_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptPrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCAcceptPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptPrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint64 coaching_session_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_coaching_session_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAcceptPrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAcceptPrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAcceptPrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAcceptPrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAcceptPrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAcceptPrivateCoachingSession::MergeFrom(const CMsgClientToGCAcceptPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session_id()) {
    _internal_set_coaching_session_id(from._internal_coaching_session_id());
  }
}

void CMsgClientToGCAcceptPrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAcceptPrivateCoachingSession::CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptPrivateCoachingSession::InternalSwap(CMsgClientToGCAcceptPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(coaching_session_id_, other->coaching_session_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptPrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAcceptPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptPrivateCoachingSessionResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgClientToGCAcceptPrivateCoachingSessionResponse* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCAcceptPrivateCoachingSessionResponse::_Internal::coaching_session(const CMsgClientToGCAcceptPrivateCoachingSessionResponse* msg) {
  return *msg->coaching_session_;
}
CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
}
CMsgClientToGCAcceptPrivateCoachingSessionResponse::CMsgClientToGCAcceptPrivateCoachingSessionResponse(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    coaching_session_ = new ::CMsgPrivateCoachingSession(*from.coaching_session_);
  } else {
    coaching_session_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coaching_session_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&coaching_session_)) + sizeof(result_));
}

CMsgClientToGCAcceptPrivateCoachingSessionResponse::~CMsgClientToGCAcceptPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coaching_session_;
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::ArenaDtor(void* object) {
  CMsgClientToGCAcceptPrivateCoachingSessionResponse* _this = reinterpret_cast< CMsgClientToGCAcceptPrivateCoachingSessionResponse* >(object);
  (void)_this;
}
void CMsgClientToGCAcceptPrivateCoachingSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAcceptPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coaching_session_ != nullptr);
    coaching_session_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession coaching_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAcceptPrivateCoachingSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::coaching_session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCAcceptPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession coaching_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coaching_session_);
    }

    // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAcceptPrivateCoachingSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAcceptPrivateCoachingSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::MergeFrom(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(from._internal_coaching_session());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCAcceptPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAcceptPrivateCoachingSessionResponse, result_)
      + sizeof(CMsgClientToGCAcceptPrivateCoachingSessionResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAcceptPrivateCoachingSessionResponse, coaching_session_)>(
          reinterpret_cast<char*>(&coaching_session_),
          reinterpret_cast<char*>(&other->coaching_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptPrivateCoachingSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCLeavePrivateCoachingSession::_Internal {
 public:
};

CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeavePrivateCoachingSession)
}
CMsgClientToGCLeavePrivateCoachingSession::CMsgClientToGCLeavePrivateCoachingSession(const CMsgClientToGCLeavePrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeavePrivateCoachingSession)
}

void CMsgClientToGCLeavePrivateCoachingSession::SharedCtor() {
}

CMsgClientToGCLeavePrivateCoachingSession::~CMsgClientToGCLeavePrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeavePrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCLeavePrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCLeavePrivateCoachingSession::ArenaDtor(void* object) {
  CMsgClientToGCLeavePrivateCoachingSession* _this = reinterpret_cast< CMsgClientToGCLeavePrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgClientToGCLeavePrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCLeavePrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCLeavePrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeavePrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeavePrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCLeavePrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeavePrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeavePrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCLeavePrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeavePrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLeavePrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCLeavePrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLeavePrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCLeavePrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCLeavePrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCLeavePrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLeavePrivateCoachingSession::MergeFrom(const CMsgClientToGCLeavePrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeavePrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCLeavePrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCLeavePrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLeavePrivateCoachingSession::CopyFrom(const CMsgClientToGCLeavePrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeavePrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeavePrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeavePrivateCoachingSession::InternalSwap(CMsgClientToGCLeavePrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeavePrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCLeavePrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeavePrivateCoachingSessionResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
}
CMsgClientToGCLeavePrivateCoachingSessionResponse::CMsgClientToGCLeavePrivateCoachingSessionResponse(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCLeavePrivateCoachingSessionResponse::~CMsgClientToGCLeavePrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::ArenaDtor(void* object) {
  CMsgClientToGCLeavePrivateCoachingSessionResponse* _this = reinterpret_cast< CMsgClientToGCLeavePrivateCoachingSessionResponse* >(object);
  (void)_this;
}
void CMsgClientToGCLeavePrivateCoachingSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCLeavePrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeavePrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCLeavePrivateCoachingSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCLeavePrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLeavePrivateCoachingSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCLeavePrivateCoachingSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCLeavePrivateCoachingSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCLeavePrivateCoachingSessionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::MergeFrom(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeavePrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeavePrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeavePrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCLeavePrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeavePrivateCoachingSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetCurrentPrivateCoachingSession::_Internal {
 public:
};

CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetCurrentPrivateCoachingSession)
}
CMsgClientToGCGetCurrentPrivateCoachingSession::CMsgClientToGCGetCurrentPrivateCoachingSession(const CMsgClientToGCGetCurrentPrivateCoachingSession& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetCurrentPrivateCoachingSession)
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::SharedCtor() {
}

CMsgClientToGCGetCurrentPrivateCoachingSession::~CMsgClientToGCGetCurrentPrivateCoachingSession() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetCurrentPrivateCoachingSession)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::ArenaDtor(void* object) {
  CMsgClientToGCGetCurrentPrivateCoachingSession* _this = reinterpret_cast< CMsgClientToGCGetCurrentPrivateCoachingSession* >(object);
  (void)_this;
}
void CMsgClientToGCGetCurrentPrivateCoachingSession::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetCurrentPrivateCoachingSession::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetCurrentPrivateCoachingSession::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetCurrentPrivateCoachingSession::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetCurrentPrivateCoachingSession)
  return target;
}

size_t CMsgClientToGCGetCurrentPrivateCoachingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetCurrentPrivateCoachingSession* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetCurrentPrivateCoachingSession>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetCurrentPrivateCoachingSession)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetCurrentPrivateCoachingSession)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::MergeFrom(const CMsgClientToGCGetCurrentPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCGetCurrentPrivateCoachingSession::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::CopyFrom(const CMsgClientToGCGetCurrentPrivateCoachingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetCurrentPrivateCoachingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetCurrentPrivateCoachingSession::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetCurrentPrivateCoachingSession::InternalSwap(CMsgClientToGCGetCurrentPrivateCoachingSession* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetCurrentPrivateCoachingSession::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgPrivateCoachingSession& current_session(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* msg);
  static void set_has_current_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_Internal::current_session(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* msg) {
  return *msg->current_session_;
}
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
}
CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_current_session()) {
    current_session_ = new ::CMsgPrivateCoachingSession(*from.current_session_);
  } else {
    current_session_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&current_session_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&current_session_)) + sizeof(result_));
}

CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::~CMsgClientToGCGetCurrentPrivateCoachingSessionResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete current_session_;
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::ArenaDtor(void* object) {
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* _this = reinterpret_cast< CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* >(object);
  (void)_this;
}
void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(current_session_ != nullptr);
    current_session_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgPrivateCoachingSession current_session = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_current_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgPrivateCoachingSession current_session = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::current_session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  return target;
}

size_t CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgPrivateCoachingSession current_session = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *current_session_);
    }

    // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::MergeFrom(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_current_session()->::CMsgPrivateCoachingSession::MergeFrom(from._internal_current_session());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::CopyFrom(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::InternalSwap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, result_)
      + sizeof(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse, current_session_)>(
          reinterpret_cast<char*>(&current_session_),
          reinterpret_cast<char*>(&other->current_session_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientPrivateCoachingSessionUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientPrivateCoachingSessionUpdated>()._has_bits_);
  static const ::CMsgPrivateCoachingSession& coaching_session(const CMsgGCToClientPrivateCoachingSessionUpdated* msg);
  static void set_has_coaching_session(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgPrivateCoachingSession&
CMsgGCToClientPrivateCoachingSessionUpdated::_Internal::coaching_session(const CMsgGCToClientPrivateCoachingSessionUpdated* msg) {
  return *msg->coaching_session_;
}
CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientPrivateCoachingSessionUpdated)
}
CMsgGCToClientPrivateCoachingSessionUpdated::CMsgGCToClientPrivateCoachingSessionUpdated(const CMsgGCToClientPrivateCoachingSessionUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session()) {
    coaching_session_ = new ::CMsgPrivateCoachingSession(*from.coaching_session_);
  } else {
    coaching_session_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientPrivateCoachingSessionUpdated)
}

void CMsgGCToClientPrivateCoachingSessionUpdated::SharedCtor() {
coaching_session_ = nullptr;
}

CMsgGCToClientPrivateCoachingSessionUpdated::~CMsgGCToClientPrivateCoachingSessionUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientPrivateCoachingSessionUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientPrivateCoachingSessionUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coaching_session_;
}

void CMsgGCToClientPrivateCoachingSessionUpdated::ArenaDtor(void* object) {
  CMsgGCToClientPrivateCoachingSessionUpdated* _this = reinterpret_cast< CMsgGCToClientPrivateCoachingSessionUpdated* >(object);
  (void)_this;
}
void CMsgGCToClientPrivateCoachingSessionUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientPrivateCoachingSessionUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientPrivateCoachingSessionUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coaching_session_ != nullptr);
    coaching_session_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientPrivateCoachingSessionUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgPrivateCoachingSession coaching_session = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientPrivateCoachingSessionUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::coaching_session(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientPrivateCoachingSessionUpdated)
  return target;
}

size_t CMsgGCToClientPrivateCoachingSessionUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *coaching_session_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientPrivateCoachingSessionUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientPrivateCoachingSessionUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientPrivateCoachingSessionUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientPrivateCoachingSessionUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientPrivateCoachingSessionUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToClientPrivateCoachingSessionUpdated::MergeFrom(const CMsgGCToClientPrivateCoachingSessionUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_coaching_session()) {
    _internal_mutable_coaching_session()->::CMsgPrivateCoachingSession::MergeFrom(from._internal_coaching_session());
  }
}

void CMsgGCToClientPrivateCoachingSessionUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientPrivateCoachingSessionUpdated::CopyFrom(const CMsgGCToClientPrivateCoachingSessionUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientPrivateCoachingSessionUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientPrivateCoachingSessionUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientPrivateCoachingSessionUpdated::InternalSwap(CMsgGCToClientPrivateCoachingSessionUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(coaching_session_, other->coaching_session_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientPrivateCoachingSessionUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSubmitPrivateCoachingSessionRating::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPrivateCoachingSessionRating>()._has_bits_);
  static void set_has_coaching_session_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_session_rating(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
}
CMsgClientToGCSubmitPrivateCoachingSessionRating::CMsgClientToGCSubmitPrivateCoachingSessionRating(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coaching_session_id_, &from.coaching_session_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&session_rating_) -
    reinterpret_cast<char*>(&coaching_session_id_)) + sizeof(session_rating_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coaching_session_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&session_rating_) -
    reinterpret_cast<char*>(&coaching_session_id_)) + sizeof(session_rating_));
}

CMsgClientToGCSubmitPrivateCoachingSessionRating::~CMsgClientToGCSubmitPrivateCoachingSessionRating() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::ArenaDtor(void* object) {
  CMsgClientToGCSubmitPrivateCoachingSessionRating* _this = reinterpret_cast< CMsgClientToGCSubmitPrivateCoachingSessionRating* >(object);
  (void)_this;
}
void CMsgClientToGCSubmitPrivateCoachingSessionRating::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSubmitPrivateCoachingSessionRating::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&coaching_session_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&session_rating_) -
        reinterpret_cast<char*>(&coaching_session_id_)) + sizeof(session_rating_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPrivateCoachingSessionRating::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 coaching_session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_coaching_session_id(&has_bits);
          coaching_session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ECoachTeammateRating_IsValid(val))) {
            _internal_set_session_rating(static_cast<::ECoachTeammateRating>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSubmitPrivateCoachingSessionRating::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 coaching_session_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_coaching_session_id(), target);
  }

  // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_session_rating(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  return target;
}

size_t CMsgClientToGCSubmitPrivateCoachingSessionRating::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 coaching_session_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_coaching_session_id());
    }

    // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_session_rating());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSubmitPrivateCoachingSessionRating* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSubmitPrivateCoachingSessionRating>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSubmitPrivateCoachingSessionRating)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSubmitPrivateCoachingSessionRating)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::MergeFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      coaching_session_id_ = from.coaching_session_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      session_rating_ = from.session_rating_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRating)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPrivateCoachingSessionRating::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRating::InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRating* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitPrivateCoachingSessionRating, session_rating_)
      + sizeof(CMsgClientToGCSubmitPrivateCoachingSessionRating::session_rating_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSubmitPrivateCoachingSessionRating, coaching_session_id_)>(
          reinterpret_cast<char*>(&coaching_session_id_),
          reinterpret_cast<char*>(&other->coaching_session_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPrivateCoachingSessionRating::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
}
CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::~CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::ArenaDtor(void* object) {
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* _this = reinterpret_cast< CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* >(object);
  (void)_this;
}
void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  return target;
}

size_t CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::MergeFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessions::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessions>()._has_bits_);
  static void set_has_language(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
}
CMsgClientToGCGetAvailablePrivateCoachingSessions::CMsgClientToGCGetAvailablePrivateCoachingSessions(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  language_ = from.language_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::SharedCtor() {
language_ = 0u;
}

CMsgClientToGCGetAvailablePrivateCoachingSessions::~CMsgClientToGCGetAvailablePrivateCoachingSessions() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::ArenaDtor(void* object) {
  CMsgClientToGCGetAvailablePrivateCoachingSessions* _this = reinterpret_cast< CMsgClientToGCGetAvailablePrivateCoachingSessions* >(object);
  (void)_this;
}
void CMsgClientToGCGetAvailablePrivateCoachingSessions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetAvailablePrivateCoachingSessions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  language_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 language = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_language(&has_bits);
          language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetAvailablePrivateCoachingSessions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 language = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_language(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 language = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_language());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetAvailablePrivateCoachingSessions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetAvailablePrivateCoachingSessions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetAvailablePrivateCoachingSessions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetAvailablePrivateCoachingSessions)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_language()) {
    _internal_set_language(from._internal_language());
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessions::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessions::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessions* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(language_, other->language_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessions::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAvailablePrivateCoachingSessionList& available_sessions_list(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* msg);
  static void set_has_available_sessions_list(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAvailablePrivateCoachingSessionList&
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_Internal::available_sessions_list(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* msg) {
  return *msg->available_sessions_list_;
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_available_sessions_list()) {
    available_sessions_list_ = new ::CMsgAvailablePrivateCoachingSessionList(*from.available_sessions_list_);
  } else {
    available_sessions_list_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&available_sessions_list_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&available_sessions_list_)) + sizeof(result_));
}

CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::~CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete available_sessions_list_;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::ArenaDtor(void* object) {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* _this = reinterpret_cast< CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* >(object);
  (void)_this;
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(available_sessions_list_ != nullptr);
    available_sessions_list_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_available_sessions_list(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::available_sessions_list(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *available_sessions_list_);
    }

    // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_available_sessions_list()->::CMsgAvailablePrivateCoachingSessionList::MergeFrom(from._internal_available_sessions_list());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, result_)
      + sizeof(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse, available_sessions_list_)>(
          reinterpret_cast<char*>(&available_sessions_list_),
          reinterpret_cast<char*>(&other->available_sessions_list_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::_Internal {
 public:
};

CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::SharedCtor() {
}

CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::ArenaDtor(void* object) {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* _this = reinterpret_cast< CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* >(object);
  (void)_this;
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAvailablePrivateCoachingSessionSummary& coaching_session_summary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* msg);
  static void set_has_coaching_session_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAvailablePrivateCoachingSessionSummary&
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_Internal::coaching_session_summary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* msg) {
  return *msg->coaching_session_summary_;
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
}
CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_coaching_session_summary()) {
    coaching_session_summary_ = new ::CMsgAvailablePrivateCoachingSessionSummary(*from.coaching_session_summary_);
  } else {
    coaching_session_summary_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coaching_session_summary_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&coaching_session_summary_)) + sizeof(result_));
}

CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete coaching_session_summary_;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::ArenaDtor(void* object) {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* _this = reinterpret_cast< CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* >(object);
  (void)_this;
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(coaching_session_summary_ != nullptr);
    coaching_session_summary_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_coaching_session_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::coaching_session_summary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  return target;
}

size_t CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *coaching_session_summary_);
    }

    // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_coaching_session_summary()->::CMsgAvailablePrivateCoachingSessionSummary::MergeFrom(from._internal_coaching_session_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, result_)
      + sizeof(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse, coaching_session_summary_)>(
          reinterpret_cast<char*>(&coaching_session_summary_),
          reinterpret_cast<char*>(&other->coaching_session_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCJoinPrivateCoachingSessionLobby::_Internal {
 public:
};

CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobby)
}
CMsgClientToGCJoinPrivateCoachingSessionLobby::CMsgClientToGCJoinPrivateCoachingSessionLobby(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobby)
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::SharedCtor() {
}

CMsgClientToGCJoinPrivateCoachingSessionLobby::~CMsgClientToGCJoinPrivateCoachingSessionLobby() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::ArenaDtor(void* object) {
  CMsgClientToGCJoinPrivateCoachingSessionLobby* _this = reinterpret_cast< CMsgClientToGCJoinPrivateCoachingSessionLobby* >(object);
  (void)_this;
}
void CMsgClientToGCJoinPrivateCoachingSessionLobby::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCJoinPrivateCoachingSessionLobby::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinPrivateCoachingSessionLobby::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCJoinPrivateCoachingSessionLobby::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  return target;
}

size_t CMsgClientToGCJoinPrivateCoachingSessionLobby::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCJoinPrivateCoachingSessionLobby* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCJoinPrivateCoachingSessionLobby>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCJoinPrivateCoachingSessionLobby)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCJoinPrivateCoachingSessionLobby)
    MergeFrom(*source);
  }
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::MergeFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::CopyFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobby)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinPrivateCoachingSessionLobby::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinPrivateCoachingSessionLobby::InternalSwap(CMsgClientToGCJoinPrivateCoachingSessionLobby* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinPrivateCoachingSessionLobby::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
}
CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::~CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::ArenaDtor(void* object) {
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* _this = reinterpret_cast< CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* >(object);
  (void)_this;
}
void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  return target;
}

size_t CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::MergeFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::CopyFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::InternalSwap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCoachFriend::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCoachFriend>()._has_bits_);
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCoachFriend)
}
CMsgClientToGCCoachFriend::CMsgClientToGCCoachFriend(const CMsgClientToGCCoachFriend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_account_id_ = from.target_account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCoachFriend)
}

void CMsgClientToGCCoachFriend::SharedCtor() {
target_account_id_ = 0u;
}

CMsgClientToGCCoachFriend::~CMsgClientToGCCoachFriend() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCoachFriend)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCoachFriend::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCCoachFriend::ArenaDtor(void* object) {
  CMsgClientToGCCoachFriend* _this = reinterpret_cast< CMsgClientToGCCoachFriend* >(object);
  (void)_this;
}
void CMsgClientToGCCoachFriend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCoachFriend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCoachFriend::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCoachFriend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCoachFriend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 target_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCoachFriend::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCoachFriend)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 target_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCoachFriend)
  return target;
}

size_t CMsgClientToGCCoachFriend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCoachFriend)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 target_account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_target_account_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCoachFriend::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCoachFriend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCoachFriend* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCoachFriend>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCoachFriend)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCoachFriend)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCoachFriend::MergeFrom(const CMsgClientToGCCoachFriend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCoachFriend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_target_account_id()) {
    _internal_set_target_account_id(from._internal_target_account_id());
  }
}

void CMsgClientToGCCoachFriend::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCoachFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCoachFriend::CopyFrom(const CMsgClientToGCCoachFriend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCoachFriend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCoachFriend::IsInitialized() const {
  return true;
}

void CMsgClientToGCCoachFriend::InternalSwap(CMsgClientToGCCoachFriend* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(target_account_id_, other->target_account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCoachFriend::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCoachFriendResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCoachFriendResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCoachFriendResponse)
}
CMsgClientToGCCoachFriendResponse::CMsgClientToGCCoachFriendResponse(const CMsgClientToGCCoachFriendResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCoachFriendResponse)
}

void CMsgClientToGCCoachFriendResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCCoachFriendResponse::~CMsgClientToGCCoachFriendResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCoachFriendResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCoachFriendResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCCoachFriendResponse::ArenaDtor(void* object) {
  CMsgClientToGCCoachFriendResponse* _this = reinterpret_cast< CMsgClientToGCCoachFriendResponse* >(object);
  (void)_this;
}
void CMsgClientToGCCoachFriendResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCoachFriendResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCoachFriendResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCoachFriendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCoachFriendResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCoachFriendResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCoachFriendResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCoachFriendResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCoachFriendResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCoachFriendResponse)
  return target;
}

size_t CMsgClientToGCCoachFriendResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCoachFriendResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCoachFriendResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCoachFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCoachFriendResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCoachFriendResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCoachFriendResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCoachFriendResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCoachFriendResponse::MergeFrom(const CMsgClientToGCCoachFriendResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCoachFriendResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCCoachFriendResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCoachFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCoachFriendResponse::CopyFrom(const CMsgClientToGCCoachFriendResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCoachFriendResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCoachFriendResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCoachFriendResponse::InternalSwap(CMsgClientToGCCoachFriendResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCoachFriendResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRespondToCoachFriendRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRespondToCoachFriendRequest>()._has_bits_);
  static void set_has_coach_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_response(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRespondToCoachFriendRequest)
}
CMsgClientToGCRespondToCoachFriendRequest::CMsgClientToGCRespondToCoachFriendRequest(const CMsgClientToGCRespondToCoachFriendRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&coach_account_id_, &from.coach_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&coach_account_id_)) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRespondToCoachFriendRequest)
}

void CMsgClientToGCRespondToCoachFriendRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&coach_account_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&coach_account_id_)) + sizeof(response_));
}

CMsgClientToGCRespondToCoachFriendRequest::~CMsgClientToGCRespondToCoachFriendRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRespondToCoachFriendRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRespondToCoachFriendRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRespondToCoachFriendRequest::ArenaDtor(void* object) {
  CMsgClientToGCRespondToCoachFriendRequest* _this = reinterpret_cast< CMsgClientToGCRespondToCoachFriendRequest* >(object);
  (void)_this;
}
void CMsgClientToGCRespondToCoachFriendRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRespondToCoachFriendRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRespondToCoachFriendRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRespondToCoachFriendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&coach_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&response_) -
        reinterpret_cast<char*>(&coach_account_id_)) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRespondToCoachFriendRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 coach_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_coach_account_id(&has_bits);
          coach_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::ELobbyMemberCoachRequestState_IsValid(val))) {
            _internal_set_response(static_cast<::ELobbyMemberCoachRequestState>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRespondToCoachFriendRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRespondToCoachFriendRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 coach_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_coach_account_id(), target);
  }

  // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRespondToCoachFriendRequest)
  return target;
}

size_t CMsgClientToGCRespondToCoachFriendRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRespondToCoachFriendRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 coach_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_coach_account_id());
    }

    // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_response());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRespondToCoachFriendRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRespondToCoachFriendRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRespondToCoachFriendRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRespondToCoachFriendRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRespondToCoachFriendRequest)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRespondToCoachFriendRequest::MergeFrom(const CMsgClientToGCRespondToCoachFriendRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      coach_account_id_ = from.coach_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRespondToCoachFriendRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRespondToCoachFriendRequest::CopyFrom(const CMsgClientToGCRespondToCoachFriendRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRespondToCoachFriendRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRespondToCoachFriendRequest::IsInitialized() const {
  return true;
}

void CMsgClientToGCRespondToCoachFriendRequest::InternalSwap(CMsgClientToGCRespondToCoachFriendRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRespondToCoachFriendRequest, response_)
      + sizeof(CMsgClientToGCRespondToCoachFriendRequest::response_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRespondToCoachFriendRequest, coach_account_id_)>(
          reinterpret_cast<char*>(&coach_account_id_),
          reinterpret_cast<char*>(&other->coach_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRespondToCoachFriendRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRespondToCoachFriendRequestResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRespondToCoachFriendRequestResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
}
CMsgClientToGCRespondToCoachFriendRequestResponse::CMsgClientToGCRespondToCoachFriendRequestResponse(const CMsgClientToGCRespondToCoachFriendRequestResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCRespondToCoachFriendRequestResponse::~CMsgClientToGCRespondToCoachFriendRequestResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRespondToCoachFriendRequestResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::ArenaDtor(void* object) {
  CMsgClientToGCRespondToCoachFriendRequestResponse* _this = reinterpret_cast< CMsgClientToGCRespondToCoachFriendRequestResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRespondToCoachFriendRequestResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRespondToCoachFriendRequestResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRespondToCoachFriendRequestResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRespondToCoachFriendRequestResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRespondToCoachFriendRequestResponse)
  return target;
}

size_t CMsgClientToGCRespondToCoachFriendRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRespondToCoachFriendRequestResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRespondToCoachFriendRequestResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRespondToCoachFriendRequestResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRespondToCoachFriendRequestResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::MergeFrom(const CMsgClientToGCRespondToCoachFriendRequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::CopyFrom(const CMsgClientToGCRespondToCoachFriendRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRespondToCoachFriendRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRespondToCoachFriendRequestResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRespondToCoachFriendRequestResponse::InternalSwap(CMsgClientToGCRespondToCoachFriendRequestResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRespondToCoachFriendRequestResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgPlayerCoachMatch* Arena::CreateMaybeMessage< ::CMsgPlayerCoachMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPlayerCoachMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSessionMember* Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSessionMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSessionMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgPrivateCoachingSessionStatus* Arena::CreateMaybeMessage< ::CMsgPrivateCoachingSessionStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgPrivateCoachingSessionStatus >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSessionList* Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSessionList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSessionList >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAvailablePrivateCoachingSessionSummary* Arena::CreateMaybeMessage< ::CMsgAvailablePrivateCoachingSessionSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAvailablePrivateCoachingSessionSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatches* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatches >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatches >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatchesResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatchesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatchesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatch* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPlayerCoachMatchResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPlayerCoachMatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPlayerCoachMatchResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitCoachTeammateRating* Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitCoachTeammateRating >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitCoachTeammateRating >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitCoachTeammateRatingResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitCoachTeammateRatingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitCoachTeammateRatingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientCoachTeammateRatingsChanged* Arena::CreateMaybeMessage< ::CMsgGCToClientCoachTeammateRatingsChanged >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientCoachTeammateRatingsChanged >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestPrivateCoachingSessionResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptPrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptPrivateCoachingSessionResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeavePrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgClientToGCLeavePrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeavePrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeavePrivateCoachingSessionResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCLeavePrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeavePrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetCurrentPrivateCoachingSession* Arena::CreateMaybeMessage< ::CMsgClientToGCGetCurrentPrivateCoachingSession >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetCurrentPrivateCoachingSession >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientPrivateCoachingSessionUpdated* Arena::CreateMaybeMessage< ::CMsgGCToClientPrivateCoachingSessionUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientPrivateCoachingSessionUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPrivateCoachingSessionRating* Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPrivateCoachingSessionRating >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPrivateCoachingSessionRating >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessions* Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessions >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinPrivateCoachingSessionLobby* Arena::CreateMaybeMessage< ::CMsgClientToGCJoinPrivateCoachingSessionLobby >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinPrivateCoachingSessionLobby >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCoachFriend* Arena::CreateMaybeMessage< ::CMsgClientToGCCoachFriend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCoachFriend >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCoachFriendResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCCoachFriendResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCoachFriendResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRespondToCoachFriendRequest* Arena::CreateMaybeMessage< ::CMsgClientToGCRespondToCoachFriendRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRespondToCoachFriendRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRespondToCoachFriendRequestResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRespondToCoachFriendRequestResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRespondToCoachFriendRequestResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
