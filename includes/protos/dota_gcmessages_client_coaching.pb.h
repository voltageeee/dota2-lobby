// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_coaching.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fcoaching_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fcoaching_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "dota_shared_enums.pb.h"
#include "dota_gcmessages_common_match_management.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dota_5fgcmessages_5fclient_5fcoaching_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[35]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(int index);
class CMsgAvailablePrivateCoachingSession;
struct CMsgAvailablePrivateCoachingSessionDefaultTypeInternal;
extern CMsgAvailablePrivateCoachingSessionDefaultTypeInternal _CMsgAvailablePrivateCoachingSession_default_instance_;
class CMsgAvailablePrivateCoachingSessionList;
struct CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal;
extern CMsgAvailablePrivateCoachingSessionListDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionList_default_instance_;
class CMsgAvailablePrivateCoachingSessionSummary;
struct CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal;
extern CMsgAvailablePrivateCoachingSessionSummaryDefaultTypeInternal _CMsgAvailablePrivateCoachingSessionSummary_default_instance_;
class CMsgClientToGCAcceptPrivateCoachingSession;
struct CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal;
extern CMsgClientToGCAcceptPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSession_default_instance_;
class CMsgClientToGCAcceptPrivateCoachingSessionResponse;
struct CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal;
extern CMsgClientToGCAcceptPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_;
class CMsgClientToGCCoachFriend;
struct CMsgClientToGCCoachFriendDefaultTypeInternal;
extern CMsgClientToGCCoachFriendDefaultTypeInternal _CMsgClientToGCCoachFriend_default_instance_;
class CMsgClientToGCCoachFriendResponse;
struct CMsgClientToGCCoachFriendResponseDefaultTypeInternal;
extern CMsgClientToGCCoachFriendResponseDefaultTypeInternal _CMsgClientToGCCoachFriendResponse_default_instance_;
class CMsgClientToGCGetAvailablePrivateCoachingSessions;
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal;
extern CMsgClientToGCGetAvailablePrivateCoachingSessionsDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_;
class CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse;
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAvailablePrivateCoachingSessionsResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_;
class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary;
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal;
extern CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_;
class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse;
struct CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal;
extern CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponseDefaultTypeInternal _CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_;
class CMsgClientToGCGetCurrentPrivateCoachingSession;
struct CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal;
extern CMsgClientToGCGetCurrentPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_;
class CMsgClientToGCGetCurrentPrivateCoachingSessionResponse;
struct CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal;
extern CMsgClientToGCGetCurrentPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_;
class CMsgClientToGCJoinPrivateCoachingSessionLobby;
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal;
extern CMsgClientToGCJoinPrivateCoachingSessionLobbyDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_;
class CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse;
struct CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal;
extern CMsgClientToGCJoinPrivateCoachingSessionLobbyResponseDefaultTypeInternal _CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_;
class CMsgClientToGCLeavePrivateCoachingSession;
struct CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal;
extern CMsgClientToGCLeavePrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSession_default_instance_;
class CMsgClientToGCLeavePrivateCoachingSessionResponse;
struct CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal;
extern CMsgClientToGCLeavePrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_;
class CMsgClientToGCRequestPlayerCoachMatch;
struct CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal;
extern CMsgClientToGCRequestPlayerCoachMatchDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatch_default_instance_;
class CMsgClientToGCRequestPlayerCoachMatchResponse;
struct CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal;
extern CMsgClientToGCRequestPlayerCoachMatchResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_;
class CMsgClientToGCRequestPlayerCoachMatches;
struct CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal;
extern CMsgClientToGCRequestPlayerCoachMatchesDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatches_default_instance_;
class CMsgClientToGCRequestPlayerCoachMatchesResponse;
struct CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal;
extern CMsgClientToGCRequestPlayerCoachMatchesResponseDefaultTypeInternal _CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_;
class CMsgClientToGCRequestPrivateCoachingSession;
struct CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal;
extern CMsgClientToGCRequestPrivateCoachingSessionDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSession_default_instance_;
class CMsgClientToGCRequestPrivateCoachingSessionResponse;
struct CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal;
extern CMsgClientToGCRequestPrivateCoachingSessionResponseDefaultTypeInternal _CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_;
class CMsgClientToGCRespondToCoachFriendRequest;
struct CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal;
extern CMsgClientToGCRespondToCoachFriendRequestDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequest_default_instance_;
class CMsgClientToGCRespondToCoachFriendRequestResponse;
struct CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal;
extern CMsgClientToGCRespondToCoachFriendRequestResponseDefaultTypeInternal _CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_;
class CMsgClientToGCSubmitCoachTeammateRating;
struct CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal;
extern CMsgClientToGCSubmitCoachTeammateRatingDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRating_default_instance_;
class CMsgClientToGCSubmitCoachTeammateRatingResponse;
struct CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal;
extern CMsgClientToGCSubmitCoachTeammateRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_;
class CMsgClientToGCSubmitPrivateCoachingSessionRating;
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal;
extern CMsgClientToGCSubmitPrivateCoachingSessionRatingDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_;
class CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse;
struct CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal;
extern CMsgClientToGCSubmitPrivateCoachingSessionRatingResponseDefaultTypeInternal _CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_;
class CMsgGCToClientCoachTeammateRatingsChanged;
struct CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal;
extern CMsgGCToClientCoachTeammateRatingsChangedDefaultTypeInternal _CMsgGCToClientCoachTeammateRatingsChanged_default_instance_;
class CMsgGCToClientPrivateCoachingSessionUpdated;
struct CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal;
extern CMsgGCToClientPrivateCoachingSessionUpdatedDefaultTypeInternal _CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_;
class CMsgPlayerCoachMatch;
struct CMsgPlayerCoachMatchDefaultTypeInternal;
extern CMsgPlayerCoachMatchDefaultTypeInternal _CMsgPlayerCoachMatch_default_instance_;
class CMsgPrivateCoachingSession;
struct CMsgPrivateCoachingSessionDefaultTypeInternal;
extern CMsgPrivateCoachingSessionDefaultTypeInternal _CMsgPrivateCoachingSession_default_instance_;
class CMsgPrivateCoachingSessionMember;
struct CMsgPrivateCoachingSessionMemberDefaultTypeInternal;
extern CMsgPrivateCoachingSessionMemberDefaultTypeInternal _CMsgPrivateCoachingSessionMember_default_instance_;
class CMsgPrivateCoachingSessionStatus;
struct CMsgPrivateCoachingSessionStatusDefaultTypeInternal;
extern CMsgPrivateCoachingSessionStatusDefaultTypeInternal _CMsgPrivateCoachingSessionStatus_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CMsgAvailablePrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgAvailablePrivateCoachingSession>(Arena*);
template<> ::CMsgAvailablePrivateCoachingSessionList* Arena::CreateMaybeMessage<::CMsgAvailablePrivateCoachingSessionList>(Arena*);
template<> ::CMsgAvailablePrivateCoachingSessionSummary* Arena::CreateMaybeMessage<::CMsgAvailablePrivateCoachingSessionSummary>(Arena*);
template<> ::CMsgClientToGCAcceptPrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgClientToGCAcceptPrivateCoachingSession>(Arena*);
template<> ::CMsgClientToGCAcceptPrivateCoachingSessionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCAcceptPrivateCoachingSessionResponse>(Arena*);
template<> ::CMsgClientToGCCoachFriend* Arena::CreateMaybeMessage<::CMsgClientToGCCoachFriend>(Arena*);
template<> ::CMsgClientToGCCoachFriendResponse* Arena::CreateMaybeMessage<::CMsgClientToGCCoachFriendResponse>(Arena*);
template<> ::CMsgClientToGCGetAvailablePrivateCoachingSessions* Arena::CreateMaybeMessage<::CMsgClientToGCGetAvailablePrivateCoachingSessions>(Arena*);
template<> ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>(Arena*);
template<> ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* Arena::CreateMaybeMessage<::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary>(Arena*);
template<> ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>(Arena*);
template<> ::CMsgClientToGCGetCurrentPrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgClientToGCGetCurrentPrivateCoachingSession>(Arena*);
template<> ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>(Arena*);
template<> ::CMsgClientToGCJoinPrivateCoachingSessionLobby* Arena::CreateMaybeMessage<::CMsgClientToGCJoinPrivateCoachingSessionLobby>(Arena*);
template<> ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* Arena::CreateMaybeMessage<::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>(Arena*);
template<> ::CMsgClientToGCLeavePrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgClientToGCLeavePrivateCoachingSession>(Arena*);
template<> ::CMsgClientToGCLeavePrivateCoachingSessionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCLeavePrivateCoachingSessionResponse>(Arena*);
template<> ::CMsgClientToGCRequestPlayerCoachMatch* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPlayerCoachMatch>(Arena*);
template<> ::CMsgClientToGCRequestPlayerCoachMatchResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPlayerCoachMatchResponse>(Arena*);
template<> ::CMsgClientToGCRequestPlayerCoachMatches* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPlayerCoachMatches>(Arena*);
template<> ::CMsgClientToGCRequestPlayerCoachMatchesResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPlayerCoachMatchesResponse>(Arena*);
template<> ::CMsgClientToGCRequestPrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPrivateCoachingSession>(Arena*);
template<> ::CMsgClientToGCRequestPrivateCoachingSessionResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRequestPrivateCoachingSessionResponse>(Arena*);
template<> ::CMsgClientToGCRespondToCoachFriendRequest* Arena::CreateMaybeMessage<::CMsgClientToGCRespondToCoachFriendRequest>(Arena*);
template<> ::CMsgClientToGCRespondToCoachFriendRequestResponse* Arena::CreateMaybeMessage<::CMsgClientToGCRespondToCoachFriendRequestResponse>(Arena*);
template<> ::CMsgClientToGCSubmitCoachTeammateRating* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitCoachTeammateRating>(Arena*);
template<> ::CMsgClientToGCSubmitCoachTeammateRatingResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitCoachTeammateRatingResponse>(Arena*);
template<> ::CMsgClientToGCSubmitPrivateCoachingSessionRating* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitPrivateCoachingSessionRating>(Arena*);
template<> ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* Arena::CreateMaybeMessage<::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>(Arena*);
template<> ::CMsgGCToClientCoachTeammateRatingsChanged* Arena::CreateMaybeMessage<::CMsgGCToClientCoachTeammateRatingsChanged>(Arena*);
template<> ::CMsgGCToClientPrivateCoachingSessionUpdated* Arena::CreateMaybeMessage<::CMsgGCToClientPrivateCoachingSessionUpdated>(Arena*);
template<> ::CMsgPlayerCoachMatch* Arena::CreateMaybeMessage<::CMsgPlayerCoachMatch>(Arena*);
template<> ::CMsgPrivateCoachingSession* Arena::CreateMaybeMessage<::CMsgPrivateCoachingSession>(Arena*);
template<> ::CMsgPrivateCoachingSessionMember* Arena::CreateMaybeMessage<::CMsgPrivateCoachingSessionMember>(Arena*);
template<> ::CMsgPrivateCoachingSessionStatus* Arena::CreateMaybeMessage<::CMsgPrivateCoachingSessionStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse : int {
  CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eDisabled = 3
};
bool CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eDisabled;
constexpr int CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse>(
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse : int {
  CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eDisabled = 3
};
bool CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eDisabled;
constexpr int CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse>(
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse : int {
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eInvalidInput = 4,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eAlreadySubmitted = 5,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eVotingFinished = 6,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerNotInMatch = 7,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eCoachNotInMatch = 8,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerNotOnCoachTeam = 9,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerInSamePartyAsCoach = 10,
  CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eMatchNotEligible = 11
};
bool CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_MIN = CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_MAX = CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eMatchNotEligible;
constexpr int CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse>(
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse : int {
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eAlreadyInSession = 5,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eBehaviorScoreTooLow = 6,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyType = 7,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityPlayer = 8,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityLobby = 9,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityParty = 10,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTextChatBan = 11,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eVoiceChatBan = 12,
  CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eMatchBan = 13
};
bool CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_MIN = CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_MAX = CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eMatchBan;
constexpr int CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse>(
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse : int {
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eUnknownSession = 5,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyHasCoach = 6,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyHasSession = 7,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidUser = 8,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyFinished = 9,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyType = 10,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyInLobby = 11,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eLobbyIsLan = 12,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eLobbyIsLeague = 13,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyState = 14,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eRequesterIsNotPlayer = 15,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTooManyCoaches = 16,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachWasPlayer = 17,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachBehaviorScoreTooLow = 18,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankNotCalibrated = 19,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankNotEligible = 20,
  CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankTooLow = 21
};
bool CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_MIN = CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_MAX = CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankTooLow;
constexpr int CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse>(
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse : int {
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eNoSession = 5,
  CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eAlreadyLeft = 6
};
bool CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_MIN = CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_MAX = CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eAlreadyLeft;
constexpr int CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse>(
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse : int {
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eTimeout = 4
};
bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_MIN = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_MAX = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eTimeout;
constexpr int CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse>(
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse : int {
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eUnknownSession = 5,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eNotMember = 6,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eAlreadySubmitted = 7,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSessionActive = 8,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSessionTooShort = 9,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eNoCoach = 10,
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInvalidRating = 11
};
bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_MIN = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_MAX = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInvalidRating;
constexpr int CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse>(
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse : int {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eTimeout = 4
};
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_MIN = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_MAX = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eTimeout;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse>(
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse : int {
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eTimeout = 4
};
bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_MIN = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_MAX = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eTimeout;
constexpr int CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse>(
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse : int {
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNoSession = 5,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eSessionFinished = 6,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eAlreadyLeft = 7,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNotACoach = 8,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNoLobby = 9,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachInThisLobby = 10,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachInALobby = 11,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eLobbyIsLan = 12,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eLobbyIsLeague = 13,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInvalidLobbyType = 14,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInvalidLobbyState = 15,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eRequesterIsNotPlayer = 16,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTooManyCoaches = 17,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachWasPlayer = 18,
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eJoinFailed = 19
};
bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_MIN = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_MAX = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eJoinFailed;
constexpr int CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse>(
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCCoachFriendResponse_EResponse : int {
  CMsgClientToGCCoachFriendResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachNotSubscriber = 5,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyNotFound = 6,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eFriendsOnBothSides = 7,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eNotFriends = 8,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachInThisLobby = 9,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachInALobby = 10,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyIsLan = 11,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eInvalidLobbyType = 12,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eInvalidLobbyState = 13,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eFriendIsNotAPlayer = 14,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eTooManyCoaches = 15,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachSwitchedTeams = 16,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyIsLeague = 17,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachWasPlayer = 18,
  CMsgClientToGCCoachFriendResponse_EResponse_k_eRequestRejected = 19
};
bool CMsgClientToGCCoachFriendResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse_EResponse_EResponse_MIN = CMsgClientToGCCoachFriendResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse_EResponse_EResponse_MAX = CMsgClientToGCCoachFriendResponse_EResponse_k_eRequestRejected;
constexpr int CMsgClientToGCCoachFriendResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCCoachFriendResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCoachFriendResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCCoachFriendResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCCoachFriendResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCCoachFriendResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCCoachFriendResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCCoachFriendResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCCoachFriendResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCCoachFriendResponse_EResponse>(
    CMsgClientToGCCoachFriendResponse_EResponse_descriptor(), name, value);
}
enum CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse : int {
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInternalError = 0,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eSuccess = 1,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eTooBusy = 2,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eDisabled = 3,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eTimeout = 4,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eLobbyNotFound = 5,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInvalidLobbyState = 6,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eCoachNotInLobby = 7,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_ePlayerInvalidTeam = 8,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eCoachInvalidTeam = 9,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eNoRequest = 10,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInvalidResponse = 11,
  CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eAlreadyResponded = 12
};
bool CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(int value);
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_MIN = CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInternalError;
constexpr CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_MAX = CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eAlreadyResponded;
constexpr int CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_ARRAYSIZE = CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor();
template<typename T>
inline const std::string& CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor(), enum_t_value);
}
inline bool CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse>(
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor(), name, value);
}
enum ECoachTeammateRating : int {
  k_ECoachTeammateRating_None = 0,
  k_ECoachTeammateRating_Positive = 1,
  k_ECoachTeammateRating_Negative = 2,
  k_ECoachTeammateRating_Abusive = 3
};
bool ECoachTeammateRating_IsValid(int value);
constexpr ECoachTeammateRating ECoachTeammateRating_MIN = k_ECoachTeammateRating_None;
constexpr ECoachTeammateRating ECoachTeammateRating_MAX = k_ECoachTeammateRating_Abusive;
constexpr int ECoachTeammateRating_ARRAYSIZE = ECoachTeammateRating_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECoachTeammateRating_descriptor();
template<typename T>
inline const std::string& ECoachTeammateRating_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ECoachTeammateRating>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ECoachTeammateRating_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ECoachTeammateRating_descriptor(), enum_t_value);
}
inline bool ECoachTeammateRating_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ECoachTeammateRating* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ECoachTeammateRating>(
    ECoachTeammateRating_descriptor(), name, value);
}
enum EPrivateCoachingSessionState : int {
  k_ePrivateCoachingSessionState_Invalid = 0,
  k_ePrivateCoachingSessionState_SearchingForCoach = 1,
  k_ePrivateCoachingSessionState_CoachAssigned = 2,
  k_ePrivateCoachingSessionState_Finished = 3,
  k_ePrivateCoachingSessionState_Expired = 4,
  k_ePrivateCoachingSessionState_Abandoned = 5
};
bool EPrivateCoachingSessionState_IsValid(int value);
constexpr EPrivateCoachingSessionState EPrivateCoachingSessionState_MIN = k_ePrivateCoachingSessionState_Invalid;
constexpr EPrivateCoachingSessionState EPrivateCoachingSessionState_MAX = k_ePrivateCoachingSessionState_Abandoned;
constexpr int EPrivateCoachingSessionState_ARRAYSIZE = EPrivateCoachingSessionState_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionState_descriptor();
template<typename T>
inline const std::string& EPrivateCoachingSessionState_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EPrivateCoachingSessionState>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EPrivateCoachingSessionState_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EPrivateCoachingSessionState_descriptor(), enum_t_value);
}
inline bool EPrivateCoachingSessionState_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EPrivateCoachingSessionState* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EPrivateCoachingSessionState>(
    EPrivateCoachingSessionState_descriptor(), name, value);
}
enum EPrivateCoachingSessionMemberFlag : int {
  k_EPrivateCoachingSessionMemberFlag_Requester = 1,
  k_EPrivateCoachingSessionMemberFlag_Coach = 2,
  k_EPrivateCoachingSessionMemberFlag_LeftSession = 4
};
bool EPrivateCoachingSessionMemberFlag_IsValid(int value);
constexpr EPrivateCoachingSessionMemberFlag EPrivateCoachingSessionMemberFlag_MIN = k_EPrivateCoachingSessionMemberFlag_Requester;
constexpr EPrivateCoachingSessionMemberFlag EPrivateCoachingSessionMemberFlag_MAX = k_EPrivateCoachingSessionMemberFlag_LeftSession;
constexpr int EPrivateCoachingSessionMemberFlag_ARRAYSIZE = EPrivateCoachingSessionMemberFlag_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPrivateCoachingSessionMemberFlag_descriptor();
template<typename T>
inline const std::string& EPrivateCoachingSessionMemberFlag_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EPrivateCoachingSessionMemberFlag>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EPrivateCoachingSessionMemberFlag_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EPrivateCoachingSessionMemberFlag_descriptor(), enum_t_value);
}
inline bool EPrivateCoachingSessionMemberFlag_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EPrivateCoachingSessionMemberFlag* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EPrivateCoachingSessionMemberFlag>(
    EPrivateCoachingSessionMemberFlag_descriptor(), name, value);
}
enum EPlayerCoachMatchFlag : int {
  k_EPlayerCoachMatchFlag_EligibleForRewards = 1,
  k_EPlayerCoachMatchFlag_PrivateCoach = 2
};
bool EPlayerCoachMatchFlag_IsValid(int value);
constexpr EPlayerCoachMatchFlag EPlayerCoachMatchFlag_MIN = k_EPlayerCoachMatchFlag_EligibleForRewards;
constexpr EPlayerCoachMatchFlag EPlayerCoachMatchFlag_MAX = k_EPlayerCoachMatchFlag_PrivateCoach;
constexpr int EPlayerCoachMatchFlag_ARRAYSIZE = EPlayerCoachMatchFlag_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EPlayerCoachMatchFlag_descriptor();
template<typename T>
inline const std::string& EPlayerCoachMatchFlag_Name(T enum_t_value) {
  static_assert(::std::is_same<T, EPlayerCoachMatchFlag>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function EPlayerCoachMatchFlag_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    EPlayerCoachMatchFlag_descriptor(), enum_t_value);
}
inline bool EPlayerCoachMatchFlag_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, EPlayerCoachMatchFlag* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<EPlayerCoachMatchFlag>(
    EPlayerCoachMatchFlag_descriptor(), name, value);
}
// ===================================================================

class CMsgPlayerCoachMatch PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPlayerCoachMatch) */ {
 public:
  inline CMsgPlayerCoachMatch() : CMsgPlayerCoachMatch(nullptr) {}
  virtual ~CMsgPlayerCoachMatch();
  explicit constexpr CMsgPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPlayerCoachMatch(const CMsgPlayerCoachMatch& from);
  CMsgPlayerCoachMatch(CMsgPlayerCoachMatch&& from) noexcept
    : CMsgPlayerCoachMatch() {
    *this = ::std::move(from);
  }

  inline CMsgPlayerCoachMatch& operator=(const CMsgPlayerCoachMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPlayerCoachMatch& operator=(CMsgPlayerCoachMatch&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgPlayerCoachMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPlayerCoachMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerCoachMatch*>(
               &_CMsgPlayerCoachMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CMsgPlayerCoachMatch& a, CMsgPlayerCoachMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPlayerCoachMatch* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPlayerCoachMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgPlayerCoachMatch* New() const final {
    return CreateMaybeMessage<CMsgPlayerCoachMatch>(nullptr);
  }

  CMsgPlayerCoachMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPlayerCoachMatch>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgPlayerCoachMatch& from);
  void MergeFrom(const CMsgPlayerCoachMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPlayerCoachMatch* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPlayerCoachMatch";
  }
  protected:
  explicit CMsgPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeammateRatingsFieldNumber = 6,
    kMatchIdFieldNumber = 1,
    kMatchOutcomeFieldNumber = 2,
    kCoachedTeamFieldNumber = 3,
    kStartTimeFieldNumber = 4,
    kDurationFieldNumber = 5,
    kCoachFlagsFieldNumber = 7,
  };
  // repeated .ECoachTeammateRating teammate_ratings = 6;
  int teammate_ratings_size() const;
  private:
  int _internal_teammate_ratings_size() const;
  public:
  void clear_teammate_ratings();
  private:
  ::ECoachTeammateRating _internal_teammate_ratings(int index) const;
  void _internal_add_teammate_ratings(::ECoachTeammateRating value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_teammate_ratings();
  public:
  ::ECoachTeammateRating teammate_ratings(int index) const;
  void set_teammate_ratings(int index, ::ECoachTeammateRating value);
  void add_teammate_ratings(::ECoachTeammateRating value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& teammate_ratings() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_teammate_ratings();

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
  bool has_match_outcome() const;
  private:
  bool _internal_has_match_outcome() const;
  public:
  void clear_match_outcome();
  ::EMatchOutcome match_outcome() const;
  void set_match_outcome(::EMatchOutcome value);
  private:
  ::EMatchOutcome _internal_match_outcome() const;
  void _internal_set_match_outcome(::EMatchOutcome value);
  public:

  // optional uint32 coached_team = 3;
  bool has_coached_team() const;
  private:
  bool _internal_has_coached_team() const;
  public:
  void clear_coached_team();
  ::PROTOBUF_NAMESPACE_ID::uint32 coached_team() const;
  void set_coached_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coached_team() const;
  void _internal_set_coached_team(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional fixed32 start_time = 4;
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time() const;
  void set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_time() const;
  void _internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 duration = 5;
  bool has_duration() const;
  private:
  bool _internal_has_duration() const;
  public:
  void clear_duration();
  ::PROTOBUF_NAMESPACE_ID::uint32 duration() const;
  void set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_duration() const;
  void _internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 coach_flags = 7;
  bool has_coach_flags() const;
  private:
  bool _internal_has_coach_flags() const;
  public:
  void clear_coach_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_flags() const;
  void set_coach_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coach_flags() const;
  void _internal_set_coach_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPlayerCoachMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> teammate_ratings_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  int match_outcome_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coached_team_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 duration_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_flags_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgPrivateCoachingSessionMember PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPrivateCoachingSessionMember) */ {
 public:
  inline CMsgPrivateCoachingSessionMember() : CMsgPrivateCoachingSessionMember(nullptr) {}
  virtual ~CMsgPrivateCoachingSessionMember();
  explicit constexpr CMsgPrivateCoachingSessionMember(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPrivateCoachingSessionMember(const CMsgPrivateCoachingSessionMember& from);
  CMsgPrivateCoachingSessionMember(CMsgPrivateCoachingSessionMember&& from) noexcept
    : CMsgPrivateCoachingSessionMember() {
    *this = ::std::move(from);
  }

  inline CMsgPrivateCoachingSessionMember& operator=(const CMsgPrivateCoachingSessionMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPrivateCoachingSessionMember& operator=(CMsgPrivateCoachingSessionMember&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgPrivateCoachingSessionMember& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPrivateCoachingSessionMember* internal_default_instance() {
    return reinterpret_cast<const CMsgPrivateCoachingSessionMember*>(
               &_CMsgPrivateCoachingSessionMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CMsgPrivateCoachingSessionMember& a, CMsgPrivateCoachingSessionMember& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPrivateCoachingSessionMember* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPrivateCoachingSessionMember* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgPrivateCoachingSessionMember* New() const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSessionMember>(nullptr);
  }

  CMsgPrivateCoachingSessionMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSessionMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgPrivateCoachingSessionMember& from);
  void MergeFrom(const CMsgPrivateCoachingSessionMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPrivateCoachingSessionMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPrivateCoachingSessionMember";
  }
  protected:
  explicit CMsgPrivateCoachingSessionMember(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountIdFieldNumber = 1,
    kMemberFlagsFieldNumber = 2,
    kMemberSessionRatingFieldNumber = 3,
  };
  // optional uint32 account_id = 1;
  bool has_account_id() const;
  private:
  bool _internal_has_account_id() const;
  public:
  void clear_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id() const;
  void set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_account_id() const;
  void _internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 member_flags = 2;
  bool has_member_flags() const;
  private:
  bool _internal_has_member_flags() const;
  public:
  void clear_member_flags();
  ::PROTOBUF_NAMESPACE_ID::uint32 member_flags() const;
  void set_member_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_member_flags() const;
  void _internal_set_member_flags(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
  bool has_member_session_rating() const;
  private:
  bool _internal_has_member_session_rating() const;
  public:
  void clear_member_session_rating();
  ::ECoachTeammateRating member_session_rating() const;
  void set_member_session_rating(::ECoachTeammateRating value);
  private:
  ::ECoachTeammateRating _internal_member_session_rating() const;
  void _internal_set_member_session_rating(::ECoachTeammateRating value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPrivateCoachingSessionMember)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 account_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 member_flags_;
  int member_session_rating_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgPrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPrivateCoachingSession) */ {
 public:
  inline CMsgPrivateCoachingSession() : CMsgPrivateCoachingSession(nullptr) {}
  virtual ~CMsgPrivateCoachingSession();
  explicit constexpr CMsgPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPrivateCoachingSession(const CMsgPrivateCoachingSession& from);
  CMsgPrivateCoachingSession(CMsgPrivateCoachingSession&& from) noexcept
    : CMsgPrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgPrivateCoachingSession& operator=(const CMsgPrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPrivateCoachingSession& operator=(CMsgPrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgPrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgPrivateCoachingSession*>(
               &_CMsgPrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CMsgPrivateCoachingSession& a, CMsgPrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgPrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSession>(nullptr);
  }

  CMsgPrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgPrivateCoachingSession& from);
  void MergeFrom(const CMsgPrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPrivateCoachingSession";
  }
  protected:
  explicit CMsgPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSessionMembersFieldNumber = 5,
    kPrivateCoachingSessionIdFieldNumber = 1,
    kRequestedTimestampFieldNumber = 2,
    kRequestedLanguageFieldNumber = 3,
    kCurrentLobbyIdFieldNumber = 6,
    kCoachingSessionStateFieldNumber = 4,
    kAcceptedTimestampFieldNumber = 8,
    kCurrentServerSteamIdFieldNumber = 7,
    kCompletedTimestampFieldNumber = 9,
  };
  // repeated .CMsgPrivateCoachingSessionMember session_members = 5;
  int session_members_size() const;
  private:
  int _internal_session_members_size() const;
  public:
  void clear_session_members();
  ::CMsgPrivateCoachingSessionMember* mutable_session_members(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPrivateCoachingSessionMember >*
      mutable_session_members();
  private:
  const ::CMsgPrivateCoachingSessionMember& _internal_session_members(int index) const;
  ::CMsgPrivateCoachingSessionMember* _internal_add_session_members();
  public:
  const ::CMsgPrivateCoachingSessionMember& session_members(int index) const;
  ::CMsgPrivateCoachingSessionMember* add_session_members();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPrivateCoachingSessionMember >&
      session_members() const;

  // optional uint64 private_coaching_session_id = 1;
  bool has_private_coaching_session_id() const;
  private:
  bool _internal_has_private_coaching_session_id() const;
  public:
  void clear_private_coaching_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 private_coaching_session_id() const;
  void set_private_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_private_coaching_session_id() const;
  void _internal_set_private_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 requested_timestamp = 2;
  bool has_requested_timestamp() const;
  private:
  bool _internal_has_requested_timestamp() const;
  public:
  void clear_requested_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_timestamp() const;
  void set_requested_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requested_timestamp() const;
  void _internal_set_requested_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 requested_language = 3;
  bool has_requested_language() const;
  private:
  bool _internal_has_requested_language() const;
  public:
  void clear_requested_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_language() const;
  void set_requested_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requested_language() const;
  void _internal_set_requested_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 current_lobby_id = 6;
  bool has_current_lobby_id() const;
  private:
  bool _internal_has_current_lobby_id() const;
  public:
  void clear_current_lobby_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 current_lobby_id() const;
  void set_current_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_current_lobby_id() const;
  void _internal_set_current_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
  bool has_coaching_session_state() const;
  private:
  bool _internal_has_coaching_session_state() const;
  public:
  void clear_coaching_session_state();
  ::EPrivateCoachingSessionState coaching_session_state() const;
  void set_coaching_session_state(::EPrivateCoachingSessionState value);
  private:
  ::EPrivateCoachingSessionState _internal_coaching_session_state() const;
  void _internal_set_coaching_session_state(::EPrivateCoachingSessionState value);
  public:

  // optional fixed32 accepted_timestamp = 8;
  bool has_accepted_timestamp() const;
  private:
  bool _internal_has_accepted_timestamp() const;
  public:
  void clear_accepted_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 accepted_timestamp() const;
  void set_accepted_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accepted_timestamp() const;
  void _internal_set_accepted_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint64 current_server_steam_id = 7;
  bool has_current_server_steam_id() const;
  private:
  bool _internal_has_current_server_steam_id() const;
  public:
  void clear_current_server_steam_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 current_server_steam_id() const;
  void set_current_server_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_current_server_steam_id() const;
  void _internal_set_current_server_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional fixed32 completed_timestamp = 9;
  bool has_completed_timestamp() const;
  private:
  bool _internal_has_completed_timestamp() const;
  public:
  void clear_completed_timestamp();
  ::PROTOBUF_NAMESPACE_ID::uint32 completed_timestamp() const;
  void set_completed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_completed_timestamp() const;
  void _internal_set_completed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPrivateCoachingSessionMember > session_members_;
  ::PROTOBUF_NAMESPACE_ID::uint64 private_coaching_session_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requested_language_;
  ::PROTOBUF_NAMESPACE_ID::uint64 current_lobby_id_;
  int coaching_session_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 accepted_timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 current_server_steam_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 completed_timestamp_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgPrivateCoachingSessionStatus PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgPrivateCoachingSessionStatus) */ {
 public:
  inline CMsgPrivateCoachingSessionStatus() : CMsgPrivateCoachingSessionStatus(nullptr) {}
  virtual ~CMsgPrivateCoachingSessionStatus();
  explicit constexpr CMsgPrivateCoachingSessionStatus(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgPrivateCoachingSessionStatus(const CMsgPrivateCoachingSessionStatus& from);
  CMsgPrivateCoachingSessionStatus(CMsgPrivateCoachingSessionStatus&& from) noexcept
    : CMsgPrivateCoachingSessionStatus() {
    *this = ::std::move(from);
  }

  inline CMsgPrivateCoachingSessionStatus& operator=(const CMsgPrivateCoachingSessionStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgPrivateCoachingSessionStatus& operator=(CMsgPrivateCoachingSessionStatus&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgPrivateCoachingSessionStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgPrivateCoachingSessionStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgPrivateCoachingSessionStatus*>(
               &_CMsgPrivateCoachingSessionStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CMsgPrivateCoachingSessionStatus& a, CMsgPrivateCoachingSessionStatus& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgPrivateCoachingSessionStatus* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgPrivateCoachingSessionStatus* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgPrivateCoachingSessionStatus* New() const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSessionStatus>(nullptr);
  }

  CMsgPrivateCoachingSessionStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgPrivateCoachingSessionStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgPrivateCoachingSessionStatus& from);
  void MergeFrom(const CMsgPrivateCoachingSessionStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgPrivateCoachingSessionStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgPrivateCoachingSessionStatus";
  }
  protected:
  explicit CMsgPrivateCoachingSessionStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequesterCompetitiveRankTierFieldNumber = 1,
    kRequesterGamesPlayedFieldNumber = 2,
  };
  // optional uint32 requester_competitive_rank_tier = 1;
  bool has_requester_competitive_rank_tier() const;
  private:
  bool _internal_has_requester_competitive_rank_tier() const;
  public:
  void clear_requester_competitive_rank_tier();
  ::PROTOBUF_NAMESPACE_ID::uint32 requester_competitive_rank_tier() const;
  void set_requester_competitive_rank_tier(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requester_competitive_rank_tier() const;
  void _internal_set_requester_competitive_rank_tier(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 requester_games_played = 2;
  bool has_requester_games_played() const;
  private:
  bool _internal_has_requester_games_played() const;
  public:
  void clear_requester_games_played();
  ::PROTOBUF_NAMESPACE_ID::uint32 requester_games_played() const;
  void set_requester_games_played(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_requester_games_played() const;
  void _internal_set_requester_games_played(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgPrivateCoachingSessionStatus)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requester_competitive_rank_tier_;
  ::PROTOBUF_NAMESPACE_ID::uint32 requester_games_played_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgAvailablePrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAvailablePrivateCoachingSession) */ {
 public:
  inline CMsgAvailablePrivateCoachingSession() : CMsgAvailablePrivateCoachingSession(nullptr) {}
  virtual ~CMsgAvailablePrivateCoachingSession();
  explicit constexpr CMsgAvailablePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAvailablePrivateCoachingSession(const CMsgAvailablePrivateCoachingSession& from);
  CMsgAvailablePrivateCoachingSession(CMsgAvailablePrivateCoachingSession&& from) noexcept
    : CMsgAvailablePrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgAvailablePrivateCoachingSession& operator=(const CMsgAvailablePrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAvailablePrivateCoachingSession& operator=(CMsgAvailablePrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAvailablePrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAvailablePrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgAvailablePrivateCoachingSession*>(
               &_CMsgAvailablePrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CMsgAvailablePrivateCoachingSession& a, CMsgAvailablePrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAvailablePrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAvailablePrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAvailablePrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSession>(nullptr);
  }

  CMsgAvailablePrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAvailablePrivateCoachingSession& from);
  void MergeFrom(const CMsgAvailablePrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAvailablePrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAvailablePrivateCoachingSession";
  }
  protected:
  explicit CMsgAvailablePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionFieldNumber = 1,
    kCoachingSessionStatusFieldNumber = 2,
  };
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  bool has_coaching_session() const;
  private:
  bool _internal_has_coaching_session() const;
  public:
  void clear_coaching_session();
  const ::CMsgPrivateCoachingSession& coaching_session() const;
  ::CMsgPrivateCoachingSession* release_coaching_session();
  ::CMsgPrivateCoachingSession* mutable_coaching_session();
  void set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session);
  private:
  const ::CMsgPrivateCoachingSession& _internal_coaching_session() const;
  ::CMsgPrivateCoachingSession* _internal_mutable_coaching_session();
  public:
  void unsafe_arena_set_allocated_coaching_session(
      ::CMsgPrivateCoachingSession* coaching_session);
  ::CMsgPrivateCoachingSession* unsafe_arena_release_coaching_session();

  // optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
  bool has_coaching_session_status() const;
  private:
  bool _internal_has_coaching_session_status() const;
  public:
  void clear_coaching_session_status();
  const ::CMsgPrivateCoachingSessionStatus& coaching_session_status() const;
  ::CMsgPrivateCoachingSessionStatus* release_coaching_session_status();
  ::CMsgPrivateCoachingSessionStatus* mutable_coaching_session_status();
  void set_allocated_coaching_session_status(::CMsgPrivateCoachingSessionStatus* coaching_session_status);
  private:
  const ::CMsgPrivateCoachingSessionStatus& _internal_coaching_session_status() const;
  ::CMsgPrivateCoachingSessionStatus* _internal_mutable_coaching_session_status();
  public:
  void unsafe_arena_set_allocated_coaching_session_status(
      ::CMsgPrivateCoachingSessionStatus* coaching_session_status);
  ::CMsgPrivateCoachingSessionStatus* unsafe_arena_release_coaching_session_status();

  // @@protoc_insertion_point(class_scope:CMsgAvailablePrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPrivateCoachingSession* coaching_session_;
  ::CMsgPrivateCoachingSessionStatus* coaching_session_status_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgAvailablePrivateCoachingSessionList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAvailablePrivateCoachingSessionList) */ {
 public:
  inline CMsgAvailablePrivateCoachingSessionList() : CMsgAvailablePrivateCoachingSessionList(nullptr) {}
  virtual ~CMsgAvailablePrivateCoachingSessionList();
  explicit constexpr CMsgAvailablePrivateCoachingSessionList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAvailablePrivateCoachingSessionList(const CMsgAvailablePrivateCoachingSessionList& from);
  CMsgAvailablePrivateCoachingSessionList(CMsgAvailablePrivateCoachingSessionList&& from) noexcept
    : CMsgAvailablePrivateCoachingSessionList() {
    *this = ::std::move(from);
  }

  inline CMsgAvailablePrivateCoachingSessionList& operator=(const CMsgAvailablePrivateCoachingSessionList& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAvailablePrivateCoachingSessionList& operator=(CMsgAvailablePrivateCoachingSessionList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAvailablePrivateCoachingSessionList& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAvailablePrivateCoachingSessionList* internal_default_instance() {
    return reinterpret_cast<const CMsgAvailablePrivateCoachingSessionList*>(
               &_CMsgAvailablePrivateCoachingSessionList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CMsgAvailablePrivateCoachingSessionList& a, CMsgAvailablePrivateCoachingSessionList& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAvailablePrivateCoachingSessionList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAvailablePrivateCoachingSessionList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAvailablePrivateCoachingSessionList* New() const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSessionList>(nullptr);
  }

  CMsgAvailablePrivateCoachingSessionList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSessionList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAvailablePrivateCoachingSessionList& from);
  void MergeFrom(const CMsgAvailablePrivateCoachingSessionList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAvailablePrivateCoachingSessionList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAvailablePrivateCoachingSessionList";
  }
  protected:
  explicit CMsgAvailablePrivateCoachingSessionList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvailableCoachingSessionsFieldNumber = 1,
  };
  // repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
  int available_coaching_sessions_size() const;
  private:
  int _internal_available_coaching_sessions_size() const;
  public:
  void clear_available_coaching_sessions();
  ::CMsgAvailablePrivateCoachingSession* mutable_available_coaching_sessions(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAvailablePrivateCoachingSession >*
      mutable_available_coaching_sessions();
  private:
  const ::CMsgAvailablePrivateCoachingSession& _internal_available_coaching_sessions(int index) const;
  ::CMsgAvailablePrivateCoachingSession* _internal_add_available_coaching_sessions();
  public:
  const ::CMsgAvailablePrivateCoachingSession& available_coaching_sessions(int index) const;
  ::CMsgAvailablePrivateCoachingSession* add_available_coaching_sessions();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAvailablePrivateCoachingSession >&
      available_coaching_sessions() const;

  // @@protoc_insertion_point(class_scope:CMsgAvailablePrivateCoachingSessionList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAvailablePrivateCoachingSession > available_coaching_sessions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgAvailablePrivateCoachingSessionSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgAvailablePrivateCoachingSessionSummary) */ {
 public:
  inline CMsgAvailablePrivateCoachingSessionSummary() : CMsgAvailablePrivateCoachingSessionSummary(nullptr) {}
  virtual ~CMsgAvailablePrivateCoachingSessionSummary();
  explicit constexpr CMsgAvailablePrivateCoachingSessionSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgAvailablePrivateCoachingSessionSummary(const CMsgAvailablePrivateCoachingSessionSummary& from);
  CMsgAvailablePrivateCoachingSessionSummary(CMsgAvailablePrivateCoachingSessionSummary&& from) noexcept
    : CMsgAvailablePrivateCoachingSessionSummary() {
    *this = ::std::move(from);
  }

  inline CMsgAvailablePrivateCoachingSessionSummary& operator=(const CMsgAvailablePrivateCoachingSessionSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgAvailablePrivateCoachingSessionSummary& operator=(CMsgAvailablePrivateCoachingSessionSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgAvailablePrivateCoachingSessionSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgAvailablePrivateCoachingSessionSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgAvailablePrivateCoachingSessionSummary*>(
               &_CMsgAvailablePrivateCoachingSessionSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CMsgAvailablePrivateCoachingSessionSummary& a, CMsgAvailablePrivateCoachingSessionSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgAvailablePrivateCoachingSessionSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgAvailablePrivateCoachingSessionSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgAvailablePrivateCoachingSessionSummary* New() const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSessionSummary>(nullptr);
  }

  CMsgAvailablePrivateCoachingSessionSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgAvailablePrivateCoachingSessionSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgAvailablePrivateCoachingSessionSummary& from);
  void MergeFrom(const CMsgAvailablePrivateCoachingSessionSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgAvailablePrivateCoachingSessionSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgAvailablePrivateCoachingSessionSummary";
  }
  protected:
  explicit CMsgAvailablePrivateCoachingSessionSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionCountFieldNumber = 1,
  };
  // optional uint32 coaching_session_count = 1;
  bool has_coaching_session_count() const;
  private:
  bool _internal_has_coaching_session_count() const;
  public:
  void clear_coaching_session_count();
  ::PROTOBUF_NAMESPACE_ID::uint32 coaching_session_count() const;
  void set_coaching_session_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coaching_session_count() const;
  void _internal_set_coaching_session_count(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgAvailablePrivateCoachingSessionSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coaching_session_count_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlayerCoachMatches PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPlayerCoachMatches) */ {
 public:
  inline CMsgClientToGCRequestPlayerCoachMatches() : CMsgClientToGCRequestPlayerCoachMatches(nullptr) {}
  virtual ~CMsgClientToGCRequestPlayerCoachMatches();
  explicit constexpr CMsgClientToGCRequestPlayerCoachMatches(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPlayerCoachMatches(const CMsgClientToGCRequestPlayerCoachMatches& from);
  CMsgClientToGCRequestPlayerCoachMatches(CMsgClientToGCRequestPlayerCoachMatches&& from) noexcept
    : CMsgClientToGCRequestPlayerCoachMatches() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlayerCoachMatches& operator=(const CMsgClientToGCRequestPlayerCoachMatches& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPlayerCoachMatches& operator=(CMsgClientToGCRequestPlayerCoachMatches&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPlayerCoachMatches& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPlayerCoachMatches* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlayerCoachMatches*>(
               &_CMsgClientToGCRequestPlayerCoachMatches_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CMsgClientToGCRequestPlayerCoachMatches& a, CMsgClientToGCRequestPlayerCoachMatches& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPlayerCoachMatches* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPlayerCoachMatches* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlayerCoachMatches* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatches>(nullptr);
  }

  CMsgClientToGCRequestPlayerCoachMatches* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatches>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlayerCoachMatches& from);
  void MergeFrom(const CMsgClientToGCRequestPlayerCoachMatches& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlayerCoachMatches* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPlayerCoachMatches";
  }
  protected:
  explicit CMsgClientToGCRequestPlayerCoachMatches(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPlayerCoachMatches)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlayerCoachMatchesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPlayerCoachMatchesResponse) */ {
 public:
  inline CMsgClientToGCRequestPlayerCoachMatchesResponse() : CMsgClientToGCRequestPlayerCoachMatchesResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestPlayerCoachMatchesResponse();
  explicit constexpr CMsgClientToGCRequestPlayerCoachMatchesResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPlayerCoachMatchesResponse(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from);
  CMsgClientToGCRequestPlayerCoachMatchesResponse(CMsgClientToGCRequestPlayerCoachMatchesResponse&& from) noexcept
    : CMsgClientToGCRequestPlayerCoachMatchesResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlayerCoachMatchesResponse& operator=(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPlayerCoachMatchesResponse& operator=(CMsgClientToGCRequestPlayerCoachMatchesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPlayerCoachMatchesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPlayerCoachMatchesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlayerCoachMatchesResponse*>(
               &_CMsgClientToGCRequestPlayerCoachMatchesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CMsgClientToGCRequestPlayerCoachMatchesResponse& a, CMsgClientToGCRequestPlayerCoachMatchesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPlayerCoachMatchesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPlayerCoachMatchesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlayerCoachMatchesResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatchesResponse>(nullptr);
  }

  CMsgClientToGCRequestPlayerCoachMatchesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatchesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from);
  void MergeFrom(const CMsgClientToGCRequestPlayerCoachMatchesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlayerCoachMatchesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPlayerCoachMatchesResponse";
  }
  protected:
  explicit CMsgClientToGCRequestPlayerCoachMatchesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_k_eDisabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCoachMatchesFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .CMsgPlayerCoachMatch coach_matches = 2;
  int coach_matches_size() const;
  private:
  int _internal_coach_matches_size() const;
  public:
  void clear_coach_matches();
  ::CMsgPlayerCoachMatch* mutable_coach_matches(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPlayerCoachMatch >*
      mutable_coach_matches();
  private:
  const ::CMsgPlayerCoachMatch& _internal_coach_matches(int index) const;
  ::CMsgPlayerCoachMatch* _internal_add_coach_matches();
  public:
  const ::CMsgPlayerCoachMatch& coach_matches(int index) const;
  ::CMsgPlayerCoachMatch* add_coach_matches();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPlayerCoachMatch >&
      coach_matches() const;

  // optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPlayerCoachMatchesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPlayerCoachMatch > coach_matches_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlayerCoachMatch PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPlayerCoachMatch) */ {
 public:
  inline CMsgClientToGCRequestPlayerCoachMatch() : CMsgClientToGCRequestPlayerCoachMatch(nullptr) {}
  virtual ~CMsgClientToGCRequestPlayerCoachMatch();
  explicit constexpr CMsgClientToGCRequestPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPlayerCoachMatch(const CMsgClientToGCRequestPlayerCoachMatch& from);
  CMsgClientToGCRequestPlayerCoachMatch(CMsgClientToGCRequestPlayerCoachMatch&& from) noexcept
    : CMsgClientToGCRequestPlayerCoachMatch() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlayerCoachMatch& operator=(const CMsgClientToGCRequestPlayerCoachMatch& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPlayerCoachMatch& operator=(CMsgClientToGCRequestPlayerCoachMatch&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPlayerCoachMatch& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPlayerCoachMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlayerCoachMatch*>(
               &_CMsgClientToGCRequestPlayerCoachMatch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(CMsgClientToGCRequestPlayerCoachMatch& a, CMsgClientToGCRequestPlayerCoachMatch& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPlayerCoachMatch* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPlayerCoachMatch* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlayerCoachMatch* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatch>(nullptr);
  }

  CMsgClientToGCRequestPlayerCoachMatch* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatch>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlayerCoachMatch& from);
  void MergeFrom(const CMsgClientToGCRequestPlayerCoachMatch& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlayerCoachMatch* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPlayerCoachMatch";
  }
  protected:
  explicit CMsgClientToGCRequestPlayerCoachMatch(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatchIdFieldNumber = 1,
  };
  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPlayerCoachMatch)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPlayerCoachMatchResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPlayerCoachMatchResponse) */ {
 public:
  inline CMsgClientToGCRequestPlayerCoachMatchResponse() : CMsgClientToGCRequestPlayerCoachMatchResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestPlayerCoachMatchResponse();
  explicit constexpr CMsgClientToGCRequestPlayerCoachMatchResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPlayerCoachMatchResponse(const CMsgClientToGCRequestPlayerCoachMatchResponse& from);
  CMsgClientToGCRequestPlayerCoachMatchResponse(CMsgClientToGCRequestPlayerCoachMatchResponse&& from) noexcept
    : CMsgClientToGCRequestPlayerCoachMatchResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPlayerCoachMatchResponse& operator=(const CMsgClientToGCRequestPlayerCoachMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPlayerCoachMatchResponse& operator=(CMsgClientToGCRequestPlayerCoachMatchResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPlayerCoachMatchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPlayerCoachMatchResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPlayerCoachMatchResponse*>(
               &_CMsgClientToGCRequestPlayerCoachMatchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(CMsgClientToGCRequestPlayerCoachMatchResponse& a, CMsgClientToGCRequestPlayerCoachMatchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPlayerCoachMatchResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPlayerCoachMatchResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPlayerCoachMatchResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatchResponse>(nullptr);
  }

  CMsgClientToGCRequestPlayerCoachMatchResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPlayerCoachMatchResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPlayerCoachMatchResponse& from);
  void MergeFrom(const CMsgClientToGCRequestPlayerCoachMatchResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPlayerCoachMatchResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPlayerCoachMatchResponse";
  }
  protected:
  explicit CMsgClientToGCRequestPlayerCoachMatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_k_eDisabled;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCoachMatchFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgPlayerCoachMatch coach_match = 2;
  bool has_coach_match() const;
  private:
  bool _internal_has_coach_match() const;
  public:
  void clear_coach_match();
  const ::CMsgPlayerCoachMatch& coach_match() const;
  ::CMsgPlayerCoachMatch* release_coach_match();
  ::CMsgPlayerCoachMatch* mutable_coach_match();
  void set_allocated_coach_match(::CMsgPlayerCoachMatch* coach_match);
  private:
  const ::CMsgPlayerCoachMatch& _internal_coach_match() const;
  ::CMsgPlayerCoachMatch* _internal_mutable_coach_match();
  public:
  void unsafe_arena_set_allocated_coach_match(
      ::CMsgPlayerCoachMatch* coach_match);
  ::CMsgPlayerCoachMatch* unsafe_arena_release_coach_match();

  // optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPlayerCoachMatchResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPlayerCoachMatch* coach_match_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitCoachTeammateRating PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitCoachTeammateRating) */ {
 public:
  inline CMsgClientToGCSubmitCoachTeammateRating() : CMsgClientToGCSubmitCoachTeammateRating(nullptr) {}
  virtual ~CMsgClientToGCSubmitCoachTeammateRating();
  explicit constexpr CMsgClientToGCSubmitCoachTeammateRating(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitCoachTeammateRating(const CMsgClientToGCSubmitCoachTeammateRating& from);
  CMsgClientToGCSubmitCoachTeammateRating(CMsgClientToGCSubmitCoachTeammateRating&& from) noexcept
    : CMsgClientToGCSubmitCoachTeammateRating() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitCoachTeammateRating& operator=(const CMsgClientToGCSubmitCoachTeammateRating& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitCoachTeammateRating& operator=(CMsgClientToGCSubmitCoachTeammateRating&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSubmitCoachTeammateRating& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitCoachTeammateRating* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitCoachTeammateRating*>(
               &_CMsgClientToGCSubmitCoachTeammateRating_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(CMsgClientToGCSubmitCoachTeammateRating& a, CMsgClientToGCSubmitCoachTeammateRating& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitCoachTeammateRating* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitCoachTeammateRating* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSubmitCoachTeammateRating* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitCoachTeammateRating>(nullptr);
  }

  CMsgClientToGCSubmitCoachTeammateRating* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitCoachTeammateRating>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSubmitCoachTeammateRating& from);
  void MergeFrom(const CMsgClientToGCSubmitCoachTeammateRating& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitCoachTeammateRating* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitCoachTeammateRating";
  }
  protected:
  explicit CMsgClientToGCSubmitCoachTeammateRating(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReasonFieldNumber = 4,
    kMatchIdFieldNumber = 1,
    kCoachAccountIdFieldNumber = 2,
    kRatingFieldNumber = 3,
  };
  // optional string reason = 4;
  bool has_reason() const;
  private:
  bool _internal_has_reason() const;
  public:
  void clear_reason();
  const std::string& reason() const;
  void set_reason(const std::string& value);
  void set_reason(std::string&& value);
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  std::string* mutable_reason();
  std::string* release_reason();
  void set_allocated_reason(std::string* reason);
  private:
  const std::string& _internal_reason() const;
  void _internal_set_reason(const std::string& value);
  std::string* _internal_mutable_reason();
  public:

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  private:
  bool _internal_has_match_id() const;
  public:
  void clear_match_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id() const;
  void set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_match_id() const;
  void _internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional uint32 coach_account_id = 2;
  bool has_coach_account_id() const;
  private:
  bool _internal_has_coach_account_id() const;
  public:
  void clear_coach_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_account_id() const;
  void set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coach_account_id() const;
  void _internal_set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
  bool has_rating() const;
  private:
  bool _internal_has_rating() const;
  public:
  void clear_rating();
  ::ECoachTeammateRating rating() const;
  void set_rating(::ECoachTeammateRating value);
  private:
  ::ECoachTeammateRating _internal_rating() const;
  void _internal_set_rating(::ECoachTeammateRating value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitCoachTeammateRating)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr reason_;
  ::PROTOBUF_NAMESPACE_ID::uint64 match_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_account_id_;
  int rating_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitCoachTeammateRatingResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitCoachTeammateRatingResponse) */ {
 public:
  inline CMsgClientToGCSubmitCoachTeammateRatingResponse() : CMsgClientToGCSubmitCoachTeammateRatingResponse(nullptr) {}
  virtual ~CMsgClientToGCSubmitCoachTeammateRatingResponse();
  explicit constexpr CMsgClientToGCSubmitCoachTeammateRatingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitCoachTeammateRatingResponse(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from);
  CMsgClientToGCSubmitCoachTeammateRatingResponse(CMsgClientToGCSubmitCoachTeammateRatingResponse&& from) noexcept
    : CMsgClientToGCSubmitCoachTeammateRatingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitCoachTeammateRatingResponse& operator=(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitCoachTeammateRatingResponse& operator=(CMsgClientToGCSubmitCoachTeammateRatingResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSubmitCoachTeammateRatingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitCoachTeammateRatingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitCoachTeammateRatingResponse*>(
               &_CMsgClientToGCSubmitCoachTeammateRatingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(CMsgClientToGCSubmitCoachTeammateRatingResponse& a, CMsgClientToGCSubmitCoachTeammateRatingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitCoachTeammateRatingResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitCoachTeammateRatingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSubmitCoachTeammateRatingResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitCoachTeammateRatingResponse>(nullptr);
  }

  CMsgClientToGCSubmitCoachTeammateRatingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitCoachTeammateRatingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from);
  void MergeFrom(const CMsgClientToGCSubmitCoachTeammateRatingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitCoachTeammateRatingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitCoachTeammateRatingResponse";
  }
  protected:
  explicit CMsgClientToGCSubmitCoachTeammateRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eInvalidInput =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eInvalidInput;
  static constexpr EResponse k_eAlreadySubmitted =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eAlreadySubmitted;
  static constexpr EResponse k_eVotingFinished =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eVotingFinished;
  static constexpr EResponse k_ePlayerNotInMatch =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerNotInMatch;
  static constexpr EResponse k_eCoachNotInMatch =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eCoachNotInMatch;
  static constexpr EResponse k_ePlayerNotOnCoachTeam =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerNotOnCoachTeam;
  static constexpr EResponse k_ePlayerInSamePartyAsCoach =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_ePlayerInSamePartyAsCoach;
  static constexpr EResponse k_eMatchNotEligible =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_k_eMatchNotEligible;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse value);
  private:
  ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitCoachTeammateRatingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientCoachTeammateRatingsChanged PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientCoachTeammateRatingsChanged) */ {
 public:
  inline CMsgGCToClientCoachTeammateRatingsChanged() : CMsgGCToClientCoachTeammateRatingsChanged(nullptr) {}
  virtual ~CMsgGCToClientCoachTeammateRatingsChanged();
  explicit constexpr CMsgGCToClientCoachTeammateRatingsChanged(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientCoachTeammateRatingsChanged(const CMsgGCToClientCoachTeammateRatingsChanged& from);
  CMsgGCToClientCoachTeammateRatingsChanged(CMsgGCToClientCoachTeammateRatingsChanged&& from) noexcept
    : CMsgGCToClientCoachTeammateRatingsChanged() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientCoachTeammateRatingsChanged& operator=(const CMsgGCToClientCoachTeammateRatingsChanged& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientCoachTeammateRatingsChanged& operator=(CMsgGCToClientCoachTeammateRatingsChanged&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientCoachTeammateRatingsChanged& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientCoachTeammateRatingsChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCoachTeammateRatingsChanged*>(
               &_CMsgGCToClientCoachTeammateRatingsChanged_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(CMsgGCToClientCoachTeammateRatingsChanged& a, CMsgGCToClientCoachTeammateRatingsChanged& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientCoachTeammateRatingsChanged* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientCoachTeammateRatingsChanged* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCoachTeammateRatingsChanged* New() const final {
    return CreateMaybeMessage<CMsgGCToClientCoachTeammateRatingsChanged>(nullptr);
  }

  CMsgGCToClientCoachTeammateRatingsChanged* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientCoachTeammateRatingsChanged>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientCoachTeammateRatingsChanged& from);
  void MergeFrom(const CMsgGCToClientCoachTeammateRatingsChanged& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientCoachTeammateRatingsChanged* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientCoachTeammateRatingsChanged";
  }
  protected:
  explicit CMsgGCToClientCoachTeammateRatingsChanged(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachMatchFieldNumber = 1,
  };
  // optional .CMsgPlayerCoachMatch coach_match = 1;
  bool has_coach_match() const;
  private:
  bool _internal_has_coach_match() const;
  public:
  void clear_coach_match();
  const ::CMsgPlayerCoachMatch& coach_match() const;
  ::CMsgPlayerCoachMatch* release_coach_match();
  ::CMsgPlayerCoachMatch* mutable_coach_match();
  void set_allocated_coach_match(::CMsgPlayerCoachMatch* coach_match);
  private:
  const ::CMsgPlayerCoachMatch& _internal_coach_match() const;
  ::CMsgPlayerCoachMatch* _internal_mutable_coach_match();
  public:
  void unsafe_arena_set_allocated_coach_match(
      ::CMsgPlayerCoachMatch* coach_match);
  ::CMsgPlayerCoachMatch* unsafe_arena_release_coach_match();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientCoachTeammateRatingsChanged)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPlayerCoachMatch* coach_match_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPrivateCoachingSession) */ {
 public:
  inline CMsgClientToGCRequestPrivateCoachingSession() : CMsgClientToGCRequestPrivateCoachingSession(nullptr) {}
  virtual ~CMsgClientToGCRequestPrivateCoachingSession();
  explicit constexpr CMsgClientToGCRequestPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPrivateCoachingSession(const CMsgClientToGCRequestPrivateCoachingSession& from);
  CMsgClientToGCRequestPrivateCoachingSession(CMsgClientToGCRequestPrivateCoachingSession&& from) noexcept
    : CMsgClientToGCRequestPrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPrivateCoachingSession& operator=(const CMsgClientToGCRequestPrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPrivateCoachingSession& operator=(CMsgClientToGCRequestPrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPrivateCoachingSession*>(
               &_CMsgClientToGCRequestPrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(CMsgClientToGCRequestPrivateCoachingSession& a, CMsgClientToGCRequestPrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPrivateCoachingSession>(nullptr);
  }

  CMsgClientToGCRequestPrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPrivateCoachingSession& from);
  void MergeFrom(const CMsgClientToGCRequestPrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPrivateCoachingSession";
  }
  protected:
  explicit CMsgClientToGCRequestPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageFieldNumber = 1,
  };
  // optional uint32 language = 1;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 language_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestPrivateCoachingSessionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRequestPrivateCoachingSessionResponse) */ {
 public:
  inline CMsgClientToGCRequestPrivateCoachingSessionResponse() : CMsgClientToGCRequestPrivateCoachingSessionResponse(nullptr) {}
  virtual ~CMsgClientToGCRequestPrivateCoachingSessionResponse();
  explicit constexpr CMsgClientToGCRequestPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRequestPrivateCoachingSessionResponse(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from);
  CMsgClientToGCRequestPrivateCoachingSessionResponse(CMsgClientToGCRequestPrivateCoachingSessionResponse&& from) noexcept
    : CMsgClientToGCRequestPrivateCoachingSessionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRequestPrivateCoachingSessionResponse& operator=(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRequestPrivateCoachingSessionResponse& operator=(CMsgClientToGCRequestPrivateCoachingSessionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRequestPrivateCoachingSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRequestPrivateCoachingSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestPrivateCoachingSessionResponse*>(
               &_CMsgClientToGCRequestPrivateCoachingSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(CMsgClientToGCRequestPrivateCoachingSessionResponse& a, CMsgClientToGCRequestPrivateCoachingSessionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRequestPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRequestPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestPrivateCoachingSessionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPrivateCoachingSessionResponse>(nullptr);
  }

  CMsgClientToGCRequestPrivateCoachingSessionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRequestPrivateCoachingSessionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from);
  void MergeFrom(const CMsgClientToGCRequestPrivateCoachingSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRequestPrivateCoachingSessionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRequestPrivateCoachingSessionResponse";
  }
  protected:
  explicit CMsgClientToGCRequestPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eAlreadyInSession =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eAlreadyInSession;
  static constexpr EResponse k_eBehaviorScoreTooLow =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eBehaviorScoreTooLow;
  static constexpr EResponse k_eInvalidLobbyType =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyType;
  static constexpr EResponse k_eLowPriorityPlayer =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityPlayer;
  static constexpr EResponse k_eLowPriorityLobby =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityLobby;
  static constexpr EResponse k_eLowPriorityParty =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eLowPriorityParty;
  static constexpr EResponse k_eTextChatBan =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eTextChatBan;
  static constexpr EResponse k_eVoiceChatBan =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eVoiceChatBan;
  static constexpr EResponse k_eMatchBan =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_k_eMatchBan;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  bool has_coaching_session() const;
  private:
  bool _internal_has_coaching_session() const;
  public:
  void clear_coaching_session();
  const ::CMsgPrivateCoachingSession& coaching_session() const;
  ::CMsgPrivateCoachingSession* release_coaching_session();
  ::CMsgPrivateCoachingSession* mutable_coaching_session();
  void set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session);
  private:
  const ::CMsgPrivateCoachingSession& _internal_coaching_session() const;
  ::CMsgPrivateCoachingSession* _internal_mutable_coaching_session();
  public:
  void unsafe_arena_set_allocated_coaching_session(
      ::CMsgPrivateCoachingSession* coaching_session);
  ::CMsgPrivateCoachingSession* unsafe_arena_release_coaching_session();

  // optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse value);
  private:
  ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRequestPrivateCoachingSessionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPrivateCoachingSession* coaching_session_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAcceptPrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAcceptPrivateCoachingSession) */ {
 public:
  inline CMsgClientToGCAcceptPrivateCoachingSession() : CMsgClientToGCAcceptPrivateCoachingSession(nullptr) {}
  virtual ~CMsgClientToGCAcceptPrivateCoachingSession();
  explicit constexpr CMsgClientToGCAcceptPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAcceptPrivateCoachingSession(const CMsgClientToGCAcceptPrivateCoachingSession& from);
  CMsgClientToGCAcceptPrivateCoachingSession(CMsgClientToGCAcceptPrivateCoachingSession&& from) noexcept
    : CMsgClientToGCAcceptPrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAcceptPrivateCoachingSession& operator=(const CMsgClientToGCAcceptPrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAcceptPrivateCoachingSession& operator=(CMsgClientToGCAcceptPrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCAcceptPrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAcceptPrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAcceptPrivateCoachingSession*>(
               &_CMsgClientToGCAcceptPrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CMsgClientToGCAcceptPrivateCoachingSession& a, CMsgClientToGCAcceptPrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAcceptPrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAcceptPrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCAcceptPrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptPrivateCoachingSession>(nullptr);
  }

  CMsgClientToGCAcceptPrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptPrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSession& from);
  void MergeFrom(const CMsgClientToGCAcceptPrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAcceptPrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAcceptPrivateCoachingSession";
  }
  protected:
  explicit CMsgClientToGCAcceptPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionIdFieldNumber = 1,
  };
  // optional uint64 coaching_session_id = 1;
  bool has_coaching_session_id() const;
  private:
  bool _internal_has_coaching_session_id() const;
  public:
  void clear_coaching_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 coaching_session_id() const;
  void set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coaching_session_id() const;
  void _internal_set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAcceptPrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coaching_session_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCAcceptPrivateCoachingSessionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCAcceptPrivateCoachingSessionResponse) */ {
 public:
  inline CMsgClientToGCAcceptPrivateCoachingSessionResponse() : CMsgClientToGCAcceptPrivateCoachingSessionResponse(nullptr) {}
  virtual ~CMsgClientToGCAcceptPrivateCoachingSessionResponse();
  explicit constexpr CMsgClientToGCAcceptPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCAcceptPrivateCoachingSessionResponse(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from);
  CMsgClientToGCAcceptPrivateCoachingSessionResponse(CMsgClientToGCAcceptPrivateCoachingSessionResponse&& from) noexcept
    : CMsgClientToGCAcceptPrivateCoachingSessionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCAcceptPrivateCoachingSessionResponse& operator=(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCAcceptPrivateCoachingSessionResponse& operator=(CMsgClientToGCAcceptPrivateCoachingSessionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCAcceptPrivateCoachingSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCAcceptPrivateCoachingSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAcceptPrivateCoachingSessionResponse*>(
               &_CMsgClientToGCAcceptPrivateCoachingSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(CMsgClientToGCAcceptPrivateCoachingSessionResponse& a, CMsgClientToGCAcceptPrivateCoachingSessionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCAcceptPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCAcceptPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCAcceptPrivateCoachingSessionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptPrivateCoachingSessionResponse>(nullptr);
  }

  CMsgClientToGCAcceptPrivateCoachingSessionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCAcceptPrivateCoachingSessionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from);
  void MergeFrom(const CMsgClientToGCAcceptPrivateCoachingSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCAcceptPrivateCoachingSessionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCAcceptPrivateCoachingSessionResponse";
  }
  protected:
  explicit CMsgClientToGCAcceptPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eUnknownSession =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eUnknownSession;
  static constexpr EResponse k_eAlreadyHasCoach =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyHasCoach;
  static constexpr EResponse k_eAlreadyHasSession =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyHasSession;
  static constexpr EResponse k_eInvalidUser =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidUser;
  static constexpr EResponse k_eAlreadyFinished =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyFinished;
  static constexpr EResponse k_eInvalidLobbyType =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyType;
  static constexpr EResponse k_eAlreadyInLobby =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eAlreadyInLobby;
  static constexpr EResponse k_eLobbyIsLan =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eLobbyIsLan;
  static constexpr EResponse k_eLobbyIsLeague =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eLobbyIsLeague;
  static constexpr EResponse k_eInvalidLobbyState =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eInvalidLobbyState;
  static constexpr EResponse k_eRequesterIsNotPlayer =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eRequesterIsNotPlayer;
  static constexpr EResponse k_eTooManyCoaches =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eTooManyCoaches;
  static constexpr EResponse k_eCoachWasPlayer =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachWasPlayer;
  static constexpr EResponse k_eCoachBehaviorScoreTooLow =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachBehaviorScoreTooLow;
  static constexpr EResponse k_eCoachRankNotCalibrated =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankNotCalibrated;
  static constexpr EResponse k_eCoachRankNotEligible =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankNotEligible;
  static constexpr EResponse k_eCoachRankTooLow =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_k_eCoachRankTooLow;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgPrivateCoachingSession coaching_session = 2;
  bool has_coaching_session() const;
  private:
  bool _internal_has_coaching_session() const;
  public:
  void clear_coaching_session();
  const ::CMsgPrivateCoachingSession& coaching_session() const;
  ::CMsgPrivateCoachingSession* release_coaching_session();
  ::CMsgPrivateCoachingSession* mutable_coaching_session();
  void set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session);
  private:
  const ::CMsgPrivateCoachingSession& _internal_coaching_session() const;
  ::CMsgPrivateCoachingSession* _internal_mutable_coaching_session();
  public:
  void unsafe_arena_set_allocated_coaching_session(
      ::CMsgPrivateCoachingSession* coaching_session);
  ::CMsgPrivateCoachingSession* unsafe_arena_release_coaching_session();

  // optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse result() const;
  void set_result(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse value);
  private:
  ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCAcceptPrivateCoachingSessionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPrivateCoachingSession* coaching_session_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeavePrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeavePrivateCoachingSession) */ {
 public:
  inline CMsgClientToGCLeavePrivateCoachingSession() : CMsgClientToGCLeavePrivateCoachingSession(nullptr) {}
  virtual ~CMsgClientToGCLeavePrivateCoachingSession();
  explicit constexpr CMsgClientToGCLeavePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeavePrivateCoachingSession(const CMsgClientToGCLeavePrivateCoachingSession& from);
  CMsgClientToGCLeavePrivateCoachingSession(CMsgClientToGCLeavePrivateCoachingSession&& from) noexcept
    : CMsgClientToGCLeavePrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeavePrivateCoachingSession& operator=(const CMsgClientToGCLeavePrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeavePrivateCoachingSession& operator=(CMsgClientToGCLeavePrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCLeavePrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeavePrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeavePrivateCoachingSession*>(
               &_CMsgClientToGCLeavePrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(CMsgClientToGCLeavePrivateCoachingSession& a, CMsgClientToGCLeavePrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeavePrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeavePrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCLeavePrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgClientToGCLeavePrivateCoachingSession>(nullptr);
  }

  CMsgClientToGCLeavePrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCLeavePrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCLeavePrivateCoachingSession& from);
  void MergeFrom(const CMsgClientToGCLeavePrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLeavePrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeavePrivateCoachingSession";
  }
  protected:
  explicit CMsgClientToGCLeavePrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeavePrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCLeavePrivateCoachingSessionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCLeavePrivateCoachingSessionResponse) */ {
 public:
  inline CMsgClientToGCLeavePrivateCoachingSessionResponse() : CMsgClientToGCLeavePrivateCoachingSessionResponse(nullptr) {}
  virtual ~CMsgClientToGCLeavePrivateCoachingSessionResponse();
  explicit constexpr CMsgClientToGCLeavePrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCLeavePrivateCoachingSessionResponse(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from);
  CMsgClientToGCLeavePrivateCoachingSessionResponse(CMsgClientToGCLeavePrivateCoachingSessionResponse&& from) noexcept
    : CMsgClientToGCLeavePrivateCoachingSessionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCLeavePrivateCoachingSessionResponse& operator=(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCLeavePrivateCoachingSessionResponse& operator=(CMsgClientToGCLeavePrivateCoachingSessionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCLeavePrivateCoachingSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCLeavePrivateCoachingSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCLeavePrivateCoachingSessionResponse*>(
               &_CMsgClientToGCLeavePrivateCoachingSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(CMsgClientToGCLeavePrivateCoachingSessionResponse& a, CMsgClientToGCLeavePrivateCoachingSessionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCLeavePrivateCoachingSessionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCLeavePrivateCoachingSessionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCLeavePrivateCoachingSessionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCLeavePrivateCoachingSessionResponse>(nullptr);
  }

  CMsgClientToGCLeavePrivateCoachingSessionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCLeavePrivateCoachingSessionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from);
  void MergeFrom(const CMsgClientToGCLeavePrivateCoachingSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCLeavePrivateCoachingSessionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCLeavePrivateCoachingSessionResponse";
  }
  protected:
  explicit CMsgClientToGCLeavePrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eNoSession =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eNoSession;
  static constexpr EResponse k_eAlreadyLeft =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_k_eAlreadyLeft;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse result() const;
  void set_result(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse value);
  private:
  ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCLeavePrivateCoachingSessionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetCurrentPrivateCoachingSession PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetCurrentPrivateCoachingSession) */ {
 public:
  inline CMsgClientToGCGetCurrentPrivateCoachingSession() : CMsgClientToGCGetCurrentPrivateCoachingSession(nullptr) {}
  virtual ~CMsgClientToGCGetCurrentPrivateCoachingSession();
  explicit constexpr CMsgClientToGCGetCurrentPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetCurrentPrivateCoachingSession(const CMsgClientToGCGetCurrentPrivateCoachingSession& from);
  CMsgClientToGCGetCurrentPrivateCoachingSession(CMsgClientToGCGetCurrentPrivateCoachingSession&& from) noexcept
    : CMsgClientToGCGetCurrentPrivateCoachingSession() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetCurrentPrivateCoachingSession& operator=(const CMsgClientToGCGetCurrentPrivateCoachingSession& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetCurrentPrivateCoachingSession& operator=(CMsgClientToGCGetCurrentPrivateCoachingSession&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetCurrentPrivateCoachingSession& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetCurrentPrivateCoachingSession* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetCurrentPrivateCoachingSession*>(
               &_CMsgClientToGCGetCurrentPrivateCoachingSession_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(CMsgClientToGCGetCurrentPrivateCoachingSession& a, CMsgClientToGCGetCurrentPrivateCoachingSession& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetCurrentPrivateCoachingSession* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetCurrentPrivateCoachingSession* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetCurrentPrivateCoachingSession* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetCurrentPrivateCoachingSession>(nullptr);
  }

  CMsgClientToGCGetCurrentPrivateCoachingSession* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetCurrentPrivateCoachingSession>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetCurrentPrivateCoachingSession& from);
  void MergeFrom(const CMsgClientToGCGetCurrentPrivateCoachingSession& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetCurrentPrivateCoachingSession* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetCurrentPrivateCoachingSession";
  }
  protected:
  explicit CMsgClientToGCGetCurrentPrivateCoachingSession(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetCurrentPrivateCoachingSession)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetCurrentPrivateCoachingSessionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse) */ {
 public:
  inline CMsgClientToGCGetCurrentPrivateCoachingSessionResponse() : CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(nullptr) {}
  virtual ~CMsgClientToGCGetCurrentPrivateCoachingSessionResponse();
  explicit constexpr CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from);
  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse&& from) noexcept
    : CMsgClientToGCGetCurrentPrivateCoachingSessionResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& operator=(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& operator=(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse*>(
               &_CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& a, CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>(nullptr);
  }

  CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetCurrentPrivateCoachingSessionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from);
  void MergeFrom(const CMsgClientToGCGetCurrentPrivateCoachingSessionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetCurrentPrivateCoachingSessionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetCurrentPrivateCoachingSessionResponse";
  }
  protected:
  explicit CMsgClientToGCGetCurrentPrivateCoachingSessionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_k_eTimeout;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentSessionFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgPrivateCoachingSession current_session = 2;
  bool has_current_session() const;
  private:
  bool _internal_has_current_session() const;
  public:
  void clear_current_session();
  const ::CMsgPrivateCoachingSession& current_session() const;
  ::CMsgPrivateCoachingSession* release_current_session();
  ::CMsgPrivateCoachingSession* mutable_current_session();
  void set_allocated_current_session(::CMsgPrivateCoachingSession* current_session);
  private:
  const ::CMsgPrivateCoachingSession& _internal_current_session() const;
  ::CMsgPrivateCoachingSession* _internal_mutable_current_session();
  public:
  void unsafe_arena_set_allocated_current_session(
      ::CMsgPrivateCoachingSession* current_session);
  ::CMsgPrivateCoachingSession* unsafe_arena_release_current_session();

  // optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse result() const;
  void set_result(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse value);
  private:
  ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPrivateCoachingSession* current_session_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgGCToClientPrivateCoachingSessionUpdated PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgGCToClientPrivateCoachingSessionUpdated) */ {
 public:
  inline CMsgGCToClientPrivateCoachingSessionUpdated() : CMsgGCToClientPrivateCoachingSessionUpdated(nullptr) {}
  virtual ~CMsgGCToClientPrivateCoachingSessionUpdated();
  explicit constexpr CMsgGCToClientPrivateCoachingSessionUpdated(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgGCToClientPrivateCoachingSessionUpdated(const CMsgGCToClientPrivateCoachingSessionUpdated& from);
  CMsgGCToClientPrivateCoachingSessionUpdated(CMsgGCToClientPrivateCoachingSessionUpdated&& from) noexcept
    : CMsgGCToClientPrivateCoachingSessionUpdated() {
    *this = ::std::move(from);
  }

  inline CMsgGCToClientPrivateCoachingSessionUpdated& operator=(const CMsgGCToClientPrivateCoachingSessionUpdated& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgGCToClientPrivateCoachingSessionUpdated& operator=(CMsgGCToClientPrivateCoachingSessionUpdated&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgGCToClientPrivateCoachingSessionUpdated& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgGCToClientPrivateCoachingSessionUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPrivateCoachingSessionUpdated*>(
               &_CMsgGCToClientPrivateCoachingSessionUpdated_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(CMsgGCToClientPrivateCoachingSessionUpdated& a, CMsgGCToClientPrivateCoachingSessionUpdated& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgGCToClientPrivateCoachingSessionUpdated* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgGCToClientPrivateCoachingSessionUpdated* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPrivateCoachingSessionUpdated* New() const final {
    return CreateMaybeMessage<CMsgGCToClientPrivateCoachingSessionUpdated>(nullptr);
  }

  CMsgGCToClientPrivateCoachingSessionUpdated* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgGCToClientPrivateCoachingSessionUpdated>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgGCToClientPrivateCoachingSessionUpdated& from);
  void MergeFrom(const CMsgGCToClientPrivateCoachingSessionUpdated& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgGCToClientPrivateCoachingSessionUpdated* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgGCToClientPrivateCoachingSessionUpdated";
  }
  protected:
  explicit CMsgGCToClientPrivateCoachingSessionUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionFieldNumber = 1,
  };
  // optional .CMsgPrivateCoachingSession coaching_session = 1;
  bool has_coaching_session() const;
  private:
  bool _internal_has_coaching_session() const;
  public:
  void clear_coaching_session();
  const ::CMsgPrivateCoachingSession& coaching_session() const;
  ::CMsgPrivateCoachingSession* release_coaching_session();
  ::CMsgPrivateCoachingSession* mutable_coaching_session();
  void set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session);
  private:
  const ::CMsgPrivateCoachingSession& _internal_coaching_session() const;
  ::CMsgPrivateCoachingSession* _internal_mutable_coaching_session();
  public:
  void unsafe_arena_set_allocated_coaching_session(
      ::CMsgPrivateCoachingSession* coaching_session);
  ::CMsgPrivateCoachingSession* unsafe_arena_release_coaching_session();

  // @@protoc_insertion_point(class_scope:CMsgGCToClientPrivateCoachingSessionUpdated)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgPrivateCoachingSession* coaching_session_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitPrivateCoachingSessionRating PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitPrivateCoachingSessionRating) */ {
 public:
  inline CMsgClientToGCSubmitPrivateCoachingSessionRating() : CMsgClientToGCSubmitPrivateCoachingSessionRating(nullptr) {}
  virtual ~CMsgClientToGCSubmitPrivateCoachingSessionRating();
  explicit constexpr CMsgClientToGCSubmitPrivateCoachingSessionRating(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitPrivateCoachingSessionRating(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from);
  CMsgClientToGCSubmitPrivateCoachingSessionRating(CMsgClientToGCSubmitPrivateCoachingSessionRating&& from) noexcept
    : CMsgClientToGCSubmitPrivateCoachingSessionRating() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitPrivateCoachingSessionRating& operator=(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitPrivateCoachingSessionRating& operator=(CMsgClientToGCSubmitPrivateCoachingSessionRating&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSubmitPrivateCoachingSessionRating& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitPrivateCoachingSessionRating* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitPrivateCoachingSessionRating*>(
               &_CMsgClientToGCSubmitPrivateCoachingSessionRating_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(CMsgClientToGCSubmitPrivateCoachingSessionRating& a, CMsgClientToGCSubmitPrivateCoachingSessionRating& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitPrivateCoachingSessionRating* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitPrivateCoachingSessionRating* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSubmitPrivateCoachingSessionRating* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPrivateCoachingSessionRating>(nullptr);
  }

  CMsgClientToGCSubmitPrivateCoachingSessionRating* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPrivateCoachingSessionRating>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from);
  void MergeFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRating& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRating* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitPrivateCoachingSessionRating";
  }
  protected:
  explicit CMsgClientToGCSubmitPrivateCoachingSessionRating(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionIdFieldNumber = 1,
    kSessionRatingFieldNumber = 2,
  };
  // optional uint64 coaching_session_id = 1;
  bool has_coaching_session_id() const;
  private:
  bool _internal_has_coaching_session_id() const;
  public:
  void clear_coaching_session_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 coaching_session_id() const;
  void set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_coaching_session_id() const;
  void _internal_set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
  bool has_session_rating() const;
  private:
  bool _internal_has_session_rating() const;
  public:
  void clear_session_rating();
  ::ECoachTeammateRating session_rating() const;
  void set_session_rating(::ECoachTeammateRating value);
  private:
  ::ECoachTeammateRating _internal_session_rating() const;
  void _internal_set_session_rating(::ECoachTeammateRating value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitPrivateCoachingSessionRating)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 coaching_session_id_;
  int session_rating_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse) */ {
 public:
  inline CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse() : CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(nullptr) {}
  virtual ~CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse();
  explicit constexpr CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from);
  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse&& from) noexcept
    : CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& operator=(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& operator=(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse*>(
               &_CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& a, CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>(nullptr);
  }

  CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from);
  void MergeFrom(const CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse";
  }
  protected:
  explicit CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eUnknownSession =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eUnknownSession;
  static constexpr EResponse k_eNotMember =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eNotMember;
  static constexpr EResponse k_eAlreadySubmitted =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eAlreadySubmitted;
  static constexpr EResponse k_eSessionActive =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSessionActive;
  static constexpr EResponse k_eSessionTooShort =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eSessionTooShort;
  static constexpr EResponse k_eNoCoach =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eNoCoach;
  static constexpr EResponse k_eInvalidRating =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_k_eInvalidRating;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse result() const;
  void set_result(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse value);
  private:
  ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAvailablePrivateCoachingSessions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAvailablePrivateCoachingSessions) */ {
 public:
  inline CMsgClientToGCGetAvailablePrivateCoachingSessions() : CMsgClientToGCGetAvailablePrivateCoachingSessions(nullptr) {}
  virtual ~CMsgClientToGCGetAvailablePrivateCoachingSessions();
  explicit constexpr CMsgClientToGCGetAvailablePrivateCoachingSessions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAvailablePrivateCoachingSessions(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from);
  CMsgClientToGCGetAvailablePrivateCoachingSessions(CMsgClientToGCGetAvailablePrivateCoachingSessions&& from) noexcept
    : CMsgClientToGCGetAvailablePrivateCoachingSessions() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAvailablePrivateCoachingSessions& operator=(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAvailablePrivateCoachingSessions& operator=(CMsgClientToGCGetAvailablePrivateCoachingSessions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetAvailablePrivateCoachingSessions& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAvailablePrivateCoachingSessions* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessions*>(
               &_CMsgClientToGCGetAvailablePrivateCoachingSessions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(CMsgClientToGCGetAvailablePrivateCoachingSessions& a, CMsgClientToGCGetAvailablePrivateCoachingSessions& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAvailablePrivateCoachingSessions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAvailablePrivateCoachingSessions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAvailablePrivateCoachingSessions* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessions>(nullptr);
  }

  CMsgClientToGCGetAvailablePrivateCoachingSessions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from);
  void MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAvailablePrivateCoachingSessions";
  }
  protected:
  explicit CMsgClientToGCGetAvailablePrivateCoachingSessions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLanguageFieldNumber = 1,
  };
  // optional uint32 language = 1;
  bool has_language() const;
  private:
  bool _internal_has_language() const;
  public:
  void clear_language();
  ::PROTOBUF_NAMESPACE_ID::uint32 language() const;
  void set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_language() const;
  void _internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAvailablePrivateCoachingSessions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 language_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse) */ {
 public:
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse() : CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(nullptr) {}
  virtual ~CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse();
  explicit constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from);
  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse&& from) noexcept
    : CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& operator=(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& operator=(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse*>(
               &_CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& a, CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>(nullptr);
  }

  CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from);
  void MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse";
  }
  protected:
  explicit CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_k_eTimeout;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kAvailableSessionsListFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
  bool has_available_sessions_list() const;
  private:
  bool _internal_has_available_sessions_list() const;
  public:
  void clear_available_sessions_list();
  const ::CMsgAvailablePrivateCoachingSessionList& available_sessions_list() const;
  ::CMsgAvailablePrivateCoachingSessionList* release_available_sessions_list();
  ::CMsgAvailablePrivateCoachingSessionList* mutable_available_sessions_list();
  void set_allocated_available_sessions_list(::CMsgAvailablePrivateCoachingSessionList* available_sessions_list);
  private:
  const ::CMsgAvailablePrivateCoachingSessionList& _internal_available_sessions_list() const;
  ::CMsgAvailablePrivateCoachingSessionList* _internal_mutable_available_sessions_list();
  public:
  void unsafe_arena_set_allocated_available_sessions_list(
      ::CMsgAvailablePrivateCoachingSessionList* available_sessions_list);
  ::CMsgAvailablePrivateCoachingSessionList* unsafe_arena_release_available_sessions_list();

  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse result() const;
  void set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse value);
  private:
  ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgAvailablePrivateCoachingSessionList* available_sessions_list_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary) */ {
 public:
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary() : CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(nullptr) {}
  virtual ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary();
  explicit constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from);
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary&& from) noexcept
    : CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& operator=(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& operator=(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary*>(
               &_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& a, CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary>(nullptr);
  }

  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from);
  void MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary";
  }
  protected:
  explicit CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse) */ {
 public:
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse() : CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(nullptr) {}
  virtual ~CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse();
  explicit constexpr CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from);
  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse&& from) noexcept
    : CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& operator=(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& operator=(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse*>(
               &_CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& a, CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>(nullptr);
  }

  CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from);
  void MergeFrom(const CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse";
  }
  protected:
  explicit CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_k_eTimeout;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kCoachingSessionSummaryFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
  bool has_coaching_session_summary() const;
  private:
  bool _internal_has_coaching_session_summary() const;
  public:
  void clear_coaching_session_summary();
  const ::CMsgAvailablePrivateCoachingSessionSummary& coaching_session_summary() const;
  ::CMsgAvailablePrivateCoachingSessionSummary* release_coaching_session_summary();
  ::CMsgAvailablePrivateCoachingSessionSummary* mutable_coaching_session_summary();
  void set_allocated_coaching_session_summary(::CMsgAvailablePrivateCoachingSessionSummary* coaching_session_summary);
  private:
  const ::CMsgAvailablePrivateCoachingSessionSummary& _internal_coaching_session_summary() const;
  ::CMsgAvailablePrivateCoachingSessionSummary* _internal_mutable_coaching_session_summary();
  public:
  void unsafe_arena_set_allocated_coaching_session_summary(
      ::CMsgAvailablePrivateCoachingSessionSummary* coaching_session_summary);
  ::CMsgAvailablePrivateCoachingSessionSummary* unsafe_arena_release_coaching_session_summary();

  // optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse result() const;
  void set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse value);
  private:
  ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::CMsgAvailablePrivateCoachingSessionSummary* coaching_session_summary_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPrivateCoachingSessionLobby PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCJoinPrivateCoachingSessionLobby) */ {
 public:
  inline CMsgClientToGCJoinPrivateCoachingSessionLobby() : CMsgClientToGCJoinPrivateCoachingSessionLobby(nullptr) {}
  virtual ~CMsgClientToGCJoinPrivateCoachingSessionLobby();
  explicit constexpr CMsgClientToGCJoinPrivateCoachingSessionLobby(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCJoinPrivateCoachingSessionLobby(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from);
  CMsgClientToGCJoinPrivateCoachingSessionLobby(CMsgClientToGCJoinPrivateCoachingSessionLobby&& from) noexcept
    : CMsgClientToGCJoinPrivateCoachingSessionLobby() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinPrivateCoachingSessionLobby& operator=(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCJoinPrivateCoachingSessionLobby& operator=(CMsgClientToGCJoinPrivateCoachingSessionLobby&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCJoinPrivateCoachingSessionLobby& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCJoinPrivateCoachingSessionLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPrivateCoachingSessionLobby*>(
               &_CMsgClientToGCJoinPrivateCoachingSessionLobby_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(CMsgClientToGCJoinPrivateCoachingSessionLobby& a, CMsgClientToGCJoinPrivateCoachingSessionLobby& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCJoinPrivateCoachingSessionLobby* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCJoinPrivateCoachingSessionLobby* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPrivateCoachingSessionLobby* New() const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPrivateCoachingSessionLobby>(nullptr);
  }

  CMsgClientToGCJoinPrivateCoachingSessionLobby* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPrivateCoachingSessionLobby>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from);
  void MergeFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobby& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinPrivateCoachingSessionLobby* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCJoinPrivateCoachingSessionLobby";
  }
  protected:
  explicit CMsgClientToGCJoinPrivateCoachingSessionLobby(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinPrivateCoachingSessionLobby)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse) */ {
 public:
  inline CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse() : CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(nullptr) {}
  virtual ~CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse();
  explicit constexpr CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from);
  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse&& from) noexcept
    : CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& operator=(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& operator=(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse*>(
               &_CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& a, CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>(nullptr);
  }

  CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from);
  void MergeFrom(const CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse";
  }
  protected:
  explicit CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eNoSession =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNoSession;
  static constexpr EResponse k_eSessionFinished =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eSessionFinished;
  static constexpr EResponse k_eAlreadyLeft =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eAlreadyLeft;
  static constexpr EResponse k_eNotACoach =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNotACoach;
  static constexpr EResponse k_eNoLobby =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eNoLobby;
  static constexpr EResponse k_eCoachInThisLobby =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachInThisLobby;
  static constexpr EResponse k_eCoachInALobby =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachInALobby;
  static constexpr EResponse k_eLobbyIsLan =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eLobbyIsLan;
  static constexpr EResponse k_eLobbyIsLeague =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eLobbyIsLeague;
  static constexpr EResponse k_eInvalidLobbyType =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInvalidLobbyType;
  static constexpr EResponse k_eInvalidLobbyState =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eInvalidLobbyState;
  static constexpr EResponse k_eRequesterIsNotPlayer =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eRequesterIsNotPlayer;
  static constexpr EResponse k_eTooManyCoaches =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eTooManyCoaches;
  static constexpr EResponse k_eCoachWasPlayer =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eCoachWasPlayer;
  static constexpr EResponse k_eJoinFailed =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_k_eJoinFailed;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse result() const;
  void set_result(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse value);
  private:
  ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCoachFriend PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCoachFriend) */ {
 public:
  inline CMsgClientToGCCoachFriend() : CMsgClientToGCCoachFriend(nullptr) {}
  virtual ~CMsgClientToGCCoachFriend();
  explicit constexpr CMsgClientToGCCoachFriend(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCoachFriend(const CMsgClientToGCCoachFriend& from);
  CMsgClientToGCCoachFriend(CMsgClientToGCCoachFriend&& from) noexcept
    : CMsgClientToGCCoachFriend() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCoachFriend& operator=(const CMsgClientToGCCoachFriend& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCoachFriend& operator=(CMsgClientToGCCoachFriend&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCCoachFriend& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCoachFriend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCoachFriend*>(
               &_CMsgClientToGCCoachFriend_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(CMsgClientToGCCoachFriend& a, CMsgClientToGCCoachFriend& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCoachFriend* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCoachFriend* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCoachFriend* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCoachFriend>(nullptr);
  }

  CMsgClientToGCCoachFriend* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCoachFriend>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCCoachFriend& from);
  void MergeFrom(const CMsgClientToGCCoachFriend& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCoachFriend* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCoachFriend";
  }
  protected:
  explicit CMsgClientToGCCoachFriend(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTargetAccountIdFieldNumber = 1,
  };
  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  private:
  bool _internal_has_target_account_id() const;
  public:
  void clear_target_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 target_account_id() const;
  void set_target_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_target_account_id() const;
  void _internal_set_target_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCoachFriend)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 target_account_id_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCCoachFriendResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCCoachFriendResponse) */ {
 public:
  inline CMsgClientToGCCoachFriendResponse() : CMsgClientToGCCoachFriendResponse(nullptr) {}
  virtual ~CMsgClientToGCCoachFriendResponse();
  explicit constexpr CMsgClientToGCCoachFriendResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCCoachFriendResponse(const CMsgClientToGCCoachFriendResponse& from);
  CMsgClientToGCCoachFriendResponse(CMsgClientToGCCoachFriendResponse&& from) noexcept
    : CMsgClientToGCCoachFriendResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCCoachFriendResponse& operator=(const CMsgClientToGCCoachFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCCoachFriendResponse& operator=(CMsgClientToGCCoachFriendResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCCoachFriendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCCoachFriendResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCoachFriendResponse*>(
               &_CMsgClientToGCCoachFriendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(CMsgClientToGCCoachFriendResponse& a, CMsgClientToGCCoachFriendResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCCoachFriendResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCCoachFriendResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCoachFriendResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCCoachFriendResponse>(nullptr);
  }

  CMsgClientToGCCoachFriendResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCCoachFriendResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCCoachFriendResponse& from);
  void MergeFrom(const CMsgClientToGCCoachFriendResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCCoachFriendResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCCoachFriendResponse";
  }
  protected:
  explicit CMsgClientToGCCoachFriendResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCoachFriendResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eCoachNotSubscriber =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachNotSubscriber;
  static constexpr EResponse k_eLobbyNotFound =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyNotFound;
  static constexpr EResponse k_eFriendsOnBothSides =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eFriendsOnBothSides;
  static constexpr EResponse k_eNotFriends =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eNotFriends;
  static constexpr EResponse k_eCoachInThisLobby =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachInThisLobby;
  static constexpr EResponse k_eCoachInALobby =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachInALobby;
  static constexpr EResponse k_eLobbyIsLan =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyIsLan;
  static constexpr EResponse k_eInvalidLobbyType =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eInvalidLobbyType;
  static constexpr EResponse k_eInvalidLobbyState =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eInvalidLobbyState;
  static constexpr EResponse k_eFriendIsNotAPlayer =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eFriendIsNotAPlayer;
  static constexpr EResponse k_eTooManyCoaches =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eTooManyCoaches;
  static constexpr EResponse k_eCoachSwitchedTeams =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachSwitchedTeams;
  static constexpr EResponse k_eLobbyIsLeague =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eLobbyIsLeague;
  static constexpr EResponse k_eCoachWasPlayer =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eCoachWasPlayer;
  static constexpr EResponse k_eRequestRejected =
    CMsgClientToGCCoachFriendResponse_EResponse_k_eRequestRejected;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCCoachFriendResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCCoachFriendResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCCoachFriendResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCCoachFriendResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCCoachFriendResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCCoachFriendResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCCoachFriendResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCCoachFriendResponse_EResponse result() const;
  void set_result(::CMsgClientToGCCoachFriendResponse_EResponse value);
  private:
  ::CMsgClientToGCCoachFriendResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCCoachFriendResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCCoachFriendResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRespondToCoachFriendRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRespondToCoachFriendRequest) */ {
 public:
  inline CMsgClientToGCRespondToCoachFriendRequest() : CMsgClientToGCRespondToCoachFriendRequest(nullptr) {}
  virtual ~CMsgClientToGCRespondToCoachFriendRequest();
  explicit constexpr CMsgClientToGCRespondToCoachFriendRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRespondToCoachFriendRequest(const CMsgClientToGCRespondToCoachFriendRequest& from);
  CMsgClientToGCRespondToCoachFriendRequest(CMsgClientToGCRespondToCoachFriendRequest&& from) noexcept
    : CMsgClientToGCRespondToCoachFriendRequest() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRespondToCoachFriendRequest& operator=(const CMsgClientToGCRespondToCoachFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRespondToCoachFriendRequest& operator=(CMsgClientToGCRespondToCoachFriendRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRespondToCoachFriendRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRespondToCoachFriendRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRespondToCoachFriendRequest*>(
               &_CMsgClientToGCRespondToCoachFriendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(CMsgClientToGCRespondToCoachFriendRequest& a, CMsgClientToGCRespondToCoachFriendRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRespondToCoachFriendRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRespondToCoachFriendRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRespondToCoachFriendRequest* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRespondToCoachFriendRequest>(nullptr);
  }

  CMsgClientToGCRespondToCoachFriendRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRespondToCoachFriendRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRespondToCoachFriendRequest& from);
  void MergeFrom(const CMsgClientToGCRespondToCoachFriendRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRespondToCoachFriendRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRespondToCoachFriendRequest";
  }
  protected:
  explicit CMsgClientToGCRespondToCoachFriendRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCoachAccountIdFieldNumber = 1,
    kResponseFieldNumber = 2,
  };
  // optional uint32 coach_account_id = 1;
  bool has_coach_account_id() const;
  private:
  bool _internal_has_coach_account_id() const;
  public:
  void clear_coach_account_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_account_id() const;
  void set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_coach_account_id() const;
  void _internal_set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
  bool has_response() const;
  private:
  bool _internal_has_response() const;
  public:
  void clear_response();
  ::ELobbyMemberCoachRequestState response() const;
  void set_response(::ELobbyMemberCoachRequestState value);
  private:
  ::ELobbyMemberCoachRequestState _internal_response() const;
  void _internal_set_response(::ELobbyMemberCoachRequestState value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRespondToCoachFriendRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 coach_account_id_;
  int response_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// -------------------------------------------------------------------

class CMsgClientToGCRespondToCoachFriendRequestResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMsgClientToGCRespondToCoachFriendRequestResponse) */ {
 public:
  inline CMsgClientToGCRespondToCoachFriendRequestResponse() : CMsgClientToGCRespondToCoachFriendRequestResponse(nullptr) {}
  virtual ~CMsgClientToGCRespondToCoachFriendRequestResponse();
  explicit constexpr CMsgClientToGCRespondToCoachFriendRequestResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CMsgClientToGCRespondToCoachFriendRequestResponse(const CMsgClientToGCRespondToCoachFriendRequestResponse& from);
  CMsgClientToGCRespondToCoachFriendRequestResponse(CMsgClientToGCRespondToCoachFriendRequestResponse&& from) noexcept
    : CMsgClientToGCRespondToCoachFriendRequestResponse() {
    *this = ::std::move(from);
  }

  inline CMsgClientToGCRespondToCoachFriendRequestResponse& operator=(const CMsgClientToGCRespondToCoachFriendRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CMsgClientToGCRespondToCoachFriendRequestResponse& operator=(CMsgClientToGCRespondToCoachFriendRequestResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CMsgClientToGCRespondToCoachFriendRequestResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CMsgClientToGCRespondToCoachFriendRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRespondToCoachFriendRequestResponse*>(
               &_CMsgClientToGCRespondToCoachFriendRequestResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(CMsgClientToGCRespondToCoachFriendRequestResponse& a, CMsgClientToGCRespondToCoachFriendRequestResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CMsgClientToGCRespondToCoachFriendRequestResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CMsgClientToGCRespondToCoachFriendRequestResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRespondToCoachFriendRequestResponse* New() const final {
    return CreateMaybeMessage<CMsgClientToGCRespondToCoachFriendRequestResponse>(nullptr);
  }

  CMsgClientToGCRespondToCoachFriendRequestResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CMsgClientToGCRespondToCoachFriendRequestResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CMsgClientToGCRespondToCoachFriendRequestResponse& from);
  void MergeFrom(const CMsgClientToGCRespondToCoachFriendRequestResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CMsgClientToGCRespondToCoachFriendRequestResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMsgClientToGCRespondToCoachFriendRequestResponse";
  }
  protected:
  explicit CMsgClientToGCRespondToCoachFriendRequestResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_dota_5fgcmessages_5fclient_5fcoaching_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse EResponse;
  static constexpr EResponse k_eInternalError =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInternalError;
  static constexpr EResponse k_eSuccess =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eSuccess;
  static constexpr EResponse k_eTooBusy =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eTooBusy;
  static constexpr EResponse k_eDisabled =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eDisabled;
  static constexpr EResponse k_eTimeout =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eTimeout;
  static constexpr EResponse k_eLobbyNotFound =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eLobbyNotFound;
  static constexpr EResponse k_eInvalidLobbyState =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInvalidLobbyState;
  static constexpr EResponse k_eCoachNotInLobby =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eCoachNotInLobby;
  static constexpr EResponse k_ePlayerInvalidTeam =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_ePlayerInvalidTeam;
  static constexpr EResponse k_eCoachInvalidTeam =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eCoachInvalidTeam;
  static constexpr EResponse k_eNoRequest =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eNoRequest;
  static constexpr EResponse k_eInvalidResponse =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eInvalidResponse;
  static constexpr EResponse k_eAlreadyResponded =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_k_eAlreadyResponded;
  static inline bool EResponse_IsValid(int value) {
    return CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(value);
  }
  static constexpr EResponse EResponse_MIN =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_MIN;
  static constexpr EResponse EResponse_MAX =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_MAX;
  static constexpr int EResponse_ARRAYSIZE =
    CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_EResponse_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  EResponse_descriptor() {
    return CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor();
  }
  template<typename T>
  static inline const std::string& EResponse_Name(T enum_t_value) {
    static_assert(::std::is_same<T, EResponse>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function EResponse_Name.");
    return CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_Name(enum_t_value);
  }
  static inline bool EResponse_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      EResponse* value) {
    return CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
  bool has_result() const;
  private:
  bool _internal_has_result() const;
  public:
  void clear_result();
  ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse result() const;
  void set_result(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse value);
  private:
  ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse _internal_result() const;
  void _internal_set_result(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse value);
  public:

  // @@protoc_insertion_point(class_scope:CMsgClientToGCRespondToCoachFriendRequestResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int result_;
  friend struct ::TableStruct_dota_5fgcmessages_5fclient_5fcoaching_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CMsgPlayerCoachMatch

// optional uint64 match_id = 1;
inline bool CMsgPlayerCoachMatch::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgPlayerCoachMatch::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPlayerCoachMatch::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPlayerCoachMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.match_id)
  return _internal_match_id();
}
inline void CMsgPlayerCoachMatch::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
}
inline void CMsgPlayerCoachMatch::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.match_id)
}

// optional .EMatchOutcome match_outcome = 2 [default = k_EMatchOutcome_Unknown];
inline bool CMsgPlayerCoachMatch::_internal_has_match_outcome() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_match_outcome() const {
  return _internal_has_match_outcome();
}
inline void CMsgPlayerCoachMatch::clear_match_outcome() {
  match_outcome_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::EMatchOutcome CMsgPlayerCoachMatch::_internal_match_outcome() const {
  return static_cast< ::EMatchOutcome >(match_outcome_);
}
inline ::EMatchOutcome CMsgPlayerCoachMatch::match_outcome() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.match_outcome)
  return _internal_match_outcome();
}
inline void CMsgPlayerCoachMatch::_internal_set_match_outcome(::EMatchOutcome value) {
  assert(::EMatchOutcome_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  match_outcome_ = value;
}
inline void CMsgPlayerCoachMatch::set_match_outcome(::EMatchOutcome value) {
  _internal_set_match_outcome(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.match_outcome)
}

// optional uint32 coached_team = 3;
inline bool CMsgPlayerCoachMatch::_internal_has_coached_team() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_coached_team() const {
  return _internal_has_coached_team();
}
inline void CMsgPlayerCoachMatch::clear_coached_team() {
  coached_team_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::_internal_coached_team() const {
  return coached_team_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::coached_team() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.coached_team)
  return _internal_coached_team();
}
inline void CMsgPlayerCoachMatch::_internal_set_coached_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  coached_team_ = value;
}
inline void CMsgPlayerCoachMatch::set_coached_team(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coached_team(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.coached_team)
}

// optional fixed32 start_time = 4;
inline bool CMsgPlayerCoachMatch::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_start_time() const {
  return _internal_has_start_time();
}
inline void CMsgPlayerCoachMatch::clear_start_time() {
  start_time_ = 0u;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::_internal_start_time() const {
  return start_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::start_time() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.start_time)
  return _internal_start_time();
}
inline void CMsgPlayerCoachMatch::_internal_set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000008u;
  start_time_ = value;
}
inline void CMsgPlayerCoachMatch::set_start_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.start_time)
}

// optional uint32 duration = 5;
inline bool CMsgPlayerCoachMatch::_internal_has_duration() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_duration() const {
  return _internal_has_duration();
}
inline void CMsgPlayerCoachMatch::clear_duration() {
  duration_ = 0u;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::_internal_duration() const {
  return duration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::duration() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.duration)
  return _internal_duration();
}
inline void CMsgPlayerCoachMatch::_internal_set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000010u;
  duration_ = value;
}
inline void CMsgPlayerCoachMatch::set_duration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.duration)
}

// repeated .ECoachTeammateRating teammate_ratings = 6;
inline int CMsgPlayerCoachMatch::_internal_teammate_ratings_size() const {
  return teammate_ratings_.size();
}
inline int CMsgPlayerCoachMatch::teammate_ratings_size() const {
  return _internal_teammate_ratings_size();
}
inline void CMsgPlayerCoachMatch::clear_teammate_ratings() {
  teammate_ratings_.Clear();
}
inline ::ECoachTeammateRating CMsgPlayerCoachMatch::_internal_teammate_ratings(int index) const {
  return static_cast< ::ECoachTeammateRating >(teammate_ratings_.Get(index));
}
inline ::ECoachTeammateRating CMsgPlayerCoachMatch::teammate_ratings(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.teammate_ratings)
  return _internal_teammate_ratings(index);
}
inline void CMsgPlayerCoachMatch::set_teammate_ratings(int index, ::ECoachTeammateRating value) {
  assert(::ECoachTeammateRating_IsValid(value));
  teammate_ratings_.Set(index, value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.teammate_ratings)
}
inline void CMsgPlayerCoachMatch::_internal_add_teammate_ratings(::ECoachTeammateRating value) {
  assert(::ECoachTeammateRating_IsValid(value));
  teammate_ratings_.Add(value);
}
inline void CMsgPlayerCoachMatch::add_teammate_ratings(::ECoachTeammateRating value) {
  // @@protoc_insertion_point(field_add:CMsgPlayerCoachMatch.teammate_ratings)
  _internal_add_teammate_ratings(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
CMsgPlayerCoachMatch::teammate_ratings() const {
  // @@protoc_insertion_point(field_list:CMsgPlayerCoachMatch.teammate_ratings)
  return teammate_ratings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgPlayerCoachMatch::_internal_mutable_teammate_ratings() {
  return &teammate_ratings_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
CMsgPlayerCoachMatch::mutable_teammate_ratings() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPlayerCoachMatch.teammate_ratings)
  return _internal_mutable_teammate_ratings();
}

// optional uint32 coach_flags = 7;
inline bool CMsgPlayerCoachMatch::_internal_has_coach_flags() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgPlayerCoachMatch::has_coach_flags() const {
  return _internal_has_coach_flags();
}
inline void CMsgPlayerCoachMatch::clear_coach_flags() {
  coach_flags_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::_internal_coach_flags() const {
  return coach_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPlayerCoachMatch::coach_flags() const {
  // @@protoc_insertion_point(field_get:CMsgPlayerCoachMatch.coach_flags)
  return _internal_coach_flags();
}
inline void CMsgPlayerCoachMatch::_internal_set_coach_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  coach_flags_ = value;
}
inline void CMsgPlayerCoachMatch::set_coach_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coach_flags(value);
  // @@protoc_insertion_point(field_set:CMsgPlayerCoachMatch.coach_flags)
}

// -------------------------------------------------------------------

// CMsgPrivateCoachingSessionMember

// optional uint32 account_id = 1;
inline bool CMsgPrivateCoachingSessionMember::_internal_has_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSessionMember::has_account_id() const {
  return _internal_has_account_id();
}
inline void CMsgPrivateCoachingSessionMember::clear_account_id() {
  account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionMember::_internal_account_id() const {
  return account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionMember::account_id() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSessionMember.account_id)
  return _internal_account_id();
}
inline void CMsgPrivateCoachingSessionMember::_internal_set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  account_id_ = value;
}
inline void CMsgPrivateCoachingSessionMember::set_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSessionMember.account_id)
}

// optional uint32 member_flags = 2;
inline bool CMsgPrivateCoachingSessionMember::_internal_has_member_flags() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSessionMember::has_member_flags() const {
  return _internal_has_member_flags();
}
inline void CMsgPrivateCoachingSessionMember::clear_member_flags() {
  member_flags_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionMember::_internal_member_flags() const {
  return member_flags_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionMember::member_flags() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSessionMember.member_flags)
  return _internal_member_flags();
}
inline void CMsgPrivateCoachingSessionMember::_internal_set_member_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  member_flags_ = value;
}
inline void CMsgPrivateCoachingSessionMember::set_member_flags(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_member_flags(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSessionMember.member_flags)
}

// optional .ECoachTeammateRating member_session_rating = 3 [default = k_ECoachTeammateRating_None];
inline bool CMsgPrivateCoachingSessionMember::_internal_has_member_session_rating() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSessionMember::has_member_session_rating() const {
  return _internal_has_member_session_rating();
}
inline void CMsgPrivateCoachingSessionMember::clear_member_session_rating() {
  member_session_rating_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::ECoachTeammateRating CMsgPrivateCoachingSessionMember::_internal_member_session_rating() const {
  return static_cast< ::ECoachTeammateRating >(member_session_rating_);
}
inline ::ECoachTeammateRating CMsgPrivateCoachingSessionMember::member_session_rating() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSessionMember.member_session_rating)
  return _internal_member_session_rating();
}
inline void CMsgPrivateCoachingSessionMember::_internal_set_member_session_rating(::ECoachTeammateRating value) {
  assert(::ECoachTeammateRating_IsValid(value));
  _has_bits_[0] |= 0x00000004u;
  member_session_rating_ = value;
}
inline void CMsgPrivateCoachingSessionMember::set_member_session_rating(::ECoachTeammateRating value) {
  _internal_set_member_session_rating(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSessionMember.member_session_rating)
}

// -------------------------------------------------------------------

// CMsgPrivateCoachingSession

// optional uint64 private_coaching_session_id = 1;
inline bool CMsgPrivateCoachingSession::_internal_has_private_coaching_session_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_private_coaching_session_id() const {
  return _internal_has_private_coaching_session_id();
}
inline void CMsgPrivateCoachingSession::clear_private_coaching_session_id() {
  private_coaching_session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::_internal_private_coaching_session_id() const {
  return private_coaching_session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::private_coaching_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.private_coaching_session_id)
  return _internal_private_coaching_session_id();
}
inline void CMsgPrivateCoachingSession::_internal_set_private_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  private_coaching_session_id_ = value;
}
inline void CMsgPrivateCoachingSession::set_private_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_private_coaching_session_id(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.private_coaching_session_id)
}

// optional fixed32 requested_timestamp = 2;
inline bool CMsgPrivateCoachingSession::_internal_has_requested_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_requested_timestamp() const {
  return _internal_has_requested_timestamp();
}
inline void CMsgPrivateCoachingSession::clear_requested_timestamp() {
  requested_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::_internal_requested_timestamp() const {
  return requested_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::requested_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.requested_timestamp)
  return _internal_requested_timestamp();
}
inline void CMsgPrivateCoachingSession::_internal_set_requested_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  requested_timestamp_ = value;
}
inline void CMsgPrivateCoachingSession::set_requested_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requested_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.requested_timestamp)
}

// optional uint32 requested_language = 3;
inline bool CMsgPrivateCoachingSession::_internal_has_requested_language() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_requested_language() const {
  return _internal_has_requested_language();
}
inline void CMsgPrivateCoachingSession::clear_requested_language() {
  requested_language_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::_internal_requested_language() const {
  return requested_language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::requested_language() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.requested_language)
  return _internal_requested_language();
}
inline void CMsgPrivateCoachingSession::_internal_set_requested_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  requested_language_ = value;
}
inline void CMsgPrivateCoachingSession::set_requested_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requested_language(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.requested_language)
}

// optional .EPrivateCoachingSessionState coaching_session_state = 4 [default = k_ePrivateCoachingSessionState_Invalid];
inline bool CMsgPrivateCoachingSession::_internal_has_coaching_session_state() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_coaching_session_state() const {
  return _internal_has_coaching_session_state();
}
inline void CMsgPrivateCoachingSession::clear_coaching_session_state() {
  coaching_session_state_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::EPrivateCoachingSessionState CMsgPrivateCoachingSession::_internal_coaching_session_state() const {
  return static_cast< ::EPrivateCoachingSessionState >(coaching_session_state_);
}
inline ::EPrivateCoachingSessionState CMsgPrivateCoachingSession::coaching_session_state() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.coaching_session_state)
  return _internal_coaching_session_state();
}
inline void CMsgPrivateCoachingSession::_internal_set_coaching_session_state(::EPrivateCoachingSessionState value) {
  assert(::EPrivateCoachingSessionState_IsValid(value));
  _has_bits_[0] |= 0x00000010u;
  coaching_session_state_ = value;
}
inline void CMsgPrivateCoachingSession::set_coaching_session_state(::EPrivateCoachingSessionState value) {
  _internal_set_coaching_session_state(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.coaching_session_state)
}

// repeated .CMsgPrivateCoachingSessionMember session_members = 5;
inline int CMsgPrivateCoachingSession::_internal_session_members_size() const {
  return session_members_.size();
}
inline int CMsgPrivateCoachingSession::session_members_size() const {
  return _internal_session_members_size();
}
inline void CMsgPrivateCoachingSession::clear_session_members() {
  session_members_.Clear();
}
inline ::CMsgPrivateCoachingSessionMember* CMsgPrivateCoachingSession::mutable_session_members(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgPrivateCoachingSession.session_members)
  return session_members_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPrivateCoachingSessionMember >*
CMsgPrivateCoachingSession::mutable_session_members() {
  // @@protoc_insertion_point(field_mutable_list:CMsgPrivateCoachingSession.session_members)
  return &session_members_;
}
inline const ::CMsgPrivateCoachingSessionMember& CMsgPrivateCoachingSession::_internal_session_members(int index) const {
  return session_members_.Get(index);
}
inline const ::CMsgPrivateCoachingSessionMember& CMsgPrivateCoachingSession::session_members(int index) const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.session_members)
  return _internal_session_members(index);
}
inline ::CMsgPrivateCoachingSessionMember* CMsgPrivateCoachingSession::_internal_add_session_members() {
  return session_members_.Add();
}
inline ::CMsgPrivateCoachingSessionMember* CMsgPrivateCoachingSession::add_session_members() {
  // @@protoc_insertion_point(field_add:CMsgPrivateCoachingSession.session_members)
  return _internal_add_session_members();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPrivateCoachingSessionMember >&
CMsgPrivateCoachingSession::session_members() const {
  // @@protoc_insertion_point(field_list:CMsgPrivateCoachingSession.session_members)
  return session_members_;
}

// optional uint64 current_lobby_id = 6;
inline bool CMsgPrivateCoachingSession::_internal_has_current_lobby_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_current_lobby_id() const {
  return _internal_has_current_lobby_id();
}
inline void CMsgPrivateCoachingSession::clear_current_lobby_id() {
  current_lobby_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::_internal_current_lobby_id() const {
  return current_lobby_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::current_lobby_id() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.current_lobby_id)
  return _internal_current_lobby_id();
}
inline void CMsgPrivateCoachingSession::_internal_set_current_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000008u;
  current_lobby_id_ = value;
}
inline void CMsgPrivateCoachingSession::set_current_lobby_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_current_lobby_id(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.current_lobby_id)
}

// optional uint64 current_server_steam_id = 7;
inline bool CMsgPrivateCoachingSession::_internal_has_current_server_steam_id() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_current_server_steam_id() const {
  return _internal_has_current_server_steam_id();
}
inline void CMsgPrivateCoachingSession::clear_current_server_steam_id() {
  current_server_steam_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::_internal_current_server_steam_id() const {
  return current_server_steam_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgPrivateCoachingSession::current_server_steam_id() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.current_server_steam_id)
  return _internal_current_server_steam_id();
}
inline void CMsgPrivateCoachingSession::_internal_set_current_server_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000040u;
  current_server_steam_id_ = value;
}
inline void CMsgPrivateCoachingSession::set_current_server_steam_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_current_server_steam_id(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.current_server_steam_id)
}

// optional fixed32 accepted_timestamp = 8;
inline bool CMsgPrivateCoachingSession::_internal_has_accepted_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_accepted_timestamp() const {
  return _internal_has_accepted_timestamp();
}
inline void CMsgPrivateCoachingSession::clear_accepted_timestamp() {
  accepted_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::_internal_accepted_timestamp() const {
  return accepted_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::accepted_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.accepted_timestamp)
  return _internal_accepted_timestamp();
}
inline void CMsgPrivateCoachingSession::_internal_set_accepted_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000020u;
  accepted_timestamp_ = value;
}
inline void CMsgPrivateCoachingSession::set_accepted_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_accepted_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.accepted_timestamp)
}

// optional fixed32 completed_timestamp = 9;
inline bool CMsgPrivateCoachingSession::_internal_has_completed_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSession::has_completed_timestamp() const {
  return _internal_has_completed_timestamp();
}
inline void CMsgPrivateCoachingSession::clear_completed_timestamp() {
  completed_timestamp_ = 0u;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::_internal_completed_timestamp() const {
  return completed_timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSession::completed_timestamp() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSession.completed_timestamp)
  return _internal_completed_timestamp();
}
inline void CMsgPrivateCoachingSession::_internal_set_completed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000080u;
  completed_timestamp_ = value;
}
inline void CMsgPrivateCoachingSession::set_completed_timestamp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_completed_timestamp(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSession.completed_timestamp)
}

// -------------------------------------------------------------------

// CMsgPrivateCoachingSessionStatus

// optional uint32 requester_competitive_rank_tier = 1;
inline bool CMsgPrivateCoachingSessionStatus::_internal_has_requester_competitive_rank_tier() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSessionStatus::has_requester_competitive_rank_tier() const {
  return _internal_has_requester_competitive_rank_tier();
}
inline void CMsgPrivateCoachingSessionStatus::clear_requester_competitive_rank_tier() {
  requester_competitive_rank_tier_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionStatus::_internal_requester_competitive_rank_tier() const {
  return requester_competitive_rank_tier_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionStatus::requester_competitive_rank_tier() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSessionStatus.requester_competitive_rank_tier)
  return _internal_requester_competitive_rank_tier();
}
inline void CMsgPrivateCoachingSessionStatus::_internal_set_requester_competitive_rank_tier(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  requester_competitive_rank_tier_ = value;
}
inline void CMsgPrivateCoachingSessionStatus::set_requester_competitive_rank_tier(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requester_competitive_rank_tier(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSessionStatus.requester_competitive_rank_tier)
}

// optional uint32 requester_games_played = 2;
inline bool CMsgPrivateCoachingSessionStatus::_internal_has_requester_games_played() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgPrivateCoachingSessionStatus::has_requester_games_played() const {
  return _internal_has_requester_games_played();
}
inline void CMsgPrivateCoachingSessionStatus::clear_requester_games_played() {
  requester_games_played_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionStatus::_internal_requester_games_played() const {
  return requester_games_played_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgPrivateCoachingSessionStatus::requester_games_played() const {
  // @@protoc_insertion_point(field_get:CMsgPrivateCoachingSessionStatus.requester_games_played)
  return _internal_requester_games_played();
}
inline void CMsgPrivateCoachingSessionStatus::_internal_set_requester_games_played(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  requester_games_played_ = value;
}
inline void CMsgPrivateCoachingSessionStatus::set_requester_games_played(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_requester_games_played(value);
  // @@protoc_insertion_point(field_set:CMsgPrivateCoachingSessionStatus.requester_games_played)
}

// -------------------------------------------------------------------

// CMsgAvailablePrivateCoachingSession

// optional .CMsgPrivateCoachingSession coaching_session = 1;
inline bool CMsgAvailablePrivateCoachingSession::_internal_has_coaching_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_ != nullptr);
  return value;
}
inline bool CMsgAvailablePrivateCoachingSession::has_coaching_session() const {
  return _internal_has_coaching_session();
}
inline void CMsgAvailablePrivateCoachingSession::clear_coaching_session() {
  if (coaching_session_ != nullptr) coaching_session_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPrivateCoachingSession& CMsgAvailablePrivateCoachingSession::_internal_coaching_session() const {
  const ::CMsgPrivateCoachingSession* p = coaching_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSession&>(
      ::_CMsgPrivateCoachingSession_default_instance_);
}
inline const ::CMsgPrivateCoachingSession& CMsgAvailablePrivateCoachingSession::coaching_session() const {
  // @@protoc_insertion_point(field_get:CMsgAvailablePrivateCoachingSession.coaching_session)
  return _internal_coaching_session();
}
inline void CMsgAvailablePrivateCoachingSession::unsafe_arena_set_allocated_coaching_session(
    ::CMsgPrivateCoachingSession* coaching_session) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_);
  }
  coaching_session_ = coaching_session;
  if (coaching_session) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgAvailablePrivateCoachingSession.coaching_session)
}
inline ::CMsgPrivateCoachingSession* CMsgAvailablePrivateCoachingSession::release_coaching_session() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgAvailablePrivateCoachingSession::unsafe_arena_release_coaching_session() {
  // @@protoc_insertion_point(field_release:CMsgAvailablePrivateCoachingSession.coaching_session)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgAvailablePrivateCoachingSession::_internal_mutable_coaching_session() {
  _has_bits_[0] |= 0x00000001u;
  if (coaching_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSession>(GetArena());
    coaching_session_ = p;
  }
  return coaching_session_;
}
inline ::CMsgPrivateCoachingSession* CMsgAvailablePrivateCoachingSession::mutable_coaching_session() {
  // @@protoc_insertion_point(field_mutable:CMsgAvailablePrivateCoachingSession.coaching_session)
  return _internal_mutable_coaching_session();
}
inline void CMsgAvailablePrivateCoachingSession::set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_;
  }
  if (coaching_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session);
    if (message_arena != submessage_arena) {
      coaching_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coaching_session_ = coaching_session;
  // @@protoc_insertion_point(field_set_allocated:CMsgAvailablePrivateCoachingSession.coaching_session)
}

// optional .CMsgPrivateCoachingSessionStatus coaching_session_status = 2;
inline bool CMsgAvailablePrivateCoachingSession::_internal_has_coaching_session_status() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_status_ != nullptr);
  return value;
}
inline bool CMsgAvailablePrivateCoachingSession::has_coaching_session_status() const {
  return _internal_has_coaching_session_status();
}
inline void CMsgAvailablePrivateCoachingSession::clear_coaching_session_status() {
  if (coaching_session_status_ != nullptr) coaching_session_status_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::CMsgPrivateCoachingSessionStatus& CMsgAvailablePrivateCoachingSession::_internal_coaching_session_status() const {
  const ::CMsgPrivateCoachingSessionStatus* p = coaching_session_status_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSessionStatus&>(
      ::_CMsgPrivateCoachingSessionStatus_default_instance_);
}
inline const ::CMsgPrivateCoachingSessionStatus& CMsgAvailablePrivateCoachingSession::coaching_session_status() const {
  // @@protoc_insertion_point(field_get:CMsgAvailablePrivateCoachingSession.coaching_session_status)
  return _internal_coaching_session_status();
}
inline void CMsgAvailablePrivateCoachingSession::unsafe_arena_set_allocated_coaching_session_status(
    ::CMsgPrivateCoachingSessionStatus* coaching_session_status) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_status_);
  }
  coaching_session_status_ = coaching_session_status;
  if (coaching_session_status) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgAvailablePrivateCoachingSession.coaching_session_status)
}
inline ::CMsgPrivateCoachingSessionStatus* CMsgAvailablePrivateCoachingSession::release_coaching_session_status() {
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgPrivateCoachingSessionStatus* temp = coaching_session_status_;
  coaching_session_status_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSessionStatus* CMsgAvailablePrivateCoachingSession::unsafe_arena_release_coaching_session_status() {
  // @@protoc_insertion_point(field_release:CMsgAvailablePrivateCoachingSession.coaching_session_status)
  _has_bits_[0] &= ~0x00000002u;
  ::CMsgPrivateCoachingSessionStatus* temp = coaching_session_status_;
  coaching_session_status_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSessionStatus* CMsgAvailablePrivateCoachingSession::_internal_mutable_coaching_session_status() {
  _has_bits_[0] |= 0x00000002u;
  if (coaching_session_status_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSessionStatus>(GetArena());
    coaching_session_status_ = p;
  }
  return coaching_session_status_;
}
inline ::CMsgPrivateCoachingSessionStatus* CMsgAvailablePrivateCoachingSession::mutable_coaching_session_status() {
  // @@protoc_insertion_point(field_mutable:CMsgAvailablePrivateCoachingSession.coaching_session_status)
  return _internal_mutable_coaching_session_status();
}
inline void CMsgAvailablePrivateCoachingSession::set_allocated_coaching_session_status(::CMsgPrivateCoachingSessionStatus* coaching_session_status) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_status_;
  }
  if (coaching_session_status) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session_status);
    if (message_arena != submessage_arena) {
      coaching_session_status = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session_status, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  coaching_session_status_ = coaching_session_status;
  // @@protoc_insertion_point(field_set_allocated:CMsgAvailablePrivateCoachingSession.coaching_session_status)
}

// -------------------------------------------------------------------

// CMsgAvailablePrivateCoachingSessionList

// repeated .CMsgAvailablePrivateCoachingSession available_coaching_sessions = 1;
inline int CMsgAvailablePrivateCoachingSessionList::_internal_available_coaching_sessions_size() const {
  return available_coaching_sessions_.size();
}
inline int CMsgAvailablePrivateCoachingSessionList::available_coaching_sessions_size() const {
  return _internal_available_coaching_sessions_size();
}
inline void CMsgAvailablePrivateCoachingSessionList::clear_available_coaching_sessions() {
  available_coaching_sessions_.Clear();
}
inline ::CMsgAvailablePrivateCoachingSession* CMsgAvailablePrivateCoachingSessionList::mutable_available_coaching_sessions(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions)
  return available_coaching_sessions_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAvailablePrivateCoachingSession >*
CMsgAvailablePrivateCoachingSessionList::mutable_available_coaching_sessions() {
  // @@protoc_insertion_point(field_mutable_list:CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions)
  return &available_coaching_sessions_;
}
inline const ::CMsgAvailablePrivateCoachingSession& CMsgAvailablePrivateCoachingSessionList::_internal_available_coaching_sessions(int index) const {
  return available_coaching_sessions_.Get(index);
}
inline const ::CMsgAvailablePrivateCoachingSession& CMsgAvailablePrivateCoachingSessionList::available_coaching_sessions(int index) const {
  // @@protoc_insertion_point(field_get:CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions)
  return _internal_available_coaching_sessions(index);
}
inline ::CMsgAvailablePrivateCoachingSession* CMsgAvailablePrivateCoachingSessionList::_internal_add_available_coaching_sessions() {
  return available_coaching_sessions_.Add();
}
inline ::CMsgAvailablePrivateCoachingSession* CMsgAvailablePrivateCoachingSessionList::add_available_coaching_sessions() {
  // @@protoc_insertion_point(field_add:CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions)
  return _internal_add_available_coaching_sessions();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgAvailablePrivateCoachingSession >&
CMsgAvailablePrivateCoachingSessionList::available_coaching_sessions() const {
  // @@protoc_insertion_point(field_list:CMsgAvailablePrivateCoachingSessionList.available_coaching_sessions)
  return available_coaching_sessions_;
}

// -------------------------------------------------------------------

// CMsgAvailablePrivateCoachingSessionSummary

// optional uint32 coaching_session_count = 1;
inline bool CMsgAvailablePrivateCoachingSessionSummary::_internal_has_coaching_session_count() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgAvailablePrivateCoachingSessionSummary::has_coaching_session_count() const {
  return _internal_has_coaching_session_count();
}
inline void CMsgAvailablePrivateCoachingSessionSummary::clear_coaching_session_count() {
  coaching_session_count_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAvailablePrivateCoachingSessionSummary::_internal_coaching_session_count() const {
  return coaching_session_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgAvailablePrivateCoachingSessionSummary::coaching_session_count() const {
  // @@protoc_insertion_point(field_get:CMsgAvailablePrivateCoachingSessionSummary.coaching_session_count)
  return _internal_coaching_session_count();
}
inline void CMsgAvailablePrivateCoachingSessionSummary::_internal_set_coaching_session_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  coaching_session_count_ = value;
}
inline void CMsgAvailablePrivateCoachingSessionSummary::set_coaching_session_count(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coaching_session_count(value);
  // @@protoc_insertion_point(field_set:CMsgAvailablePrivateCoachingSessionSummary.coaching_session_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlayerCoachMatches

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlayerCoachMatchesResponse

// optional .CMsgClientToGCRequestPlayerCoachMatchesResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestPlayerCoachMatchesResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchesResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPlayerCoachMatchesResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_set_result(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse value) {
  assert(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::set_result(::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestPlayerCoachMatchesResponse.result)
}

// repeated .CMsgPlayerCoachMatch coach_matches = 2;
inline int CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_coach_matches_size() const {
  return coach_matches_.size();
}
inline int CMsgClientToGCRequestPlayerCoachMatchesResponse::coach_matches_size() const {
  return _internal_coach_matches_size();
}
inline void CMsgClientToGCRequestPlayerCoachMatchesResponse::clear_coach_matches() {
  coach_matches_.Clear();
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchesResponse::mutable_coach_matches(int index) {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches)
  return coach_matches_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPlayerCoachMatch >*
CMsgClientToGCRequestPlayerCoachMatchesResponse::mutable_coach_matches() {
  // @@protoc_insertion_point(field_mutable_list:CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches)
  return &coach_matches_;
}
inline const ::CMsgPlayerCoachMatch& CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_coach_matches(int index) const {
  return coach_matches_.Get(index);
}
inline const ::CMsgPlayerCoachMatch& CMsgClientToGCRequestPlayerCoachMatchesResponse::coach_matches(int index) const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches)
  return _internal_coach_matches(index);
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchesResponse::_internal_add_coach_matches() {
  return coach_matches_.Add();
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchesResponse::add_coach_matches() {
  // @@protoc_insertion_point(field_add:CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches)
  return _internal_add_coach_matches();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::CMsgPlayerCoachMatch >&
CMsgClientToGCRequestPlayerCoachMatchesResponse::coach_matches() const {
  // @@protoc_insertion_point(field_list:CMsgClientToGCRequestPlayerCoachMatchesResponse.coach_matches)
  return coach_matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlayerCoachMatch

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestPlayerCoachMatch::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestPlayerCoachMatch::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCRequestPlayerCoachMatch::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCRequestPlayerCoachMatch::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCRequestPlayerCoachMatch::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPlayerCoachMatch.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCRequestPlayerCoachMatch::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  match_id_ = value;
}
inline void CMsgClientToGCRequestPlayerCoachMatch::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestPlayerCoachMatch.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPlayerCoachMatchResponse

// optional .CMsgClientToGCRequestPlayerCoachMatchResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestPlayerCoachMatchResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse CMsgClientToGCRequestPlayerCoachMatchResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPlayerCoachMatchResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_set_result(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse value) {
  assert(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::set_result(::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestPlayerCoachMatchResponse.result)
}

// optional .CMsgPlayerCoachMatch coach_match = 2;
inline bool CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_has_coach_match() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coach_match_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestPlayerCoachMatchResponse::has_coach_match() const {
  return _internal_has_coach_match();
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::clear_coach_match() {
  if (coach_match_ != nullptr) coach_match_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPlayerCoachMatch& CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_coach_match() const {
  const ::CMsgPlayerCoachMatch* p = coach_match_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPlayerCoachMatch&>(
      ::_CMsgPlayerCoachMatch_default_instance_);
}
inline const ::CMsgPlayerCoachMatch& CMsgClientToGCRequestPlayerCoachMatchResponse::coach_match() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match)
  return _internal_coach_match();
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::unsafe_arena_set_allocated_coach_match(
    ::CMsgPlayerCoachMatch* coach_match) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coach_match_);
  }
  coach_match_ = coach_match;
  if (coach_match) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match)
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchResponse::release_coach_match() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPlayerCoachMatch* temp = coach_match_;
  coach_match_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchResponse::unsafe_arena_release_coach_match() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPlayerCoachMatch* temp = coach_match_;
  coach_match_ = nullptr;
  return temp;
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchResponse::_internal_mutable_coach_match() {
  _has_bits_[0] |= 0x00000001u;
  if (coach_match_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPlayerCoachMatch>(GetArena());
    coach_match_ = p;
  }
  return coach_match_;
}
inline ::CMsgPlayerCoachMatch* CMsgClientToGCRequestPlayerCoachMatchResponse::mutable_coach_match() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match)
  return _internal_mutable_coach_match();
}
inline void CMsgClientToGCRequestPlayerCoachMatchResponse::set_allocated_coach_match(::CMsgPlayerCoachMatch* coach_match) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coach_match_;
  }
  if (coach_match) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coach_match);
    if (message_arena != submessage_arena) {
      coach_match = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coach_match, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coach_match_ = coach_match;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestPlayerCoachMatchResponse.coach_match)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitCoachTeammateRating

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSubmitCoachTeammateRating::_internal_has_match_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitCoachTeammateRating::has_match_id() const {
  return _internal_has_match_id();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::clear_match_id() {
  match_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSubmitCoachTeammateRating::_internal_match_id() const {
  return match_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSubmitCoachTeammateRating::match_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitCoachTeammateRating.match_id)
  return _internal_match_id();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::_internal_set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000002u;
  match_id_ = value;
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_match_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_match_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitCoachTeammateRating.match_id)
}

// optional uint32 coach_account_id = 2;
inline bool CMsgClientToGCSubmitCoachTeammateRating::_internal_has_coach_account_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitCoachTeammateRating::has_coach_account_id() const {
  return _internal_has_coach_account_id();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::clear_coach_account_id() {
  coach_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSubmitCoachTeammateRating::_internal_coach_account_id() const {
  return coach_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCSubmitCoachTeammateRating::coach_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitCoachTeammateRating.coach_account_id)
  return _internal_coach_account_id();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::_internal_set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  coach_account_id_ = value;
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coach_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitCoachTeammateRating.coach_account_id)
}

// optional .ECoachTeammateRating rating = 3 [default = k_ECoachTeammateRating_None];
inline bool CMsgClientToGCSubmitCoachTeammateRating::_internal_has_rating() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitCoachTeammateRating::has_rating() const {
  return _internal_has_rating();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::clear_rating() {
  rating_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::ECoachTeammateRating CMsgClientToGCSubmitCoachTeammateRating::_internal_rating() const {
  return static_cast< ::ECoachTeammateRating >(rating_);
}
inline ::ECoachTeammateRating CMsgClientToGCSubmitCoachTeammateRating::rating() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitCoachTeammateRating.rating)
  return _internal_rating();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::_internal_set_rating(::ECoachTeammateRating value) {
  assert(::ECoachTeammateRating_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  rating_ = value;
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_rating(::ECoachTeammateRating value) {
  _internal_set_rating(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitCoachTeammateRating.rating)
}

// optional string reason = 4;
inline bool CMsgClientToGCSubmitCoachTeammateRating::_internal_has_reason() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitCoachTeammateRating::has_reason() const {
  return _internal_has_reason();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::clear_reason() {
  reason_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& CMsgClientToGCSubmitCoachTeammateRating::reason() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitCoachTeammateRating.reason)
  return _internal_reason();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_reason(const std::string& value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitCoachTeammateRating.reason)
}
inline std::string* CMsgClientToGCSubmitCoachTeammateRating::mutable_reason() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCSubmitCoachTeammateRating.reason)
  return _internal_mutable_reason();
}
inline const std::string& CMsgClientToGCSubmitCoachTeammateRating::_internal_reason() const {
  return reason_.Get();
}
inline void CMsgClientToGCSubmitCoachTeammateRating::_internal_set_reason(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_reason(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  reason_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:CMsgClientToGCSubmitCoachTeammateRating.reason)
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:CMsgClientToGCSubmitCoachTeammateRating.reason)
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_reason(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  reason_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:CMsgClientToGCSubmitCoachTeammateRating.reason)
}
inline std::string* CMsgClientToGCSubmitCoachTeammateRating::_internal_mutable_reason() {
  _has_bits_[0] |= 0x00000001u;
  return reason_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* CMsgClientToGCSubmitCoachTeammateRating::release_reason() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCSubmitCoachTeammateRating.reason)
  if (!_internal_has_reason()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return reason_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void CMsgClientToGCSubmitCoachTeammateRating::set_allocated_reason(std::string* reason) {
  if (reason != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  reason_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), reason,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCSubmitCoachTeammateRating.reason)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitCoachTeammateRatingResponse

// optional .CMsgClientToGCSubmitCoachTeammateRatingResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSubmitCoachTeammateRatingResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitCoachTeammateRatingResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSubmitCoachTeammateRatingResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse >(result_);
}
inline ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse CMsgClientToGCSubmitCoachTeammateRatingResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitCoachTeammateRatingResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSubmitCoachTeammateRatingResponse::_internal_set_result(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse value) {
  assert(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCSubmitCoachTeammateRatingResponse::set_result(::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitCoachTeammateRatingResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientCoachTeammateRatingsChanged

// optional .CMsgPlayerCoachMatch coach_match = 1;
inline bool CMsgGCToClientCoachTeammateRatingsChanged::_internal_has_coach_match() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coach_match_ != nullptr);
  return value;
}
inline bool CMsgGCToClientCoachTeammateRatingsChanged::has_coach_match() const {
  return _internal_has_coach_match();
}
inline void CMsgGCToClientCoachTeammateRatingsChanged::clear_coach_match() {
  if (coach_match_ != nullptr) coach_match_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPlayerCoachMatch& CMsgGCToClientCoachTeammateRatingsChanged::_internal_coach_match() const {
  const ::CMsgPlayerCoachMatch* p = coach_match_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPlayerCoachMatch&>(
      ::_CMsgPlayerCoachMatch_default_instance_);
}
inline const ::CMsgPlayerCoachMatch& CMsgGCToClientCoachTeammateRatingsChanged::coach_match() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientCoachTeammateRatingsChanged.coach_match)
  return _internal_coach_match();
}
inline void CMsgGCToClientCoachTeammateRatingsChanged::unsafe_arena_set_allocated_coach_match(
    ::CMsgPlayerCoachMatch* coach_match) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coach_match_);
  }
  coach_match_ = coach_match;
  if (coach_match) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientCoachTeammateRatingsChanged.coach_match)
}
inline ::CMsgPlayerCoachMatch* CMsgGCToClientCoachTeammateRatingsChanged::release_coach_match() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPlayerCoachMatch* temp = coach_match_;
  coach_match_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPlayerCoachMatch* CMsgGCToClientCoachTeammateRatingsChanged::unsafe_arena_release_coach_match() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientCoachTeammateRatingsChanged.coach_match)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPlayerCoachMatch* temp = coach_match_;
  coach_match_ = nullptr;
  return temp;
}
inline ::CMsgPlayerCoachMatch* CMsgGCToClientCoachTeammateRatingsChanged::_internal_mutable_coach_match() {
  _has_bits_[0] |= 0x00000001u;
  if (coach_match_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPlayerCoachMatch>(GetArena());
    coach_match_ = p;
  }
  return coach_match_;
}
inline ::CMsgPlayerCoachMatch* CMsgGCToClientCoachTeammateRatingsChanged::mutable_coach_match() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientCoachTeammateRatingsChanged.coach_match)
  return _internal_mutable_coach_match();
}
inline void CMsgGCToClientCoachTeammateRatingsChanged::set_allocated_coach_match(::CMsgPlayerCoachMatch* coach_match) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coach_match_;
  }
  if (coach_match) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coach_match);
    if (message_arena != submessage_arena) {
      coach_match = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coach_match, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coach_match_ = coach_match;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientCoachTeammateRatingsChanged.coach_match)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPrivateCoachingSession

// optional uint32 language = 1;
inline bool CMsgClientToGCRequestPrivateCoachingSession::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestPrivateCoachingSession::has_language() const {
  return _internal_has_language();
}
inline void CMsgClientToGCRequestPrivateCoachingSession::clear_language() {
  language_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestPrivateCoachingSession::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRequestPrivateCoachingSession::language() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPrivateCoachingSession.language)
  return _internal_language();
}
inline void CMsgClientToGCRequestPrivateCoachingSession::_internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  language_ = value;
}
inline void CMsgClientToGCRequestPrivateCoachingSession::set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestPrivateCoachingSession.language)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestPrivateCoachingSessionResponse

// optional .CMsgClientToGCRequestPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRequestPrivateCoachingSessionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse CMsgClientToGCRequestPrivateCoachingSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPrivateCoachingSessionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_set_result(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse value) {
  assert(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::set_result(::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRequestPrivateCoachingSessionResponse.result)
}

// optional .CMsgPrivateCoachingSession coaching_session = 2;
inline bool CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_has_coaching_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_ != nullptr);
  return value;
}
inline bool CMsgClientToGCRequestPrivateCoachingSessionResponse::has_coaching_session() const {
  return _internal_has_coaching_session();
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::clear_coaching_session() {
  if (coaching_session_ != nullptr) coaching_session_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_coaching_session() const {
  const ::CMsgPrivateCoachingSession* p = coaching_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSession&>(
      ::_CMsgPrivateCoachingSession_default_instance_);
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCRequestPrivateCoachingSessionResponse::coaching_session() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session)
  return _internal_coaching_session();
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::unsafe_arena_set_allocated_coaching_session(
    ::CMsgPrivateCoachingSession* coaching_session) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_);
  }
  coaching_session_ = coaching_session;
  if (coaching_session) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session)
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCRequestPrivateCoachingSessionResponse::release_coaching_session() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCRequestPrivateCoachingSessionResponse::unsafe_arena_release_coaching_session() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCRequestPrivateCoachingSessionResponse::_internal_mutable_coaching_session() {
  _has_bits_[0] |= 0x00000001u;
  if (coaching_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSession>(GetArena());
    coaching_session_ = p;
  }
  return coaching_session_;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCRequestPrivateCoachingSessionResponse::mutable_coaching_session() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session)
  return _internal_mutable_coaching_session();
}
inline void CMsgClientToGCRequestPrivateCoachingSessionResponse::set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_;
  }
  if (coaching_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session);
    if (message_arena != submessage_arena) {
      coaching_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coaching_session_ = coaching_session;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCRequestPrivateCoachingSessionResponse.coaching_session)
}

// -------------------------------------------------------------------

// CMsgClientToGCAcceptPrivateCoachingSession

// optional uint64 coaching_session_id = 1;
inline bool CMsgClientToGCAcceptPrivateCoachingSession::_internal_has_coaching_session_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCAcceptPrivateCoachingSession::has_coaching_session_id() const {
  return _internal_has_coaching_session_id();
}
inline void CMsgClientToGCAcceptPrivateCoachingSession::clear_coaching_session_id() {
  coaching_session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCAcceptPrivateCoachingSession::_internal_coaching_session_id() const {
  return coaching_session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCAcceptPrivateCoachingSession::coaching_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAcceptPrivateCoachingSession.coaching_session_id)
  return _internal_coaching_session_id();
}
inline void CMsgClientToGCAcceptPrivateCoachingSession::_internal_set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  coaching_session_id_ = value;
}
inline void CMsgClientToGCAcceptPrivateCoachingSession::set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coaching_session_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAcceptPrivateCoachingSession.coaching_session_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCAcceptPrivateCoachingSessionResponse

// optional .CMsgClientToGCAcceptPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse >(result_);
}
inline ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse CMsgClientToGCAcceptPrivateCoachingSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAcceptPrivateCoachingSessionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_set_result(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse value) {
  assert(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::set_result(::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCAcceptPrivateCoachingSessionResponse.result)
}

// optional .CMsgPrivateCoachingSession coaching_session = 2;
inline bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_has_coaching_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_ != nullptr);
  return value;
}
inline bool CMsgClientToGCAcceptPrivateCoachingSessionResponse::has_coaching_session() const {
  return _internal_has_coaching_session();
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::clear_coaching_session() {
  if (coaching_session_ != nullptr) coaching_session_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_coaching_session() const {
  const ::CMsgPrivateCoachingSession* p = coaching_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSession&>(
      ::_CMsgPrivateCoachingSession_default_instance_);
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCAcceptPrivateCoachingSessionResponse::coaching_session() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session)
  return _internal_coaching_session();
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::unsafe_arena_set_allocated_coaching_session(
    ::CMsgPrivateCoachingSession* coaching_session) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_);
  }
  coaching_session_ = coaching_session;
  if (coaching_session) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session)
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCAcceptPrivateCoachingSessionResponse::release_coaching_session() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCAcceptPrivateCoachingSessionResponse::unsafe_arena_release_coaching_session() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCAcceptPrivateCoachingSessionResponse::_internal_mutable_coaching_session() {
  _has_bits_[0] |= 0x00000001u;
  if (coaching_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSession>(GetArena());
    coaching_session_ = p;
  }
  return coaching_session_;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCAcceptPrivateCoachingSessionResponse::mutable_coaching_session() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session)
  return _internal_mutable_coaching_session();
}
inline void CMsgClientToGCAcceptPrivateCoachingSessionResponse::set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_;
  }
  if (coaching_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session);
    if (message_arena != submessage_arena) {
      coaching_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coaching_session_ = coaching_session;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCAcceptPrivateCoachingSessionResponse.coaching_session)
}

// -------------------------------------------------------------------

// CMsgClientToGCLeavePrivateCoachingSession

// -------------------------------------------------------------------

// CMsgClientToGCLeavePrivateCoachingSessionResponse

// optional .CMsgClientToGCLeavePrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCLeavePrivateCoachingSessionResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCLeavePrivateCoachingSessionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCLeavePrivateCoachingSessionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse >(result_);
}
inline ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse CMsgClientToGCLeavePrivateCoachingSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCLeavePrivateCoachingSessionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCLeavePrivateCoachingSessionResponse::_internal_set_result(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse value) {
  assert(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCLeavePrivateCoachingSessionResponse::set_result(::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCLeavePrivateCoachingSessionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetCurrentPrivateCoachingSession

// -------------------------------------------------------------------

// CMsgClientToGCGetCurrentPrivateCoachingSessionResponse

// optional .CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse >(result_);
}
inline ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_set_result(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse value) {
  assert(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::set_result(::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.result)
}

// optional .CMsgPrivateCoachingSession current_session = 2;
inline bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_has_current_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || current_session_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::has_current_session() const {
  return _internal_has_current_session();
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::clear_current_session() {
  if (current_session_ != nullptr) current_session_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_current_session() const {
  const ::CMsgPrivateCoachingSession* p = current_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSession&>(
      ::_CMsgPrivateCoachingSession_default_instance_);
}
inline const ::CMsgPrivateCoachingSession& CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::current_session() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session)
  return _internal_current_session();
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::unsafe_arena_set_allocated_current_session(
    ::CMsgPrivateCoachingSession* current_session) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(current_session_);
  }
  current_session_ = current_session;
  if (current_session) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session)
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::release_current_session() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = current_session_;
  current_session_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::unsafe_arena_release_current_session() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = current_session_;
  current_session_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::_internal_mutable_current_session() {
  _has_bits_[0] |= 0x00000001u;
  if (current_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSession>(GetArena());
    current_session_ = p;
  }
  return current_session_;
}
inline ::CMsgPrivateCoachingSession* CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::mutable_current_session() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session)
  return _internal_mutable_current_session();
}
inline void CMsgClientToGCGetCurrentPrivateCoachingSessionResponse::set_allocated_current_session(::CMsgPrivateCoachingSession* current_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete current_session_;
  }
  if (current_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(current_session);
    if (message_arena != submessage_arena) {
      current_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, current_session, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  current_session_ = current_session;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetCurrentPrivateCoachingSessionResponse.current_session)
}

// -------------------------------------------------------------------

// CMsgGCToClientPrivateCoachingSessionUpdated

// optional .CMsgPrivateCoachingSession coaching_session = 1;
inline bool CMsgGCToClientPrivateCoachingSessionUpdated::_internal_has_coaching_session() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_ != nullptr);
  return value;
}
inline bool CMsgGCToClientPrivateCoachingSessionUpdated::has_coaching_session() const {
  return _internal_has_coaching_session();
}
inline void CMsgGCToClientPrivateCoachingSessionUpdated::clear_coaching_session() {
  if (coaching_session_ != nullptr) coaching_session_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgPrivateCoachingSession& CMsgGCToClientPrivateCoachingSessionUpdated::_internal_coaching_session() const {
  const ::CMsgPrivateCoachingSession* p = coaching_session_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgPrivateCoachingSession&>(
      ::_CMsgPrivateCoachingSession_default_instance_);
}
inline const ::CMsgPrivateCoachingSession& CMsgGCToClientPrivateCoachingSessionUpdated::coaching_session() const {
  // @@protoc_insertion_point(field_get:CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session)
  return _internal_coaching_session();
}
inline void CMsgGCToClientPrivateCoachingSessionUpdated::unsafe_arena_set_allocated_coaching_session(
    ::CMsgPrivateCoachingSession* coaching_session) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_);
  }
  coaching_session_ = coaching_session;
  if (coaching_session) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session)
}
inline ::CMsgPrivateCoachingSession* CMsgGCToClientPrivateCoachingSessionUpdated::release_coaching_session() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgGCToClientPrivateCoachingSessionUpdated::unsafe_arena_release_coaching_session() {
  // @@protoc_insertion_point(field_release:CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgPrivateCoachingSession* temp = coaching_session_;
  coaching_session_ = nullptr;
  return temp;
}
inline ::CMsgPrivateCoachingSession* CMsgGCToClientPrivateCoachingSessionUpdated::_internal_mutable_coaching_session() {
  _has_bits_[0] |= 0x00000001u;
  if (coaching_session_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgPrivateCoachingSession>(GetArena());
    coaching_session_ = p;
  }
  return coaching_session_;
}
inline ::CMsgPrivateCoachingSession* CMsgGCToClientPrivateCoachingSessionUpdated::mutable_coaching_session() {
  // @@protoc_insertion_point(field_mutable:CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session)
  return _internal_mutable_coaching_session();
}
inline void CMsgGCToClientPrivateCoachingSessionUpdated::set_allocated_coaching_session(::CMsgPrivateCoachingSession* coaching_session) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_;
  }
  if (coaching_session) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session);
    if (message_arena != submessage_arena) {
      coaching_session = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coaching_session_ = coaching_session;
  // @@protoc_insertion_point(field_set_allocated:CMsgGCToClientPrivateCoachingSessionUpdated.coaching_session)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitPrivateCoachingSessionRating

// optional uint64 coaching_session_id = 1;
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_has_coaching_session_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRating::has_coaching_session_id() const {
  return _internal_has_coaching_session_id();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::clear_coaching_session_id() {
  coaching_session_id_ = PROTOBUF_ULONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_coaching_session_id() const {
  return coaching_session_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CMsgClientToGCSubmitPrivateCoachingSessionRating::coaching_session_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPrivateCoachingSessionRating.coaching_session_id)
  return _internal_coaching_session_id();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _has_bits_[0] |= 0x00000001u;
  coaching_session_id_ = value;
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::set_coaching_session_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_coaching_session_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPrivateCoachingSessionRating.coaching_session_id)
}

// optional .ECoachTeammateRating session_rating = 2 [default = k_ECoachTeammateRating_None];
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_has_session_rating() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRating::has_session_rating() const {
  return _internal_has_session_rating();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::clear_session_rating() {
  session_rating_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ECoachTeammateRating CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_session_rating() const {
  return static_cast< ::ECoachTeammateRating >(session_rating_);
}
inline ::ECoachTeammateRating CMsgClientToGCSubmitPrivateCoachingSessionRating::session_rating() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPrivateCoachingSessionRating.session_rating)
  return _internal_session_rating();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::_internal_set_session_rating(::ECoachTeammateRating value) {
  assert(::ECoachTeammateRating_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  session_rating_ = value;
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRating::set_session_rating(::ECoachTeammateRating value) {
  _internal_set_session_rating(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPrivateCoachingSessionRating.session_rating)
}

// -------------------------------------------------------------------

// CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse

// optional .CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse >(result_);
}
inline ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::_internal_set_result(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse value) {
  assert(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse::set_result(::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAvailablePrivateCoachingSessions

// optional uint32 language = 1;
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessions::_internal_has_language() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessions::has_language() const {
  return _internal_has_language();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessions::clear_language() {
  language_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCGetAvailablePrivateCoachingSessions::_internal_language() const {
  return language_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCGetAvailablePrivateCoachingSessions::language() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAvailablePrivateCoachingSessions.language)
  return _internal_language();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessions::_internal_set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  language_ = value;
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessions::set_language(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_language(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAvailablePrivateCoachingSessions.language)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse

// optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse >(result_);
}
inline ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse value) {
  assert(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.result)
}

// optional .CMsgAvailablePrivateCoachingSessionList available_sessions_list = 2;
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_has_available_sessions_list() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || available_sessions_list_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::has_available_sessions_list() const {
  return _internal_has_available_sessions_list();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::clear_available_sessions_list() {
  if (available_sessions_list_ != nullptr) available_sessions_list_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAvailablePrivateCoachingSessionList& CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_available_sessions_list() const {
  const ::CMsgAvailablePrivateCoachingSessionList* p = available_sessions_list_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAvailablePrivateCoachingSessionList&>(
      ::_CMsgAvailablePrivateCoachingSessionList_default_instance_);
}
inline const ::CMsgAvailablePrivateCoachingSessionList& CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::available_sessions_list() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list)
  return _internal_available_sessions_list();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::unsafe_arena_set_allocated_available_sessions_list(
    ::CMsgAvailablePrivateCoachingSessionList* available_sessions_list) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(available_sessions_list_);
  }
  available_sessions_list_ = available_sessions_list;
  if (available_sessions_list) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list)
}
inline ::CMsgAvailablePrivateCoachingSessionList* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::release_available_sessions_list() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAvailablePrivateCoachingSessionList* temp = available_sessions_list_;
  available_sessions_list_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgAvailablePrivateCoachingSessionList* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::unsafe_arena_release_available_sessions_list() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAvailablePrivateCoachingSessionList* temp = available_sessions_list_;
  available_sessions_list_ = nullptr;
  return temp;
}
inline ::CMsgAvailablePrivateCoachingSessionList* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::_internal_mutable_available_sessions_list() {
  _has_bits_[0] |= 0x00000001u;
  if (available_sessions_list_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAvailablePrivateCoachingSessionList>(GetArena());
    available_sessions_list_ = p;
  }
  return available_sessions_list_;
}
inline ::CMsgAvailablePrivateCoachingSessionList* CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::mutable_available_sessions_list() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list)
  return _internal_mutable_available_sessions_list();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse::set_allocated_available_sessions_list(::CMsgAvailablePrivateCoachingSessionList* available_sessions_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete available_sessions_list_;
  }
  if (available_sessions_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(available_sessions_list);
    if (message_arena != submessage_arena) {
      available_sessions_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, available_sessions_list, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  available_sessions_list_ = available_sessions_list;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse.available_sessions_list)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAvailablePrivateCoachingSessionsSummary

// -------------------------------------------------------------------

// CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse

// optional .CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse >(result_);
}
inline ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse value) {
  assert(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  result_ = value;
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::set_result(::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.result)
}

// optional .CMsgAvailablePrivateCoachingSessionSummary coaching_session_summary = 2;
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_has_coaching_session_summary() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || coaching_session_summary_ != nullptr);
  return value;
}
inline bool CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::has_coaching_session_summary() const {
  return _internal_has_coaching_session_summary();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::clear_coaching_session_summary() {
  if (coaching_session_summary_ != nullptr) coaching_session_summary_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::CMsgAvailablePrivateCoachingSessionSummary& CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_coaching_session_summary() const {
  const ::CMsgAvailablePrivateCoachingSessionSummary* p = coaching_session_summary_;
  return p != nullptr ? *p : reinterpret_cast<const ::CMsgAvailablePrivateCoachingSessionSummary&>(
      ::_CMsgAvailablePrivateCoachingSessionSummary_default_instance_);
}
inline const ::CMsgAvailablePrivateCoachingSessionSummary& CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::coaching_session_summary() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary)
  return _internal_coaching_session_summary();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::unsafe_arena_set_allocated_coaching_session_summary(
    ::CMsgAvailablePrivateCoachingSessionSummary* coaching_session_summary) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(coaching_session_summary_);
  }
  coaching_session_summary_ = coaching_session_summary;
  if (coaching_session_summary) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary)
}
inline ::CMsgAvailablePrivateCoachingSessionSummary* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::release_coaching_session_summary() {
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAvailablePrivateCoachingSessionSummary* temp = coaching_session_summary_;
  coaching_session_summary_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::CMsgAvailablePrivateCoachingSessionSummary* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::unsafe_arena_release_coaching_session_summary() {
  // @@protoc_insertion_point(field_release:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary)
  _has_bits_[0] &= ~0x00000001u;
  ::CMsgAvailablePrivateCoachingSessionSummary* temp = coaching_session_summary_;
  coaching_session_summary_ = nullptr;
  return temp;
}
inline ::CMsgAvailablePrivateCoachingSessionSummary* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::_internal_mutable_coaching_session_summary() {
  _has_bits_[0] |= 0x00000001u;
  if (coaching_session_summary_ == nullptr) {
    auto* p = CreateMaybeMessage<::CMsgAvailablePrivateCoachingSessionSummary>(GetArena());
    coaching_session_summary_ = p;
  }
  return coaching_session_summary_;
}
inline ::CMsgAvailablePrivateCoachingSessionSummary* CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::mutable_coaching_session_summary() {
  // @@protoc_insertion_point(field_mutable:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary)
  return _internal_mutable_coaching_session_summary();
}
inline void CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse::set_allocated_coaching_session_summary(::CMsgAvailablePrivateCoachingSessionSummary* coaching_session_summary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete coaching_session_summary_;
  }
  if (coaching_session_summary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(coaching_session_summary);
    if (message_arena != submessage_arena) {
      coaching_session_summary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, coaching_session_summary, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  coaching_session_summary_ = coaching_session_summary;
  // @@protoc_insertion_point(field_set_allocated:CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse.coaching_session_summary)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPrivateCoachingSessionLobby

// -------------------------------------------------------------------

// CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse

// optional .CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse >(result_);
}
inline ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::_internal_set_result(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse value) {
  assert(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse::set_result(::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCCoachFriend

// optional uint32 target_account_id = 1;
inline bool CMsgClientToGCCoachFriend::_internal_has_target_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCoachFriend::has_target_account_id() const {
  return _internal_has_target_account_id();
}
inline void CMsgClientToGCCoachFriend::clear_target_account_id() {
  target_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCCoachFriend::_internal_target_account_id() const {
  return target_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCCoachFriend::target_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCoachFriend.target_account_id)
  return _internal_target_account_id();
}
inline void CMsgClientToGCCoachFriend::_internal_set_target_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  target_account_id_ = value;
}
inline void CMsgClientToGCCoachFriend::set_target_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_target_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCoachFriend.target_account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCoachFriendResponse

// optional .CMsgClientToGCCoachFriendResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCCoachFriendResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCCoachFriendResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCCoachFriendResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCCoachFriendResponse_EResponse >(result_);
}
inline ::CMsgClientToGCCoachFriendResponse_EResponse CMsgClientToGCCoachFriendResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCCoachFriendResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCCoachFriendResponse::_internal_set_result(::CMsgClientToGCCoachFriendResponse_EResponse value) {
  assert(::CMsgClientToGCCoachFriendResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCCoachFriendResponse::set_result(::CMsgClientToGCCoachFriendResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCCoachFriendResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRespondToCoachFriendRequest

// optional uint32 coach_account_id = 1;
inline bool CMsgClientToGCRespondToCoachFriendRequest::_internal_has_coach_account_id() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRespondToCoachFriendRequest::has_coach_account_id() const {
  return _internal_has_coach_account_id();
}
inline void CMsgClientToGCRespondToCoachFriendRequest::clear_coach_account_id() {
  coach_account_id_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRespondToCoachFriendRequest::_internal_coach_account_id() const {
  return coach_account_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CMsgClientToGCRespondToCoachFriendRequest::coach_account_id() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRespondToCoachFriendRequest.coach_account_id)
  return _internal_coach_account_id();
}
inline void CMsgClientToGCRespondToCoachFriendRequest::_internal_set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  coach_account_id_ = value;
}
inline void CMsgClientToGCRespondToCoachFriendRequest::set_coach_account_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_coach_account_id(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRespondToCoachFriendRequest.coach_account_id)
}

// optional .ELobbyMemberCoachRequestState response = 2 [default = k_eLobbyMemberCoachRequestState_None];
inline bool CMsgClientToGCRespondToCoachFriendRequest::_internal_has_response() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CMsgClientToGCRespondToCoachFriendRequest::has_response() const {
  return _internal_has_response();
}
inline void CMsgClientToGCRespondToCoachFriendRequest::clear_response() {
  response_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::ELobbyMemberCoachRequestState CMsgClientToGCRespondToCoachFriendRequest::_internal_response() const {
  return static_cast< ::ELobbyMemberCoachRequestState >(response_);
}
inline ::ELobbyMemberCoachRequestState CMsgClientToGCRespondToCoachFriendRequest::response() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRespondToCoachFriendRequest.response)
  return _internal_response();
}
inline void CMsgClientToGCRespondToCoachFriendRequest::_internal_set_response(::ELobbyMemberCoachRequestState value) {
  assert(::ELobbyMemberCoachRequestState_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  response_ = value;
}
inline void CMsgClientToGCRespondToCoachFriendRequest::set_response(::ELobbyMemberCoachRequestState value) {
  _internal_set_response(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRespondToCoachFriendRequest.response)
}

// -------------------------------------------------------------------

// CMsgClientToGCRespondToCoachFriendRequestResponse

// optional .CMsgClientToGCRespondToCoachFriendRequestResponse.EResponse result = 1 [default = k_eInternalError];
inline bool CMsgClientToGCRespondToCoachFriendRequestResponse::_internal_has_result() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CMsgClientToGCRespondToCoachFriendRequestResponse::has_result() const {
  return _internal_has_result();
}
inline void CMsgClientToGCRespondToCoachFriendRequestResponse::clear_result() {
  result_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::_internal_result() const {
  return static_cast< ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse >(result_);
}
inline ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse CMsgClientToGCRespondToCoachFriendRequestResponse::result() const {
  // @@protoc_insertion_point(field_get:CMsgClientToGCRespondToCoachFriendRequestResponse.result)
  return _internal_result();
}
inline void CMsgClientToGCRespondToCoachFriendRequestResponse::_internal_set_result(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse value) {
  assert(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  result_ = value;
}
inline void CMsgClientToGCRespondToCoachFriendRequestResponse::set_result(::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:CMsgClientToGCRespondToCoachFriendRequestResponse.result)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse>() {
  return ::CMsgClientToGCRequestPlayerCoachMatchesResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse>() {
  return ::CMsgClientToGCRequestPlayerCoachMatchResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse>() {
  return ::CMsgClientToGCSubmitCoachTeammateRatingResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse>() {
  return ::CMsgClientToGCRequestPrivateCoachingSessionResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse>() {
  return ::CMsgClientToGCAcceptPrivateCoachingSessionResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse>() {
  return ::CMsgClientToGCLeavePrivateCoachingSessionResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse>() {
  return ::CMsgClientToGCGetCurrentPrivateCoachingSessionResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse>() {
  return ::CMsgClientToGCSubmitPrivateCoachingSessionRatingResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse>() {
  return ::CMsgClientToGCGetAvailablePrivateCoachingSessionsResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse>() {
  return ::CMsgClientToGCGetAvailablePrivateCoachingSessionsSummaryResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse>() {
  return ::CMsgClientToGCJoinPrivateCoachingSessionLobbyResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCCoachFriendResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCCoachFriendResponse_EResponse>() {
  return ::CMsgClientToGCCoachFriendResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse>() {
  return ::CMsgClientToGCRespondToCoachFriendRequestResponse_EResponse_descriptor();
}
template <> struct is_proto_enum< ::ECoachTeammateRating> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ECoachTeammateRating>() {
  return ::ECoachTeammateRating_descriptor();
}
template <> struct is_proto_enum< ::EPrivateCoachingSessionState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPrivateCoachingSessionState>() {
  return ::EPrivateCoachingSessionState_descriptor();
}
template <> struct is_proto_enum< ::EPrivateCoachingSessionMemberFlag> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPrivateCoachingSessionMemberFlag>() {
  return ::EPrivateCoachingSessionMemberFlag_descriptor();
}
template <> struct is_proto_enum< ::EPlayerCoachMatchFlag> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EPlayerCoachMatchFlag>() {
  return ::EPlayerCoachMatchFlag_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dota_5fgcmessages_5fclient_5fcoaching_2eproto
