// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client_guild.proto

#include "dota_gcmessages_client_guild.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr CMsgGuildInfo::CMsgGuildInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_tag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_motd_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , created_timestamp_(0u)
  , guild_language_(0u)
  , guild_flags_(0u)
  , guild_region_(0u)
  , guild_logo_(PROTOBUF_ULONGLONG(0))
  , guild_chat_group_id_(PROTOBUF_ULONGLONG(0))
  , default_chat_channel_id_(PROTOBUF_ULONGLONG(0))
  , guild_primary_color_(0u)
  , guild_secondary_color_(0u)
  , guild_pattern_(0u)
  , guild_refresh_time_offset_(0u)
  , guild_required_rank_tier_(0u)
  , guild_motd_timestamp_(0u){}
struct CMsgGuildInfoDefaultTypeInternal {
  constexpr CMsgGuildInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildInfoDefaultTypeInternal() {}
  union {
    CMsgGuildInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildInfoDefaultTypeInternal _CMsgGuildInfo_default_instance_;
constexpr CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_id_(0u)
  , guild_points_(0u)
  , guild_rank_(0u)
  , guild_weekly_rank_(0u)
  , guild_weekly_percentile_(0u)
  , guild_current_percentile_(0u){}
struct CMsgGuildSummary_EventPointsDefaultTypeInternal {
  constexpr CMsgGuildSummary_EventPointsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildSummary_EventPointsDefaultTypeInternal() {}
  union {
    CMsgGuildSummary_EventPoints _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildSummary_EventPointsDefaultTypeInternal _CMsgGuildSummary_EventPoints_default_instance_;
constexpr CMsgGuildSummary::CMsgGuildSummary(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : event_points_()
  , guild_info_(nullptr)
  , member_count_(0u){}
struct CMsgGuildSummaryDefaultTypeInternal {
  constexpr CMsgGuildSummaryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildSummaryDefaultTypeInternal() {}
  union {
    CMsgGuildSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildSummaryDefaultTypeInternal _CMsgGuildSummary_default_instance_;
constexpr CMsgGuildRole::CMsgGuildRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , role_id_(0u)
  , role_flags_(0u)
  , role_order_(0u){}
struct CMsgGuildRoleDefaultTypeInternal {
  constexpr CMsgGuildRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildRoleDefaultTypeInternal() {}
  union {
    CMsgGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildRoleDefaultTypeInternal _CMsgGuildRole_default_instance_;
constexpr CMsgGuildMember::CMsgGuildMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : member_account_id_(0u)
  , member_role_id_(0u)
  , member_joined_timestamp_(0u)
  , member_last_active_timestamp_(0u){}
struct CMsgGuildMemberDefaultTypeInternal {
  constexpr CMsgGuildMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildMemberDefaultTypeInternal() {}
  union {
    CMsgGuildMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildMemberDefaultTypeInternal _CMsgGuildMember_default_instance_;
constexpr CMsgGuildInvite::CMsgGuildInvite(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requester_account_id_(0u)
  , target_account_id_(0u)
  , timestamp_sent_(0u){}
struct CMsgGuildInviteDefaultTypeInternal {
  constexpr CMsgGuildInviteDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildInviteDefaultTypeInternal() {}
  union {
    CMsgGuildInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildInviteDefaultTypeInternal _CMsgGuildInvite_default_instance_;
constexpr CMsgGuildData::CMsgGuildData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_roles_()
  , guild_members_()
  , guild_invites_()
  , guild_info_(nullptr)
  , guild_id_(0u){}
struct CMsgGuildDataDefaultTypeInternal {
  constexpr CMsgGuildDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildDataDefaultTypeInternal() {}
  union {
    CMsgGuildData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildDataDefaultTypeInternal _CMsgGuildData_default_instance_;
constexpr CMsgAccountGuildInvite::CMsgAccountGuildInvite(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , requester_account_id_(0u)
  , timestamp_sent_(0u){}
struct CMsgAccountGuildInviteDefaultTypeInternal {
  constexpr CMsgAccountGuildInviteDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAccountGuildInviteDefaultTypeInternal() {}
  union {
    CMsgAccountGuildInvite _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAccountGuildInviteDefaultTypeInternal _CMsgAccountGuildInvite_default_instance_;
constexpr CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_ids_()
  , guild_invites_(){}
struct CMsgAccountGuildMembershipsDefaultTypeInternal {
  constexpr CMsgAccountGuildMembershipsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAccountGuildMembershipsDefaultTypeInternal() {}
  union {
    CMsgAccountGuildMemberships _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAccountGuildMembershipsDefaultTypeInternal _CMsgAccountGuildMemberships_default_instance_;
constexpr CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_tag_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_id_(0u)
  , guild_flags_(0u){}
struct CMsgGuildPersonaInfoDefaultTypeInternal {
  constexpr CMsgGuildPersonaInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgGuildPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildPersonaInfoDefaultTypeInternal _CMsgGuildPersonaInfo_default_instance_;
constexpr CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_persona_infos_(){}
struct CMsgAccountGuildsPersonaInfoDefaultTypeInternal {
  constexpr CMsgAccountGuildsPersonaInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgAccountGuildsPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgAccountGuildsPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgAccountGuildsPersonaInfoDefaultTypeInternal _CMsgAccountGuildsPersonaInfo_default_instance_;
constexpr CMsgGuildFeedEvent::CMsgGuildFeedEvent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : feed_event_id_(PROTOBUF_ULONGLONG(0))
  , timestamp_(0u)
  , event_type_(0u)
  , param_uint_1_(0u)
  , param_uint_2_(0u)
  , param_uint_3_(0u){}
struct CMsgGuildFeedEventDefaultTypeInternal {
  constexpr CMsgGuildFeedEventDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGuildFeedEventDefaultTypeInternal() {}
  union {
    CMsgGuildFeedEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGuildFeedEventDefaultTypeInternal _CMsgGuildFeedEvent_default_instance_;
constexpr CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_info_(nullptr)
  , guild_chat_type_(0)
{}
struct CMsgClientToGCCreateGuildDefaultTypeInternal {
  constexpr CMsgClientToGCCreateGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCreateGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCCreateGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCreateGuildDefaultTypeInternal _CMsgClientToGCCreateGuild_default_instance_;
constexpr CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)

  , guild_id_(0u){}
struct CMsgClientToGCCreateGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCCreateGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCreateGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCreateGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCreateGuildResponseDefaultTypeInternal _CMsgClientToGCCreateGuildResponse_default_instance_;
constexpr CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_info_(nullptr)
  , guild_id_(0u)
  , guild_chat_type_(0)
{}
struct CMsgClientToGCSetGuildInfoDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildInfoDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildInfoDefaultTypeInternal _CMsgClientToGCSetGuildInfo_default_instance_;
constexpr CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildInfoResponseDefaultTypeInternal _CMsgClientToGCSetGuildInfoResponse_default_instance_;
constexpr CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCRequestGuildDataDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildDataDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildDataDefaultTypeInternal _CMsgClientToGCRequestGuildData_default_instance_;
constexpr CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_data_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildDataResponseDefaultTypeInternal _CMsgClientToGCRequestGuildDataResponse_default_instance_;
constexpr CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_data_(nullptr)
  , update_flags_(0u){}
struct CMsgGCToClientGuildDataUpdatedDefaultTypeInternal {
  constexpr CMsgGCToClientGuildDataUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildDataUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildDataUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientGuildDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildDataUpdated_default_instance_;
constexpr CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : members_data_()
  , guild_id_(0u){}
struct CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal {
  constexpr CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildMembersDataUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientGuildMembersDataUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembersDataUpdated_default_instance_;
constexpr CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct CMsgClientToGCRequestGuildMembershipDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildMembershipDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildMembershipDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildMembership _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildMembershipDefaultTypeInternal _CMsgClientToGCRequestGuildMembership_default_instance_;
constexpr CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_memberships_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildMembershipResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildMembershipResponseDefaultTypeInternal _CMsgClientToGCRequestGuildMembershipResponse_default_instance_;
constexpr CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_memberships_(nullptr){}
struct CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal {
  constexpr CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildMembershipUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientGuildMembershipUpdatedDefaultTypeInternal _CMsgGCToClientGuildMembershipUpdated_default_instance_;
constexpr CMsgClientToGCRequestGuildSummary::CMsgClientToGCRequestGuildSummary(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCRequestGuildSummaryDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildSummaryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildSummaryDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildSummary _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildSummaryDefaultTypeInternal _CMsgClientToGCRequestGuildSummary_default_instance_;
constexpr CMsgClientToGCRequestGuildSummaryResponse::CMsgClientToGCRequestGuildSummaryResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_summary_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestGuildSummaryResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildSummaryResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildSummaryResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildSummaryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildSummaryResponseDefaultTypeInternal _CMsgClientToGCRequestGuildSummaryResponse_default_instance_;
constexpr CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCJoinGuildDefaultTypeInternal {
  constexpr CMsgClientToGCJoinGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCJoinGuildDefaultTypeInternal _CMsgClientToGCJoinGuild_default_instance_;
constexpr CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCJoinGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCJoinGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCJoinGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCJoinGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCJoinGuildResponseDefaultTypeInternal _CMsgClientToGCJoinGuildResponse_default_instance_;
constexpr CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCLeaveGuildDefaultTypeInternal {
  constexpr CMsgClientToGCLeaveGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCLeaveGuildDefaultTypeInternal _CMsgClientToGCLeaveGuild_default_instance_;
constexpr CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCLeaveGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCLeaveGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCLeaveGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCLeaveGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCLeaveGuildResponseDefaultTypeInternal _CMsgClientToGCLeaveGuildResponse_default_instance_;
constexpr CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , target_account_id_(0u){}
struct CMsgClientToGCKickGuildMemberDefaultTypeInternal {
  constexpr CMsgClientToGCKickGuildMemberDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCKickGuildMemberDefaultTypeInternal() {}
  union {
    CMsgClientToGCKickGuildMember _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCKickGuildMemberDefaultTypeInternal _CMsgClientToGCKickGuildMember_default_instance_;
constexpr CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal {
  constexpr CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCKickGuildMemberResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCKickGuildMemberResponseDefaultTypeInternal _CMsgClientToGCKickGuildMemberResponse_default_instance_;
constexpr CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , target_account_id_(0u)
  , target_role_id_(0u){}
struct CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildMemberRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildMemberRoleDefaultTypeInternal _CMsgClientToGCSetGuildMemberRole_default_instance_;
constexpr CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildMemberRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildMemberRoleResponseDefaultTypeInternal _CMsgClientToGCSetGuildMemberRoleResponse_default_instance_;
constexpr CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , target_account_id_(0u){}
struct CMsgClientToGCInviteToGuildDefaultTypeInternal {
  constexpr CMsgClientToGCInviteToGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCInviteToGuildDefaultTypeInternal _CMsgClientToGCInviteToGuild_default_instance_;
constexpr CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCInviteToGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCInviteToGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCInviteToGuildResponse_default_instance_;
constexpr CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal {
  constexpr CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeclineInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCDeclineInviteToGuildDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuild_default_instance_;
constexpr CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCDeclineInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCDeclineInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCDeclineInviteToGuildResponse_default_instance_;
constexpr CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal {
  constexpr CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAcceptInviteToGuildDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuild_default_instance_;
constexpr CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAcceptInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAcceptInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCAcceptInviteToGuildResponse_default_instance_;
constexpr CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , target_account_id_(0u){}
struct CMsgClientToGCCancelInviteToGuildDefaultTypeInternal {
  constexpr CMsgClientToGCCancelInviteToGuildDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCancelInviteToGuildDefaultTypeInternal() {}
  union {
    CMsgClientToGCCancelInviteToGuild _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCancelInviteToGuildDefaultTypeInternal _CMsgClientToGCCancelInviteToGuild_default_instance_;
constexpr CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal {
  constexpr CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCCancelInviteToGuildResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCCancelInviteToGuildResponseDefaultTypeInternal _CMsgClientToGCCancelInviteToGuildResponse_default_instance_;
constexpr CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_id_(0u)
  , role_flags_(0u){}
struct CMsgClientToGCAddGuildRoleDefaultTypeInternal {
  constexpr CMsgClientToGCAddGuildRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAddGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAddGuildRoleDefaultTypeInternal _CMsgClientToGCAddGuildRole_default_instance_;
constexpr CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)

  , role_id_(0u){}
struct CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal {
  constexpr CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAddGuildRoleResponseDefaultTypeInternal _CMsgClientToGCAddGuildRoleResponse_default_instance_;
constexpr CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : role_name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , guild_id_(0u)
  , role_id_(0u)
  , role_flags_(0u){}
struct CMsgClientToGCModifyGuildRoleDefaultTypeInternal {
  constexpr CMsgClientToGCModifyGuildRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCModifyGuildRoleDefaultTypeInternal _CMsgClientToGCModifyGuildRole_default_instance_;
constexpr CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal {
  constexpr CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCModifyGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCModifyGuildRoleResponseDefaultTypeInternal _CMsgClientToGCModifyGuildRoleResponse_default_instance_;
constexpr CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , role_id_(0u){}
struct CMsgClientToGCRemoveGuildRoleDefaultTypeInternal {
  constexpr CMsgClientToGCRemoveGuildRoleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRemoveGuildRoleDefaultTypeInternal() {}
  union {
    CMsgClientToGCRemoveGuildRole _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRemoveGuildRoleDefaultTypeInternal _CMsgClientToGCRemoveGuildRole_default_instance_;
constexpr CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRemoveGuildRoleResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRemoveGuildRoleResponseDefaultTypeInternal _CMsgClientToGCRemoveGuildRoleResponse_default_instance_;
constexpr CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requested_role_ids_()
  , previous_role_ids_()
  , guild_id_(0u){}
struct CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildRoleOrder _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildRoleOrderDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrder_default_instance_;
constexpr CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : confirmed_role_ids_()
  , result_(0)
{}
struct CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal {
  constexpr CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCSetGuildRoleOrderResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCSetGuildRoleOrderResponseDefaultTypeInternal _CMsgClientToGCSetGuildRoleOrderResponse_default_instance_;
constexpr CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : last_seen_id_(PROTOBUF_ULONGLONG(0))
  , guild_id_(0u){}
struct CMsgClientToGCGuildFeedRequestDefaultTypeInternal {
  constexpr CMsgClientToGCGuildFeedRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCGuildFeedRequestDefaultTypeInternal() {}
  union {
    CMsgClientToGCGuildFeedRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCGuildFeedRequestDefaultTypeInternal _CMsgClientToGCGuildFeedRequest_default_instance_;
constexpr CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : feed_events_()
  , result_(0)

  , guild_id_(0u){}
struct CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestGuildFeedResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestGuildFeedResponseDefaultTypeInternal _CMsgClientToGCRequestGuildFeedResponse_default_instance_;
constexpr CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal {
  constexpr CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal() {}
  union {
    CMsgGCToClientGuildFeedUpdated _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgGCToClientGuildFeedUpdatedDefaultTypeInternal _CMsgGCToClientGuildFeedUpdated_default_instance_;
constexpr CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u){}
struct CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal {
  constexpr CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddPlayerToGuildChat _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAddPlayerToGuildChatDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChat_default_instance_;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal {
  constexpr CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCAddPlayerToGuildChatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCAddPlayerToGuildChatResponseDefaultTypeInternal _CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_;
constexpr CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_summary_(nullptr)
  , result_(0)

  , guild_id_(0u){}
struct CMsgFindGuildByTagResponseDefaultTypeInternal {
  constexpr CMsgFindGuildByTagResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgFindGuildByTagResponseDefaultTypeInternal() {}
  union {
    CMsgFindGuildByTagResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgFindGuildByTagResponseDefaultTypeInternal _CMsgFindGuildByTagResponse_default_instance_;
constexpr CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_summary_(nullptr)
  , guild_id_(0u){}
struct CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal {
  constexpr CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal() {}
  union {
    CMsgSearchForOpenGuildsResponse_SearchResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgSearchForOpenGuildsResponse_SearchResultDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_;
constexpr CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : search_results_()
  , result_(0)

  , use_whitelist_(false){}
struct CMsgSearchForOpenGuildsResponseDefaultTypeInternal {
  constexpr CMsgSearchForOpenGuildsResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgSearchForOpenGuildsResponseDefaultTypeInternal() {}
  union {
    CMsgSearchForOpenGuildsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgSearchForOpenGuildsResponseDefaultTypeInternal _CMsgSearchForOpenGuildsResponse_default_instance_;
constexpr CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : guild_id_(0u)
  , guild_content_flags_(0u){}
struct CMsgClientToGCReportGuildContentDefaultTypeInternal {
  constexpr CMsgClientToGCReportGuildContentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCReportGuildContentDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportGuildContent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCReportGuildContentDefaultTypeInternal _CMsgClientToGCReportGuildContent_default_instance_;
constexpr CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0)
{}
struct CMsgClientToGCReportGuildContentResponseDefaultTypeInternal {
  constexpr CMsgClientToGCReportGuildContentResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCReportGuildContentResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCReportGuildContentResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCReportGuildContentResponseDefaultTypeInternal _CMsgClientToGCReportGuildContentResponse_default_instance_;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_id_(0u){}
struct CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal {
  constexpr CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestAccountGuildPersonaInfoDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : persona_info_(nullptr)
  , result_(0)
{}
struct CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestAccountGuildPersonaInfoResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : account_ids_(){}
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal {
  constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatch _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestAccountGuildPersonaInfoBatchDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : persona_infos_()
  , result_(0)
{}
struct CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal {
  constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal() {}
  union {
    CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponseDefaultTypeInternal _CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto[63];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[27];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, created_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_language_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_logo_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_region_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_chat_group_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_description_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, default_chat_channel_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_primary_color_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_secondary_color_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_pattern_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_refresh_time_offset_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_required_rank_tier_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_motd_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInfo, guild_motd_),
  0,
  1,
  4,
  5,
  6,
  8,
  7,
  9,
  2,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, event_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, guild_points_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, guild_rank_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, guild_weekly_rank_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, guild_weekly_percentile_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary_EventPoints, guild_current_percentile_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, member_count_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildSummary, event_points_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, role_flags_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildRole, role_order_),
  1,
  0,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, member_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, member_role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, member_joined_timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildMember, member_last_active_timestamp_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, requester_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildInvite, timestamp_sent_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, guild_roles_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, guild_members_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildData, guild_invites_),
  1,
  0,
  ~0u,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, requester_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildInvite, timestamp_sent_),
  0,
  1,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, guild_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildMemberships, guild_invites_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, guild_tag_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildPersonaInfo, guild_flags_),
  1,
  0,
  2,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildsPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgAccountGuildsPersonaInfo, guild_persona_infos_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, feed_event_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, timestamp_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, event_type_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, param_uint_1_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, param_uint_2_),
  PROTOBUF_FIELD_OFFSET(::CMsgGuildFeedEvent, param_uint_3_),
  0,
  1,
  2,
  3,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuild, guild_chat_type_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCreateGuildResponse, guild_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, guild_info_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfo, guild_chat_type_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildInfoResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildData, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildDataResponse, guild_data_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, guild_data_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildDataUpdated, update_flags_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembersDataUpdated, members_data_),
  0,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembership, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildMembershipResponse, guild_memberships_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildMembershipUpdated, guild_memberships_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummary, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummary, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummaryResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummaryResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildSummaryResponse, guild_summary_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuild, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCJoinGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuild, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCLeaveGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMember, target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCKickGuildMemberResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, target_account_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRole, target_role_id_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildMemberRoleResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuild, target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCInviteToGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuild, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCDeclineInviteToGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuild, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAcceptInviteToGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuild, target_account_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCCancelInviteToGuildResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRole, role_flags_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddGuildRoleResponse, role_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, role_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, role_name_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRole, role_flags_),
  1,
  2,
  0,
  3,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCModifyGuildRoleResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRole, role_id_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRemoveGuildRoleResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, requested_role_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrder, previous_role_ids_),
  0,
  ~0u,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCSetGuildRoleOrderResponse, confirmed_role_ids_),
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCGuildFeedRequest, last_seen_id_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestGuildFeedResponse, feed_events_),
  0,
  1,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgGCToClientGuildFeedUpdated, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChat, guild_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCAddPlayerToGuildChatResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgFindGuildByTagResponse, guild_summary_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse_SearchResult, guild_summary_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, search_results_),
  PROTOBUF_FIELD_OFFSET(::CMsgSearchForOpenGuildsResponse, use_whitelist_),
  0,
  ~0u,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, guild_id_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContent, guild_content_flags_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCReportGuildContentResponse, result_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfo, account_id_),
  0,
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse, persona_info_),
  1,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch, account_ids_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, result_),
  PROTOBUF_FIELD_OFFSET(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse, persona_infos_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 22, sizeof(::CMsgGuildInfo)},
  { 39, 50, sizeof(::CMsgGuildSummary_EventPoints)},
  { 56, 64, sizeof(::CMsgGuildSummary)},
  { 67, 76, sizeof(::CMsgGuildRole)},
  { 80, 89, sizeof(::CMsgGuildMember)},
  { 93, 101, sizeof(::CMsgGuildInvite)},
  { 104, 114, sizeof(::CMsgGuildData)},
  { 119, 127, sizeof(::CMsgAccountGuildInvite)},
  { 130, -1, sizeof(::CMsgAccountGuildMemberships)},
  { 137, 145, sizeof(::CMsgGuildPersonaInfo)},
  { 148, -1, sizeof(::CMsgAccountGuildsPersonaInfo)},
  { 154, 165, sizeof(::CMsgGuildFeedEvent)},
  { 171, 178, sizeof(::CMsgClientToGCCreateGuild)},
  { 180, 187, sizeof(::CMsgClientToGCCreateGuildResponse)},
  { 189, 197, sizeof(::CMsgClientToGCSetGuildInfo)},
  { 200, 206, sizeof(::CMsgClientToGCSetGuildInfoResponse)},
  { 207, 213, sizeof(::CMsgClientToGCRequestGuildData)},
  { 214, 221, sizeof(::CMsgClientToGCRequestGuildDataResponse)},
  { 223, 230, sizeof(::CMsgGCToClientGuildDataUpdated)},
  { 232, 239, sizeof(::CMsgGCToClientGuildMembersDataUpdated)},
  { 241, -1, sizeof(::CMsgClientToGCRequestGuildMembership)},
  { 246, 253, sizeof(::CMsgClientToGCRequestGuildMembershipResponse)},
  { 255, 261, sizeof(::CMsgGCToClientGuildMembershipUpdated)},
  { 262, 268, sizeof(::CMsgClientToGCRequestGuildSummary)},
  { 269, 276, sizeof(::CMsgClientToGCRequestGuildSummaryResponse)},
  { 278, 284, sizeof(::CMsgClientToGCJoinGuild)},
  { 285, 291, sizeof(::CMsgClientToGCJoinGuildResponse)},
  { 292, 298, sizeof(::CMsgClientToGCLeaveGuild)},
  { 299, 305, sizeof(::CMsgClientToGCLeaveGuildResponse)},
  { 306, 313, sizeof(::CMsgClientToGCKickGuildMember)},
  { 315, 321, sizeof(::CMsgClientToGCKickGuildMemberResponse)},
  { 322, 330, sizeof(::CMsgClientToGCSetGuildMemberRole)},
  { 333, 339, sizeof(::CMsgClientToGCSetGuildMemberRoleResponse)},
  { 340, 347, sizeof(::CMsgClientToGCInviteToGuild)},
  { 349, 355, sizeof(::CMsgClientToGCInviteToGuildResponse)},
  { 356, 362, sizeof(::CMsgClientToGCDeclineInviteToGuild)},
  { 363, 369, sizeof(::CMsgClientToGCDeclineInviteToGuildResponse)},
  { 370, 376, sizeof(::CMsgClientToGCAcceptInviteToGuild)},
  { 377, 383, sizeof(::CMsgClientToGCAcceptInviteToGuildResponse)},
  { 384, 391, sizeof(::CMsgClientToGCCancelInviteToGuild)},
  { 393, 399, sizeof(::CMsgClientToGCCancelInviteToGuildResponse)},
  { 400, 408, sizeof(::CMsgClientToGCAddGuildRole)},
  { 411, 418, sizeof(::CMsgClientToGCAddGuildRoleResponse)},
  { 420, 429, sizeof(::CMsgClientToGCModifyGuildRole)},
  { 433, 439, sizeof(::CMsgClientToGCModifyGuildRoleResponse)},
  { 440, 447, sizeof(::CMsgClientToGCRemoveGuildRole)},
  { 449, 455, sizeof(::CMsgClientToGCRemoveGuildRoleResponse)},
  { 456, 464, sizeof(::CMsgClientToGCSetGuildRoleOrder)},
  { 467, 474, sizeof(::CMsgClientToGCSetGuildRoleOrderResponse)},
  { 476, 483, sizeof(::CMsgClientToGCGuildFeedRequest)},
  { 485, 493, sizeof(::CMsgClientToGCRequestGuildFeedResponse)},
  { 496, 502, sizeof(::CMsgGCToClientGuildFeedUpdated)},
  { 503, 509, sizeof(::CMsgClientToGCAddPlayerToGuildChat)},
  { 510, 516, sizeof(::CMsgClientToGCAddPlayerToGuildChatResponse)},
  { 517, 525, sizeof(::CMsgFindGuildByTagResponse)},
  { 528, 535, sizeof(::CMsgSearchForOpenGuildsResponse_SearchResult)},
  { 537, 545, sizeof(::CMsgSearchForOpenGuildsResponse)},
  { 548, 555, sizeof(::CMsgClientToGCReportGuildContent)},
  { 557, 563, sizeof(::CMsgClientToGCReportGuildContentResponse)},
  { 564, 570, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfo)},
  { 571, 578, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse)},
  { 580, -1, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoBatch)},
  { 586, 593, sizeof(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildSummary_EventPoints_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildInvite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAccountGuildInvite_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAccountGuildMemberships_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildPersonaInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgAccountGuildsPersonaInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGuildFeedEvent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCreateGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCreateGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildDataResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientGuildDataUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientGuildMembersDataUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildMembership_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildMembershipResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientGuildMembershipUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildSummaryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCJoinGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCJoinGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCLeaveGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCLeaveGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCKickGuildMember_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCKickGuildMemberResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildMemberRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildMemberRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCInviteToGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCInviteToGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCDeclineInviteToGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCDeclineInviteToGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAcceptInviteToGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAcceptInviteToGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCancelInviteToGuild_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCCancelInviteToGuildResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAddGuildRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAddGuildRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCModifyGuildRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCModifyGuildRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRemoveGuildRole_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRemoveGuildRoleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildRoleOrder_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCSetGuildRoleOrderResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCGuildFeedRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestGuildFeedResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgGCToClientGuildFeedUpdated_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAddPlayerToGuildChat_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCAddPlayerToGuildChatResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgFindGuildByTagResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgSearchForOpenGuildsResponse_SearchResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgSearchForOpenGuildsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCReportGuildContent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCReportGuildContentResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestAccountGuildPersonaInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestAccountGuildPersonaInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestAccountGuildPersonaInfoBatch_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_default_instance_),
};

const char descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"dota_gcmessages_client_guild.proto\"\313\003\n"
  "\rCMsgGuildInfo\022\022\n\nguild_name\030\001 \001(\t\022\021\n\tgu"
  "ild_tag\030\002 \001(\t\022\031\n\021created_timestamp\030\003 \001(\r"
  "\022\026\n\016guild_language\030\004 \001(\r\022\023\n\013guild_flags\030"
  "\005 \001(\r\022\022\n\nguild_logo\030\007 \001(\004\022\024\n\014guild_regio"
  "n\030\010 \001(\r\022\033\n\023guild_chat_group_id\030\t \001(\004\022\031\n\021"
  "guild_description\030\n \001(\t\022\037\n\027default_chat_"
  "channel_id\030\013 \001(\004\022\033\n\023guild_primary_color\030"
  "\014 \001(\r\022\035\n\025guild_secondary_color\030\r \001(\r\022\025\n\r"
  "guild_pattern\030\016 \001(\r\022!\n\031guild_refresh_tim"
  "e_offset\030\017 \001(\r\022 \n\030guild_required_rank_ti"
  "er\030\020 \001(\r\022\034\n\024guild_motd_timestamp\030\021 \001(\r\022\022"
  "\n\nguild_motd\030\022 \001(\t\"\253\002\n\020CMsgGuildSummary\022"
  "\"\n\nguild_info\030\001 \001(\0132\016.CMsgGuildInfo\022\024\n\014m"
  "ember_count\030\002 \001(\r\0223\n\014event_points\030\003 \003(\0132"
  "\035.CMsgGuildSummary.EventPoints\032\247\001\n\013Event"
  "Points\022\020\n\010event_id\030\001 \001(\r\022\024\n\014guild_points"
  "\030\002 \001(\r\022\022\n\nguild_rank\030\003 \001(\r\022\031\n\021guild_week"
  "ly_rank\030\004 \001(\r\022\037\n\027guild_weekly_percentile"
  "\030\005 \001(\r\022 \n\030guild_current_percentile\030\006 \001(\r"
  "\"[\n\rCMsgGuildRole\022\017\n\007role_id\030\001 \001(\r\022\021\n\tro"
  "le_name\030\002 \001(\t\022\022\n\nrole_flags\030\003 \001(\r\022\022\n\nrol"
  "e_order\030\004 \001(\r\"\213\001\n\017CMsgGuildMember\022\031\n\021mem"
  "ber_account_id\030\001 \001(\r\022\026\n\016member_role_id\030\002"
  " \001(\r\022\037\n\027member_joined_timestamp\030\003 \001(\r\022$\n"
  "\034member_last_active_timestamp\030\004 \001(\r\"b\n\017C"
  "MsgGuildInvite\022\034\n\024requester_account_id\030\001"
  " \001(\r\022\031\n\021target_account_id\030\002 \001(\r\022\026\n\016times"
  "tamp_sent\030\003 \001(\r\"\274\001\n\rCMsgGuildData\022\020\n\010gui"
  "ld_id\030\001 \001(\r\022\"\n\nguild_info\030\002 \001(\0132\016.CMsgGu"
  "ildInfo\022#\n\013guild_roles\030\003 \003(\0132\016.CMsgGuild"
  "Role\022\'\n\rguild_members\030\004 \003(\0132\020.CMsgGuildM"
  "ember\022\'\n\rguild_invites\030\005 \003(\0132\020.CMsgGuild"
  "Invite\"`\n\026CMsgAccountGuildInvite\022\020\n\010guil"
  "d_id\030\001 \001(\r\022\034\n\024requester_account_id\030\002 \001(\r"
  "\022\026\n\016timestamp_sent\030\003 \001(\r\"`\n\033CMsgAccountG"
  "uildMemberships\022\021\n\tguild_ids\030\001 \003(\r\022.\n\rgu"
  "ild_invites\030\002 \003(\0132\027.CMsgAccountGuildInvi"
  "te\"P\n\024CMsgGuildPersonaInfo\022\020\n\010guild_id\030\001"
  " \001(\r\022\021\n\tguild_tag\030\002 \001(\t\022\023\n\013guild_flags\030\003"
  " \001(\r\"R\n\034CMsgAccountGuildsPersonaInfo\0222\n\023"
  "guild_persona_infos\030\001 \003(\0132\025.CMsgGuildPer"
  "sonaInfo\"\224\001\n\022CMsgGuildFeedEvent\022\025\n\rfeed_"
  "event_id\030\001 \001(\004\022\021\n\ttimestamp\030\002 \001(\r\022\022\n\neve"
  "nt_type\030\003 \001(\r\022\024\n\014param_uint_1\030\004 \001(\r\022\024\n\014p"
  "aram_uint_2\030\005 \001(\r\022\024\n\014param_uint_3\030\006 \001(\r\""
  "\207\001\n\031CMsgClientToGCCreateGuild\022\"\n\nguild_i"
  "nfo\030\001 \001(\0132\016.CMsgGuildInfo\022F\n\017guild_chat_"
  "type\030\002 \001(\0162\017.EGuildChatType:\034k_EGuildCha"
  "tType_Unspecified\"\324\003\n!CMsgClientToGCCrea"
  "teGuildResponse\022N\n\006result\030\001 \001(\0162,.CMsgCl"
  "ientToGCCreateGuildResponse.EResponse:\020k"
  "_eInternalError\022\020\n\010guild_id\030\002 \001(\r\"\314\002\n\tER"
  "esponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucc"
  "ess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016"
  "\n\nk_eTimeout\020\004\022\022\n\016k_eInvalidName\020\005\022\026\n\022k_"
  "eNameAlreadyUsed\020\006\022\021\n\rk_eInvalidTag\020\007\022\025\n"
  "\021k_eTagAlreadyUsed\020\010\022\031\n\025k_eInvalidDescri"
  "ption\020\t\022\024\n\020k_eInvalidRegion\020\n\022\022\n\016k_eInva"
  "lidLogo\020\013\022\026\n\022k_eDoesNotOwnEvent\020\014\022\021\n\rk_e"
  "GuildLimit\020\r\022\022\n\016k_eInvalidMotD\020\016\022\016\n\nk_eB"
  "locked\020\017\"\232\001\n\032CMsgClientToGCSetGuildInfo\022"
  "\020\n\010guild_id\030\001 \001(\r\022\"\n\nguild_info\030\002 \001(\0132\016."
  "CMsgGuildInfo\022F\n\017guild_chat_type\030\003 \001(\0162\017"
  ".EGuildChatType:\034k_EGuildChatType_Unspec"
  "ified\"\273\003\n\"CMsgClientToGCSetGuildInfoResp"
  "onse\022O\n\006result\030\001 \001(\0162-.CMsgClientToGCSet"
  "GuildInfoResponse.EResponse:\020k_eInternal"
  "Error\"\303\002\n\tEResponse\022\024\n\020k_eInternalError\020"
  "\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_e"
  "Disabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalid"
  "Guild\020\005\022\020\n\014k_eNotMember\020\006\022\023\n\017k_eNoPermis"
  "sion\020\007\022\022\n\016k_eMotDTooLong\020\010\022\036\n\032k_eNameCha"
  "ngeNoPermissions\020\t\022\035\n\031k_eTagChangeNoPerm"
  "issions\020\n\022\022\n\016k_eNameInvalid\020\013\022\021\n\rk_eTagI"
  "nvalid\020\014\022\031\n\025k_eDescriptionInvalid\020\r\022\016\n\nk"
  "_eBlocked\020\016\"2\n\036CMsgClientToGCRequestGuil"
  "dData\022\020\n\010guild_id\030\001 \001(\r\"\255\002\n&CMsgClientTo"
  "GCRequestGuildDataResponse\022S\n\006result\030\001 \001"
  "(\01621.CMsgClientToGCRequestGuildDataRespo"
  "nse.EResponse:\020k_eInternalError\022\"\n\nguild"
  "_data\030\002 \001(\0132\016.CMsgGuildData\"\211\001\n\tERespons"
  "e\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022"
  "\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eT"
  "imeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eNotM"
  "ember\020\006\"Z\n\036CMsgGCToClientGuildDataUpdate"
  "d\022\"\n\nguild_data\030\001 \001(\0132\016.CMsgGuildData\022\024\n"
  "\014update_flags\030\002 \001(\r\"a\n%CMsgGCToClientGui"
  "ldMembersDataUpdated\022\020\n\010guild_id\030\001 \001(\r\022&"
  "\n\014members_data\030\002 \003(\0132\020.CMsgGuildMember\"&"
  "\n$CMsgClientToGCRequestGuildMembership\"\246"
  "\002\n,CMsgClientToGCRequestGuildMembershipR"
  "esponse\022Y\n\006result\030\001 \001(\01627.CMsgClientToGC"
  "RequestGuildMembershipResponse.EResponse"
  ":\020k_eInternalError\0227\n\021guild_memberships\030"
  "\002 \001(\0132\034.CMsgAccountGuildMemberships\"b\n\tE"
  "Response\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuc"
  "cess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022"
  "\016\n\nk_eTimeout\020\004\"_\n$CMsgGCToClientGuildMe"
  "mbershipUpdated\0227\n\021guild_memberships\030\001 \001"
  "(\0132\034.CMsgAccountGuildMemberships\"5\n!CMsg"
  "ClientToGCRequestGuildSummary\022\020\n\010guild_i"
  "d\030\001 \001(\r\"\246\002\n)CMsgClientToGCRequestGuildSu"
  "mmaryResponse\022V\n\006result\030\001 \001(\01624.CMsgClie"
  "ntToGCRequestGuildSummaryResponse.ERespo"
  "nse:\020k_eInternalError\022(\n\rguild_summary\030\002"
  " \001(\0132\021.CMsgGuildSummary\"w\n\tEResponse\022\024\n\020"
  "k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_"
  "eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeou"
  "t\020\004\022\023\n\017k_eInvalidGuild\020\005\"+\n\027CMsgClientTo"
  "GCJoinGuild\022\020\n\010guild_id\030\001 \001(\r\"\330\002\n\037CMsgCl"
  "ientToGCJoinGuildResponse\022L\n\006result\030\001 \001("
  "\0162*.CMsgClientToGCJoinGuildResponse.ERes"
  "ponse:\020k_eInternalError\"\346\001\n\tEResponse\022\024\n"
  "\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk"
  "_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeo"
  "ut\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eGuildFul"
  "l\020\006\022\024\n\020k_eAlreadyMember\020\007\022\021\n\rk_eGuildLim"
  "it\020\010\022\032\n\026k_eGuildRequiresInvite\020\t\022\026\n\022k_eG"
  "uildRankTooLow\020\n\",\n\030CMsgClientToGCLeaveG"
  "uild\022\020\n\010guild_id\030\001 \001(\r\"\217\002\n CMsgClientToG"
  "CLeaveGuildResponse\022M\n\006result\030\001 \001(\0162+.CM"
  "sgClientToGCLeaveGuildResponse.EResponse"
  ":\020k_eInternalError\"\233\001\n\tEResponse\022\024\n\020k_eI"
  "nternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eToo"
  "Busy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022"
  "\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eNotMember\020\006\022\020"
  "\n\014k_eLastAdmin\020\007\"L\n\035CMsgClientToGCKickGu"
  "ildMember\022\020\n\010guild_id\030\001 \001(\r\022\031\n\021target_ac"
  "count_id\030\002 \001(\r\"\322\002\n%CMsgClientToGCKickGui"
  "ldMemberResponse\022R\n\006result\030\001 \001(\01620.CMsgC"
  "lientToGCKickGuildMemberResponse.ERespon"
  "se:\020k_eInternalError\"\324\001\n\tEResponse\022\024\n\020k_"
  "eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eT"
  "ooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020"
  "\004\022\023\n\017k_eInvalidGuild\020\005\022\031\n\025k_eRequesterNo"
  "tMember\020\006\022\026\n\022k_eTargetNotMember\020\007\022\023\n\017k_e"
  "NoPermission\020\010\022\023\n\017k_eCantKickSelf\020\t\"g\n C"
  "MsgClientToGCSetGuildMemberRole\022\020\n\010guild"
  "_id\030\001 \001(\r\022\031\n\021target_account_id\030\002 \001(\r\022\026\n\016"
  "target_role_id\030\003 \001(\r\"\356\002\n(CMsgClientToGCS"
  "etGuildMemberRoleResponse\022U\n\006result\030\001 \001("
  "\01623.CMsgClientToGCSetGuildMemberRoleResp"
  "onse.EResponse:\020k_eInternalError\"\352\001\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\031\n\025k_"
  "eRequesterNotMember\020\006\022\026\n\022k_eTargetNotMem"
  "ber\020\007\022\023\n\017k_eNoPermission\020\010\022\022\n\016k_eInvalid"
  "Role\020\t\022\025\n\021k_eAdminViolation\020\n\"J\n\033CMsgCli"
  "entToGCInviteToGuild\022\020\n\010guild_id\030\001 \001(\r\022\031"
  "\n\021target_account_id\030\002 \001(\r\"\223\003\n#CMsgClient"
  "ToGCInviteToGuildResponse\022P\n\006result\030\001 \001("
  "\0162..CMsgClientToGCInviteToGuildResponse."
  "EResponse:\020k_eInternalError\"\231\002\n\tERespons"
  "e\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022"
  "\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eT"
  "imeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n\014k_eGuil"
  "dFull\020\006\022\031\n\025k_eRequesterNotMember\020\007\022\025\n\021k_"
  "eAlreadyAMember\020\010\022\025\n\021k_eAlreadyInvited\020\t"
  "\022\032\n\026k_eNoInvitePermissions\020\n\022\025\n\021k_eTooMa"
  "nyInvites\020\013\022\022\n\016k_eInvalidUser\020\014\"6\n\"CMsgC"
  "lientToGCDeclineInviteToGuild\022\020\n\010guild_i"
  "d\030\001 \001(\r\"\225\002\n*CMsgClientToGCDeclineInviteT"
  "oGuildResponse\022W\n\006result\030\001 \001(\01625.CMsgCli"
  "entToGCDeclineInviteToGuildResponse.ERes"
  "ponse:\020k_eInternalError\"\215\001\n\tEResponse\022\024\n"
  "\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk"
  "_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeo"
  "ut\020\004\022\023\n\017k_eInvalidGuild\020\005\022\024\n\020k_eNoInvite"
  "Found\020\006\"5\n!CMsgClientToGCAcceptInviteToG"
  "uild\022\020\n\010guild_id\030\001 \001(\r\"\346\002\n)CMsgClientToG"
  "CAcceptInviteToGuildResponse\022V\n\006result\030\001"
  " \001(\01624.CMsgClientToGCAcceptInviteToGuild"
  "Response.EResponse:\020k_eInternalError\"\340\001\n"
  "\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eS"
  "uccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020"
  "\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\024"
  "\n\020k_eNoInviteFound\020\006\022\020\n\014k_eGuildFull\020\007\022\021"
  "\n\rk_eGuildLimit\020\010\022\025\n\021k_eInvalidInviter\020\t"
  "\022\025\n\021k_eAlreadyInGuild\020\n\"P\n!CMsgClientToG"
  "CCancelInviteToGuild\022\020\n\010guild_id\030\001 \001(\r\022\031"
  "\n\021target_account_id\030\002 \001(\r\"\251\002\n)CMsgClient"
  "ToGCCancelInviteToGuildResponse\022V\n\006resul"
  "t\030\001 \001(\01624.CMsgClientToGCCancelInviteToGu"
  "ildResponse.EResponse:\020k_eInternalError\""
  "\243\001\n\tEResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk"
  "_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabl"
  "ed\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020"
  "\005\022\024\n\020k_eNoInviteFound\020\006\022\024\n\020k_eNoPermissi"
  "ons\020\007\"U\n\032CMsgClientToGCAddGuildRole\022\020\n\010g"
  "uild_id\030\001 \001(\r\022\021\n\trole_name\030\002 \001(\t\022\022\n\nrole"
  "_flags\030\003 \001(\r\"\223\003\n\"CMsgClientToGCAddGuildR"
  "oleResponse\022O\n\006result\030\001 \001(\0162-.CMsgClient"
  "ToGCAddGuildRoleResponse.EResponse:\020k_eI"
  "nternalError\022\017\n\007role_id\030\002 \001(\r\"\212\002\n\tERespo"
  "nse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSuccess\020"
  "\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_"
  "eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\026\n\022k_eNa"
  "meAlreadyUsed\020\006\022\024\n\020k_eNoPermissions\020\007\022\023\n"
  "\017k_eInvalidFlags\020\010\022\022\n\016k_eInvalidName\020\t\022\025"
  "\n\021k_eAdminViolation\020\n\022\023\n\017k_eTooManyRoles"
  "\020\013\022\016\n\nk_eBlocked\020\014\"i\n\035CMsgClientToGCModi"
  "fyGuildRole\022\020\n\010guild_id\030\001 \001(\r\022\017\n\007role_id"
  "\030\002 \001(\r\022\021\n\trole_name\030\003 \001(\t\022\022\n\nrole_flags\030"
  "\004 \001(\r\"\207\003\n%CMsgClientToGCModifyGuildRoleR"
  "esponse\022R\n\006result\030\001 \001(\01620.CMsgClientToGC"
  "ModifyGuildRoleResponse.EResponse:\020k_eIn"
  "ternalError\"\211\002\n\tEResponse\022\024\n\020k_eInternal"
  "Error\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022"
  "\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eI"
  "nvalidGuild\020\005\022\022\n\016k_eInvalidRole\020\006\022\026\n\022k_e"
  "NameAlreadyUsed\020\007\022\023\n\017k_eInvalidFlags\020\010\022\022"
  "\n\016k_eInvalidName\020\t\022\024\n\020k_eNoPermissions\020\n"
  "\022\025\n\021k_eAdminViolation\020\013\022\016\n\nk_eBlocked\020\014\""
  "B\n\035CMsgClientToGCRemoveGuildRole\022\020\n\010guil"
  "d_id\030\001 \001(\r\022\017\n\007role_id\030\002 \001(\r\"\351\002\n%CMsgClie"
  "ntToGCRemoveGuildRoleResponse\022R\n\006result\030"
  "\001 \001(\01620.CMsgClientToGCRemoveGuildRoleRes"
  "ponse.EResponse:\020k_eInternalError\"\353\001\n\tER"
  "esponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucc"
  "ess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016"
  "\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\022\n\016k"
  "_eInvalidRole\020\006\022\023\n\017k_eRoleNotEmpty\020\007\022\024\n\020"
  "k_eNoPermissions\020\010\022\025\n\021k_eAdminViolation\020"
  "\t\022\034\n\030k_eCantRemoveDefaultRole\020\n\"j\n\037CMsgC"
  "lientToGCSetGuildRoleOrder\022\020\n\010guild_id\030\001"
  " \001(\r\022\032\n\022requested_role_ids\030\002 \003(\r\022\031\n\021prev"
  "ious_role_ids\030\003 \003(\r\"\353\002\n\'CMsgClientToGCSe"
  "tGuildRoleOrderResponse\022T\n\006result\030\001 \001(\0162"
  "2.CMsgClientToGCSetGuildRoleOrderRespons"
  "e.EResponse:\020k_eInternalError\022\032\n\022confirm"
  "ed_role_ids\030\002 \003(\r\"\315\001\n\tEResponse\022\024\n\020k_eIn"
  "ternalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooB"
  "usy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023"
  "\n\017k_eInvalidGuild\020\005\022\022\n\016k_eInvalidRole\020\006\022"
  "\023\n\017k_eInvalidOrder\020\007\022\024\n\020k_eNoPermissions"
  "\020\010\022\025\n\021k_eAdminViolation\020\t\"H\n\036CMsgClientT"
  "oGCGuildFeedRequest\022\020\n\010guild_id\030\001 \001(\r\022\024\n"
  "\014last_seen_id\030\002 \001(\004\"\311\002\n&CMsgClientToGCRe"
  "questGuildFeedResponse\022S\n\006result\030\001 \001(\01621"
  ".CMsgClientToGCRequestGuildFeedResponse."
  "EResponse:\020k_eInternalError\022\020\n\010guild_id\030"
  "\002 \001(\r\022(\n\013feed_events\030\003 \003(\0132\023.CMsgGuildFe"
  "edEvent\"\215\001\n\tEResponse\022\024\n\020k_eInternalErro"
  "r\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k"
  "_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInval"
  "idGuild\020\005\022\024\n\020k_eNoPermissions\020\006\"2\n\036CMsgG"
  "CToClientGuildFeedUpdated\022\020\n\010guild_id\030\001 "
  "\001(\r\"6\n\"CMsgClientToGCAddPlayerToGuildCha"
  "t\022\020\n\010guild_id\030\001 \001(\r\"\255\002\n*CMsgClientToGCAd"
  "dPlayerToGuildChatResponse\022W\n\006result\030\001 \001"
  "(\01625.CMsgClientToGCAddPlayerToGuildChatR"
  "esponse.EResponse:\020k_eInternalError\"\245\001\n\t"
  "EResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSu"
  "ccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003"
  "\022\016\n\nk_eTimeout\020\004\022\023\n\017k_eInvalidGuild\020\005\022\020\n"
  "\014k_eNotMember\020\006\022\032\n\026k_eSteamChatNotEnable"
  "d\020\007\"\257\002\n\032CMsgFindGuildByTagResponse\022G\n\006re"
  "sult\030\001 \001(\0162%.CMsgFindGuildByTagResponse."
  "EResponse:\020k_eInternalError\022\020\n\010guild_id\030"
  "\002 \001(\r\022(\n\rguild_summary\030\003 \001(\0132\021.CMsgGuild"
  "Summary\"\213\001\n\tEResponse\022\024\n\020k_eInternalErro"
  "r\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k"
  "_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\021\n\rk_eInval"
  "idTag\020\005\022\024\n\020k_eGuildNotFound\020\006\"\375\002\n\037CMsgSe"
  "archForOpenGuildsResponse\022L\n\006result\030\001 \001("
  "\0162*.CMsgSearchForOpenGuildsResponse.ERes"
  "ponse:\020k_eInternalError\022E\n\016search_result"
  "s\030\002 \003(\0132-.CMsgSearchForOpenGuildsRespons"
  "e.SearchResult\022\025\n\ruse_whitelist\030\003 \001(\010\032J\n"
  "\014SearchResult\022\020\n\010guild_id\030\001 \001(\r\022(\n\rguild"
  "_summary\030\002 \001(\0132\021.CMsgGuildSummary\"b\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTimeout\020\004\"\317\001\n CMsgClientToGCReportGu"
  "ildContent\022\020\n\010guild_id\030\001 \001(\r\022\033\n\023guild_co"
  "ntent_flags\030\002 \001(\r\"|\n\rEContentFlags\022\013\n\007k_"
  "eNone\020\000\022\030\n\024k_eInappropriateName\020\001\022\027\n\023k_e"
  "InappropriateTag\020\002\022\030\n\024k_eInappropriateLo"
  "go\020\004\022\021\n\rk_eValidFlags\020\007\"\221\002\n(CMsgClientTo"
  "GCReportGuildContentResponse\022U\n\006result\030\001"
  " \001(\01623.CMsgClientToGCReportGuildContentR"
  "esponse.EResponse:\020k_eInternalError\"\215\001\n\t"
  "EResponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSu"
  "ccess\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003"
  "\022\016\n\nk_eTimeout\020\004\022\024\n\020k_eGuildNotFound\020\005\022\023"
  "\n\017k_eFlagsInvalid\020\006\"B\n,CMsgClientToGCReq"
  "uestAccountGuildPersonaInfo\022\022\n\naccount_i"
  "d\030\001 \001(\r\"\311\002\n4CMsgClientToGCRequestAccount"
  "GuildPersonaInfoResponse\022a\n\006result\030\001 \001(\016"
  "2\?.CMsgClientToGCRequestAccountGuildPers"
  "onaInfoResponse.EResponse:\020k_eInternalEr"
  "ror\0223\n\014persona_info\030\002 \001(\0132\035.CMsgAccountG"
  "uildsPersonaInfo\"y\n\tEResponse\022\024\n\020k_eInte"
  "rnalError\020\000\022\016\n\nk_eSuccess\020\001\022\016\n\nk_eTooBus"
  "y\020\002\022\017\n\013k_eDisabled\020\003\022\016\n\nk_eTimeout\020\004\022\025\n\021"
  "k_eInvalidAccount\020\005\"H\n1CMsgClientToGCReq"
  "uestAccountGuildPersonaInfoBatch\022\023\n\013acco"
  "unt_ids\030\001 \003(\r\"\324\002\n9CMsgClientToGCRequestA"
  "ccountGuildPersonaInfoBatchResponse\022f\n\006r"
  "esult\030\001 \001(\0162D.CMsgClientToGCRequestAccou"
  "ntGuildPersonaInfoBatchResponse.ERespons"
  "e:\020k_eInternalError\0224\n\rpersona_infos\030\002 \003"
  "(\0132\035.CMsgAccountGuildsPersonaInfo\"y\n\tERe"
  "sponse\022\024\n\020k_eInternalError\020\000\022\016\n\nk_eSucce"
  "ss\020\001\022\016\n\nk_eTooBusy\020\002\022\017\n\013k_eDisabled\020\003\022\016\n"
  "\nk_eTimeout\020\004\022\025\n\021k_eInvalidRequest\020\005*\347\010\n"
  "\021EGuildAuditAction\022\037\n\033k_EGuildAuditActio"
  "n_Invalid\020\000\022$\n k_EGuildAuditAction_Guild"
  "Created\020\001\022,\n(k_EGuildAuditAction_GuildLa"
  "nguageChanged\020\002\022)\n%k_EGuildAuditAction_G"
  "uildFlagsChanged\020\003\022)\n%k_EGuildAuditActio"
  "n_GuildMemberJoined\020\005\022\'\n#k_EGuildAuditAc"
  "tion_GuildMemberLeft\020\006\022)\n%k_EGuildAuditA"
  "ction_GuildMemberKicked\020\007\022.\n*k_EGuildAud"
  "itAction_GuildMemberRoleChanged\020\010\022(\n$k_E"
  "GuildAuditAction_GuildLogoChanged\020\t\022*\n&k"
  "_EGuildAuditAction_GuildRegionChanged\020\n\022"
  "/\n+k_EGuildAuditAction_GuildDescriptionC"
  "hanged\020\013\0220\n,k_EGuildAuditAction_GuildPri"
  "maryColorChanged\020\014\0222\n.k_EGuildAuditActio"
  "n_GuildSecondaryColorChanged\020\r\022+\n\'k_EGui"
  "ldAuditAction_GuildPatternChanged\020\016\022(\n$k"
  "_EGuildAuditAction_AdminClearedLogo\020\017\0220\n"
  ",k_EGuildAuditAction_GuildRequiredRankCh"
  "anged\020\020\022(\n$k_EGuildAuditAction_GuildMotD"
  "Changed\020\022\022&\n\"k_EGuildAuditAction_AdminRe"
  "setName\020\023\022%\n!k_EGuildAuditAction_AdminRe"
  "setTag\020\024\022!\n\035k_EGuildAuditAction_AdminLoc"
  "k\020\025\022(\n$k_EGuildAuditAction_GuildNameChan"
  "ged\020\026\022\'\n#k_EGuildAuditAction_GuildTagCha"
  "nged\020\027\022&\n\"k_EGuildAuditAction_AdminPermi"
  "tted\020\030\022$\n k_EGuildAuditAction_AdminBlock"
  "ed\020\031\022\'\n#k_EGuildAuditAction_AdminBannedU"
  "ser\020\032\022\'\n#k_EGuildAuditAction_AdminExoner"
  "ated\020\033*p\n\016EGuildChatType\022 \n\034k_EGuildChat"
  "Type_Unspecified\020\000\022#\n\037k_EGuildChatType_S"
  "teamChatGroup\020\001\022\027\n\023k_EGuildChatType_GC\020\002"
  "B\005H\001\200\001\000"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto = {
  false, false, 13567, descriptor_table_protodef_dota_5fgcmessages_5fclient_5fguild_2eproto, "dota_gcmessages_client_guild.proto", 
  &descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_once, nullptr, 0, 63,
  schemas, file_default_instances, TableStruct_dota_5fgcmessages_5fclient_5fguild_2eproto::offsets,
  file_level_metadata_dota_5fgcmessages_5fclient_5fguild_2eproto, file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto, file_level_service_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_dota_5fgcmessages_5fclient_5fguild_2eproto(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCreateGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[0];
}
bool CMsgClientToGCCreateGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInternalError;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eSuccess;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eDisabled;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTimeout;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidName;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidTag;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eTagAlreadyUsed;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidDescription;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidRegion;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidLogo;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eDoesNotOwnEvent;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eInvalidMotD;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::k_eBlocked;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCCreateGuildResponse_EResponse CMsgClientToGCCreateGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCCreateGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildInfoResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[1];
}
bool CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNotMember;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNoPermission;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eMotDTooLong;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNameChangeNoPermissions;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTagChangeNoPermissions;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eNameInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eTagInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eDescriptionInvalid;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::k_eBlocked;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildInfoResponse_EResponse CMsgClientToGCSetGuildInfoResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildInfoResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildDataResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[2];
}
bool CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::k_eNotMember;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildDataResponse_EResponse CMsgClientToGCRequestGuildDataResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildDataResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildMembershipResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[3];
}
bool CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildMembershipResponse_EResponse CMsgClientToGCRequestGuildMembershipResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildMembershipResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildSummaryResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[4];
}
bool CMsgClientToGCRequestGuildSummaryResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildSummaryResponse_EResponse CMsgClientToGCRequestGuildSummaryResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildSummaryResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCJoinGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[5];
}
bool CMsgClientToGCJoinGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eInternalError;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eSuccess;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eDisabled;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eTimeout;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eAlreadyMember;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildRequiresInvite;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::k_eGuildRankTooLow;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCJoinGuildResponse_EResponse CMsgClientToGCJoinGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCJoinGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCLeaveGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[6];
}
bool CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eInternalError;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eSuccess;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eDisabled;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eTimeout;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eNotMember;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::k_eLastAdmin;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCLeaveGuildResponse_EResponse CMsgClientToGCLeaveGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCLeaveGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCKickGuildMemberResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[7];
}
bool CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eInternalError;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eSuccess;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTooBusy;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eDisabled;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTimeout;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eInvalidGuild;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eTargetNotMember;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eNoPermission;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::k_eCantKickSelf;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::EResponse_MIN;
constexpr CMsgClientToGCKickGuildMemberResponse_EResponse CMsgClientToGCKickGuildMemberResponse::EResponse_MAX;
constexpr int CMsgClientToGCKickGuildMemberResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildMemberRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[8];
}
bool CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eTargetNotMember;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eNoPermission;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildMemberRoleResponse_EResponse CMsgClientToGCSetGuildMemberRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildMemberRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[9];
}
bool CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eRequesterNotMember;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eAlreadyAMember;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eAlreadyInvited;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eNoInvitePermissions;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eTooManyInvites;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::k_eInvalidUser;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCInviteToGuildResponse_EResponse CMsgClientToGCInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCDeclineInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[10];
}
bool CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCDeclineInviteToGuildResponse_EResponse CMsgClientToGCDeclineInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCDeclineInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAcceptInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[11];
}
bool CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eGuildFull;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eGuildLimit;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eInvalidInviter;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::k_eAlreadyInGuild;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCAcceptInviteToGuildResponse_EResponse CMsgClientToGCAcceptInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCAcceptInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCCancelInviteToGuildResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[12];
}
bool CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eInternalError;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eSuccess;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eTooBusy;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eDisabled;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eTimeout;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eInvalidGuild;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eNoInviteFound;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::k_eNoPermissions;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::EResponse_MIN;
constexpr CMsgClientToGCCancelInviteToGuildResponse_EResponse CMsgClientToGCCancelInviteToGuildResponse::EResponse_MAX;
constexpr int CMsgClientToGCCancelInviteToGuildResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[13];
}
bool CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidFlags;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eInvalidName;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eTooManyRoles;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::k_eBlocked;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCAddGuildRoleResponse_EResponse CMsgClientToGCAddGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCAddGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCModifyGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[14];
}
bool CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eNameAlreadyUsed;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidFlags;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eInvalidName;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::k_eBlocked;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCModifyGuildRoleResponse_EResponse CMsgClientToGCModifyGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCModifyGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRemoveGuildRoleResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[15];
}
bool CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInternalError;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eSuccess;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eTooBusy;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eDisabled;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eTimeout;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eInvalidRole;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eRoleNotEmpty;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eNoPermissions;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eAdminViolation;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::k_eCantRemoveDefaultRole;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::EResponse_MIN;
constexpr CMsgClientToGCRemoveGuildRoleResponse_EResponse CMsgClientToGCRemoveGuildRoleResponse::EResponse_MAX;
constexpr int CMsgClientToGCRemoveGuildRoleResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCSetGuildRoleOrderResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[16];
}
bool CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInternalError;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eSuccess;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eTooBusy;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eDisabled;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eTimeout;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidGuild;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidRole;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eInvalidOrder;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eNoPermissions;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::k_eAdminViolation;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::EResponse_MIN;
constexpr CMsgClientToGCSetGuildRoleOrderResponse_EResponse CMsgClientToGCSetGuildRoleOrderResponse::EResponse_MAX;
constexpr int CMsgClientToGCSetGuildRoleOrderResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestGuildFeedResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[17];
}
bool CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eInternalError;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eSuccess;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eDisabled;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eTimeout;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eInvalidGuild;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::k_eNoPermissions;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestGuildFeedResponse_EResponse CMsgClientToGCRequestGuildFeedResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestGuildFeedResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[18];
}
bool CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eInternalError;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eSuccess;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eTooBusy;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eDisabled;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eTimeout;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eInvalidGuild;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eNotMember;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::k_eSteamChatNotEnabled;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_MIN;
constexpr CMsgClientToGCAddPlayerToGuildChatResponse_EResponse CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_MAX;
constexpr int CMsgClientToGCAddPlayerToGuildChatResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgFindGuildByTagResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[19];
}
bool CMsgFindGuildByTagResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eInternalError;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eSuccess;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eTooBusy;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eDisabled;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eTimeout;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eInvalidTag;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::k_eGuildNotFound;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::EResponse_MIN;
constexpr CMsgFindGuildByTagResponse_EResponse CMsgFindGuildByTagResponse::EResponse_MAX;
constexpr int CMsgFindGuildByTagResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgSearchForOpenGuildsResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[20];
}
bool CMsgSearchForOpenGuildsResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eInternalError;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eSuccess;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eTooBusy;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eDisabled;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::k_eTimeout;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::EResponse_MIN;
constexpr CMsgSearchForOpenGuildsResponse_EResponse CMsgSearchForOpenGuildsResponse::EResponse_MAX;
constexpr int CMsgSearchForOpenGuildsResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContent_EContentFlags_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[21];
}
bool CMsgClientToGCReportGuildContent_EContentFlags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eNone;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateName;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateTag;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eInappropriateLogo;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::k_eValidFlags;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::EContentFlags_MIN;
constexpr CMsgClientToGCReportGuildContent_EContentFlags CMsgClientToGCReportGuildContent::EContentFlags_MAX;
constexpr int CMsgClientToGCReportGuildContent::EContentFlags_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCReportGuildContentResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[22];
}
bool CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eInternalError;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eSuccess;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eTooBusy;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eDisabled;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eTimeout;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eGuildNotFound;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::k_eFlagsInvalid;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::EResponse_MIN;
constexpr CMsgClientToGCReportGuildContentResponse_EResponse CMsgClientToGCReportGuildContentResponse::EResponse_MAX;
constexpr int CMsgClientToGCReportGuildContentResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[23];
}
bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eSuccess;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eDisabled;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eTimeout;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::k_eInvalidAccount;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[24];
}
bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eInternalError;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eSuccess;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eTooBusy;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eDisabled;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eTimeout;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::k_eInvalidRequest;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_MIN;
constexpr CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_MAX;
constexpr int CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::EResponse_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildAuditAction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[25];
}
bool EGuildAuditAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildChatType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_dota_5fgcmessages_5fclient_5fguild_2eproto);
  return file_level_enum_descriptors_dota_5fgcmessages_5fclient_5fguild_2eproto[26];
}
bool EGuildChatType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class CMsgGuildInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildInfo>()._has_bits_);
  static void set_has_guild_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_created_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_guild_language(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_guild_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_guild_logo(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_guild_region(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_guild_chat_group_id(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_guild_description(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_default_chat_channel_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_guild_primary_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_guild_secondary_color(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_guild_pattern(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_guild_refresh_time_offset(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_guild_required_rank_tier(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_guild_motd_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_guild_motd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildInfo::CMsgGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildInfo)
}
CMsgGuildInfo::CMsgGuildInfo(const CMsgGuildInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guild_name()) {
    guild_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guild_name(), 
      GetArena());
  }
  guild_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guild_tag()) {
    guild_tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guild_tag(), 
      GetArena());
  }
  guild_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guild_description()) {
    guild_description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guild_description(), 
      GetArena());
  }
  guild_motd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guild_motd()) {
    guild_motd_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guild_motd(), 
      GetArena());
  }
  ::memcpy(&created_timestamp_, &from.created_timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_motd_timestamp_) -
    reinterpret_cast<char*>(&created_timestamp_)) + sizeof(guild_motd_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildInfo)
}

void CMsgGuildInfo::SharedCtor() {
guild_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guild_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guild_description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
guild_motd_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&created_timestamp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_motd_timestamp_) -
    reinterpret_cast<char*>(&created_timestamp_)) + sizeof(guild_motd_timestamp_));
}

CMsgGuildInfo::~CMsgGuildInfo() {
  // @@protoc_insertion_point(destructor:CMsgGuildInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  guild_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  guild_motd_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgGuildInfo::ArenaDtor(void* object) {
  CMsgGuildInfo* _this = reinterpret_cast< CMsgGuildInfo* >(object);
  (void)_this;
}
void CMsgGuildInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      guild_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      guild_tag_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      guild_description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      guild_motd_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&created_timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_region_) -
        reinterpret_cast<char*>(&created_timestamp_)) + sizeof(guild_region_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&guild_logo_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_required_rank_tier_) -
        reinterpret_cast<char*>(&guild_logo_)) + sizeof(guild_required_rank_tier_));
  }
  guild_motd_timestamp_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string guild_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_guild_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildInfo.guild_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string guild_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_guild_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildInfo.guild_tag");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 created_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_created_timestamp(&has_bits);
          created_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_language = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_guild_language(&has_bits);
          guild_language_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_guild_flags(&has_bits);
          guild_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 guild_logo = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_guild_logo(&has_bits);
          guild_logo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_region = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_guild_region(&has_bits);
          guild_region_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 guild_chat_group_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_guild_chat_group_id(&has_bits);
          guild_chat_group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string guild_description = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_guild_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildInfo.guild_description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 default_chat_channel_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_default_chat_channel_id(&has_bits);
          default_chat_channel_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_primary_color = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_guild_primary_color(&has_bits);
          guild_primary_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_secondary_color = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          _Internal::set_has_guild_secondary_color(&has_bits);
          guild_secondary_color_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_pattern = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          _Internal::set_has_guild_pattern(&has_bits);
          guild_pattern_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_refresh_time_offset = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_guild_refresh_time_offset(&has_bits);
          guild_refresh_time_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_required_rank_tier = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          _Internal::set_has_guild_required_rank_tier(&has_bits);
          guild_required_rank_tier_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_motd_timestamp = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_guild_motd_timestamp(&has_bits);
          guild_motd_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string guild_motd = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_guild_motd();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildInfo.guild_motd");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string guild_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_name().data(), static_cast<int>(this->_internal_guild_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_guild_name(), target);
  }

  // optional string guild_tag = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_tag().data(), static_cast<int>(this->_internal_guild_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_tag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_guild_tag(), target);
  }

  // optional uint32 created_timestamp = 3;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_created_timestamp(), target);
  }

  // optional uint32 guild_language = 4;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_guild_language(), target);
  }

  // optional uint32 guild_flags = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_guild_flags(), target);
  }

  // optional uint64 guild_logo = 7;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_guild_logo(), target);
  }

  // optional uint32 guild_region = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_guild_region(), target);
  }

  // optional uint64 guild_chat_group_id = 9;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(9, this->_internal_guild_chat_group_id(), target);
  }

  // optional string guild_description = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_description().data(), static_cast<int>(this->_internal_guild_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_description");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_guild_description(), target);
  }

  // optional uint64 default_chat_channel_id = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_default_chat_channel_id(), target);
  }

  // optional uint32 guild_primary_color = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_guild_primary_color(), target);
  }

  // optional uint32 guild_secondary_color = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_guild_secondary_color(), target);
  }

  // optional uint32 guild_pattern = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_guild_pattern(), target);
  }

  // optional uint32 guild_refresh_time_offset = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_guild_refresh_time_offset(), target);
  }

  // optional uint32 guild_required_rank_tier = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_guild_required_rank_tier(), target);
  }

  // optional uint32 guild_motd_timestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_guild_motd_timestamp(), target);
  }

  // optional string guild_motd = 18;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_motd().data(), static_cast<int>(this->_internal_guild_motd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildInfo.guild_motd");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_guild_motd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildInfo)
  return target;
}

size_t CMsgGuildInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string guild_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_name());
    }

    // optional string guild_tag = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_tag());
    }

    // optional string guild_description = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_description());
    }

    // optional string guild_motd = 18;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_motd());
    }

    // optional uint32 created_timestamp = 3;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_created_timestamp());
    }

    // optional uint32 guild_language = 4;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_language());
    }

    // optional uint32 guild_flags = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_flags());
    }

    // optional uint32 guild_region = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_region());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional uint64 guild_logo = 7;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_guild_logo());
    }

    // optional uint64 guild_chat_group_id = 9;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_guild_chat_group_id());
    }

    // optional uint64 default_chat_channel_id = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_default_chat_channel_id());
    }

    // optional uint32 guild_primary_color = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_primary_color());
    }

    // optional uint32 guild_secondary_color = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_secondary_color());
    }

    // optional uint32 guild_pattern = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_pattern());
    }

    // optional uint32 guild_refresh_time_offset = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_refresh_time_offset());
    }

    // optional uint32 guild_required_rank_tier = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_required_rank_tier());
    }

  }
  // optional uint32 guild_motd_timestamp = 17;
  if (cached_has_bits & 0x00010000u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_motd_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildInfo)
    MergeFrom(*source);
  }
}

void CMsgGuildInfo::MergeFrom(const CMsgGuildInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_guild_name(from._internal_guild_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_guild_tag(from._internal_guild_tag());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_guild_description(from._internal_guild_description());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_guild_motd(from._internal_guild_motd());
    }
    if (cached_has_bits & 0x00000010u) {
      created_timestamp_ = from.created_timestamp_;
    }
    if (cached_has_bits & 0x00000020u) {
      guild_language_ = from.guild_language_;
    }
    if (cached_has_bits & 0x00000040u) {
      guild_flags_ = from.guild_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      guild_region_ = from.guild_region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      guild_logo_ = from.guild_logo_;
    }
    if (cached_has_bits & 0x00000200u) {
      guild_chat_group_id_ = from.guild_chat_group_id_;
    }
    if (cached_has_bits & 0x00000400u) {
      default_chat_channel_id_ = from.default_chat_channel_id_;
    }
    if (cached_has_bits & 0x00000800u) {
      guild_primary_color_ = from.guild_primary_color_;
    }
    if (cached_has_bits & 0x00001000u) {
      guild_secondary_color_ = from.guild_secondary_color_;
    }
    if (cached_has_bits & 0x00002000u) {
      guild_pattern_ = from.guild_pattern_;
    }
    if (cached_has_bits & 0x00004000u) {
      guild_refresh_time_offset_ = from.guild_refresh_time_offset_;
    }
    if (cached_has_bits & 0x00008000u) {
      guild_required_rank_tier_ = from.guild_required_rank_tier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    _internal_set_guild_motd_timestamp(from._internal_guild_motd_timestamp());
  }
}

void CMsgGuildInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildInfo::CopyFrom(const CMsgGuildInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildInfo::IsInitialized() const {
  return true;
}

void CMsgGuildInfo::InternalSwap(CMsgGuildInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guild_name_.Swap(&other->guild_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_tag_.Swap(&other->guild_tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_description_.Swap(&other->guild_description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  guild_motd_.Swap(&other->guild_motd_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildInfo, guild_motd_timestamp_)
      + sizeof(CMsgGuildInfo::guild_motd_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildInfo, created_timestamp_)>(
          reinterpret_cast<char*>(&created_timestamp_),
          reinterpret_cast<char*>(&other->created_timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildSummary_EventPoints::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildSummary_EventPoints>()._has_bits_);
  static void set_has_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_points(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_guild_weekly_rank(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_guild_weekly_percentile(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_guild_current_percentile(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildSummary.EventPoints)
}
CMsgGuildSummary_EventPoints::CMsgGuildSummary_EventPoints(const CMsgGuildSummary_EventPoints& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&event_id_, &from.event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_current_percentile_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(guild_current_percentile_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildSummary.EventPoints)
}

void CMsgGuildSummary_EventPoints::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&event_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_current_percentile_) -
    reinterpret_cast<char*>(&event_id_)) + sizeof(guild_current_percentile_));
}

CMsgGuildSummary_EventPoints::~CMsgGuildSummary_EventPoints() {
  // @@protoc_insertion_point(destructor:CMsgGuildSummary.EventPoints)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildSummary_EventPoints::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGuildSummary_EventPoints::ArenaDtor(void* object) {
  CMsgGuildSummary_EventPoints* _this = reinterpret_cast< CMsgGuildSummary_EventPoints* >(object);
  (void)_this;
}
void CMsgGuildSummary_EventPoints::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildSummary_EventPoints::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildSummary_EventPoints::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildSummary.EventPoints)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_current_percentile_) -
        reinterpret_cast<char*>(&event_id_)) + sizeof(guild_current_percentile_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildSummary_EventPoints::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_event_id(&has_bits);
          event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_points = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_guild_points(&has_bits);
          guild_points_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_rank = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_guild_rank(&has_bits);
          guild_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_weekly_rank = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_guild_weekly_rank(&has_bits);
          guild_weekly_rank_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_weekly_percentile = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_guild_weekly_percentile(&has_bits);
          guild_weekly_percentile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_current_percentile = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_guild_current_percentile(&has_bits);
          guild_current_percentile_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildSummary_EventPoints::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildSummary.EventPoints)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_event_id(), target);
  }

  // optional uint32 guild_points = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_points(), target);
  }

  // optional uint32 guild_rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_guild_rank(), target);
  }

  // optional uint32 guild_weekly_rank = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_guild_weekly_rank(), target);
  }

  // optional uint32 guild_weekly_percentile = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_guild_weekly_percentile(), target);
  }

  // optional uint32 guild_current_percentile = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_guild_current_percentile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildSummary.EventPoints)
  return target;
}

size_t CMsgGuildSummary_EventPoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildSummary.EventPoints)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 event_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_event_id());
    }

    // optional uint32 guild_points = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_points());
    }

    // optional uint32 guild_rank = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_rank());
    }

    // optional uint32 guild_weekly_rank = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_weekly_rank());
    }

    // optional uint32 guild_weekly_percentile = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_weekly_percentile());
    }

    // optional uint32 guild_current_percentile = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_current_percentile());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildSummary_EventPoints::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildSummary.EventPoints)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildSummary_EventPoints* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildSummary_EventPoints>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildSummary.EventPoints)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildSummary.EventPoints)
    MergeFrom(*source);
  }
}

void CMsgGuildSummary_EventPoints::MergeFrom(const CMsgGuildSummary_EventPoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildSummary.EventPoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      event_id_ = from.event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_points_ = from.guild_points_;
    }
    if (cached_has_bits & 0x00000004u) {
      guild_rank_ = from.guild_rank_;
    }
    if (cached_has_bits & 0x00000008u) {
      guild_weekly_rank_ = from.guild_weekly_rank_;
    }
    if (cached_has_bits & 0x00000010u) {
      guild_weekly_percentile_ = from.guild_weekly_percentile_;
    }
    if (cached_has_bits & 0x00000020u) {
      guild_current_percentile_ = from.guild_current_percentile_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildSummary_EventPoints::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildSummary.EventPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildSummary_EventPoints::CopyFrom(const CMsgGuildSummary_EventPoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildSummary.EventPoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildSummary_EventPoints::IsInitialized() const {
  return true;
}

void CMsgGuildSummary_EventPoints::InternalSwap(CMsgGuildSummary_EventPoints* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildSummary_EventPoints, guild_current_percentile_)
      + sizeof(CMsgGuildSummary_EventPoints::guild_current_percentile_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildSummary_EventPoints, event_id_)>(
          reinterpret_cast<char*>(&event_id_),
          reinterpret_cast<char*>(&other->event_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildSummary_EventPoints::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildSummary::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildSummary>()._has_bits_);
  static const ::CMsgGuildInfo& guild_info(const CMsgGuildSummary* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_count(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildInfo&
CMsgGuildSummary::_Internal::guild_info(const CMsgGuildSummary* msg) {
  return *msg->guild_info_;
}
CMsgGuildSummary::CMsgGuildSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  event_points_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildSummary)
}
CMsgGuildSummary::CMsgGuildSummary(const CMsgGuildSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      event_points_(from.event_points_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    guild_info_ = new ::CMsgGuildInfo(*from.guild_info_);
  } else {
    guild_info_ = nullptr;
  }
  member_count_ = from.member_count_;
  // @@protoc_insertion_point(copy_constructor:CMsgGuildSummary)
}

void CMsgGuildSummary::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&member_count_) -
    reinterpret_cast<char*>(&guild_info_)) + sizeof(member_count_));
}

CMsgGuildSummary::~CMsgGuildSummary() {
  // @@protoc_insertion_point(destructor:CMsgGuildSummary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_info_;
}

void CMsgGuildSummary::ArenaDtor(void* object) {
  CMsgGuildSummary* _this = reinterpret_cast< CMsgGuildSummary* >(object);
  (void)_this;
}
void CMsgGuildSummary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_points_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_info_ != nullptr);
    guild_info_->Clear();
  }
  member_count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgGuildInfo guild_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 member_count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_member_count(&has_bits);
          member_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildSummary.EventPoints event_points = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_event_points(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGuildInfo guild_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::guild_info(this), target, stream);
  }

  // optional uint32 member_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_count(), target);
  }

  // repeated .CMsgGuildSummary.EventPoints event_points = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_event_points_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_event_points(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildSummary)
  return target;
}

size_t CMsgGuildSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildSummary.EventPoints event_points = 3;
  total_size += 1UL * this->_internal_event_points_size();
  for (const auto& msg : this->event_points_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_info_);
    }

    // optional uint32 member_count = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_count());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildSummary)
    MergeFrom(*source);
  }
}

void CMsgGuildSummary::MergeFrom(const CMsgGuildSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  event_points_.MergeFrom(from.event_points_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      member_count_ = from.member_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildSummary::CopyFrom(const CMsgGuildSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildSummary::IsInitialized() const {
  return true;
}

void CMsgGuildSummary::InternalSwap(CMsgGuildSummary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  event_points_.InternalSwap(&other->event_points_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildSummary, member_count_)
      + sizeof(CMsgGuildSummary::member_count_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildSummary, guild_info_)>(
          reinterpret_cast<char*>(&guild_info_),
          reinterpret_cast<char*>(&other->guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildRole>()._has_bits_);
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_role_order(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildRole::CMsgGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildRole)
}
CMsgGuildRole::CMsgGuildRole(const CMsgGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_role_name()) {
    role_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_name(), 
      GetArena());
  }
  ::memcpy(&role_id_, &from.role_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_order_) -
    reinterpret_cast<char*>(&role_id_)) + sizeof(role_order_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildRole)
}

void CMsgGuildRole::SharedCtor() {
role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&role_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_order_) -
    reinterpret_cast<char*>(&role_id_)) + sizeof(role_order_));
}

CMsgGuildRole::~CMsgGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgGuildRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  role_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgGuildRole::ArenaDtor(void* object) {
  CMsgGuildRole* _this = reinterpret_cast< CMsgGuildRole* >(object);
  (void)_this;
}
void CMsgGuildRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&role_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_order_) -
        reinterpret_cast<char*>(&role_id_)) + sizeof(role_order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 role_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_role_id(&has_bits);
          role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string role_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_role_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildRole.role_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_role_flags(&has_bits);
          role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_order = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_role_order(&has_bits);
          role_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 role_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_role_id(), target);
  }

  // optional string role_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_role_flags(), target);
  }

  // optional uint32 role_order = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_role_order(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildRole)
  return target;
}

size_t CMsgGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string role_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 role_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_id());
    }

    // optional uint32 role_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_flags());
    }

    // optional uint32 role_order = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_order());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildRole)
    MergeFrom(*source);
  }
}

void CMsgGuildRole::MergeFrom(const CMsgGuildRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      role_id_ = from.role_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_flags_ = from.role_flags_;
    }
    if (cached_has_bits & 0x00000008u) {
      role_order_ = from.role_order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildRole::CopyFrom(const CMsgGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildRole::IsInitialized() const {
  return true;
}

void CMsgGuildRole::InternalSwap(CMsgGuildRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  role_name_.Swap(&other->role_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildRole, role_order_)
      + sizeof(CMsgGuildRole::role_order_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildRole, role_id_)>(
          reinterpret_cast<char*>(&role_id_),
          reinterpret_cast<char*>(&other->role_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildMember>()._has_bits_);
  static void set_has_member_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_member_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_member_joined_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_member_last_active_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgGuildMember::CMsgGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildMember)
}
CMsgGuildMember::CMsgGuildMember(const CMsgGuildMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&member_account_id_, &from.member_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&member_last_active_timestamp_) -
    reinterpret_cast<char*>(&member_account_id_)) + sizeof(member_last_active_timestamp_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildMember)
}

void CMsgGuildMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&member_account_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&member_last_active_timestamp_) -
    reinterpret_cast<char*>(&member_account_id_)) + sizeof(member_last_active_timestamp_));
}

CMsgGuildMember::~CMsgGuildMember() {
  // @@protoc_insertion_point(destructor:CMsgGuildMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGuildMember::ArenaDtor(void* object) {
  CMsgGuildMember* _this = reinterpret_cast< CMsgGuildMember* >(object);
  (void)_this;
}
void CMsgGuildMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&member_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&member_last_active_timestamp_) -
        reinterpret_cast<char*>(&member_account_id_)) + sizeof(member_last_active_timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 member_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_member_account_id(&has_bits);
          member_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 member_role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_member_role_id(&has_bits);
          member_role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 member_joined_timestamp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_member_joined_timestamp(&has_bits);
          member_joined_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 member_last_active_timestamp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_member_last_active_timestamp(&has_bits);
          member_last_active_timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 member_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_member_account_id(), target);
  }

  // optional uint32 member_role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_member_role_id(), target);
  }

  // optional uint32 member_joined_timestamp = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_member_joined_timestamp(), target);
  }

  // optional uint32 member_last_active_timestamp = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_member_last_active_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildMember)
  return target;
}

size_t CMsgGuildMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 member_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_account_id());
    }

    // optional uint32 member_role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_role_id());
    }

    // optional uint32 member_joined_timestamp = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_joined_timestamp());
    }

    // optional uint32 member_last_active_timestamp = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_member_last_active_timestamp());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildMember)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildMember)
    MergeFrom(*source);
  }
}

void CMsgGuildMember::MergeFrom(const CMsgGuildMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      member_account_id_ = from.member_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      member_role_id_ = from.member_role_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      member_joined_timestamp_ = from.member_joined_timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      member_last_active_timestamp_ = from.member_last_active_timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildMember::CopyFrom(const CMsgGuildMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildMember::IsInitialized() const {
  return true;
}

void CMsgGuildMember::InternalSwap(CMsgGuildMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildMember, member_last_active_timestamp_)
      + sizeof(CMsgGuildMember::member_last_active_timestamp_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildMember, member_account_id_)>(
          reinterpret_cast<char*>(&member_account_id_),
          reinterpret_cast<char*>(&other->member_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildInvite::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildInvite>()._has_bits_);
  static void set_has_requester_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_timestamp_sent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGuildInvite::CMsgGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildInvite)
}
CMsgGuildInvite::CMsgGuildInvite(const CMsgGuildInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&requester_account_id_, &from.requester_account_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_sent_) -
    reinterpret_cast<char*>(&requester_account_id_)) + sizeof(timestamp_sent_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildInvite)
}

void CMsgGuildInvite::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requester_account_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_sent_) -
    reinterpret_cast<char*>(&requester_account_id_)) + sizeof(timestamp_sent_));
}

CMsgGuildInvite::~CMsgGuildInvite() {
  // @@protoc_insertion_point(destructor:CMsgGuildInvite)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGuildInvite::ArenaDtor(void* object) {
  CMsgGuildInvite* _this = reinterpret_cast< CMsgGuildInvite* >(object);
  (void)_this;
}
void CMsgGuildInvite::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&requester_account_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_sent_) -
        reinterpret_cast<char*>(&requester_account_id_)) + sizeof(timestamp_sent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildInvite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 requester_account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_requester_account_id(&has_bits);
          requester_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 timestamp_sent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_timestamp_sent(&has_bits);
          timestamp_sent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildInvite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 requester_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_requester_account_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional uint32 timestamp_sent = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_timestamp_sent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildInvite)
  return target;
}

size_t CMsgGuildInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildInvite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 requester_account_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_requester_account_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_account_id());
    }

    // optional uint32 timestamp_sent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_timestamp_sent());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildInvite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildInvite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildInvite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildInvite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildInvite)
    MergeFrom(*source);
  }
}

void CMsgGuildInvite::MergeFrom(const CMsgGuildInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      requester_account_id_ = from.requester_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_sent_ = from.timestamp_sent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildInvite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildInvite::CopyFrom(const CMsgGuildInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildInvite::IsInitialized() const {
  return true;
}

void CMsgGuildInvite::InternalSwap(CMsgGuildInvite* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildInvite, timestamp_sent_)
      + sizeof(CMsgGuildInvite::timestamp_sent_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildInvite, requester_account_id_)>(
          reinterpret_cast<char*>(&requester_account_id_),
          reinterpret_cast<char*>(&other->requester_account_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildInvite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildData>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildInfo& guild_info(const CMsgGuildData* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildInfo&
CMsgGuildData::_Internal::guild_info(const CMsgGuildData* msg) {
  return *msg->guild_info_;
}
CMsgGuildData::CMsgGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  guild_roles_(arena),
  guild_members_(arena),
  guild_invites_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildData)
}
CMsgGuildData::CMsgGuildData(const CMsgGuildData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      guild_roles_(from.guild_roles_),
      guild_members_(from.guild_members_),
      guild_invites_(from.guild_invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    guild_info_ = new ::CMsgGuildInfo(*from.guild_info_);
  } else {
    guild_info_ = nullptr;
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGuildData)
}

void CMsgGuildData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&guild_info_)) + sizeof(guild_id_));
}

CMsgGuildData::~CMsgGuildData() {
  // @@protoc_insertion_point(destructor:CMsgGuildData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_info_;
}

void CMsgGuildData::ArenaDtor(void* object) {
  CMsgGuildData* _this = reinterpret_cast< CMsgGuildData* >(object);
  (void)_this;
}
void CMsgGuildData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_roles_.Clear();
  guild_members_.Clear();
  guild_invites_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_info_ != nullptr);
    guild_info_->Clear();
  }
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildInfo guild_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildRole guild_roles = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_roles(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildMember guild_members = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_members(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildInvite guild_invites = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildInfo guild_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_info(this), target, stream);
  }

  // repeated .CMsgGuildRole guild_roles = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guild_roles_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_guild_roles(i), target, stream);
  }

  // repeated .CMsgGuildMember guild_members = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guild_members_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_guild_members(i), target, stream);
  }

  // repeated .CMsgGuildInvite guild_invites = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guild_invites_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_guild_invites(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildData)
  return target;
}

size_t CMsgGuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildRole guild_roles = 3;
  total_size += 1UL * this->_internal_guild_roles_size();
  for (const auto& msg : this->guild_roles_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGuildMember guild_members = 4;
  total_size += 1UL * this->_internal_guild_members_size();
  for (const auto& msg : this->guild_members_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .CMsgGuildInvite guild_invites = 5;
  total_size += 1UL * this->_internal_guild_invites_size();
  for (const auto& msg : this->guild_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_info_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildData)
    MergeFrom(*source);
  }
}

void CMsgGuildData::MergeFrom(const CMsgGuildData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guild_roles_.MergeFrom(from.guild_roles_);
  guild_members_.MergeFrom(from.guild_members_);
  guild_invites_.MergeFrom(from.guild_invites_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildData::CopyFrom(const CMsgGuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildData::IsInitialized() const {
  return true;
}

void CMsgGuildData::InternalSwap(CMsgGuildData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guild_roles_.InternalSwap(&other->guild_roles_);
  guild_members_.InternalSwap(&other->guild_members_);
  guild_invites_.InternalSwap(&other->guild_invites_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildData, guild_id_)
      + sizeof(CMsgGuildData::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildData, guild_info_)>(
          reinterpret_cast<char*>(&guild_info_),
          reinterpret_cast<char*>(&other->guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAccountGuildInvite::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgAccountGuildInvite>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_requester_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_timestamp_sent(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgAccountGuildInvite::CMsgAccountGuildInvite(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildInvite)
}
CMsgAccountGuildInvite::CMsgAccountGuildInvite(const CMsgAccountGuildInvite& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_sent_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(timestamp_sent_));
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildInvite)
}

void CMsgAccountGuildInvite::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_sent_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(timestamp_sent_));
}

CMsgAccountGuildInvite::~CMsgAccountGuildInvite() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildInvite)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAccountGuildInvite::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgAccountGuildInvite::ArenaDtor(void* object) {
  CMsgAccountGuildInvite* _this = reinterpret_cast< CMsgAccountGuildInvite* >(object);
  (void)_this;
}
void CMsgAccountGuildInvite::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAccountGuildInvite::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAccountGuildInvite::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&timestamp_sent_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(timestamp_sent_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildInvite::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 requester_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_requester_account_id(&has_bits);
          requester_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 timestamp_sent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_timestamp_sent(&has_bits);
          timestamp_sent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAccountGuildInvite::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildInvite)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 requester_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requester_account_id(), target);
  }

  // optional uint32 timestamp_sent = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_timestamp_sent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildInvite)
  return target;
}

size_t CMsgAccountGuildInvite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildInvite)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 requester_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_requester_account_id());
    }

    // optional uint32 timestamp_sent = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_timestamp_sent());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAccountGuildInvite::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAccountGuildInvite)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAccountGuildInvite* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAccountGuildInvite>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAccountGuildInvite)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAccountGuildInvite)
    MergeFrom(*source);
  }
}

void CMsgAccountGuildInvite::MergeFrom(const CMsgAccountGuildInvite& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildInvite)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      requester_account_id_ = from.requester_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_sent_ = from.timestamp_sent_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAccountGuildInvite::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAccountGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAccountGuildInvite::CopyFrom(const CMsgAccountGuildInvite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildInvite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildInvite::IsInitialized() const {
  return true;
}

void CMsgAccountGuildInvite::InternalSwap(CMsgAccountGuildInvite* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgAccountGuildInvite, timestamp_sent_)
      + sizeof(CMsgAccountGuildInvite::timestamp_sent_)
      - PROTOBUF_FIELD_OFFSET(CMsgAccountGuildInvite, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildInvite::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAccountGuildMemberships::_Internal {
 public:
};

CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  guild_ids_(arena),
  guild_invites_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildMemberships)
}
CMsgAccountGuildMemberships::CMsgAccountGuildMemberships(const CMsgAccountGuildMemberships& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      guild_ids_(from.guild_ids_),
      guild_invites_(from.guild_invites_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildMemberships)
}

void CMsgAccountGuildMemberships::SharedCtor() {
}

CMsgAccountGuildMemberships::~CMsgAccountGuildMemberships() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildMemberships)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAccountGuildMemberships::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgAccountGuildMemberships::ArenaDtor(void* object) {
  CMsgAccountGuildMemberships* _this = reinterpret_cast< CMsgAccountGuildMemberships* >(object);
  (void)_this;
}
void CMsgAccountGuildMemberships::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAccountGuildMemberships::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAccountGuildMemberships::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildMemberships)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_ids_.Clear();
  guild_invites_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildMemberships::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 guild_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_guild_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_guild_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgAccountGuildInvite guild_invites = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_invites(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAccountGuildMemberships::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildMemberships)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 guild_ids = 1;
  for (int i = 0, n = this->_internal_guild_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_ids(i), target);
  }

  // repeated .CMsgAccountGuildInvite guild_invites = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guild_invites_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_guild_invites(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildMemberships)
  return target;
}

size_t CMsgAccountGuildMemberships::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildMemberships)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 guild_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->guild_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_guild_ids_size());
    total_size += data_size;
  }

  // repeated .CMsgAccountGuildInvite guild_invites = 2;
  total_size += 1UL * this->_internal_guild_invites_size();
  for (const auto& msg : this->guild_invites_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAccountGuildMemberships::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAccountGuildMemberships)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAccountGuildMemberships* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAccountGuildMemberships>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAccountGuildMemberships)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAccountGuildMemberships)
    MergeFrom(*source);
  }
}

void CMsgAccountGuildMemberships::MergeFrom(const CMsgAccountGuildMemberships& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildMemberships)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guild_ids_.MergeFrom(from.guild_ids_);
  guild_invites_.MergeFrom(from.guild_invites_);
}

void CMsgAccountGuildMemberships::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAccountGuildMemberships)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAccountGuildMemberships::CopyFrom(const CMsgAccountGuildMemberships& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildMemberships)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildMemberships::IsInitialized() const {
  return true;
}

void CMsgAccountGuildMemberships::InternalSwap(CMsgAccountGuildMemberships* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  guild_ids_.InternalSwap(&other->guild_ids_);
  guild_invites_.InternalSwap(&other->guild_invites_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildMemberships::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildPersonaInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildPersonaInfo>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_tag(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildPersonaInfo)
}
CMsgGuildPersonaInfo::CMsgGuildPersonaInfo(const CMsgGuildPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_guild_tag()) {
    guild_tag_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_guild_tag(), 
      GetArena());
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildPersonaInfo)
}

void CMsgGuildPersonaInfo::SharedCtor() {
guild_tag_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_flags_));
}

CMsgGuildPersonaInfo::~CMsgGuildPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgGuildPersonaInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  guild_tag_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgGuildPersonaInfo::ArenaDtor(void* object) {
  CMsgGuildPersonaInfo* _this = reinterpret_cast< CMsgGuildPersonaInfo* >(object);
  (void)_this;
}
void CMsgGuildPersonaInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildPersonaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    guild_tag_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_flags_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildPersonaInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string guild_tag = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_guild_tag();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgGuildPersonaInfo.guild_tag");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_guild_flags(&has_bits);
          guild_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildPersonaInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional string guild_tag = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_guild_tag().data(), static_cast<int>(this->_internal_guild_tag().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgGuildPersonaInfo.guild_tag");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_guild_tag(), target);
  }

  // optional uint32 guild_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_guild_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildPersonaInfo)
  return target;
}

size_t CMsgGuildPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildPersonaInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string guild_tag = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_guild_tag());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 guild_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildPersonaInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildPersonaInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildPersonaInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildPersonaInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildPersonaInfo)
    MergeFrom(*source);
  }
}

void CMsgGuildPersonaInfo::MergeFrom(const CMsgGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_guild_tag(from._internal_guild_tag());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      guild_flags_ = from.guild_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildPersonaInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildPersonaInfo::CopyFrom(const CMsgGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgGuildPersonaInfo::InternalSwap(CMsgGuildPersonaInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  guild_tag_.Swap(&other->guild_tag_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildPersonaInfo, guild_flags_)
      + sizeof(CMsgGuildPersonaInfo::guild_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildPersonaInfo, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildPersonaInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgAccountGuildsPersonaInfo::_Internal {
 public:
};

CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  guild_persona_infos_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgAccountGuildsPersonaInfo)
}
CMsgAccountGuildsPersonaInfo::CMsgAccountGuildsPersonaInfo(const CMsgAccountGuildsPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      guild_persona_infos_(from.guild_persona_infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgAccountGuildsPersonaInfo)
}

void CMsgAccountGuildsPersonaInfo::SharedCtor() {
}

CMsgAccountGuildsPersonaInfo::~CMsgAccountGuildsPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgAccountGuildsPersonaInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgAccountGuildsPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgAccountGuildsPersonaInfo::ArenaDtor(void* object) {
  CMsgAccountGuildsPersonaInfo* _this = reinterpret_cast< CMsgAccountGuildsPersonaInfo* >(object);
  (void)_this;
}
void CMsgAccountGuildsPersonaInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgAccountGuildsPersonaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgAccountGuildsPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgAccountGuildsPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_persona_infos_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgAccountGuildsPersonaInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_guild_persona_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgAccountGuildsPersonaInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgAccountGuildsPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_guild_persona_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_guild_persona_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgAccountGuildsPersonaInfo)
  return target;
}

size_t CMsgAccountGuildsPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgAccountGuildsPersonaInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildPersonaInfo guild_persona_infos = 1;
  total_size += 1UL * this->_internal_guild_persona_infos_size();
  for (const auto& msg : this->guild_persona_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgAccountGuildsPersonaInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgAccountGuildsPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAccountGuildsPersonaInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgAccountGuildsPersonaInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgAccountGuildsPersonaInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgAccountGuildsPersonaInfo)
    MergeFrom(*source);
  }
}

void CMsgAccountGuildsPersonaInfo::MergeFrom(const CMsgAccountGuildsPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgAccountGuildsPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  guild_persona_infos_.MergeFrom(from.guild_persona_infos_);
}

void CMsgAccountGuildsPersonaInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgAccountGuildsPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAccountGuildsPersonaInfo::CopyFrom(const CMsgAccountGuildsPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgAccountGuildsPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAccountGuildsPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgAccountGuildsPersonaInfo::InternalSwap(CMsgAccountGuildsPersonaInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  guild_persona_infos_.InternalSwap(&other->guild_persona_infos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgAccountGuildsPersonaInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGuildFeedEvent::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGuildFeedEvent>()._has_bits_);
  static void set_has_feed_event_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_event_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_param_uint_1(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_param_uint_2(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_param_uint_3(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

CMsgGuildFeedEvent::CMsgGuildFeedEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGuildFeedEvent)
}
CMsgGuildFeedEvent::CMsgGuildFeedEvent(const CMsgGuildFeedEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&feed_event_id_, &from.feed_event_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&param_uint_3_) -
    reinterpret_cast<char*>(&feed_event_id_)) + sizeof(param_uint_3_));
  // @@protoc_insertion_point(copy_constructor:CMsgGuildFeedEvent)
}

void CMsgGuildFeedEvent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&feed_event_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&param_uint_3_) -
    reinterpret_cast<char*>(&feed_event_id_)) + sizeof(param_uint_3_));
}

CMsgGuildFeedEvent::~CMsgGuildFeedEvent() {
  // @@protoc_insertion_point(destructor:CMsgGuildFeedEvent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGuildFeedEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGuildFeedEvent::ArenaDtor(void* object) {
  CMsgGuildFeedEvent* _this = reinterpret_cast< CMsgGuildFeedEvent* >(object);
  (void)_this;
}
void CMsgGuildFeedEvent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGuildFeedEvent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGuildFeedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGuildFeedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&feed_event_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&param_uint_3_) -
        reinterpret_cast<char*>(&feed_event_id_)) + sizeof(param_uint_3_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGuildFeedEvent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint64 feed_event_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_feed_event_id(&has_bits);
          feed_event_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 event_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_event_type(&has_bits);
          event_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 param_uint_1 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_param_uint_1(&has_bits);
          param_uint_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 param_uint_2 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_param_uint_2(&has_bits);
          param_uint_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 param_uint_3 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_param_uint_3(&has_bits);
          param_uint_3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGuildFeedEvent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGuildFeedEvent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 feed_event_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_feed_event_id(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_timestamp(), target);
  }

  // optional uint32 event_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_event_type(), target);
  }

  // optional uint32 param_uint_1 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_param_uint_1(), target);
  }

  // optional uint32 param_uint_2 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_param_uint_2(), target);
  }

  // optional uint32 param_uint_3 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_param_uint_3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGuildFeedEvent)
  return target;
}

size_t CMsgGuildFeedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGuildFeedEvent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint64 feed_event_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_feed_event_id());
    }

    // optional uint32 timestamp = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_timestamp());
    }

    // optional uint32 event_type = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_event_type());
    }

    // optional uint32 param_uint_1 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_param_uint_1());
    }

    // optional uint32 param_uint_2 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_param_uint_2());
    }

    // optional uint32 param_uint_3 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_param_uint_3());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGuildFeedEvent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGuildFeedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGuildFeedEvent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGuildFeedEvent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGuildFeedEvent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGuildFeedEvent)
    MergeFrom(*source);
  }
}

void CMsgGuildFeedEvent::MergeFrom(const CMsgGuildFeedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGuildFeedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      feed_event_id_ = from.feed_event_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      param_uint_1_ = from.param_uint_1_;
    }
    if (cached_has_bits & 0x00000010u) {
      param_uint_2_ = from.param_uint_2_;
    }
    if (cached_has_bits & 0x00000020u) {
      param_uint_3_ = from.param_uint_3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGuildFeedEvent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGuildFeedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGuildFeedEvent::CopyFrom(const CMsgGuildFeedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGuildFeedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGuildFeedEvent::IsInitialized() const {
  return true;
}

void CMsgGuildFeedEvent::InternalSwap(CMsgGuildFeedEvent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGuildFeedEvent, param_uint_3_)
      + sizeof(CMsgGuildFeedEvent::param_uint_3_)
      - PROTOBUF_FIELD_OFFSET(CMsgGuildFeedEvent, feed_event_id_)>(
          reinterpret_cast<char*>(&feed_event_id_),
          reinterpret_cast<char*>(&other->feed_event_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGuildFeedEvent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCreateGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCreateGuild>()._has_bits_);
  static const ::CMsgGuildInfo& guild_info(const CMsgClientToGCCreateGuild* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_chat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildInfo&
CMsgClientToGCCreateGuild::_Internal::guild_info(const CMsgClientToGCCreateGuild* msg) {
  return *msg->guild_info_;
}
CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCreateGuild)
}
CMsgClientToGCCreateGuild::CMsgClientToGCCreateGuild(const CMsgClientToGCCreateGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    guild_info_ = new ::CMsgGuildInfo(*from.guild_info_);
  } else {
    guild_info_ = nullptr;
  }
  guild_chat_type_ = from.guild_chat_type_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateGuild)
}

void CMsgClientToGCCreateGuild::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_chat_type_) -
    reinterpret_cast<char*>(&guild_info_)) + sizeof(guild_chat_type_));
}

CMsgClientToGCCreateGuild::~CMsgClientToGCCreateGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCreateGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_info_;
}

void CMsgClientToGCCreateGuild::ArenaDtor(void* object) {
  CMsgClientToGCCreateGuild* _this = reinterpret_cast< CMsgClientToGCCreateGuild* >(object);
  (void)_this;
}
void CMsgClientToGCCreateGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCreateGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCreateGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCreateGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_info_ != nullptr);
    guild_info_->Clear();
  }
  guild_chat_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCreateGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgGuildInfo guild_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGuildChatType_IsValid(val))) {
            _internal_set_guild_chat_type(static_cast<::EGuildChatType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCreateGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGuildInfo guild_info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::guild_info(this), target, stream);
  }

  // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_guild_chat_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateGuild)
  return target;
}

size_t CMsgClientToGCCreateGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCreateGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildInfo guild_info = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_info_);
    }

    // optional .EGuildChatType guild_chat_type = 2 [default = k_EGuildChatType_Unspecified];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_guild_chat_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCreateGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCreateGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCreateGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCreateGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateGuild::MergeFrom(const CMsgClientToGCCreateGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCreateGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_chat_type_ = from.guild_chat_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCreateGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateGuild::CopyFrom(const CMsgClientToGCCreateGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCreateGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateGuild::InternalSwap(CMsgClientToGCCreateGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuild, guild_chat_type_)
      + sizeof(CMsgClientToGCCreateGuild::guild_chat_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuild, guild_info_)>(
          reinterpret_cast<char*>(&guild_info_),
          reinterpret_cast<char*>(&other->guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCreateGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCreateGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCreateGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCreateGuildResponse)
}
CMsgClientToGCCreateGuildResponse::CMsgClientToGCCreateGuildResponse(const CMsgClientToGCCreateGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCreateGuildResponse)
}

void CMsgClientToGCCreateGuildResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
}

CMsgClientToGCCreateGuildResponse::~CMsgClientToGCCreateGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCreateGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCreateGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCCreateGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCCreateGuildResponse* _this = reinterpret_cast< CMsgClientToGCCreateGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCCreateGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCreateGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCreateGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCreateGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCreateGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCreateGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCreateGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCreateGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCreateGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCreateGuildResponse)
  return target;
}

size_t CMsgClientToGCCreateGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCreateGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCCreateGuildResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCreateGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCreateGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCreateGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCreateGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCreateGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateGuildResponse::MergeFrom(const CMsgClientToGCCreateGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCreateGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCreateGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateGuildResponse::CopyFrom(const CMsgClientToGCCreateGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCreateGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateGuildResponse::InternalSwap(CMsgClientToGCCreateGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuildResponse, guild_id_)
      + sizeof(CMsgClientToGCCreateGuildResponse::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCreateGuildResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCreateGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildInfo>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildInfo& guild_info(const CMsgClientToGCSetGuildInfo* msg);
  static void set_has_guild_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_chat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::CMsgGuildInfo&
CMsgClientToGCSetGuildInfo::_Internal::guild_info(const CMsgClientToGCSetGuildInfo* msg) {
  return *msg->guild_info_;
}
CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildInfo)
}
CMsgClientToGCSetGuildInfo::CMsgClientToGCSetGuildInfo(const CMsgClientToGCSetGuildInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_info()) {
    guild_info_ = new ::CMsgGuildInfo(*from.guild_info_);
  } else {
    guild_info_ = nullptr;
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_chat_type_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_chat_type_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildInfo)
}

void CMsgClientToGCSetGuildInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_chat_type_) -
    reinterpret_cast<char*>(&guild_info_)) + sizeof(guild_chat_type_));
}

CMsgClientToGCSetGuildInfo::~CMsgClientToGCSetGuildInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_info_;
}

void CMsgClientToGCSetGuildInfo::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildInfo* _this = reinterpret_cast< CMsgClientToGCSetGuildInfo* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_info_ != nullptr);
    guild_info_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_chat_type_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_chat_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildInfo guild_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::EGuildChatType_IsValid(val))) {
            _internal_set_guild_chat_type(static_cast<::EGuildChatType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildInfo guild_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_info(this), target, stream);
  }

  // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_guild_chat_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildInfo)
  return target;
}

size_t CMsgClientToGCSetGuildInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgGuildInfo guild_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_info_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional .EGuildChatType guild_chat_type = 3 [default = k_EGuildChatType_Unspecified];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_guild_chat_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildInfo)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildInfo::MergeFrom(const CMsgClientToGCSetGuildInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_info()->::CMsgGuildInfo::MergeFrom(from._internal_guild_info());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      guild_chat_type_ = from.guild_chat_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetGuildInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildInfo::CopyFrom(const CMsgClientToGCSetGuildInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildInfo::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildInfo::InternalSwap(CMsgClientToGCSetGuildInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildInfo, guild_chat_type_)
      + sizeof(CMsgClientToGCSetGuildInfo::guild_chat_type_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildInfo, guild_info_)>(
          reinterpret_cast<char*>(&guild_info_),
          reinterpret_cast<char*>(&other->guild_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildInfoResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildInfoResponse)
}
CMsgClientToGCSetGuildInfoResponse::CMsgClientToGCSetGuildInfoResponse(const CMsgClientToGCSetGuildInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildInfoResponse)
}

void CMsgClientToGCSetGuildInfoResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCSetGuildInfoResponse::~CMsgClientToGCSetGuildInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSetGuildInfoResponse::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildInfoResponse* _this = reinterpret_cast< CMsgClientToGCSetGuildInfoResponse* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildInfoResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildInfoResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildInfoResponse)
  return target;
}

size_t CMsgClientToGCSetGuildInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSetGuildInfoResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildInfoResponse::MergeFrom(const CMsgClientToGCSetGuildInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCSetGuildInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildInfoResponse::CopyFrom(const CMsgClientToGCSetGuildInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildInfoResponse::InternalSwap(CMsgClientToGCSetGuildInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildData::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildData>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildData)
}
CMsgClientToGCRequestGuildData::CMsgClientToGCRequestGuildData(const CMsgClientToGCRequestGuildData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildData)
}

void CMsgClientToGCRequestGuildData::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCRequestGuildData::~CMsgClientToGCRequestGuildData() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestGuildData::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildData* _this = reinterpret_cast< CMsgClientToGCRequestGuildData* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildData::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildData)
  return target;
}

size_t CMsgClientToGCRequestGuildData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildData)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildData::MergeFrom(const CMsgClientToGCRequestGuildData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCRequestGuildData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildData::CopyFrom(const CMsgClientToGCRequestGuildData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildData::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildData::InternalSwap(CMsgClientToGCRequestGuildData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildDataResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildDataResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildData& guild_data(const CMsgClientToGCRequestGuildDataResponse* msg);
  static void set_has_guild_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildData&
CMsgClientToGCRequestGuildDataResponse::_Internal::guild_data(const CMsgClientToGCRequestGuildDataResponse* msg) {
  return *msg->guild_data_;
}
CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildDataResponse)
}
CMsgClientToGCRequestGuildDataResponse::CMsgClientToGCRequestGuildDataResponse(const CMsgClientToGCRequestGuildDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_data()) {
    guild_data_ = new ::CMsgGuildData(*from.guild_data_);
  } else {
    guild_data_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildDataResponse)
}

void CMsgClientToGCRequestGuildDataResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&guild_data_)) + sizeof(result_));
}

CMsgClientToGCRequestGuildDataResponse::~CMsgClientToGCRequestGuildDataResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildDataResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_data_;
}

void CMsgClientToGCRequestGuildDataResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildDataResponse* _this = reinterpret_cast< CMsgClientToGCRequestGuildDataResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildDataResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildDataResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_data_ != nullptr);
    guild_data_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildDataResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildDataResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildDataResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildData guild_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildDataResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildDataResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgGuildData guild_data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildDataResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildDataResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildData guild_data = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_data_);
    }

    // optional .CMsgClientToGCRequestGuildDataResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildDataResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildDataResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildDataResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildDataResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildDataResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildDataResponse::MergeFrom(const CMsgClientToGCRequestGuildDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_data()->::CMsgGuildData::MergeFrom(from._internal_guild_data());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestGuildDataResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildDataResponse::CopyFrom(const CMsgClientToGCRequestGuildDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildDataResponse::InternalSwap(CMsgClientToGCRequestGuildDataResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildDataResponse, result_)
      + sizeof(CMsgClientToGCRequestGuildDataResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildDataResponse, guild_data_)>(
          reinterpret_cast<char*>(&guild_data_),
          reinterpret_cast<char*>(&other->guild_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildDataResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientGuildDataUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildDataUpdated>()._has_bits_);
  static const ::CMsgGuildData& guild_data(const CMsgGCToClientGuildDataUpdated* msg);
  static void set_has_guild_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_update_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::CMsgGuildData&
CMsgGCToClientGuildDataUpdated::_Internal::guild_data(const CMsgGCToClientGuildDataUpdated* msg) {
  return *msg->guild_data_;
}
CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildDataUpdated)
}
CMsgGCToClientGuildDataUpdated::CMsgGCToClientGuildDataUpdated(const CMsgGCToClientGuildDataUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_data()) {
    guild_data_ = new ::CMsgGuildData(*from.guild_data_);
  } else {
    guild_data_ = nullptr;
  }
  update_flags_ = from.update_flags_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildDataUpdated)
}

void CMsgGCToClientGuildDataUpdated::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_data_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&update_flags_) -
    reinterpret_cast<char*>(&guild_data_)) + sizeof(update_flags_));
}

CMsgGCToClientGuildDataUpdated::~CMsgGCToClientGuildDataUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildDataUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientGuildDataUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_data_;
}

void CMsgGCToClientGuildDataUpdated::ArenaDtor(void* object) {
  CMsgGCToClientGuildDataUpdated* _this = reinterpret_cast< CMsgGCToClientGuildDataUpdated* >(object);
  (void)_this;
}
void CMsgGCToClientGuildDataUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientGuildDataUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientGuildDataUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildDataUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_data_ != nullptr);
    guild_data_->Clear();
  }
  update_flags_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildDataUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgGuildData guild_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 update_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_update_flags(&has_bits);
          update_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientGuildDataUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildDataUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgGuildData guild_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::guild_data(this), target, stream);
  }

  // optional uint32 update_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_update_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildDataUpdated)
  return target;
}

size_t CMsgGCToClientGuildDataUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildDataUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildData guild_data = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_data_);
    }

    // optional uint32 update_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_update_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientGuildDataUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientGuildDataUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientGuildDataUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientGuildDataUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientGuildDataUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientGuildDataUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToClientGuildDataUpdated::MergeFrom(const CMsgGCToClientGuildDataUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildDataUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_data()->::CMsgGuildData::MergeFrom(from._internal_guild_data());
    }
    if (cached_has_bits & 0x00000002u) {
      update_flags_ = from.update_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToClientGuildDataUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientGuildDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientGuildDataUpdated::CopyFrom(const CMsgGCToClientGuildDataUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildDataUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildDataUpdated::InternalSwap(CMsgGCToClientGuildDataUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgGCToClientGuildDataUpdated, update_flags_)
      + sizeof(CMsgGCToClientGuildDataUpdated::update_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgGCToClientGuildDataUpdated, guild_data_)>(
          reinterpret_cast<char*>(&guild_data_),
          reinterpret_cast<char*>(&other->guild_data_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildDataUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientGuildMembersDataUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildMembersDataUpdated>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  members_data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildMembersDataUpdated)
}
CMsgGCToClientGuildMembersDataUpdated::CMsgGCToClientGuildMembersDataUpdated(const CMsgGCToClientGuildMembersDataUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      members_data_(from.members_data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildMembersDataUpdated)
}

void CMsgGCToClientGuildMembersDataUpdated::SharedCtor() {
guild_id_ = 0u;
}

CMsgGCToClientGuildMembersDataUpdated::~CMsgGCToClientGuildMembersDataUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildMembersDataUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientGuildMembersDataUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGCToClientGuildMembersDataUpdated::ArenaDtor(void* object) {
  CMsgGCToClientGuildMembersDataUpdated* _this = reinterpret_cast< CMsgGCToClientGuildMembersDataUpdated* >(object);
  (void)_this;
}
void CMsgGCToClientGuildMembersDataUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientGuildMembersDataUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientGuildMembersDataUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildMembersDataUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  members_data_.Clear();
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildMembersDataUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildMember members_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_members_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientGuildMembersDataUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildMembersDataUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // repeated .CMsgGuildMember members_data = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_members_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_members_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildMembersDataUpdated)
  return target;
}

size_t CMsgGCToClientGuildMembersDataUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildMembersDataUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildMember members_data = 2;
  total_size += 1UL * this->_internal_members_data_size();
  for (const auto& msg : this->members_data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientGuildMembersDataUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientGuildMembersDataUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientGuildMembersDataUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientGuildMembersDataUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientGuildMembersDataUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientGuildMembersDataUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToClientGuildMembersDataUpdated::MergeFrom(const CMsgGCToClientGuildMembersDataUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildMembersDataUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  members_data_.MergeFrom(from.members_data_);
  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgGCToClientGuildMembersDataUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientGuildMembersDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientGuildMembersDataUpdated::CopyFrom(const CMsgGCToClientGuildMembersDataUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildMembersDataUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildMembersDataUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildMembersDataUpdated::InternalSwap(CMsgGCToClientGuildMembersDataUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  members_data_.InternalSwap(&other->members_data_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildMembersDataUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildMembership::_Internal {
 public:
};

CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildMembership)
}
CMsgClientToGCRequestGuildMembership::CMsgClientToGCRequestGuildMembership(const CMsgClientToGCRequestGuildMembership& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildMembership)
}

void CMsgClientToGCRequestGuildMembership::SharedCtor() {
}

CMsgClientToGCRequestGuildMembership::~CMsgClientToGCRequestGuildMembership() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildMembership)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildMembership::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestGuildMembership::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildMembership* _this = reinterpret_cast< CMsgClientToGCRequestGuildMembership* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildMembership::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildMembership::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildMembership::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildMembership)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildMembership::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildMembership::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildMembership)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildMembership)
  return target;
}

size_t CMsgClientToGCRequestGuildMembership::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildMembership)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildMembership::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildMembership)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildMembership* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildMembership>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildMembership)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildMembership)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildMembership::MergeFrom(const CMsgClientToGCRequestGuildMembership& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildMembership)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCRequestGuildMembership::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildMembership::CopyFrom(const CMsgClientToGCRequestGuildMembership& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildMembership)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildMembership::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildMembership::InternalSwap(CMsgClientToGCRequestGuildMembership* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildMembership::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildMembershipResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildMembershipResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountGuildMemberships& guild_memberships(const CMsgClientToGCRequestGuildMembershipResponse* msg);
  static void set_has_guild_memberships(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildMemberships&
CMsgClientToGCRequestGuildMembershipResponse::_Internal::guild_memberships(const CMsgClientToGCRequestGuildMembershipResponse* msg) {
  return *msg->guild_memberships_;
}
CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildMembershipResponse)
}
CMsgClientToGCRequestGuildMembershipResponse::CMsgClientToGCRequestGuildMembershipResponse(const CMsgClientToGCRequestGuildMembershipResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_memberships()) {
    guild_memberships_ = new ::CMsgAccountGuildMemberships(*from.guild_memberships_);
  } else {
    guild_memberships_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildMembershipResponse)
}

void CMsgClientToGCRequestGuildMembershipResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_memberships_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&guild_memberships_)) + sizeof(result_));
}

CMsgClientToGCRequestGuildMembershipResponse::~CMsgClientToGCRequestGuildMembershipResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildMembershipResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildMembershipResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_memberships_;
}

void CMsgClientToGCRequestGuildMembershipResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildMembershipResponse* _this = reinterpret_cast< CMsgClientToGCRequestGuildMembershipResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildMembershipResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildMembershipResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildMembershipResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildMembershipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_memberships_ != nullptr);
    guild_memberships_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildMembershipResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildMembershipResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildMembershipResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgAccountGuildMemberships guild_memberships = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_memberships(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildMembershipResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildMembershipResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountGuildMemberships guild_memberships = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_memberships(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildMembershipResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildMembershipResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildMembershipResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountGuildMemberships guild_memberships = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_memberships_);
    }

    // optional .CMsgClientToGCRequestGuildMembershipResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildMembershipResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildMembershipResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildMembershipResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildMembershipResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildMembershipResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildMembershipResponse::MergeFrom(const CMsgClientToGCRequestGuildMembershipResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_memberships()->::CMsgAccountGuildMemberships::MergeFrom(from._internal_guild_memberships());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestGuildMembershipResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildMembershipResponse::CopyFrom(const CMsgClientToGCRequestGuildMembershipResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildMembershipResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildMembershipResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildMembershipResponse::InternalSwap(CMsgClientToGCRequestGuildMembershipResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildMembershipResponse, result_)
      + sizeof(CMsgClientToGCRequestGuildMembershipResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildMembershipResponse, guild_memberships_)>(
          reinterpret_cast<char*>(&guild_memberships_),
          reinterpret_cast<char*>(&other->guild_memberships_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildMembershipResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientGuildMembershipUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildMembershipUpdated>()._has_bits_);
  static const ::CMsgAccountGuildMemberships& guild_memberships(const CMsgGCToClientGuildMembershipUpdated* msg);
  static void set_has_guild_memberships(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildMemberships&
CMsgGCToClientGuildMembershipUpdated::_Internal::guild_memberships(const CMsgGCToClientGuildMembershipUpdated* msg) {
  return *msg->guild_memberships_;
}
CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildMembershipUpdated)
}
CMsgGCToClientGuildMembershipUpdated::CMsgGCToClientGuildMembershipUpdated(const CMsgGCToClientGuildMembershipUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_memberships()) {
    guild_memberships_ = new ::CMsgAccountGuildMemberships(*from.guild_memberships_);
  } else {
    guild_memberships_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildMembershipUpdated)
}

void CMsgGCToClientGuildMembershipUpdated::SharedCtor() {
guild_memberships_ = nullptr;
}

CMsgGCToClientGuildMembershipUpdated::~CMsgGCToClientGuildMembershipUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildMembershipUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientGuildMembershipUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_memberships_;
}

void CMsgGCToClientGuildMembershipUpdated::ArenaDtor(void* object) {
  CMsgGCToClientGuildMembershipUpdated* _this = reinterpret_cast< CMsgGCToClientGuildMembershipUpdated* >(object);
  (void)_this;
}
void CMsgGCToClientGuildMembershipUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientGuildMembershipUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientGuildMembershipUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildMembershipUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_memberships_ != nullptr);
    guild_memberships_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildMembershipUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgAccountGuildMemberships guild_memberships = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_memberships(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientGuildMembershipUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildMembershipUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgAccountGuildMemberships guild_memberships = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::guild_memberships(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildMembershipUpdated)
  return target;
}

size_t CMsgGCToClientGuildMembershipUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildMembershipUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgAccountGuildMemberships guild_memberships = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *guild_memberships_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientGuildMembershipUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientGuildMembershipUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientGuildMembershipUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientGuildMembershipUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientGuildMembershipUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientGuildMembershipUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToClientGuildMembershipUpdated::MergeFrom(const CMsgGCToClientGuildMembershipUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildMembershipUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_memberships()) {
    _internal_mutable_guild_memberships()->::CMsgAccountGuildMemberships::MergeFrom(from._internal_guild_memberships());
  }
}

void CMsgGCToClientGuildMembershipUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientGuildMembershipUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientGuildMembershipUpdated::CopyFrom(const CMsgGCToClientGuildMembershipUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildMembershipUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildMembershipUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildMembershipUpdated::InternalSwap(CMsgGCToClientGuildMembershipUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_memberships_, other->guild_memberships_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildMembershipUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildSummary::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildSummary>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestGuildSummary::CMsgClientToGCRequestGuildSummary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildSummary)
}
CMsgClientToGCRequestGuildSummary::CMsgClientToGCRequestGuildSummary(const CMsgClientToGCRequestGuildSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildSummary)
}

void CMsgClientToGCRequestGuildSummary::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCRequestGuildSummary::~CMsgClientToGCRequestGuildSummary() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildSummary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildSummary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestGuildSummary::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildSummary* _this = reinterpret_cast< CMsgClientToGCRequestGuildSummary* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildSummary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildSummary)
  return target;
}

size_t CMsgClientToGCRequestGuildSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildSummary)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildSummary::MergeFrom(const CMsgClientToGCRequestGuildSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCRequestGuildSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildSummary::CopyFrom(const CMsgClientToGCRequestGuildSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildSummary::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildSummary::InternalSwap(CMsgClientToGCRequestGuildSummary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildSummaryResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildSummaryResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildSummary& guild_summary(const CMsgClientToGCRequestGuildSummaryResponse* msg);
  static void set_has_guild_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildSummary&
CMsgClientToGCRequestGuildSummaryResponse::_Internal::guild_summary(const CMsgClientToGCRequestGuildSummaryResponse* msg) {
  return *msg->guild_summary_;
}
CMsgClientToGCRequestGuildSummaryResponse::CMsgClientToGCRequestGuildSummaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildSummaryResponse)
}
CMsgClientToGCRequestGuildSummaryResponse::CMsgClientToGCRequestGuildSummaryResponse(const CMsgClientToGCRequestGuildSummaryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_summary()) {
    guild_summary_ = new ::CMsgGuildSummary(*from.guild_summary_);
  } else {
    guild_summary_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildSummaryResponse)
}

void CMsgClientToGCRequestGuildSummaryResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_summary_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&guild_summary_)) + sizeof(result_));
}

CMsgClientToGCRequestGuildSummaryResponse::~CMsgClientToGCRequestGuildSummaryResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildSummaryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildSummaryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_summary_;
}

void CMsgClientToGCRequestGuildSummaryResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildSummaryResponse* _this = reinterpret_cast< CMsgClientToGCRequestGuildSummaryResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildSummaryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildSummaryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildSummaryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_summary_ != nullptr);
    guild_summary_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildSummaryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildSummaryResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildSummaryResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildSummaryResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildSummary guild_summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildSummaryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildSummaryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestGuildSummaryResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgGuildSummary guild_summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_summary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildSummaryResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildSummaryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildSummary guild_summary = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_summary_);
    }

    // optional .CMsgClientToGCRequestGuildSummaryResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildSummaryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildSummaryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildSummaryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildSummaryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildSummaryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildSummaryResponse::MergeFrom(const CMsgClientToGCRequestGuildSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_summary()->::CMsgGuildSummary::MergeFrom(from._internal_guild_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestGuildSummaryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildSummaryResponse::CopyFrom(const CMsgClientToGCRequestGuildSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildSummaryResponse::InternalSwap(CMsgClientToGCRequestGuildSummaryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildSummaryResponse, result_)
      + sizeof(CMsgClientToGCRequestGuildSummaryResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildSummaryResponse, guild_summary_)>(
          reinterpret_cast<char*>(&guild_summary_),
          reinterpret_cast<char*>(&other->guild_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildSummaryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCJoinGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinGuild)
}
CMsgClientToGCJoinGuild::CMsgClientToGCJoinGuild(const CMsgClientToGCJoinGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinGuild)
}

void CMsgClientToGCJoinGuild::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCJoinGuild::~CMsgClientToGCJoinGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCJoinGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCJoinGuild::ArenaDtor(void* object) {
  CMsgClientToGCJoinGuild* _this = reinterpret_cast< CMsgClientToGCJoinGuild* >(object);
  (void)_this;
}
void CMsgClientToGCJoinGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCJoinGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCJoinGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCJoinGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinGuild)
  return target;
}

size_t CMsgClientToGCJoinGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCJoinGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCJoinGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCJoinGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCJoinGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCJoinGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCJoinGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCJoinGuild::MergeFrom(const CMsgClientToGCJoinGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCJoinGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCJoinGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCJoinGuild::CopyFrom(const CMsgClientToGCJoinGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinGuild::InternalSwap(CMsgClientToGCJoinGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCJoinGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCJoinGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCJoinGuildResponse)
}
CMsgClientToGCJoinGuildResponse::CMsgClientToGCJoinGuildResponse(const CMsgClientToGCJoinGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCJoinGuildResponse)
}

void CMsgClientToGCJoinGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCJoinGuildResponse::~CMsgClientToGCJoinGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCJoinGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCJoinGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCJoinGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCJoinGuildResponse* _this = reinterpret_cast< CMsgClientToGCJoinGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCJoinGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCJoinGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCJoinGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCJoinGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCJoinGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCJoinGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCJoinGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCJoinGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCJoinGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCJoinGuildResponse)
  return target;
}

size_t CMsgClientToGCJoinGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCJoinGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCJoinGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCJoinGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCJoinGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCJoinGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCJoinGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCJoinGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCJoinGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCJoinGuildResponse::MergeFrom(const CMsgClientToGCJoinGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCJoinGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCJoinGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCJoinGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCJoinGuildResponse::CopyFrom(const CMsgClientToGCJoinGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCJoinGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCJoinGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCJoinGuildResponse::InternalSwap(CMsgClientToGCJoinGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCJoinGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCLeaveGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeaveGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveGuild)
}
CMsgClientToGCLeaveGuild::CMsgClientToGCLeaveGuild(const CMsgClientToGCLeaveGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveGuild)
}

void CMsgClientToGCLeaveGuild::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCLeaveGuild::~CMsgClientToGCLeaveGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeaveGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCLeaveGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCLeaveGuild::ArenaDtor(void* object) {
  CMsgClientToGCLeaveGuild* _this = reinterpret_cast< CMsgClientToGCLeaveGuild* >(object);
  (void)_this;
}
void CMsgClientToGCLeaveGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCLeaveGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCLeaveGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeaveGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeaveGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCLeaveGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeaveGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeaveGuild)
  return target;
}

size_t CMsgClientToGCLeaveGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeaveGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLeaveGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCLeaveGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLeaveGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCLeaveGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCLeaveGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCLeaveGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLeaveGuild::MergeFrom(const CMsgClientToGCLeaveGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeaveGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCLeaveGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCLeaveGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLeaveGuild::CopyFrom(const CMsgClientToGCLeaveGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeaveGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeaveGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeaveGuild::InternalSwap(CMsgClientToGCLeaveGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCLeaveGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCLeaveGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCLeaveGuildResponse)
}
CMsgClientToGCLeaveGuildResponse::CMsgClientToGCLeaveGuildResponse(const CMsgClientToGCLeaveGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCLeaveGuildResponse)
}

void CMsgClientToGCLeaveGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCLeaveGuildResponse::~CMsgClientToGCLeaveGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCLeaveGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCLeaveGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCLeaveGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCLeaveGuildResponse* _this = reinterpret_cast< CMsgClientToGCLeaveGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCLeaveGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCLeaveGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCLeaveGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCLeaveGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCLeaveGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCLeaveGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCLeaveGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCLeaveGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCLeaveGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCLeaveGuildResponse)
  return target;
}

size_t CMsgClientToGCLeaveGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCLeaveGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCLeaveGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCLeaveGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCLeaveGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLeaveGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCLeaveGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCLeaveGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCLeaveGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLeaveGuildResponse::MergeFrom(const CMsgClientToGCLeaveGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCLeaveGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCLeaveGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCLeaveGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLeaveGuildResponse::CopyFrom(const CMsgClientToGCLeaveGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCLeaveGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLeaveGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLeaveGuildResponse::InternalSwap(CMsgClientToGCLeaveGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCLeaveGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCKickGuildMember::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCKickGuildMember>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCKickGuildMember)
}
CMsgClientToGCKickGuildMember::CMsgClientToGCKickGuildMember(const CMsgClientToGCKickGuildMember& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCKickGuildMember)
}

void CMsgClientToGCKickGuildMember::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
}

CMsgClientToGCKickGuildMember::~CMsgClientToGCKickGuildMember() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCKickGuildMember)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCKickGuildMember::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCKickGuildMember::ArenaDtor(void* object) {
  CMsgClientToGCKickGuildMember* _this = reinterpret_cast< CMsgClientToGCKickGuildMember* >(object);
  (void)_this;
}
void CMsgClientToGCKickGuildMember::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCKickGuildMember::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCKickGuildMember::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCKickGuildMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_account_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCKickGuildMember::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCKickGuildMember::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCKickGuildMember)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCKickGuildMember)
  return target;
}

size_t CMsgClientToGCKickGuildMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCKickGuildMember)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_account_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCKickGuildMember::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCKickGuildMember)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCKickGuildMember* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCKickGuildMember>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCKickGuildMember)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCKickGuildMember)
    MergeFrom(*source);
  }
}

void CMsgClientToGCKickGuildMember::MergeFrom(const CMsgClientToGCKickGuildMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCKickGuildMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCKickGuildMember::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCKickGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCKickGuildMember::CopyFrom(const CMsgClientToGCKickGuildMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCKickGuildMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCKickGuildMember::IsInitialized() const {
  return true;
}

void CMsgClientToGCKickGuildMember::InternalSwap(CMsgClientToGCKickGuildMember* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCKickGuildMember, target_account_id_)
      + sizeof(CMsgClientToGCKickGuildMember::target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCKickGuildMember, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCKickGuildMember::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCKickGuildMemberResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCKickGuildMemberResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCKickGuildMemberResponse)
}
CMsgClientToGCKickGuildMemberResponse::CMsgClientToGCKickGuildMemberResponse(const CMsgClientToGCKickGuildMemberResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCKickGuildMemberResponse)
}

void CMsgClientToGCKickGuildMemberResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCKickGuildMemberResponse::~CMsgClientToGCKickGuildMemberResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCKickGuildMemberResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCKickGuildMemberResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCKickGuildMemberResponse::ArenaDtor(void* object) {
  CMsgClientToGCKickGuildMemberResponse* _this = reinterpret_cast< CMsgClientToGCKickGuildMemberResponse* >(object);
  (void)_this;
}
void CMsgClientToGCKickGuildMemberResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCKickGuildMemberResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCKickGuildMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCKickGuildMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCKickGuildMemberResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCKickGuildMemberResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCKickGuildMemberResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCKickGuildMemberResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCKickGuildMemberResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCKickGuildMemberResponse)
  return target;
}

size_t CMsgClientToGCKickGuildMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCKickGuildMemberResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCKickGuildMemberResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCKickGuildMemberResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCKickGuildMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCKickGuildMemberResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCKickGuildMemberResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCKickGuildMemberResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCKickGuildMemberResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCKickGuildMemberResponse::MergeFrom(const CMsgClientToGCKickGuildMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCKickGuildMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCKickGuildMemberResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCKickGuildMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCKickGuildMemberResponse::CopyFrom(const CMsgClientToGCKickGuildMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCKickGuildMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCKickGuildMemberResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCKickGuildMemberResponse::InternalSwap(CMsgClientToGCKickGuildMemberResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCKickGuildMemberResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildMemberRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildMemberRole>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_target_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildMemberRole)
}
CMsgClientToGCSetGuildMemberRole::CMsgClientToGCSetGuildMemberRole(const CMsgClientToGCSetGuildMemberRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_role_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildMemberRole)
}

void CMsgClientToGCSetGuildMemberRole::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_role_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_id_));
}

CMsgClientToGCSetGuildMemberRole::~CMsgClientToGCSetGuildMemberRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildMemberRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildMemberRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSetGuildMemberRole::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildMemberRole* _this = reinterpret_cast< CMsgClientToGCSetGuildMemberRole* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildMemberRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildMemberRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildMemberRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildMemberRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_role_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_role_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildMemberRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_role_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_target_role_id(&has_bits);
          target_role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildMemberRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildMemberRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  // optional uint32 target_role_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_target_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildMemberRole)
  return target;
}

size_t CMsgClientToGCSetGuildMemberRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildMemberRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_account_id());
    }

    // optional uint32 target_role_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_role_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildMemberRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildMemberRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildMemberRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildMemberRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildMemberRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildMemberRole)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildMemberRole::MergeFrom(const CMsgClientToGCSetGuildMemberRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildMemberRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      target_role_id_ = from.target_role_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetGuildMemberRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildMemberRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildMemberRole::CopyFrom(const CMsgClientToGCSetGuildMemberRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildMemberRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildMemberRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildMemberRole::InternalSwap(CMsgClientToGCSetGuildMemberRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildMemberRole, target_role_id_)
      + sizeof(CMsgClientToGCSetGuildMemberRole::target_role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCSetGuildMemberRole, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildMemberRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildMemberRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildMemberRoleResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildMemberRoleResponse)
}
CMsgClientToGCSetGuildMemberRoleResponse::CMsgClientToGCSetGuildMemberRoleResponse(const CMsgClientToGCSetGuildMemberRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildMemberRoleResponse)
}

void CMsgClientToGCSetGuildMemberRoleResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCSetGuildMemberRoleResponse::~CMsgClientToGCSetGuildMemberRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildMemberRoleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildMemberRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSetGuildMemberRoleResponse::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildMemberRoleResponse* _this = reinterpret_cast< CMsgClientToGCSetGuildMemberRoleResponse* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildMemberRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildMemberRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildMemberRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildMemberRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildMemberRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildMemberRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildMemberRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildMemberRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildMemberRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildMemberRoleResponse)
  return target;
}

size_t CMsgClientToGCSetGuildMemberRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildMemberRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCSetGuildMemberRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildMemberRoleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildMemberRoleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildMemberRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildMemberRoleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildMemberRoleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildMemberRoleResponse::MergeFrom(const CMsgClientToGCSetGuildMemberRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCSetGuildMemberRoleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildMemberRoleResponse::CopyFrom(const CMsgClientToGCSetGuildMemberRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildMemberRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildMemberRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildMemberRoleResponse::InternalSwap(CMsgClientToGCSetGuildMemberRoleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildMemberRoleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCInviteToGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCInviteToGuild)
}
CMsgClientToGCInviteToGuild::CMsgClientToGCInviteToGuild(const CMsgClientToGCInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCInviteToGuild)
}

void CMsgClientToGCInviteToGuild::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
}

CMsgClientToGCInviteToGuild::~CMsgClientToGCInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCInviteToGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCInviteToGuild::ArenaDtor(void* object) {
  CMsgClientToGCInviteToGuild* _this = reinterpret_cast< CMsgClientToGCInviteToGuild* >(object);
  (void)_this;
}
void CMsgClientToGCInviteToGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCInviteToGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_account_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCInviteToGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCInviteToGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCInviteToGuild)
  return target;
}

size_t CMsgClientToGCInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCInviteToGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_account_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCInviteToGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCInviteToGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCInviteToGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCInviteToGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCInviteToGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCInviteToGuild::MergeFrom(const CMsgClientToGCInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCInviteToGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCInviteToGuild::CopyFrom(const CMsgClientToGCInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCInviteToGuild::InternalSwap(CMsgClientToGCInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCInviteToGuild, target_account_id_)
      + sizeof(CMsgClientToGCInviteToGuild::target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCInviteToGuild, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCInviteToGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCInviteToGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCInviteToGuildResponse)
}
CMsgClientToGCInviteToGuildResponse::CMsgClientToGCInviteToGuildResponse(const CMsgClientToGCInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCInviteToGuildResponse)
}

void CMsgClientToGCInviteToGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCInviteToGuildResponse::~CMsgClientToGCInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCInviteToGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCInviteToGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCInviteToGuildResponse* _this = reinterpret_cast< CMsgClientToGCInviteToGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCInviteToGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCInviteToGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCInviteToGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCInviteToGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCInviteToGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCInviteToGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCInviteToGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCInviteToGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCInviteToGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCInviteToGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCInviteToGuildResponse::MergeFrom(const CMsgClientToGCInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCInviteToGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCInviteToGuildResponse::CopyFrom(const CMsgClientToGCInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCInviteToGuildResponse::InternalSwap(CMsgClientToGCInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCInviteToGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCDeclineInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeclineInviteToGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeclineInviteToGuild)
}
CMsgClientToGCDeclineInviteToGuild::CMsgClientToGCDeclineInviteToGuild(const CMsgClientToGCDeclineInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeclineInviteToGuild)
}

void CMsgClientToGCDeclineInviteToGuild::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCDeclineInviteToGuild::~CMsgClientToGCDeclineInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeclineInviteToGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCDeclineInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCDeclineInviteToGuild::ArenaDtor(void* object) {
  CMsgClientToGCDeclineInviteToGuild* _this = reinterpret_cast< CMsgClientToGCDeclineInviteToGuild* >(object);
  (void)_this;
}
void CMsgClientToGCDeclineInviteToGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCDeclineInviteToGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCDeclineInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeclineInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeclineInviteToGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCDeclineInviteToGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeclineInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeclineInviteToGuild)
  return target;
}

size_t CMsgClientToGCDeclineInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeclineInviteToGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCDeclineInviteToGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCDeclineInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCDeclineInviteToGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCDeclineInviteToGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCDeclineInviteToGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCDeclineInviteToGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCDeclineInviteToGuild::MergeFrom(const CMsgClientToGCDeclineInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeclineInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCDeclineInviteToGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCDeclineInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCDeclineInviteToGuild::CopyFrom(const CMsgClientToGCDeclineInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeclineInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeclineInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeclineInviteToGuild::InternalSwap(CMsgClientToGCDeclineInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeclineInviteToGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCDeclineInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCDeclineInviteToGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCDeclineInviteToGuildResponse)
}
CMsgClientToGCDeclineInviteToGuildResponse::CMsgClientToGCDeclineInviteToGuildResponse(const CMsgClientToGCDeclineInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCDeclineInviteToGuildResponse)
}

void CMsgClientToGCDeclineInviteToGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCDeclineInviteToGuildResponse::~CMsgClientToGCDeclineInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCDeclineInviteToGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCDeclineInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCDeclineInviteToGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCDeclineInviteToGuildResponse* _this = reinterpret_cast< CMsgClientToGCDeclineInviteToGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCDeclineInviteToGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCDeclineInviteToGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCDeclineInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCDeclineInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCDeclineInviteToGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCDeclineInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCDeclineInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCDeclineInviteToGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCDeclineInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCDeclineInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCDeclineInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCDeclineInviteToGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCDeclineInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCDeclineInviteToGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCDeclineInviteToGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCDeclineInviteToGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCDeclineInviteToGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCDeclineInviteToGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCDeclineInviteToGuildResponse::MergeFrom(const CMsgClientToGCDeclineInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCDeclineInviteToGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCDeclineInviteToGuildResponse::CopyFrom(const CMsgClientToGCDeclineInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCDeclineInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCDeclineInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCDeclineInviteToGuildResponse::InternalSwap(CMsgClientToGCDeclineInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCDeclineInviteToGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAcceptInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptInviteToGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptInviteToGuild)
}
CMsgClientToGCAcceptInviteToGuild::CMsgClientToGCAcceptInviteToGuild(const CMsgClientToGCAcceptInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptInviteToGuild)
}

void CMsgClientToGCAcceptInviteToGuild::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCAcceptInviteToGuild::~CMsgClientToGCAcceptInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptInviteToGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAcceptInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAcceptInviteToGuild::ArenaDtor(void* object) {
  CMsgClientToGCAcceptInviteToGuild* _this = reinterpret_cast< CMsgClientToGCAcceptInviteToGuild* >(object);
  (void)_this;
}
void CMsgClientToGCAcceptInviteToGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAcceptInviteToGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAcceptInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptInviteToGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAcceptInviteToGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptInviteToGuild)
  return target;
}

size_t CMsgClientToGCAcceptInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptInviteToGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAcceptInviteToGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAcceptInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAcceptInviteToGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAcceptInviteToGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAcceptInviteToGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAcceptInviteToGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAcceptInviteToGuild::MergeFrom(const CMsgClientToGCAcceptInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCAcceptInviteToGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAcceptInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAcceptInviteToGuild::CopyFrom(const CMsgClientToGCAcceptInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptInviteToGuild::InternalSwap(CMsgClientToGCAcceptInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptInviteToGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAcceptInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAcceptInviteToGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAcceptInviteToGuildResponse)
}
CMsgClientToGCAcceptInviteToGuildResponse::CMsgClientToGCAcceptInviteToGuildResponse(const CMsgClientToGCAcceptInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAcceptInviteToGuildResponse)
}

void CMsgClientToGCAcceptInviteToGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCAcceptInviteToGuildResponse::~CMsgClientToGCAcceptInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAcceptInviteToGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAcceptInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAcceptInviteToGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCAcceptInviteToGuildResponse* _this = reinterpret_cast< CMsgClientToGCAcceptInviteToGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCAcceptInviteToGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAcceptInviteToGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAcceptInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAcceptInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAcceptInviteToGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAcceptInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAcceptInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAcceptInviteToGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAcceptInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAcceptInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCAcceptInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAcceptInviteToGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCAcceptInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAcceptInviteToGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAcceptInviteToGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAcceptInviteToGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAcceptInviteToGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAcceptInviteToGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAcceptInviteToGuildResponse::MergeFrom(const CMsgClientToGCAcceptInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCAcceptInviteToGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAcceptInviteToGuildResponse::CopyFrom(const CMsgClientToGCAcceptInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAcceptInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAcceptInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAcceptInviteToGuildResponse::InternalSwap(CMsgClientToGCAcceptInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAcceptInviteToGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCancelInviteToGuild::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCancelInviteToGuild>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_target_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCancelInviteToGuild)
}
CMsgClientToGCCancelInviteToGuild::CMsgClientToGCCancelInviteToGuild(const CMsgClientToGCCancelInviteToGuild& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCancelInviteToGuild)
}

void CMsgClientToGCCancelInviteToGuild::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&target_account_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
}

CMsgClientToGCCancelInviteToGuild::~CMsgClientToGCCancelInviteToGuild() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCancelInviteToGuild)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCancelInviteToGuild::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCCancelInviteToGuild::ArenaDtor(void* object) {
  CMsgClientToGCCancelInviteToGuild* _this = reinterpret_cast< CMsgClientToGCCancelInviteToGuild* >(object);
  (void)_this;
}
void CMsgClientToGCCancelInviteToGuild::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCancelInviteToGuild::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCancelInviteToGuild::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCancelInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&target_account_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(target_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCancelInviteToGuild::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 target_account_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_target_account_id(&has_bits);
          target_account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCancelInviteToGuild::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCancelInviteToGuild)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 target_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_target_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCancelInviteToGuild)
  return target;
}

size_t CMsgClientToGCCancelInviteToGuild::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCancelInviteToGuild)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 target_account_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_target_account_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCancelInviteToGuild::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCancelInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCancelInviteToGuild* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCancelInviteToGuild>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCancelInviteToGuild)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCancelInviteToGuild)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCancelInviteToGuild::MergeFrom(const CMsgClientToGCCancelInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCancelInviteToGuild)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_account_id_ = from.target_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCancelInviteToGuild::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCancelInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCancelInviteToGuild::CopyFrom(const CMsgClientToGCCancelInviteToGuild& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCancelInviteToGuild)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCancelInviteToGuild::IsInitialized() const {
  return true;
}

void CMsgClientToGCCancelInviteToGuild::InternalSwap(CMsgClientToGCCancelInviteToGuild* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCCancelInviteToGuild, target_account_id_)
      + sizeof(CMsgClientToGCCancelInviteToGuild::target_account_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCCancelInviteToGuild, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCancelInviteToGuild::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCCancelInviteToGuildResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCCancelInviteToGuildResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCCancelInviteToGuildResponse)
}
CMsgClientToGCCancelInviteToGuildResponse::CMsgClientToGCCancelInviteToGuildResponse(const CMsgClientToGCCancelInviteToGuildResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCCancelInviteToGuildResponse)
}

void CMsgClientToGCCancelInviteToGuildResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCCancelInviteToGuildResponse::~CMsgClientToGCCancelInviteToGuildResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCCancelInviteToGuildResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCCancelInviteToGuildResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCCancelInviteToGuildResponse::ArenaDtor(void* object) {
  CMsgClientToGCCancelInviteToGuildResponse* _this = reinterpret_cast< CMsgClientToGCCancelInviteToGuildResponse* >(object);
  (void)_this;
}
void CMsgClientToGCCancelInviteToGuildResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCCancelInviteToGuildResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCCancelInviteToGuildResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCCancelInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCCancelInviteToGuildResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCCancelInviteToGuildResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCCancelInviteToGuildResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCCancelInviteToGuildResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCCancelInviteToGuildResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCCancelInviteToGuildResponse)
  return target;
}

size_t CMsgClientToGCCancelInviteToGuildResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCCancelInviteToGuildResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCCancelInviteToGuildResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCCancelInviteToGuildResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCancelInviteToGuildResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCCancelInviteToGuildResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCCancelInviteToGuildResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCCancelInviteToGuildResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCancelInviteToGuildResponse::MergeFrom(const CMsgClientToGCCancelInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCCancelInviteToGuildResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCancelInviteToGuildResponse::CopyFrom(const CMsgClientToGCCancelInviteToGuildResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCCancelInviteToGuildResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCancelInviteToGuildResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCancelInviteToGuildResponse::InternalSwap(CMsgClientToGCCancelInviteToGuildResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCCancelInviteToGuildResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAddGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddGuildRole>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddGuildRole)
}
CMsgClientToGCAddGuildRole::CMsgClientToGCAddGuildRole(const CMsgClientToGCAddGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_role_name()) {
    role_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_name(), 
      GetArena());
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddGuildRole)
}

void CMsgClientToGCAddGuildRole::SharedCtor() {
role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
}

CMsgClientToGCAddGuildRole::~CMsgClientToGCAddGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddGuildRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAddGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  role_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCAddGuildRole::ArenaDtor(void* object) {
  CMsgClientToGCAddGuildRole* _this = reinterpret_cast< CMsgClientToGCAddGuildRole* >(object);
  (void)_this;
}
void CMsgClientToGCAddGuildRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAddGuildRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAddGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_flags_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddGuildRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string role_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_role_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientToGCAddGuildRole.role_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_role_flags(&has_bits);
          role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAddGuildRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional string role_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCAddGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_role_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddGuildRole)
  return target;
}

size_t CMsgClientToGCAddGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddGuildRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string role_name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 role_flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAddGuildRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAddGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAddGuildRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAddGuildRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAddGuildRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAddGuildRole)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAddGuildRole::MergeFrom(const CMsgClientToGCAddGuildRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_flags_ = from.role_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCAddGuildRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAddGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAddGuildRole::CopyFrom(const CMsgClientToGCAddGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddGuildRole::InternalSwap(CMsgClientToGCAddGuildRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  role_name_.Swap(&other->role_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRole, role_flags_)
      + sizeof(CMsgClientToGCAddGuildRole::role_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRole, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddGuildRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAddGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddGuildRoleResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddGuildRoleResponse)
}
CMsgClientToGCAddGuildRoleResponse::CMsgClientToGCAddGuildRoleResponse(const CMsgClientToGCAddGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddGuildRoleResponse)
}

void CMsgClientToGCAddGuildRoleResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(role_id_));
}

CMsgClientToGCAddGuildRoleResponse::~CMsgClientToGCAddGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddGuildRoleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAddGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAddGuildRoleResponse::ArenaDtor(void* object) {
  CMsgClientToGCAddGuildRoleResponse* _this = reinterpret_cast< CMsgClientToGCAddGuildRoleResponse* >(object);
  (void)_this;
}
void CMsgClientToGCAddGuildRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAddGuildRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAddGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_id_) -
        reinterpret_cast<char*>(&result_)) + sizeof(role_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddGuildRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAddGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAddGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAddGuildRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCAddGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddGuildRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCAddGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAddGuildRoleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAddGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAddGuildRoleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAddGuildRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAddGuildRoleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAddGuildRoleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAddGuildRoleResponse::MergeFrom(const CMsgClientToGCAddGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      role_id_ = from.role_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCAddGuildRoleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAddGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAddGuildRoleResponse::CopyFrom(const CMsgClientToGCAddGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddGuildRoleResponse::InternalSwap(CMsgClientToGCAddGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRoleResponse, role_id_)
      + sizeof(CMsgClientToGCAddGuildRoleResponse::role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCAddGuildRoleResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddGuildRoleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCModifyGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyGuildRole>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_role_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyGuildRole)
}
CMsgClientToGCModifyGuildRole::CMsgClientToGCModifyGuildRole(const CMsgClientToGCModifyGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_role_name()) {
    role_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_role_name(), 
      GetArena());
  }
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyGuildRole)
}

void CMsgClientToGCModifyGuildRole::SharedCtor() {
role_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
}

CMsgClientToGCModifyGuildRole::~CMsgClientToGCModifyGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyGuildRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCModifyGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  role_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCModifyGuildRole::ArenaDtor(void* object) {
  CMsgClientToGCModifyGuildRole* _this = reinterpret_cast< CMsgClientToGCModifyGuildRole* >(object);
  (void)_this;
}
void CMsgClientToGCModifyGuildRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCModifyGuildRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCModifyGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    role_name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000000eu) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_flags_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(role_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyGuildRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string role_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_role_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "CMsgClientToGCModifyGuildRole.role_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_role_flags(&has_bits);
          role_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCModifyGuildRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  // optional string role_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_role_name().data(), static_cast<int>(this->_internal_role_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "CMsgClientToGCModifyGuildRole.role_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_role_name(), target);
  }

  // optional uint32 role_flags = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_role_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyGuildRole)
  return target;
}

size_t CMsgClientToGCModifyGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyGuildRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string role_name = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_role_name());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_id());
    }

    // optional uint32 role_flags = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCModifyGuildRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCModifyGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCModifyGuildRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCModifyGuildRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCModifyGuildRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCModifyGuildRole)
    MergeFrom(*source);
  }
}

void CMsgClientToGCModifyGuildRole::MergeFrom(const CMsgClientToGCModifyGuildRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_role_name(from._internal_role_name());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      role_id_ = from.role_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      role_flags_ = from.role_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCModifyGuildRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCModifyGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCModifyGuildRole::CopyFrom(const CMsgClientToGCModifyGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyGuildRole::InternalSwap(CMsgClientToGCModifyGuildRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  role_name_.Swap(&other->role_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyGuildRole, role_flags_)
      + sizeof(CMsgClientToGCModifyGuildRole::role_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCModifyGuildRole, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyGuildRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCModifyGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCModifyGuildRoleResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCModifyGuildRoleResponse)
}
CMsgClientToGCModifyGuildRoleResponse::CMsgClientToGCModifyGuildRoleResponse(const CMsgClientToGCModifyGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCModifyGuildRoleResponse)
}

void CMsgClientToGCModifyGuildRoleResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCModifyGuildRoleResponse::~CMsgClientToGCModifyGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCModifyGuildRoleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCModifyGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCModifyGuildRoleResponse::ArenaDtor(void* object) {
  CMsgClientToGCModifyGuildRoleResponse* _this = reinterpret_cast< CMsgClientToGCModifyGuildRoleResponse* >(object);
  (void)_this;
}
void CMsgClientToGCModifyGuildRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCModifyGuildRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCModifyGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCModifyGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCModifyGuildRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCModifyGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCModifyGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCModifyGuildRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCModifyGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCModifyGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCModifyGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCModifyGuildRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCModifyGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCModifyGuildRoleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCModifyGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCModifyGuildRoleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCModifyGuildRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCModifyGuildRoleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCModifyGuildRoleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCModifyGuildRoleResponse::MergeFrom(const CMsgClientToGCModifyGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCModifyGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCModifyGuildRoleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCModifyGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCModifyGuildRoleResponse::CopyFrom(const CMsgClientToGCModifyGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCModifyGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCModifyGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCModifyGuildRoleResponse::InternalSwap(CMsgClientToGCModifyGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCModifyGuildRoleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRemoveGuildRole::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRemoveGuildRole>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_role_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRemoveGuildRole)
}
CMsgClientToGCRemoveGuildRole::CMsgClientToGCRemoveGuildRole(const CMsgClientToGCRemoveGuildRole& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveGuildRole)
}

void CMsgClientToGCRemoveGuildRole::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&role_id_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(role_id_));
}

CMsgClientToGCRemoveGuildRole::~CMsgClientToGCRemoveGuildRole() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveGuildRole)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRemoveGuildRole::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRemoveGuildRole::ArenaDtor(void* object) {
  CMsgClientToGCRemoveGuildRole* _this = reinterpret_cast< CMsgClientToGCRemoveGuildRole* >(object);
  (void)_this;
}
void CMsgClientToGCRemoveGuildRole::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRemoveGuildRole::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRemoveGuildRole::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRemoveGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&role_id_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(role_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRemoveGuildRole::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 role_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_role_id(&has_bits);
          role_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRemoveGuildRole::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveGuildRole)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 role_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_role_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveGuildRole)
  return target;
}

size_t CMsgClientToGCRemoveGuildRole::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRemoveGuildRole)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 role_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_role_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRemoveGuildRole::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRemoveGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveGuildRole* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRemoveGuildRole>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRemoveGuildRole)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRemoveGuildRole)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveGuildRole::MergeFrom(const CMsgClientToGCRemoveGuildRole& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRemoveGuildRole)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      role_id_ = from.role_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRemoveGuildRole::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRemoveGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveGuildRole::CopyFrom(const CMsgClientToGCRemoveGuildRole& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRemoveGuildRole)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveGuildRole::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveGuildRole::InternalSwap(CMsgClientToGCRemoveGuildRole* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRemoveGuildRole, role_id_)
      + sizeof(CMsgClientToGCRemoveGuildRole::role_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRemoveGuildRole, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRemoveGuildRole::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRemoveGuildRoleResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRemoveGuildRoleResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRemoveGuildRoleResponse)
}
CMsgClientToGCRemoveGuildRoleResponse::CMsgClientToGCRemoveGuildRoleResponse(const CMsgClientToGCRemoveGuildRoleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRemoveGuildRoleResponse)
}

void CMsgClientToGCRemoveGuildRoleResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCRemoveGuildRoleResponse::~CMsgClientToGCRemoveGuildRoleResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRemoveGuildRoleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRemoveGuildRoleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRemoveGuildRoleResponse::ArenaDtor(void* object) {
  CMsgClientToGCRemoveGuildRoleResponse* _this = reinterpret_cast< CMsgClientToGCRemoveGuildRoleResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRemoveGuildRoleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRemoveGuildRoleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRemoveGuildRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRemoveGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRemoveGuildRoleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRemoveGuildRoleResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRemoveGuildRoleResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRemoveGuildRoleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRemoveGuildRoleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRemoveGuildRoleResponse)
  return target;
}

size_t CMsgClientToGCRemoveGuildRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRemoveGuildRoleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCRemoveGuildRoleResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRemoveGuildRoleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveGuildRoleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRemoveGuildRoleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRemoveGuildRoleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRemoveGuildRoleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveGuildRoleResponse::MergeFrom(const CMsgClientToGCRemoveGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCRemoveGuildRoleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveGuildRoleResponse::CopyFrom(const CMsgClientToGCRemoveGuildRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRemoveGuildRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveGuildRoleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveGuildRoleResponse::InternalSwap(CMsgClientToGCRemoveGuildRoleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRemoveGuildRoleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildRoleOrder::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildRoleOrder>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  requested_role_ids_(arena),
  previous_role_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildRoleOrder)
}
CMsgClientToGCSetGuildRoleOrder::CMsgClientToGCSetGuildRoleOrder(const CMsgClientToGCSetGuildRoleOrder& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      requested_role_ids_(from.requested_role_ids_),
      previous_role_ids_(from.previous_role_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildRoleOrder)
}

void CMsgClientToGCSetGuildRoleOrder::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCSetGuildRoleOrder::~CMsgClientToGCSetGuildRoleOrder() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildRoleOrder)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildRoleOrder::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSetGuildRoleOrder::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildRoleOrder* _this = reinterpret_cast< CMsgClientToGCSetGuildRoleOrder* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildRoleOrder::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildRoleOrder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildRoleOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildRoleOrder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requested_role_ids_.Clear();
  previous_role_ids_.Clear();
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildRoleOrder::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 requested_role_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_requested_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_requested_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 previous_role_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_previous_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<24>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_previous_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildRoleOrder::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildRoleOrder)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // repeated uint32 requested_role_ids = 2;
  for (int i = 0, n = this->_internal_requested_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_requested_role_ids(i), target);
  }

  // repeated uint32 previous_role_ids = 3;
  for (int i = 0, n = this->_internal_previous_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_previous_role_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildRoleOrder)
  return target;
}

size_t CMsgClientToGCSetGuildRoleOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildRoleOrder)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 requested_role_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->requested_role_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_requested_role_ids_size());
    total_size += data_size;
  }

  // repeated uint32 previous_role_ids = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->previous_role_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_previous_role_ids_size());
    total_size += data_size;
  }

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildRoleOrder::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildRoleOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildRoleOrder* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildRoleOrder>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildRoleOrder)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildRoleOrder)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildRoleOrder::MergeFrom(const CMsgClientToGCSetGuildRoleOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildRoleOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requested_role_ids_.MergeFrom(from.requested_role_ids_);
  previous_role_ids_.MergeFrom(from.previous_role_ids_);
  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCSetGuildRoleOrder::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildRoleOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildRoleOrder::CopyFrom(const CMsgClientToGCSetGuildRoleOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildRoleOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildRoleOrder::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildRoleOrder::InternalSwap(CMsgClientToGCSetGuildRoleOrder* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  requested_role_ids_.InternalSwap(&other->requested_role_ids_);
  previous_role_ids_.InternalSwap(&other->previous_role_ids_);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildRoleOrder::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCSetGuildRoleOrderResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCSetGuildRoleOrderResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  confirmed_role_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCSetGuildRoleOrderResponse)
}
CMsgClientToGCSetGuildRoleOrderResponse::CMsgClientToGCSetGuildRoleOrderResponse(const CMsgClientToGCSetGuildRoleOrderResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      confirmed_role_ids_(from.confirmed_role_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCSetGuildRoleOrderResponse)
}

void CMsgClientToGCSetGuildRoleOrderResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCSetGuildRoleOrderResponse::~CMsgClientToGCSetGuildRoleOrderResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCSetGuildRoleOrderResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCSetGuildRoleOrderResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCSetGuildRoleOrderResponse::ArenaDtor(void* object) {
  CMsgClientToGCSetGuildRoleOrderResponse* _this = reinterpret_cast< CMsgClientToGCSetGuildRoleOrderResponse* >(object);
  (void)_this;
}
void CMsgClientToGCSetGuildRoleOrderResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCSetGuildRoleOrderResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCSetGuildRoleOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCSetGuildRoleOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confirmed_role_ids_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCSetGuildRoleOrderResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCSetGuildRoleOrderResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCSetGuildRoleOrderResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated uint32 confirmed_role_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_confirmed_role_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<16>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_confirmed_role_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCSetGuildRoleOrderResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCSetGuildRoleOrderResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated uint32 confirmed_role_ids = 2;
  for (int i = 0, n = this->_internal_confirmed_role_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_confirmed_role_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCSetGuildRoleOrderResponse)
  return target;
}

size_t CMsgClientToGCSetGuildRoleOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCSetGuildRoleOrderResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 confirmed_role_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->confirmed_role_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_confirmed_role_ids_size());
    total_size += data_size;
  }

  // optional .CMsgClientToGCSetGuildRoleOrderResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCSetGuildRoleOrderResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetGuildRoleOrderResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCSetGuildRoleOrderResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCSetGuildRoleOrderResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCSetGuildRoleOrderResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetGuildRoleOrderResponse::MergeFrom(const CMsgClientToGCSetGuildRoleOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  confirmed_role_ids_.MergeFrom(from.confirmed_role_ids_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCSetGuildRoleOrderResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetGuildRoleOrderResponse::CopyFrom(const CMsgClientToGCSetGuildRoleOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCSetGuildRoleOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetGuildRoleOrderResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetGuildRoleOrderResponse::InternalSwap(CMsgClientToGCSetGuildRoleOrderResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  confirmed_role_ids_.InternalSwap(&other->confirmed_role_ids_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCSetGuildRoleOrderResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCGuildFeedRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCGuildFeedRequest>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_last_seen_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCGuildFeedRequest)
}
CMsgClientToGCGuildFeedRequest::CMsgClientToGCGuildFeedRequest(const CMsgClientToGCGuildFeedRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&last_seen_id_, &from.last_seen_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&last_seen_id_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCGuildFeedRequest)
}

void CMsgClientToGCGuildFeedRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&last_seen_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&last_seen_id_)) + sizeof(guild_id_));
}

CMsgClientToGCGuildFeedRequest::~CMsgClientToGCGuildFeedRequest() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCGuildFeedRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCGuildFeedRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCGuildFeedRequest::ArenaDtor(void* object) {
  CMsgClientToGCGuildFeedRequest* _this = reinterpret_cast< CMsgClientToGCGuildFeedRequest* >(object);
  (void)_this;
}
void CMsgClientToGCGuildFeedRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCGuildFeedRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCGuildFeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCGuildFeedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&last_seen_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&last_seen_id_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCGuildFeedRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint64 last_seen_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_last_seen_id(&has_bits);
          last_seen_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCGuildFeedRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCGuildFeedRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint64 last_seen_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_last_seen_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCGuildFeedRequest)
  return target;
}

size_t CMsgClientToGCGuildFeedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCGuildFeedRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint64 last_seen_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_last_seen_id());
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCGuildFeedRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCGuildFeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGuildFeedRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCGuildFeedRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCGuildFeedRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCGuildFeedRequest)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGuildFeedRequest::MergeFrom(const CMsgClientToGCGuildFeedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCGuildFeedRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      last_seen_id_ = from.last_seen_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGuildFeedRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCGuildFeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGuildFeedRequest::CopyFrom(const CMsgClientToGCGuildFeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCGuildFeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGuildFeedRequest::IsInitialized() const {
  return true;
}

void CMsgClientToGCGuildFeedRequest::InternalSwap(CMsgClientToGCGuildFeedRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCGuildFeedRequest, guild_id_)
      + sizeof(CMsgClientToGCGuildFeedRequest::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCGuildFeedRequest, last_seen_id_)>(
          reinterpret_cast<char*>(&last_seen_id_),
          reinterpret_cast<char*>(&other->last_seen_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCGuildFeedRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestGuildFeedResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestGuildFeedResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  feed_events_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestGuildFeedResponse)
}
CMsgClientToGCRequestGuildFeedResponse::CMsgClientToGCRequestGuildFeedResponse(const CMsgClientToGCRequestGuildFeedResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      feed_events_(from.feed_events_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestGuildFeedResponse)
}

void CMsgClientToGCRequestGuildFeedResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
}

CMsgClientToGCRequestGuildFeedResponse::~CMsgClientToGCRequestGuildFeedResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestGuildFeedResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestGuildFeedResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestGuildFeedResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestGuildFeedResponse* _this = reinterpret_cast< CMsgClientToGCRequestGuildFeedResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestGuildFeedResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestGuildFeedResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestGuildFeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestGuildFeedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  feed_events_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestGuildFeedResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestGuildFeedResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestGuildFeedResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .CMsgGuildFeedEvent feed_events = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_feed_events(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestGuildFeedResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestGuildFeedResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  // repeated .CMsgGuildFeedEvent feed_events = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_feed_events_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_feed_events(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestGuildFeedResponse)
  return target;
}

size_t CMsgClientToGCRequestGuildFeedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestGuildFeedResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgGuildFeedEvent feed_events = 3;
  total_size += 1UL * this->_internal_feed_events_size();
  for (const auto& msg : this->feed_events_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgClientToGCRequestGuildFeedResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestGuildFeedResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestGuildFeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestGuildFeedResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestGuildFeedResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestGuildFeedResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestGuildFeedResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestGuildFeedResponse::MergeFrom(const CMsgClientToGCRequestGuildFeedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestGuildFeedResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  feed_events_.MergeFrom(from.feed_events_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestGuildFeedResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestGuildFeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestGuildFeedResponse::CopyFrom(const CMsgClientToGCRequestGuildFeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestGuildFeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestGuildFeedResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestGuildFeedResponse::InternalSwap(CMsgClientToGCRequestGuildFeedResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  feed_events_.InternalSwap(&other->feed_events_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildFeedResponse, guild_id_)
      + sizeof(CMsgClientToGCRequestGuildFeedResponse::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestGuildFeedResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestGuildFeedResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgGCToClientGuildFeedUpdated::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgGCToClientGuildFeedUpdated>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgGCToClientGuildFeedUpdated)
}
CMsgGCToClientGuildFeedUpdated::CMsgGCToClientGuildFeedUpdated(const CMsgGCToClientGuildFeedUpdated& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgGCToClientGuildFeedUpdated)
}

void CMsgGCToClientGuildFeedUpdated::SharedCtor() {
guild_id_ = 0u;
}

CMsgGCToClientGuildFeedUpdated::~CMsgGCToClientGuildFeedUpdated() {
  // @@protoc_insertion_point(destructor:CMsgGCToClientGuildFeedUpdated)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgGCToClientGuildFeedUpdated::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgGCToClientGuildFeedUpdated::ArenaDtor(void* object) {
  CMsgGCToClientGuildFeedUpdated* _this = reinterpret_cast< CMsgGCToClientGuildFeedUpdated* >(object);
  (void)_this;
}
void CMsgGCToClientGuildFeedUpdated::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgGCToClientGuildFeedUpdated::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgGCToClientGuildFeedUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgGCToClientGuildFeedUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgGCToClientGuildFeedUpdated::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgGCToClientGuildFeedUpdated::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgGCToClientGuildFeedUpdated)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgGCToClientGuildFeedUpdated)
  return target;
}

size_t CMsgGCToClientGuildFeedUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgGCToClientGuildFeedUpdated)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgGCToClientGuildFeedUpdated::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgGCToClientGuildFeedUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientGuildFeedUpdated* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgGCToClientGuildFeedUpdated>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgGCToClientGuildFeedUpdated)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgGCToClientGuildFeedUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToClientGuildFeedUpdated::MergeFrom(const CMsgGCToClientGuildFeedUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgGCToClientGuildFeedUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgGCToClientGuildFeedUpdated::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgGCToClientGuildFeedUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientGuildFeedUpdated::CopyFrom(const CMsgGCToClientGuildFeedUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgGCToClientGuildFeedUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientGuildFeedUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToClientGuildFeedUpdated::InternalSwap(CMsgGCToClientGuildFeedUpdated* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgGCToClientGuildFeedUpdated::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAddPlayerToGuildChat::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddPlayerToGuildChat>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddPlayerToGuildChat)
}
CMsgClientToGCAddPlayerToGuildChat::CMsgClientToGCAddPlayerToGuildChat(const CMsgClientToGCAddPlayerToGuildChat& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddPlayerToGuildChat)
}

void CMsgClientToGCAddPlayerToGuildChat::SharedCtor() {
guild_id_ = 0u;
}

CMsgClientToGCAddPlayerToGuildChat::~CMsgClientToGCAddPlayerToGuildChat() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddPlayerToGuildChat)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAddPlayerToGuildChat::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAddPlayerToGuildChat::ArenaDtor(void* object) {
  CMsgClientToGCAddPlayerToGuildChat* _this = reinterpret_cast< CMsgClientToGCAddPlayerToGuildChat* >(object);
  (void)_this;
}
void CMsgClientToGCAddPlayerToGuildChat::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAddPlayerToGuildChat::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAddPlayerToGuildChat::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddPlayerToGuildChat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddPlayerToGuildChat::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAddPlayerToGuildChat::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddPlayerToGuildChat)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddPlayerToGuildChat)
  return target;
}

size_t CMsgClientToGCAddPlayerToGuildChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddPlayerToGuildChat)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 guild_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guild_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAddPlayerToGuildChat::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAddPlayerToGuildChat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAddPlayerToGuildChat* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAddPlayerToGuildChat>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAddPlayerToGuildChat)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAddPlayerToGuildChat)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAddPlayerToGuildChat::MergeFrom(const CMsgClientToGCAddPlayerToGuildChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddPlayerToGuildChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_guild_id()) {
    _internal_set_guild_id(from._internal_guild_id());
  }
}

void CMsgClientToGCAddPlayerToGuildChat::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAddPlayerToGuildChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAddPlayerToGuildChat::CopyFrom(const CMsgClientToGCAddPlayerToGuildChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddPlayerToGuildChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddPlayerToGuildChat::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddPlayerToGuildChat::InternalSwap(CMsgClientToGCAddPlayerToGuildChat* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(guild_id_, other->guild_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddPlayerToGuildChat::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCAddPlayerToGuildChatResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCAddPlayerToGuildChatResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCAddPlayerToGuildChatResponse)
}
CMsgClientToGCAddPlayerToGuildChatResponse::CMsgClientToGCAddPlayerToGuildChatResponse(const CMsgClientToGCAddPlayerToGuildChatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCAddPlayerToGuildChatResponse)
}

void CMsgClientToGCAddPlayerToGuildChatResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCAddPlayerToGuildChatResponse::~CMsgClientToGCAddPlayerToGuildChatResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCAddPlayerToGuildChatResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCAddPlayerToGuildChatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::ArenaDtor(void* object) {
  CMsgClientToGCAddPlayerToGuildChatResponse* _this = reinterpret_cast< CMsgClientToGCAddPlayerToGuildChatResponse* >(object);
  (void)_this;
}
void CMsgClientToGCAddPlayerToGuildChatResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCAddPlayerToGuildChatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCAddPlayerToGuildChatResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCAddPlayerToGuildChatResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCAddPlayerToGuildChatResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCAddPlayerToGuildChatResponse)
  return target;
}

size_t CMsgClientToGCAddPlayerToGuildChatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCAddPlayerToGuildChatResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCAddPlayerToGuildChatResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCAddPlayerToGuildChatResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCAddPlayerToGuildChatResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCAddPlayerToGuildChatResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCAddPlayerToGuildChatResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCAddPlayerToGuildChatResponse::MergeFrom(const CMsgClientToGCAddPlayerToGuildChatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCAddPlayerToGuildChatResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCAddPlayerToGuildChatResponse::CopyFrom(const CMsgClientToGCAddPlayerToGuildChatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCAddPlayerToGuildChatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCAddPlayerToGuildChatResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCAddPlayerToGuildChatResponse::InternalSwap(CMsgClientToGCAddPlayerToGuildChatResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCAddPlayerToGuildChatResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgFindGuildByTagResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgFindGuildByTagResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::CMsgGuildSummary& guild_summary(const CMsgFindGuildByTagResponse* msg);
  static void set_has_guild_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildSummary&
CMsgFindGuildByTagResponse::_Internal::guild_summary(const CMsgFindGuildByTagResponse* msg) {
  return *msg->guild_summary_;
}
CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgFindGuildByTagResponse)
}
CMsgFindGuildByTagResponse::CMsgFindGuildByTagResponse(const CMsgFindGuildByTagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_summary()) {
    guild_summary_ = new ::CMsgGuildSummary(*from.guild_summary_);
  } else {
    guild_summary_ = nullptr;
  }
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  // @@protoc_insertion_point(copy_constructor:CMsgFindGuildByTagResponse)
}

void CMsgFindGuildByTagResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_summary_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&guild_summary_)) + sizeof(guild_id_));
}

CMsgFindGuildByTagResponse::~CMsgFindGuildByTagResponse() {
  // @@protoc_insertion_point(destructor:CMsgFindGuildByTagResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgFindGuildByTagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_summary_;
}

void CMsgFindGuildByTagResponse::ArenaDtor(void* object) {
  CMsgFindGuildByTagResponse* _this = reinterpret_cast< CMsgFindGuildByTagResponse* >(object);
  (void)_this;
}
void CMsgFindGuildByTagResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgFindGuildByTagResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgFindGuildByTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgFindGuildByTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_summary_ != nullptr);
    guild_summary_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_id_) -
        reinterpret_cast<char*>(&result_)) + sizeof(guild_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgFindGuildByTagResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgFindGuildByTagResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgFindGuildByTagResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildSummary guild_summary = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgFindGuildByTagResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgFindGuildByTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional uint32 guild_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildSummary guild_summary = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::guild_summary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgFindGuildByTagResponse)
  return target;
}

size_t CMsgFindGuildByTagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgFindGuildByTagResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .CMsgGuildSummary guild_summary = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_summary_);
    }

    // optional .CMsgFindGuildByTagResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional uint32 guild_id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgFindGuildByTagResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgFindGuildByTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFindGuildByTagResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgFindGuildByTagResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgFindGuildByTagResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgFindGuildByTagResponse)
    MergeFrom(*source);
  }
}

void CMsgFindGuildByTagResponse::MergeFrom(const CMsgFindGuildByTagResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgFindGuildByTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_summary()->::CMsgGuildSummary::MergeFrom(from._internal_guild_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000004u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFindGuildByTagResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgFindGuildByTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFindGuildByTagResponse::CopyFrom(const CMsgFindGuildByTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgFindGuildByTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFindGuildByTagResponse::IsInitialized() const {
  return true;
}

void CMsgFindGuildByTagResponse::InternalSwap(CMsgFindGuildByTagResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgFindGuildByTagResponse, guild_id_)
      + sizeof(CMsgFindGuildByTagResponse::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgFindGuildByTagResponse, guild_summary_)>(
          reinterpret_cast<char*>(&guild_summary_),
          reinterpret_cast<char*>(&other->guild_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgFindGuildByTagResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgSearchForOpenGuildsResponse_SearchResult::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgSearchForOpenGuildsResponse_SearchResult>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgGuildSummary& guild_summary(const CMsgSearchForOpenGuildsResponse_SearchResult* msg);
  static void set_has_guild_summary(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgGuildSummary&
CMsgSearchForOpenGuildsResponse_SearchResult::_Internal::guild_summary(const CMsgSearchForOpenGuildsResponse_SearchResult* msg) {
  return *msg->guild_summary_;
}
CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSearchForOpenGuildsResponse.SearchResult)
}
CMsgSearchForOpenGuildsResponse_SearchResult::CMsgSearchForOpenGuildsResponse_SearchResult(const CMsgSearchForOpenGuildsResponse_SearchResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_guild_summary()) {
    guild_summary_ = new ::CMsgGuildSummary(*from.guild_summary_);
  } else {
    guild_summary_ = nullptr;
  }
  guild_id_ = from.guild_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgSearchForOpenGuildsResponse.SearchResult)
}

void CMsgSearchForOpenGuildsResponse_SearchResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_summary_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_id_) -
    reinterpret_cast<char*>(&guild_summary_)) + sizeof(guild_id_));
}

CMsgSearchForOpenGuildsResponse_SearchResult::~CMsgSearchForOpenGuildsResponse_SearchResult() {
  // @@protoc_insertion_point(destructor:CMsgSearchForOpenGuildsResponse.SearchResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgSearchForOpenGuildsResponse_SearchResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete guild_summary_;
}

void CMsgSearchForOpenGuildsResponse_SearchResult::ArenaDtor(void* object) {
  CMsgSearchForOpenGuildsResponse_SearchResult* _this = reinterpret_cast< CMsgSearchForOpenGuildsResponse_SearchResult* >(object);
  (void)_this;
}
void CMsgSearchForOpenGuildsResponse_SearchResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgSearchForOpenGuildsResponse_SearchResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgSearchForOpenGuildsResponse_SearchResult::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(guild_summary_ != nullptr);
    guild_summary_->Clear();
  }
  guild_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgSearchForOpenGuildsResponse_SearchResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .CMsgGuildSummary guild_summary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_guild_summary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgSearchForOpenGuildsResponse_SearchResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional .CMsgGuildSummary guild_summary = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::guild_summary(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSearchForOpenGuildsResponse.SearchResult)
  return target;
}

size_t CMsgSearchForOpenGuildsResponse_SearchResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgGuildSummary guild_summary = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *guild_summary_);
    }

    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSearchForOpenGuildsResponse_SearchResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSearchForOpenGuildsResponse_SearchResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgSearchForOpenGuildsResponse_SearchResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSearchForOpenGuildsResponse.SearchResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSearchForOpenGuildsResponse.SearchResult)
    MergeFrom(*source);
  }
}

void CMsgSearchForOpenGuildsResponse_SearchResult::MergeFrom(const CMsgSearchForOpenGuildsResponse_SearchResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_guild_summary()->::CMsgGuildSummary::MergeFrom(from._internal_guild_summary());
    }
    if (cached_has_bits & 0x00000002u) {
      guild_id_ = from.guild_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSearchForOpenGuildsResponse_SearchResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSearchForOpenGuildsResponse_SearchResult::CopyFrom(const CMsgSearchForOpenGuildsResponse_SearchResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSearchForOpenGuildsResponse.SearchResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSearchForOpenGuildsResponse_SearchResult::IsInitialized() const {
  return true;
}

void CMsgSearchForOpenGuildsResponse_SearchResult::InternalSwap(CMsgSearchForOpenGuildsResponse_SearchResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse_SearchResult, guild_id_)
      + sizeof(CMsgSearchForOpenGuildsResponse_SearchResult::guild_id_)
      - PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse_SearchResult, guild_summary_)>(
          reinterpret_cast<char*>(&guild_summary_),
          reinterpret_cast<char*>(&other->guild_summary_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgSearchForOpenGuildsResponse_SearchResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgSearchForOpenGuildsResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgSearchForOpenGuildsResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_use_whitelist(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  search_results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgSearchForOpenGuildsResponse)
}
CMsgSearchForOpenGuildsResponse::CMsgSearchForOpenGuildsResponse(const CMsgSearchForOpenGuildsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      search_results_(from.search_results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_whitelist_) -
    reinterpret_cast<char*>(&result_)) + sizeof(use_whitelist_));
  // @@protoc_insertion_point(copy_constructor:CMsgSearchForOpenGuildsResponse)
}

void CMsgSearchForOpenGuildsResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&use_whitelist_) -
    reinterpret_cast<char*>(&result_)) + sizeof(use_whitelist_));
}

CMsgSearchForOpenGuildsResponse::~CMsgSearchForOpenGuildsResponse() {
  // @@protoc_insertion_point(destructor:CMsgSearchForOpenGuildsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgSearchForOpenGuildsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgSearchForOpenGuildsResponse::ArenaDtor(void* object) {
  CMsgSearchForOpenGuildsResponse* _this = reinterpret_cast< CMsgSearchForOpenGuildsResponse* >(object);
  (void)_this;
}
void CMsgSearchForOpenGuildsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgSearchForOpenGuildsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgSearchForOpenGuildsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgSearchForOpenGuildsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  search_results_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&result_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&use_whitelist_) -
        reinterpret_cast<char*>(&result_)) + sizeof(use_whitelist_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgSearchForOpenGuildsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgSearchForOpenGuildsResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgSearchForOpenGuildsResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_search_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional bool use_whitelist = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_use_whitelist(&has_bits);
          use_whitelist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgSearchForOpenGuildsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgSearchForOpenGuildsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_search_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_search_results(i), target, stream);
  }

  // optional bool use_whitelist = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_use_whitelist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgSearchForOpenGuildsResponse)
  return target;
}

size_t CMsgSearchForOpenGuildsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgSearchForOpenGuildsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgSearchForOpenGuildsResponse.SearchResult search_results = 2;
  total_size += 1UL * this->_internal_search_results_size();
  for (const auto& msg : this->search_results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgSearchForOpenGuildsResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

    // optional bool use_whitelist = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgSearchForOpenGuildsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgSearchForOpenGuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSearchForOpenGuildsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgSearchForOpenGuildsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgSearchForOpenGuildsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgSearchForOpenGuildsResponse)
    MergeFrom(*source);
  }
}

void CMsgSearchForOpenGuildsResponse::MergeFrom(const CMsgSearchForOpenGuildsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgSearchForOpenGuildsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  search_results_.MergeFrom(from.search_results_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      result_ = from.result_;
    }
    if (cached_has_bits & 0x00000002u) {
      use_whitelist_ = from.use_whitelist_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSearchForOpenGuildsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgSearchForOpenGuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSearchForOpenGuildsResponse::CopyFrom(const CMsgSearchForOpenGuildsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgSearchForOpenGuildsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSearchForOpenGuildsResponse::IsInitialized() const {
  return true;
}

void CMsgSearchForOpenGuildsResponse::InternalSwap(CMsgSearchForOpenGuildsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  search_results_.InternalSwap(&other->search_results_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse, use_whitelist_)
      + sizeof(CMsgSearchForOpenGuildsResponse::use_whitelist_)
      - PROTOBUF_FIELD_OFFSET(CMsgSearchForOpenGuildsResponse, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgSearchForOpenGuildsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCReportGuildContent::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportGuildContent>()._has_bits_);
  static void set_has_guild_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_guild_content_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportGuildContent)
}
CMsgClientToGCReportGuildContent::CMsgClientToGCReportGuildContent(const CMsgClientToGCReportGuildContent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&guild_id_, &from.guild_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&guild_content_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_content_flags_));
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportGuildContent)
}

void CMsgClientToGCReportGuildContent::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&guild_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&guild_content_flags_) -
    reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_content_flags_));
}

CMsgClientToGCReportGuildContent::~CMsgClientToGCReportGuildContent() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportGuildContent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCReportGuildContent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCReportGuildContent::ArenaDtor(void* object) {
  CMsgClientToGCReportGuildContent* _this = reinterpret_cast< CMsgClientToGCReportGuildContent* >(object);
  (void)_this;
}
void CMsgClientToGCReportGuildContent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCReportGuildContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCReportGuildContent::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportGuildContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&guild_id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&guild_content_flags_) -
        reinterpret_cast<char*>(&guild_id_)) + sizeof(guild_content_flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportGuildContent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 guild_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_guild_id(&has_bits);
          guild_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 guild_content_flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_guild_content_flags(&has_bits);
          guild_content_flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCReportGuildContent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportGuildContent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 guild_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_guild_id(), target);
  }

  // optional uint32 guild_content_flags = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_guild_content_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportGuildContent)
  return target;
}

size_t CMsgClientToGCReportGuildContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportGuildContent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 guild_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_id());
    }

    // optional uint32 guild_content_flags = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_guild_content_flags());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCReportGuildContent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCReportGuildContent)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCReportGuildContent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCReportGuildContent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCReportGuildContent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCReportGuildContent)
    MergeFrom(*source);
  }
}

void CMsgClientToGCReportGuildContent::MergeFrom(const CMsgClientToGCReportGuildContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportGuildContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      guild_id_ = from.guild_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      guild_content_flags_ = from.guild_content_flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCReportGuildContent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCReportGuildContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCReportGuildContent::CopyFrom(const CMsgClientToGCReportGuildContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportGuildContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportGuildContent::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportGuildContent::InternalSwap(CMsgClientToGCReportGuildContent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportGuildContent, guild_content_flags_)
      + sizeof(CMsgClientToGCReportGuildContent::guild_content_flags_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCReportGuildContent, guild_id_)>(
          reinterpret_cast<char*>(&guild_id_),
          reinterpret_cast<char*>(&other->guild_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportGuildContent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCReportGuildContentResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCReportGuildContentResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCReportGuildContentResponse)
}
CMsgClientToGCReportGuildContentResponse::CMsgClientToGCReportGuildContentResponse(const CMsgClientToGCReportGuildContentResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCReportGuildContentResponse)
}

void CMsgClientToGCReportGuildContentResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCReportGuildContentResponse::~CMsgClientToGCReportGuildContentResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCReportGuildContentResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCReportGuildContentResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCReportGuildContentResponse::ArenaDtor(void* object) {
  CMsgClientToGCReportGuildContentResponse* _this = reinterpret_cast< CMsgClientToGCReportGuildContentResponse* >(object);
  (void)_this;
}
void CMsgClientToGCReportGuildContentResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCReportGuildContentResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCReportGuildContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCReportGuildContentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCReportGuildContentResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCReportGuildContentResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCReportGuildContentResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCReportGuildContentResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCReportGuildContentResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCReportGuildContentResponse)
  return target;
}

size_t CMsgClientToGCReportGuildContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCReportGuildContentResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .CMsgClientToGCReportGuildContentResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCReportGuildContentResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCReportGuildContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCReportGuildContentResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCReportGuildContentResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCReportGuildContentResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCReportGuildContentResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCReportGuildContentResponse::MergeFrom(const CMsgClientToGCReportGuildContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCReportGuildContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCReportGuildContentResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCReportGuildContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCReportGuildContentResponse::CopyFrom(const CMsgClientToGCReportGuildContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCReportGuildContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCReportGuildContentResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCReportGuildContentResponse::InternalSwap(CMsgClientToGCReportGuildContentResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCReportGuildContentResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfo>()._has_bits_);
  static void set_has_account_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
}
CMsgClientToGCRequestAccountGuildPersonaInfo::CMsgClientToGCRequestAccountGuildPersonaInfo(const CMsgClientToGCRequestAccountGuildPersonaInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::SharedCtor() {
account_id_ = 0u;
}

CMsgClientToGCRequestAccountGuildPersonaInfo::~CMsgClientToGCRequestAccountGuildPersonaInfo() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfo)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::ArenaDtor(void* object) {
  CMsgClientToGCRequestAccountGuildPersonaInfo* _this = reinterpret_cast< CMsgClientToGCRequestAccountGuildPersonaInfo* >(object);
  (void)_this;
}
void CMsgClientToGCRequestAccountGuildPersonaInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestAccountGuildPersonaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional uint32 account_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_account_id(&has_bits);
          account_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestAccountGuildPersonaInfo::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfo)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 account_id = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_account_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestAccountGuildPersonaInfo* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestAccountGuildPersonaInfo>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestAccountGuildPersonaInfo)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestAccountGuildPersonaInfo)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::MergeFrom(const CMsgClientToGCRequestAccountGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_account_id()) {
    _internal_set_account_id(from._internal_account_id());
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfo::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfo::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfo* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(account_id_, other->account_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfo::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfoResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::CMsgAccountGuildsPersonaInfo& persona_info(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* msg);
  static void set_has_persona_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::CMsgAccountGuildsPersonaInfo&
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_Internal::persona_info(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* msg) {
  return *msg->persona_info_;
}
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
}
CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CMsgClientToGCRequestAccountGuildPersonaInfoResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_persona_info()) {
    persona_info_ = new ::CMsgAccountGuildsPersonaInfo(*from.persona_info_);
  } else {
    persona_info_ = nullptr;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&persona_info_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&persona_info_)) + sizeof(result_));
}

CMsgClientToGCRequestAccountGuildPersonaInfoResponse::~CMsgClientToGCRequestAccountGuildPersonaInfoResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete persona_info_;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestAccountGuildPersonaInfoResponse* _this = reinterpret_cast< CMsgClientToGCRequestAccountGuildPersonaInfoResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(persona_info_ != nullptr);
    persona_info_->Clear();
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestAccountGuildPersonaInfoResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_persona_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestAccountGuildPersonaInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::persona_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .CMsgAccountGuildsPersonaInfo persona_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *persona_info_);
    }

    // optional .CMsgClientToGCRequestAccountGuildPersonaInfoResponse.EResponse result = 1 [default = k_eInternalError];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestAccountGuildPersonaInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestAccountGuildPersonaInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::MergeFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_persona_info()->::CMsgAccountGuildsPersonaInfo::MergeFrom(from._internal_persona_info());
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoResponse::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestAccountGuildPersonaInfoResponse, result_)
      + sizeof(CMsgClientToGCRequestAccountGuildPersonaInfoResponse::result_)
      - PROTOBUF_FIELD_OFFSET(CMsgClientToGCRequestAccountGuildPersonaInfoResponse, persona_info_)>(
          reinterpret_cast<char*>(&persona_info_),
          reinterpret_cast<char*>(&other->persona_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_Internal {
 public:
};

CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  account_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
}
CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CMsgClientToGCRequestAccountGuildPersonaInfoBatch(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      account_ids_(from.account_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SharedCtor() {
}

CMsgClientToGCRequestAccountGuildPersonaInfoBatch::~CMsgClientToGCRequestAccountGuildPersonaInfoBatch() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::ArenaDtor(void* object) {
  CMsgClientToGCRequestAccountGuildPersonaInfoBatch* _this = reinterpret_cast< CMsgClientToGCRequestAccountGuildPersonaInfoBatch* >(object);
  (void)_this;
}
void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 account_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_account_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_account_ids(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestAccountGuildPersonaInfoBatch::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 account_ids = 1;
  for (int i = 0, n = this->_internal_account_ids_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_account_ids(i), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoBatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 account_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->account_ids_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_account_ids_size());
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestAccountGuildPersonaInfoBatch* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestAccountGuildPersonaInfoBatch>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::MergeFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  account_ids_.MergeFrom(from.account_ids_);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoBatch::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatch::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatch* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  account_ids_.InternalSwap(&other->account_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoBatch::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse>()._has_bits_);
  static void set_has_result(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  persona_infos_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
}
CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      persona_infos_(from.persona_infos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SharedCtor() {
result_ = 0;
}

CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::~CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse() {
  // @@protoc_insertion_point(destructor:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::ArenaDtor(void* object) {
  CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* _this = reinterpret_cast< CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* >(object);
  (void)_this;
}
void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  persona_infos_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse_IsValid(val))) {
            _internal_set_result(static_cast<::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse_EResponse>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_persona_infos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_result(), target);
  }

  // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_persona_infos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_persona_infos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  return target;
}

size_t CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .CMsgAccountGuildsPersonaInfo persona_infos = 2;
  total_size += 1UL * this->_internal_persona_infos_size();
  for (const auto& msg : this->persona_infos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse.EResponse result = 1 [default = k_eInternalError];
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::MergeFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  persona_infos_.MergeFrom(from.persona_infos_);
  if (from._internal_has_result()) {
    _internal_set_result(from._internal_result());
  }
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::CopyFrom(const CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::InternalSwap(CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  persona_infos_.InternalSwap(&other->persona_infos_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMsgGuildInfo* Arena::CreateMaybeMessage< ::CMsgGuildInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildSummary_EventPoints* Arena::CreateMaybeMessage< ::CMsgGuildSummary_EventPoints >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildSummary_EventPoints >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildSummary* Arena::CreateMaybeMessage< ::CMsgGuildSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildRole* Arena::CreateMaybeMessage< ::CMsgGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildMember* Arena::CreateMaybeMessage< ::CMsgGuildMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildInvite* Arena::CreateMaybeMessage< ::CMsgGuildInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildData* Arena::CreateMaybeMessage< ::CMsgGuildData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildInvite* Arena::CreateMaybeMessage< ::CMsgAccountGuildInvite >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildInvite >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildMemberships* Arena::CreateMaybeMessage< ::CMsgAccountGuildMemberships >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildMemberships >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildPersonaInfo* Arena::CreateMaybeMessage< ::CMsgGuildPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgAccountGuildsPersonaInfo* Arena::CreateMaybeMessage< ::CMsgAccountGuildsPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgAccountGuildsPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGuildFeedEvent* Arena::CreateMaybeMessage< ::CMsgGuildFeedEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGuildFeedEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCreateGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCCreateGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCreateGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCreateGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCCreateGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCreateGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildInfo* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildData* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildData >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildDataResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildDataUpdated* Arena::CreateMaybeMessage< ::CMsgGCToClientGuildDataUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildDataUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildMembersDataUpdated* Arena::CreateMaybeMessage< ::CMsgGCToClientGuildMembersDataUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildMembersDataUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildMembership* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildMembership >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildMembership >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildMembershipResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildMembershipResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildMembershipResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildMembershipUpdated* Arena::CreateMaybeMessage< ::CMsgGCToClientGuildMembershipUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildMembershipUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildSummary* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildSummary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildSummaryResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildSummaryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildSummaryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCJoinGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCJoinGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCJoinGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCJoinGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCLeaveGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCLeaveGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCLeaveGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCKickGuildMember* Arena::CreateMaybeMessage< ::CMsgClientToGCKickGuildMember >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCKickGuildMember >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCKickGuildMemberResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCKickGuildMemberResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCKickGuildMemberResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildMemberRole* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildMemberRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildMemberRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildMemberRoleResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildMemberRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildMemberRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCInviteToGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCInviteToGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeclineInviteToGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCDeclineInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeclineInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCDeclineInviteToGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCDeclineInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCDeclineInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptInviteToGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAcceptInviteToGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCAcceptInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAcceptInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCancelInviteToGuild* Arena::CreateMaybeMessage< ::CMsgClientToGCCancelInviteToGuild >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCancelInviteToGuild >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCCancelInviteToGuildResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCCancelInviteToGuildResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCCancelInviteToGuildResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddGuildRole* Arena::CreateMaybeMessage< ::CMsgClientToGCAddGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddGuildRoleResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCAddGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyGuildRole* Arena::CreateMaybeMessage< ::CMsgClientToGCModifyGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCModifyGuildRoleResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCModifyGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCModifyGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRemoveGuildRole* Arena::CreateMaybeMessage< ::CMsgClientToGCRemoveGuildRole >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRemoveGuildRole >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRemoveGuildRoleResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRemoveGuildRoleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRemoveGuildRoleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildRoleOrder* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildRoleOrder >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildRoleOrder >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCSetGuildRoleOrderResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCSetGuildRoleOrderResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCSetGuildRoleOrderResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCGuildFeedRequest* Arena::CreateMaybeMessage< ::CMsgClientToGCGuildFeedRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCGuildFeedRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestGuildFeedResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestGuildFeedResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestGuildFeedResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgGCToClientGuildFeedUpdated* Arena::CreateMaybeMessage< ::CMsgGCToClientGuildFeedUpdated >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgGCToClientGuildFeedUpdated >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddPlayerToGuildChat* Arena::CreateMaybeMessage< ::CMsgClientToGCAddPlayerToGuildChat >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddPlayerToGuildChat >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCAddPlayerToGuildChatResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCAddPlayerToGuildChatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCAddPlayerToGuildChatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgFindGuildByTagResponse* Arena::CreateMaybeMessage< ::CMsgFindGuildByTagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgFindGuildByTagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgSearchForOpenGuildsResponse_SearchResult* Arena::CreateMaybeMessage< ::CMsgSearchForOpenGuildsResponse_SearchResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgSearchForOpenGuildsResponse_SearchResult >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgSearchForOpenGuildsResponse* Arena::CreateMaybeMessage< ::CMsgSearchForOpenGuildsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgSearchForOpenGuildsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportGuildContent* Arena::CreateMaybeMessage< ::CMsgClientToGCReportGuildContent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportGuildContent >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCReportGuildContentResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCReportGuildContentResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCReportGuildContentResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfo* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatch >(arena);
}
template<> PROTOBUF_NOINLINE ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse* Arena::CreateMaybeMessage< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMsgClientToGCRequestAccountGuildPersonaInfoBatchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
